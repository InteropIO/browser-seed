(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.platform = global.platform || {}, global.platform.web = factory()));
}(this, (function () { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    function __awaiter$1(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    const defaultConfig = {
        logger: "info",
        gateway: { webPlatform: {} },
        libraries: []
    };
    const parseConfig = (config) => {
        var _a;
        const combined = Object.assign({}, defaultConfig, config);
        if (combined.systemLogger) {
            combined.logger = (_a = combined.systemLogger.level) !== null && _a !== void 0 ? _a : "info";
        }
        return combined;
    };

    const checkSingleton = () => {
        const glue42CoreNamespace = window.glue42core;
        if (!glue42CoreNamespace) {
            window.glue42core = { webStarted: true };
            return;
        }
        if (glue42CoreNamespace.webStarted) {
            throw new Error("The Glue42 Core Web has already been started for this application.");
        }
        glue42CoreNamespace.webStarted = true;
    };

    const enterprise = (config) => {
        var _a, _b;
        const enterpriseConfig = {
            windows: true,
            layouts: "full",
            appManager: "full",
            channels: true,
            libraries: config.libraries,
            logger: (_b = (_a = config === null || config === void 0 ? void 0 : config.systemLogger) === null || _a === void 0 ? void 0 : _a.level) !== null && _b !== void 0 ? _b : "warn"
        };
        return window.Glue(enterpriseConfig);
    };

    /**
     * Wraps values in an `Ok` type.
     *
     * Example: `ok(5) // => {ok: true, result: 5}`
     */
    var ok = function (result) { return ({ ok: true, result: result }); };
    /**
     * Typeguard for `Ok`.
     */
    var isOk = function (r) { return r.ok === true; };
    /**
     * Wraps errors in an `Err` type.
     *
     * Example: `err('on fire') // => {ok: false, error: 'on fire'}`
     */
    var err = function (error) { return ({ ok: false, error: error }); };
    /**
     * Typeguard for `Err`.
     */
    var isErr = function (r) { return r.ok === false; };
    /**
     * Create a `Promise` that either resolves with the result of `Ok` or rejects
     * with the error of `Err`.
     */
    var asPromise = function (r) {
        return r.ok === true ? Promise.resolve(r.result) : Promise.reject(r.error);
    };
    /**
     * Unwraps a `Result` and returns either the result of an `Ok`, or
     * `defaultValue`.
     *
     * Example:
     * ```
     * Result.withDefault(5, number().run(json))
     * ```
     *
     * It would be nice if `Decoder` had an instance method that mirrored this
     * function. Such a method would look something like this:
     * ```
     * class Decoder<A> {
     *   runWithDefault = (defaultValue: A, json: any): A =>
     *     Result.withDefault(defaultValue, this.run(json));
     * }
     *
     * number().runWithDefault(5, json)
     * ```
     * Unfortunately, the type of `defaultValue: A` on the method causes issues
     * with type inference on  the `object` decoder in some situations. While these
     * inference issues can be solved by providing the optional type argument for
     * `object`s, the extra trouble and confusion doesn't seem worth it.
     */
    var withDefault = function (defaultValue, r) {
        return r.ok === true ? r.result : defaultValue;
    };
    /**
     * Return the successful result, or throw an error.
     */
    var withException = function (r) {
        if (r.ok === true) {
            return r.result;
        }
        else {
            throw r.error;
        }
    };
    /**
     * Given an array of `Result`s, return the successful values.
     */
    var successes = function (results) {
        return results.reduce(function (acc, r) { return (r.ok === true ? acc.concat(r.result) : acc); }, []);
    };
    /**
     * Apply `f` to the result of an `Ok`, or pass the error through.
     */
    var map = function (f, r) {
        return r.ok === true ? ok(f(r.result)) : r;
    };
    /**
     * Apply `f` to the result of two `Ok`s, or pass an error through. If both
     * `Result`s are errors then the first one is returned.
     */
    var map2 = function (f, ar, br) {
        return ar.ok === false ? ar :
            br.ok === false ? br :
                ok(f(ar.result, br.result));
    };
    /**
     * Apply `f` to the error of an `Err`, or pass the success through.
     */
    var mapError = function (f, r) {
        return r.ok === true ? r : err(f(r.error));
    };
    /**
     * Chain together a sequence of computations that may fail, similar to a
     * `Promise`. If the first computation fails then the error will propagate
     * through. If it succeeds, then `f` will be applied to the value, returning a
     * new `Result`.
     */
    var andThen = function (f, r) {
        return r.ok === true ? f(r.result) : r;
    };


    var result = Object.freeze({
    	ok: ok,
    	isOk: isOk,
    	err: err,
    	isErr: isErr,
    	asPromise: asPromise,
    	withDefault: withDefault,
    	withException: withException,
    	successes: successes,
    	map: map,
    	map2: map2,
    	mapError: mapError,
    	andThen: andThen
    });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */



    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest$1(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function isEqual(a, b) {
        if (a === b) {
            return true;
        }
        if (a === null && b === null) {
            return true;
        }
        if (typeof (a) !== typeof (b)) {
            return false;
        }
        if (typeof (a) === 'object') {
            // Array
            if (Array.isArray(a)) {
                if (!Array.isArray(b)) {
                    return false;
                }
                if (a.length !== b.length) {
                    return false;
                }
                for (var i = 0; i < a.length; i++) {
                    if (!isEqual(a[i], b[i])) {
                        return false;
                    }
                }
                return true;
            }
            // Hash table
            var keys = Object.keys(a);
            if (keys.length !== Object.keys(b).length) {
                return false;
            }
            for (var i = 0; i < keys.length; i++) {
                if (!b.hasOwnProperty(keys[i])) {
                    return false;
                }
                if (!isEqual(a[keys[i]], b[keys[i]])) {
                    return false;
                }
            }
            return true;
        }
    }
    /*
     * Helpers
     */
    var isJsonArray = function (json) { return Array.isArray(json); };
    var isJsonObject = function (json) {
        return typeof json === 'object' && json !== null && !isJsonArray(json);
    };
    var typeString = function (json) {
        switch (typeof json) {
            case 'string':
                return 'a string';
            case 'number':
                return 'a number';
            case 'boolean':
                return 'a boolean';
            case 'undefined':
                return 'undefined';
            case 'object':
                if (json instanceof Array) {
                    return 'an array';
                }
                else if (json === null) {
                    return 'null';
                }
                else {
                    return 'an object';
                }
            default:
                return JSON.stringify(json);
        }
    };
    var expectedGot = function (expected, got) {
        return "expected " + expected + ", got " + typeString(got);
    };
    var printPath = function (paths) {
        return paths.map(function (path) { return (typeof path === 'string' ? "." + path : "[" + path + "]"); }).join('');
    };
    var prependAt = function (newAt, _a) {
        var at = _a.at, rest = __rest$1(_a, ["at"]);
        return (__assign({ at: newAt + (at || '') }, rest));
    };
    /**
     * Decoders transform json objects with unknown structure into known and
     * verified forms. You can create objects of type `Decoder<A>` with either the
     * primitive decoder functions, such as `boolean()` and `string()`, or by
     * applying higher-order decoders to the primitives, such as `array(boolean())`
     * or `dict(string())`.
     *
     * Each of the decoder functions are available both as a static method on
     * `Decoder` and as a function alias -- for example the string decoder is
     * defined at `Decoder.string()`, but is also aliased to `string()`. Using the
     * function aliases exported with the library is recommended.
     *
     * `Decoder` exposes a number of 'run' methods, which all decode json in the
     * same way, but communicate success and failure in different ways. The `map`
     * and `andThen` methods modify decoders without having to call a 'run' method.
     *
     * Alternatively, the main decoder `run()` method returns an object of type
     * `Result<A, DecoderError>`. This library provides a number of helper
     * functions for dealing with the `Result` type, so you can do all the same
     * things with a `Result` as with the decoder methods.
     */
    var Decoder = /** @class */ (function () {
        /**
         * The Decoder class constructor is kept private to separate the internal
         * `decode` function from the external `run` function. The distinction
         * between the two functions is that `decode` returns a
         * `Partial<DecoderError>` on failure, which contains an unfinished error
         * report. When `run` is called on a decoder, the relevant series of `decode`
         * calls is made, and then on failure the resulting `Partial<DecoderError>`
         * is turned into a `DecoderError` by filling in the missing information.
         *
         * While hiding the constructor may seem restrictive, leveraging the
         * provided decoder combinators and helper functions such as
         * `andThen` and `map` should be enough to build specialized decoders as
         * needed.
         */
        function Decoder(decode) {
            var _this = this;
            this.decode = decode;
            /**
             * Run the decoder and return a `Result` with either the decoded value or a
             * `DecoderError` containing the json input, the location of the error, and
             * the error message.
             *
             * Examples:
             * ```
             * number().run(12)
             * // => {ok: true, result: 12}
             *
             * string().run(9001)
             * // =>
             * // {
             * //   ok: false,
             * //   error: {
             * //     kind: 'DecoderError',
             * //     input: 9001,
             * //     at: 'input',
             * //     message: 'expected a string, got 9001'
             * //   }
             * // }
             * ```
             */
            this.run = function (json) {
                return mapError(function (error) { return ({
                    kind: 'DecoderError',
                    input: json,
                    at: 'input' + (error.at || ''),
                    message: error.message || ''
                }); }, _this.decode(json));
            };
            /**
             * Run the decoder as a `Promise`.
             */
            this.runPromise = function (json) { return asPromise(_this.run(json)); };
            /**
             * Run the decoder and return the value on success, or throw an exception
             * with a formatted error string.
             */
            this.runWithException = function (json) { return withException(_this.run(json)); };
            /**
             * Construct a new decoder that applies a transformation to the decoded
             * result. If the decoder succeeds then `f` will be applied to the value. If
             * it fails the error will propagated through.
             *
             * Example:
             * ```
             * number().map(x => x * 5).run(10)
             * // => {ok: true, result: 50}
             * ```
             */
            this.map = function (f) {
                return new Decoder(function (json) { return map(f, _this.decode(json)); });
            };
            /**
             * Chain together a sequence of decoders. The first decoder will run, and
             * then the function will determine what decoder to run second. If the result
             * of the first decoder succeeds then `f` will be applied to the decoded
             * value. If it fails the error will propagate through.
             *
             * This is a very powerful method -- it can act as both the `map` and `where`
             * methods, can improve error messages for edge cases, and can be used to
             * make a decoder for custom types.
             *
             * Example of adding an error message:
             * ```
             * const versionDecoder = valueAt(['version'], number());
             * const infoDecoder3 = object({a: boolean()});
             *
             * const decoder = versionDecoder.andThen(version => {
             *   switch (version) {
             *     case 3:
             *       return infoDecoder3;
             *     default:
             *       return fail(`Unable to decode info, version ${version} is not supported.`);
             *   }
             * });
             *
             * decoder.run({version: 3, a: true})
             * // => {ok: true, result: {a: true}}
             *
             * decoder.run({version: 5, x: 'abc'})
             * // =>
             * // {
             * //   ok: false,
             * //   error: {... message: 'Unable to decode info, version 5 is not supported.'}
             * // }
             * ```
             *
             * Example of decoding a custom type:
             * ```
             * // nominal type for arrays with a length of at least one
             * type NonEmptyArray<T> = T[] & { __nonEmptyArrayBrand__: void };
             *
             * const nonEmptyArrayDecoder = <T>(values: Decoder<T>): Decoder<NonEmptyArray<T>> =>
             *   array(values).andThen(arr =>
             *     arr.length > 0
             *       ? succeed(createNonEmptyArray(arr))
             *       : fail(`expected a non-empty array, got an empty array`)
             *   );
             * ```
             */
            this.andThen = function (f) {
                return new Decoder(function (json) {
                    return andThen(function (value) { return f(value).decode(json); }, _this.decode(json));
                });
            };
            /**
             * Add constraints to a decoder _without_ changing the resulting type. The
             * `test` argument is a predicate function which returns true for valid
             * inputs. When `test` fails on an input, the decoder fails with the given
             * `errorMessage`.
             *
             * ```
             * const chars = (length: number): Decoder<string> =>
             *   string().where(
             *     (s: string) => s.length === length,
             *     `expected a string of length ${length}`
             *   );
             *
             * chars(5).run('12345')
             * // => {ok: true, result: '12345'}
             *
             * chars(2).run('HELLO')
             * // => {ok: false, error: {... message: 'expected a string of length 2'}}
             *
             * chars(12).run(true)
             * // => {ok: false, error: {... message: 'expected a string, got a boolean'}}
             * ```
             */
            this.where = function (test, errorMessage) {
                return _this.andThen(function (value) { return (test(value) ? Decoder.succeed(value) : Decoder.fail(errorMessage)); });
            };
        }
        /**
         * Decoder primitive that validates strings, and fails on all other input.
         */
        Decoder.string = function () {
            return new Decoder(function (json) {
                return typeof json === 'string'
                    ? ok(json)
                    : err({ message: expectedGot('a string', json) });
            });
        };
        /**
         * Decoder primitive that validates numbers, and fails on all other input.
         */
        Decoder.number = function () {
            return new Decoder(function (json) {
                return typeof json === 'number'
                    ? ok(json)
                    : err({ message: expectedGot('a number', json) });
            });
        };
        /**
         * Decoder primitive that validates booleans, and fails on all other input.
         */
        Decoder.boolean = function () {
            return new Decoder(function (json) {
                return typeof json === 'boolean'
                    ? ok(json)
                    : err({ message: expectedGot('a boolean', json) });
            });
        };
        Decoder.constant = function (value) {
            return new Decoder(function (json) {
                return isEqual(json, value)
                    ? ok(value)
                    : err({ message: "expected " + JSON.stringify(value) + ", got " + JSON.stringify(json) });
            });
        };
        Decoder.object = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonObject(json) && decoders) {
                    var obj = {};
                    for (var key in decoders) {
                        if (decoders.hasOwnProperty(key)) {
                            var r = decoders[key].decode(json[key]);
                            if (r.ok === true) {
                                // tslint:disable-next-line:strict-type-predicates
                                if (r.result !== undefined) {
                                    obj[key] = r.result;
                                }
                            }
                            else if (json[key] === undefined) {
                                return err({ message: "the key '" + key + "' is required but was not present" });
                            }
                            else {
                                return err(prependAt("." + key, r.error));
                            }
                        }
                    }
                    return ok(obj);
                }
                else if (isJsonObject(json)) {
                    return ok(json);
                }
                else {
                    return err({ message: expectedGot('an object', json) });
                }
            });
        };
        Decoder.array = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonArray(json) && decoder) {
                    var decodeValue_1 = function (v, i) {
                        return mapError(function (err$$1) { return prependAt("[" + i + "]", err$$1); }, decoder.decode(v));
                    };
                    return json.reduce(function (acc, v, i) {
                        return map2(function (arr, result) { return arr.concat([result]); }, acc, decodeValue_1(v, i));
                    }, ok([]));
                }
                else if (isJsonArray(json)) {
                    return ok(json);
                }
                else {
                    return err({ message: expectedGot('an array', json) });
                }
            });
        };
        Decoder.tuple = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonArray(json)) {
                    if (json.length !== decoders.length) {
                        return err({
                            message: "expected a tuple of length " + decoders.length + ", got one of length " + json.length
                        });
                    }
                    var result = [];
                    for (var i = 0; i < decoders.length; i++) {
                        var nth = decoders[i].decode(json[i]);
                        if (nth.ok) {
                            result[i] = nth.result;
                        }
                        else {
                            return err(prependAt("[" + i + "]", nth.error));
                        }
                    }
                    return ok(result);
                }
                else {
                    return err({ message: expectedGot("a tuple of length " + decoders.length, json) });
                }
            });
        };
        Decoder.union = function (ad, bd) {
            var decoders = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                decoders[_i - 2] = arguments[_i];
            }
            return Decoder.oneOf.apply(Decoder, [ad, bd].concat(decoders));
        };
        Decoder.intersection = function (ad, bd) {
            var ds = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                ds[_i - 2] = arguments[_i];
            }
            return new Decoder(function (json) {
                return [ad, bd].concat(ds).reduce(function (acc, decoder) { return map2(Object.assign, acc, decoder.decode(json)); }, ok({}));
            });
        };
        /**
         * Escape hatch to bypass validation. Always succeeds and types the result as
         * `any`. Useful for defining decoders incrementally, particularly for
         * complex objects.
         *
         * Example:
         * ```
         * interface User {
         *   name: string;
         *   complexUserData: ComplexType;
         * }
         *
         * const userDecoder: Decoder<User> = object({
         *   name: string(),
         *   complexUserData: anyJson()
         * });
         * ```
         */
        Decoder.anyJson = function () { return new Decoder(function (json) { return ok(json); }); };
        /**
         * Decoder identity function which always succeeds and types the result as
         * `unknown`.
         */
        Decoder.unknownJson = function () {
            return new Decoder(function (json) { return ok(json); });
        };
        /**
         * Decoder for json objects where the keys are unknown strings, but the values
         * should all be of the same type.
         *
         * Example:
         * ```
         * dict(number()).run({chocolate: 12, vanilla: 10, mint: 37});
         * // => {ok: true, result: {chocolate: 12, vanilla: 10, mint: 37}}
         * ```
         */
        Decoder.dict = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonObject(json)) {
                    var obj = {};
                    for (var key in json) {
                        if (json.hasOwnProperty(key)) {
                            var r = decoder.decode(json[key]);
                            if (r.ok === true) {
                                obj[key] = r.result;
                            }
                            else {
                                return err(prependAt("." + key, r.error));
                            }
                        }
                    }
                    return ok(obj);
                }
                else {
                    return err({ message: expectedGot('an object', json) });
                }
            });
        };
        /**
         * Decoder for values that may be `undefined`. This is primarily helpful for
         * decoding interfaces with optional fields.
         *
         * Example:
         * ```
         * interface User {
         *   id: number;
         *   isOwner?: boolean;
         * }
         *
         * const decoder: Decoder<User> = object({
         *   id: number(),
         *   isOwner: optional(boolean())
         * });
         * ```
         */
        Decoder.optional = function (decoder) {
            return new Decoder(function (json) { return (json === undefined || json === null ? ok(undefined) : decoder.decode(json)); });
        };
        /**
         * Decoder that attempts to run each decoder in `decoders` and either succeeds
         * with the first successful decoder, or fails after all decoders have failed.
         *
         * Note that `oneOf` expects the decoders to all have the same return type,
         * while `union` creates a decoder for the union type of all the input
         * decoders.
         *
         * Examples:
         * ```
         * oneOf(string(), number().map(String))
         * oneOf(constant('start'), constant('stop'), succeed('unknown'))
         * ```
         */
        Decoder.oneOf = function () {
            var decoders = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                decoders[_i] = arguments[_i];
            }
            return new Decoder(function (json) {
                var errors = [];
                for (var i = 0; i < decoders.length; i++) {
                    var r = decoders[i].decode(json);
                    if (r.ok === true) {
                        return r;
                    }
                    else {
                        errors[i] = r.error;
                    }
                }
                var errorsList = errors
                    .map(function (error) { return "at error" + (error.at || '') + ": " + error.message; })
                    .join('", "');
                return err({
                    message: "expected a value matching one of the decoders, got the errors [\"" + errorsList + "\"]"
                });
            });
        };
        /**
         * Decoder that always succeeds with either the decoded value, or a fallback
         * default value.
         */
        Decoder.withDefault = function (defaultValue, decoder) {
            return new Decoder(function (json) {
                return ok(withDefault(defaultValue, decoder.decode(json)));
            });
        };
        /**
         * Decoder that pulls a specific field out of a json structure, instead of
         * decoding and returning the full structure. The `paths` array describes the
         * object keys and array indices to traverse, so that values can be pulled out
         * of a nested structure.
         *
         * Example:
         * ```
         * const decoder = valueAt(['a', 'b', 0], string());
         *
         * decoder.run({a: {b: ['surprise!']}})
         * // => {ok: true, result: 'surprise!'}
         *
         * decoder.run({a: {x: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b[0]' message: 'path does not exist'}}
         * ```
         *
         * Note that the `decoder` is ran on the value found at the last key in the
         * path, even if the last key is not found. This allows the `optional`
         * decoder to succeed when appropriate.
         * ```
         * const optionalDecoder = valueAt(['a', 'b', 'c'], optional(string()));
         *
         * optionalDecoder.run({a: {b: {c: 'surprise!'}}})
         * // => {ok: true, result: 'surprise!'}
         *
         * optionalDecoder.run({a: {b: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b.c' message: 'expected an object, got "cats"'}
         *
         * optionalDecoder.run({a: {b: {z: 1}}})
         * // => {ok: true, result: undefined}
         * ```
         */
        Decoder.valueAt = function (paths, decoder) {
            return new Decoder(function (json) {
                var jsonAtPath = json;
                for (var i = 0; i < paths.length; i++) {
                    if (jsonAtPath === undefined) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: 'path does not exist'
                        });
                    }
                    else if (typeof paths[i] === 'string' && !isJsonObject(jsonAtPath)) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: expectedGot('an object', jsonAtPath)
                        });
                    }
                    else if (typeof paths[i] === 'number' && !isJsonArray(jsonAtPath)) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: expectedGot('an array', jsonAtPath)
                        });
                    }
                    else {
                        jsonAtPath = jsonAtPath[paths[i]];
                    }
                }
                return mapError(function (error) {
                    return jsonAtPath === undefined
                        ? { at: printPath(paths), message: 'path does not exist' }
                        : prependAt(printPath(paths), error);
                }, decoder.decode(jsonAtPath));
            });
        };
        /**
         * Decoder that ignores the input json and always succeeds with `fixedValue`.
         */
        Decoder.succeed = function (fixedValue) {
            return new Decoder(function (json) { return ok(fixedValue); });
        };
        /**
         * Decoder that ignores the input json and always fails with `errorMessage`.
         */
        Decoder.fail = function (errorMessage) {
            return new Decoder(function (json) { return err({ message: errorMessage }); });
        };
        /**
         * Decoder that allows for validating recursive data structures. Unlike with
         * functions, decoders assigned to variables can't reference themselves
         * before they are fully defined. We can avoid prematurely referencing the
         * decoder by wrapping it in a function that won't be called until use, at
         * which point the decoder has been defined.
         *
         * Example:
         * ```
         * interface Comment {
         *   msg: string;
         *   replies: Comment[];
         * }
         *
         * const decoder: Decoder<Comment> = object({
         *   msg: string(),
         *   replies: lazy(() => array(decoder))
         * });
         * ```
         */
        Decoder.lazy = function (mkDecoder) {
            return new Decoder(function (json) { return mkDecoder().decode(json); });
        };
        return Decoder;
    }());

    /* tslint:disable:variable-name */
    /** See `Decoder.string` */
    var string = Decoder.string;
    /** See `Decoder.number` */
    var number = Decoder.number;
    /** See `Decoder.boolean` */
    var boolean = Decoder.boolean;
    /** See `Decoder.anyJson` */
    var anyJson = Decoder.anyJson;
    /** See `Decoder.constant` */
    var constant = Decoder.constant;
    /** See `Decoder.object` */
    var object = Decoder.object;
    /** See `Decoder.array` */
    var array = Decoder.array;
    /** See `Decoder.optional` */
    var optional = Decoder.optional;
    /** See `Decoder.oneOf` */
    var oneOf = Decoder.oneOf;
    /** See `Decoder.lazy` */
    var lazy = Decoder.lazy;

    const nonEmptyStringDecoder = string().where((s) => s.length > 0, "Expected a non-empty string");
    const nonNegativeNumberDecoder = number().where((num) => num >= 0, "Expected a non-negative number");
    const libDomainDecoder = oneOf(constant("windows"), constant("appManager"), constant("layouts"), constant("intents"));
    const windowOperationTypesDecoder = oneOf(constant("openWindow"), constant("windowHello"), constant("windowAdded"), constant("windowRemoved"), constant("getBounds"), constant("getUrl"), constant("moveResize"), constant("focus"), constant("close"), constant("getTitle"), constant("setTitle"));
    const appManagerOperationTypesDecoder = oneOf(constant("appHello"), constant("applicationAdded"), constant("applicationRemoved"), constant("applicationChanged"), constant("instanceStarted"), constant("instanceStopped"), constant("applicationStart"), constant("instanceStop"), constant("clear"));
    const layoutsOperationTypesDecoder = oneOf(constant("layoutAdded"), constant("layoutChanged"), constant("layoutRemoved"), constant("get"), constant("getAll"), constant("export"), constant("import"), constant("remove"));
    const windowRelativeDirectionDecoder = oneOf(constant("top"), constant("left"), constant("right"), constant("bottom"));
    const windowOpenSettingsDecoder = optional(object({
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        context: optional(anyJson()),
        relativeTo: optional(nonEmptyStringDecoder),
        relativeDirection: optional(windowRelativeDirectionDecoder),
        windowId: optional(nonEmptyStringDecoder)
    }));
    const openWindowConfigDecoder = object({
        name: nonEmptyStringDecoder,
        url: nonEmptyStringDecoder,
        options: windowOpenSettingsDecoder
    });
    const windowHelloDecoder = object({
        windowId: optional(nonEmptyStringDecoder)
    });
    const coreWindowDataDecoder = object({
        windowId: nonEmptyStringDecoder,
        name: nonEmptyStringDecoder
    });
    const simpleWindowDecoder = object({
        windowId: nonEmptyStringDecoder
    });
    const helloSuccessDecoder = object({
        windows: array(coreWindowDataDecoder),
        isWorkspaceFrame: boolean()
    });
    const windowTitleConfigDecoder = object({
        windowId: nonEmptyStringDecoder,
        title: string()
    });
    const windowMoveResizeConfigDecoder = object({
        windowId: nonEmptyStringDecoder,
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        relative: optional(boolean())
    });
    const windowBoundsResultDecoder = object({
        windowId: nonEmptyStringDecoder,
        bounds: object({
            top: number(),
            left: number(),
            width: nonNegativeNumberDecoder,
            height: nonNegativeNumberDecoder
        })
    });
    const windowUrlResultDecoder = object({
        windowId: nonEmptyStringDecoder,
        url: nonEmptyStringDecoder
    });
    const anyDecoder = anyJson();
    const boundsDecoder = object({
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder)
    });
    const instanceDataDecoder = object({
        id: nonEmptyStringDecoder,
        applicationName: nonEmptyStringDecoder
    });
    const applicationDetailsDecoder = object({
        url: nonEmptyStringDecoder,
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder)
    });
    const intentDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        displayName: optional(string()),
        contexts: optional(array(string())),
        customConfig: optional(object())
    });
    const fdc3AppDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        appId: nonEmptyStringDecoder,
        manifest: nonEmptyStringDecoder,
        manifestType: nonEmptyStringDecoder,
        tooltip: optional(nonEmptyStringDecoder),
        description: optional(nonEmptyStringDecoder),
        contactEmail: optional(nonEmptyStringDecoder),
        supportEmail: optional(nonEmptyStringDecoder),
        publisher: optional(nonEmptyStringDecoder),
        images: optional(array(object({ url: optional(nonEmptyStringDecoder) }))),
        icons: optional(array(object({ icon: optional(nonEmptyStringDecoder) }))),
        customConfig: anyJson(),
        intents: optional(array(intentDefinitionDecoder))
    });
    const applicationDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        customProperties: optional(anyJson()),
        icon: optional(nonEmptyStringDecoder),
        caption: optional(nonEmptyStringDecoder),
        details: applicationDetailsDecoder,
        intents: optional(array(intentDefinitionDecoder))
    });
    const allApplicationDefinitionsDecoder = oneOf(applicationDefinitionDecoder, fdc3AppDefinitionDecoder);
    const appsImportOperationDecoder = object({
        definitions: array(allApplicationDefinitionsDecoder),
        mode: oneOf(constant("replace"), constant("merge"))
    });
    const appRemoveConfigDecoder = object({
        name: nonEmptyStringDecoder
    });
    const appsExportOperationDecoder = object({
        definitions: array(applicationDefinitionDecoder)
    });
    const applicationDataDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        instances: array(instanceDataDecoder),
        userProperties: optional(anyJson()),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        icon: optional(nonEmptyStringDecoder),
        caption: optional(nonEmptyStringDecoder)
    });
    const baseApplicationDataDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        userProperties: anyJson(),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        icon: optional(nonEmptyStringDecoder),
        caption: optional(nonEmptyStringDecoder)
    });
    const appHelloSuccessDecoder = object({
        apps: array(applicationDataDecoder)
    });
    const basicInstanceDataDecoder = object({
        id: nonEmptyStringDecoder
    });
    const applicationStartConfigDecoder = object({
        name: nonEmptyStringDecoder,
        waitForAGMReady: boolean(),
        id: optional(nonEmptyStringDecoder),
        context: optional(anyJson()),
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        relativeTo: optional(nonEmptyStringDecoder),
        relativeDirection: optional(oneOf(constant("top"), constant("left"), constant("right"), constant("bottom")))
    });
    const layoutTypeDecoder = oneOf(constant("Global"), constant("Activity"), constant("ApplicationDefault"), constant("Swimlane"), constant("Workspace"));
    const componentTypeDecoder = oneOf(constant("application"), constant("activity"));
    const windowLayoutComponentDecoder = object({
        type: constant("window"),
        componentType: componentTypeDecoder,
        state: object({
            name: anyJson(),
            context: anyJson(),
            url: nonEmptyStringDecoder,
            bounds: anyJson(),
            id: nonEmptyStringDecoder,
            parentId: optional(nonEmptyStringDecoder),
            main: boolean()
        })
    });
    const windowLayoutItemDecoder = object({
        type: constant("window"),
        config: object({
            appName: nonEmptyStringDecoder,
            url: optional(nonEmptyStringDecoder)
        })
    });
    const groupLayoutItemDecoder = object({
        type: constant("group"),
        config: anyJson(),
        children: array(oneOf(windowLayoutItemDecoder))
    });
    const columnLayoutItemDecoder = object({
        type: constant("column"),
        config: anyJson(),
        children: array(oneOf(groupLayoutItemDecoder, windowLayoutItemDecoder, lazy(() => columnLayoutItemDecoder), lazy(() => rowLayoutItemDecoder)))
    });
    const rowLayoutItemDecoder = object({
        type: constant("row"),
        config: anyJson(),
        children: array(oneOf(columnLayoutItemDecoder, groupLayoutItemDecoder, windowLayoutItemDecoder, lazy(() => rowLayoutItemDecoder)))
    });
    const workspaceLayoutComponentDecoder = object({
        type: constant("Workspace"),
        state: object({
            config: anyJson(),
            context: anyJson(),
            children: array(oneOf(rowLayoutItemDecoder, columnLayoutItemDecoder, groupLayoutItemDecoder, windowLayoutItemDecoder))
        })
    });
    const glueLayoutDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder,
        components: array(oneOf(windowLayoutComponentDecoder, workspaceLayoutComponentDecoder)),
        version: optional(nonEmptyStringDecoder),
        context: optional(anyJson()),
        metadata: optional(anyJson())
    });
    const newLayoutOptionsDecoder = object({
        name: nonEmptyStringDecoder,
        context: optional(anyJson()),
        metadata: optional(anyJson())
    });
    const restoreOptionsDecoder = object({
        name: nonEmptyStringDecoder,
        context: optional(anyJson()),
        closeRunningInstance: optional(boolean())
    });
    const layoutSummaryDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder,
        context: optional(anyJson()),
        metadata: optional(anyJson())
    });
    const simpleLayoutConfigDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder
    });
    const getAllLayoutsConfigDecoder = object({
        type: layoutTypeDecoder
    });
    const allLayoutsFullConfigDecoder = object({
        layouts: array(glueLayoutDecoder)
    });
    const importModeDecoder = oneOf(constant("replace"), constant("merge"));
    const layoutsImportConfigDecoder = object({
        layouts: array(glueLayoutDecoder),
        mode: importModeDecoder
    });
    const allLayoutsSummariesResultDecoder = object({
        summaries: array(layoutSummaryDecoder)
    });
    const simpleLayoutResult = object({
        layout: glueLayoutDecoder
    });
    const optionalSimpleLayoutResult = object({
        layout: optional(glueLayoutDecoder)
    });
    const intentsOperationTypesDecoder = oneOf(constant("findIntent"), constant("getIntents"), constant("raiseIntent"));
    const intentHandlerDecoder = object({
        applicationName: nonEmptyStringDecoder,
        applicationTitle: string(),
        applicationDescription: optional(string()),
        applicationIcon: optional(string()),
        type: oneOf(constant("app"), constant("instance")),
        displayName: optional(string()),
        contextTypes: optional(array(nonEmptyStringDecoder)),
        instanceId: optional(string()),
        instanceTitle: optional(string())
    });
    const intentDecoder = object({
        name: nonEmptyStringDecoder,
        handlers: array(intentHandlerDecoder)
    });
    const intentTargetDecoder = oneOf(constant("startNew"), constant("reuse"), object({
        app: optional(nonEmptyStringDecoder),
        instance: optional(nonEmptyStringDecoder)
    }));
    const intentContextDecoder = object({
        type: optional(nonEmptyStringDecoder),
        data: optional(object())
    });
    const intentsDecoder = array(intentDecoder);
    const wrappedIntentsDecoder = object({
        intents: intentsDecoder
    });
    const intentFilterDecoder = object({
        name: optional(nonEmptyStringDecoder),
        contextType: optional(nonEmptyStringDecoder)
    });
    const findFilterDecoder = oneOf(nonEmptyStringDecoder, intentFilterDecoder);
    const wrappedIntentFilterDecoder = object({
        filter: optional(intentFilterDecoder)
    });
    const intentRequestDecoder = object({
        intent: nonEmptyStringDecoder,
        target: optional(intentTargetDecoder),
        context: optional(intentContextDecoder),
        options: optional(windowOpenSettingsDecoder)
    });
    const raiseRequestDecoder = oneOf(nonEmptyStringDecoder, intentRequestDecoder);
    const intentResultDecoder = object({
        request: intentRequestDecoder,
        handler: intentHandlerDecoder,
        result: anyJson()
    });
    const addIntentListenerRequestDecoder = object({
        intent: nonEmptyStringDecoder,
        contextTypes: optional(array(nonEmptyStringDecoder)),
        displayName: optional(string()),
        icon: optional(string()),
        description: optional(string())
    });
    const addIntentListenerIntentDecoder = oneOf(nonEmptyStringDecoder, addIntentListenerRequestDecoder);
    const channelNameDecoder = (channelNames) => {
        return nonEmptyStringDecoder.where(s => channelNames.includes(s), "Expected a valid channel name");
    };

    const operations = {
        openWindow: { name: "openWindow", dataDecoder: openWindowConfigDecoder, resultDecoder: coreWindowDataDecoder },
        windowHello: { name: "windowHello", dataDecoder: windowHelloDecoder, resultDecoder: helloSuccessDecoder },
        windowAdded: { name: "windowAdded", dataDecoder: coreWindowDataDecoder },
        windowRemoved: { name: "windowRemoved", dataDecoder: simpleWindowDecoder },
        getBounds: { name: "getBounds", dataDecoder: simpleWindowDecoder, resultDecoder: windowBoundsResultDecoder },
        getUrl: { name: "getUrl", dataDecoder: simpleWindowDecoder, resultDecoder: windowUrlResultDecoder },
        moveResize: { name: "moveResize", dataDecoder: windowMoveResizeConfigDecoder },
        focus: { name: "focus", dataDecoder: simpleWindowDecoder },
        close: { name: "close", dataDecoder: simpleWindowDecoder },
        getTitle: { name: "getTitle", dataDecoder: simpleWindowDecoder, resultDecoder: windowTitleConfigDecoder },
        setTitle: { name: "setTitle", dataDecoder: windowTitleConfigDecoder }
    };

    function createRegistry(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                callbacks[key] = allForKey;
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry.default = createRegistry;
    var lib = createRegistry;

    class WebWindowModel {
        constructor(_id, _name, _bridge) {
            this._id = _id;
            this._name = _name;
            this._bridge = _bridge;
            this.registry = lib();
            this.myCtxKey = `___window___${this.id}`;
        }
        get id() {
            return this._id.slice();
        }
        get name() {
            return this._name.slice();
        }
        clean() {
            if (this.ctxUnsubscribe) {
                this.ctxUnsubscribe();
            }
        }
        toApi() {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.ctxUnsubscribe = yield this._bridge.contextLib.subscribe(this.myCtxKey, (data) => this.registry.execute("context-updated", data));
                const api = {
                    id: this.id,
                    name: this.name,
                    getURL: this.getURL.bind(this),
                    moveResize: this.moveResize.bind(this),
                    resizeTo: this.resizeTo.bind(this),
                    moveTo: this.moveTo.bind(this),
                    focus: this.focus.bind(this),
                    close: this.close.bind(this),
                    getTitle: this.getTitle.bind(this),
                    setTitle: this.setTitle.bind(this),
                    getBounds: this.getBounds.bind(this),
                    getContext: this.getContext.bind(this),
                    updateContext: this.updateContext.bind(this),
                    setContext: this.setContext.bind(this),
                    onContextUpdated: this.onContextUpdated.bind(this)
                };
                this.me = Object.freeze(api);
                return this.me;
            });
        }
        getURL() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getUrl, { windowId: this.id });
                return result.url;
            });
        }
        moveResize(dimension) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const targetBounds = boundsDecoder.runWithException(dimension);
                const commandArgs = Object.assign({}, targetBounds, { windowId: this.id, relative: false });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        resizeTo(width, height) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (typeof width === "undefined" && typeof height === "undefined") {
                    return this.me;
                }
                if (typeof width !== "undefined") {
                    nonNegativeNumberDecoder.runWithException(width);
                }
                if (typeof height !== "undefined") {
                    nonNegativeNumberDecoder.runWithException(height);
                }
                const commandArgs = Object.assign({}, { width, height }, { windowId: this.id, relative: true });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        moveTo(top, left) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (typeof top === "undefined" && typeof left === "undefined") {
                    return this.me;
                }
                if (typeof top !== "undefined") {
                    number().runWithException(top);
                }
                if (typeof left !== "undefined") {
                    number().runWithException(left);
                }
                const commandArgs = Object.assign({}, { top, left }, { windowId: this.id, relative: true });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        focus() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this._bridge.send("windows", operations.focus, { windowId: this.id });
                return this.me;
            });
        }
        close() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this._bridge.send("windows", operations.close, { windowId: this.id });
                return this.me;
            });
        }
        getTitle() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getTitle, { windowId: this.id });
                return result.title;
            });
        }
        setTitle(title) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ttl = nonEmptyStringDecoder.runWithException(title);
                yield this._bridge.send("windows", operations.setTitle, { windowId: this.id, title: ttl });
                return this.me;
            });
        }
        getBounds() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getBounds, { windowId: this.id });
                return result.bounds;
            });
        }
        getContext() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = yield this._bridge.contextLib.get(this.myCtxKey);
                return ctx;
            });
        }
        updateContext(context) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = anyDecoder.runWithException(context);
                yield this._bridge.contextLib.update(this.myCtxKey, ctx);
                return this.me;
            });
        }
        setContext(context) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = anyDecoder.runWithException(context);
                yield this._bridge.contextLib.set(this.myCtxKey, ctx);
                return this.me;
            });
        }
        onContextUpdated(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to context changes, because the provided callback is not a function!");
            }
            const wrappedCallback = (data) => {
                callback(data, this.me);
            };
            return this.registry.add("context-updated", wrappedCallback);
        }
    }

    class WindowsController {
        constructor() {
            this.registry = lib();
            this.allWindowProjections = [];
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("windows.controller.web");
                this.logger.trace("starting the web windows controller");
                this.publicWindowId = coreGlue.connection.transport.publicWindowId;
                this.actualWindowId = coreGlue.interop.instance.windowId;
                this.addWindowOperationExecutors();
                this.ioc = ioc;
                this.bridge = ioc.bridge;
                this.logger.trace(`set the public window id: ${this.publicWindowId} and actual window id: ${this.actualWindowId}, set the bridge operations and ioc, registering with the platform now`);
                this.platformRegistration = this.registerWithPlatform();
                yield this.platformRegistration;
                this.logger.trace("registration with the platform successful, attaching the windows property to glue and returning");
                const api = this.toApi();
                coreGlue.windows = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.platformRegistration;
                const operationName = windowOperationTypesDecoder.runWithException(args.operation);
                const operation = operations[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        open(name, url, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                nonEmptyStringDecoder.runWithException(url);
                const settings = windowOpenSettingsDecoder.runWithException(options);
                const windowSuccess = yield this.bridge.send("windows", operations.openWindow, { name, url, options: settings });
                const projection = yield this.ioc.buildWebWindow(windowSuccess.windowId, windowSuccess.name);
                return projection.api;
            });
        }
        list() {
            return this.allWindowProjections.map((projection) => projection.api);
        }
        findById(id) {
            var _a;
            nonEmptyStringDecoder.runWithException(id);
            return (_a = this.allWindowProjections.find((projection) => projection.id === id)) === null || _a === void 0 ? void 0 : _a.api;
        }
        toApi() {
            return {
                open: this.open.bind(this),
                my: this.my.bind(this),
                list: this.list.bind(this),
                findById: this.findById.bind(this),
                onWindowAdded: this.onWindowAdded.bind(this),
                onWindowRemoved: this.onWindowRemoved.bind(this)
            };
        }
        addWindowOperationExecutors() {
            operations.windowAdded.execute = this.handleWindowAdded.bind(this);
            operations.windowRemoved.execute = this.handleWindowRemoved.bind(this);
            operations.getBounds.execute = this.handleGetBounds.bind(this);
            operations.getTitle.execute = this.handleGetTitle.bind(this);
            operations.getUrl.execute = this.handleGetUrl.bind(this);
            operations.moveResize.execute = this.handleMoveResize.bind(this);
            operations.setTitle.execute = this.handleSetTitle.bind(this);
        }
        my() {
            return Object.assign({}, this.me);
        }
        onWindowAdded(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to window added, because the provided callback is not a function!");
            }
            return this.registry.add("window-added", callback);
        }
        onWindowRemoved(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to window removed, because the provided callback is not a function!");
            }
            return this.registry.add("window-removed", callback);
        }
        sayHello() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const helloSuccess = yield this.bridge.send("windows", operations.windowHello, { windowId: this.actualWindowId });
                return helloSuccess;
            });
        }
        registerWithPlatform() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const { windows, isWorkspaceFrame } = yield this.sayHello();
                this.logger.trace("the platform responded to the hello message");
                if (!isWorkspaceFrame) {
                    this.logger.trace("i am not treated as a workspace frame, setting my window");
                    const myWindow = windows.find((w) => w.windowId === this.publicWindowId);
                    if (!myWindow) {
                        throw new Error("Cannot initialize the window library, because I received no information about me from the platform");
                    }
                    this.me = (yield this.ioc.buildWebWindow(this.publicWindowId, myWindow.name)).api;
                }
                const currentWindows = yield Promise.all(windows.map((w) => this.ioc.buildWebWindow(w.windowId, w.name)));
                this.logger.trace("all windows projections are completed, building the list collection");
                this.allWindowProjections.push(...currentWindows);
            });
        }
        handleWindowAdded(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.allWindowProjections.some((projection) => projection.id === data.windowId)) {
                    return;
                }
                const webWindowProjection = yield this.ioc.buildWebWindow(data.windowId, data.name);
                this.allWindowProjections.push(webWindowProjection);
                this.registry.execute("window-added", webWindowProjection.api);
            });
        }
        handleWindowRemoved(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const removed = this.allWindowProjections.find((w) => w.id === data.windowId);
                if (!removed) {
                    return;
                }
                this.allWindowProjections = this.allWindowProjections.filter((w) => w.id !== data.windowId);
                removed.model.clean();
                this.registry.execute("window-removed", removed.api);
            });
        }
        handleGetBounds() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: this.me.id,
                    bounds: {
                        top: window.screenTop,
                        left: window.screenLeft,
                        width: window.innerWidth,
                        height: window.innerHeight
                    }
                };
            });
        }
        handleGetTitle() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: this.me.id,
                    title: document.title
                };
            });
        }
        handleGetUrl() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: this.me.id,
                    url: window.location.href
                };
            });
        }
        handleMoveResize(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const targetTop = typeof config.top === "number" ? config.top :
                    config.relative ? 0 : window.screenTop;
                const targetLeft = typeof config.left === "number" ? config.left :
                    config.relative ? 0 : window.screenLeft;
                const targetHeight = typeof config.height === "number" ? config.height :
                    config.relative ? 0 : window.innerHeight;
                const targetWidth = typeof config.width === "number" ? config.width :
                    config.relative ? 0 : window.innerWidth;
                const moveMethod = config.relative ? window.moveBy : window.moveTo;
                const resizeMethod = config.relative ? window.resizeBy : window.resizeTo;
                moveMethod(targetLeft, targetTop);
                resizeMethod(targetWidth, targetHeight);
            });
        }
        handleSetTitle(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                document.title = config.title;
            });
        }
    }

    const PromiseWrap = (promise, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            let promiseActive = true;
            const timeout = setTimeout(() => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            promise()
                .then((result) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                reject(error);
            });
        });
    };
    const PromisePlus = (executor, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            const timeout = setTimeout(() => {
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            const providedPromise = new Promise(executor);
            providedPromise
                .then((result) => {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    const GlueWebPlatformControlName = "T42.Web.Platform.Control";
    const GlueWebPlatformStreamName = "T42.Web.Platform.Stream";
    const GlueClientControlName = "T42.Web.Client.Control";

    class GlueBridge {
        constructor(coreGlue) {
            this.coreGlue = coreGlue;
            this.platformMethodTimeoutMs = 10000;
        }
        get contextLib() {
            return this.coreGlue.contexts;
        }
        get interopInstance() {
            return this.coreGlue.interop.instance.instance;
        }
        start(controllers) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.controllers = controllers;
                yield Promise.all([
                    this.checkWaitMethod(GlueWebPlatformControlName),
                    this.checkWaitMethod(GlueWebPlatformStreamName)
                ]);
                const [sub] = yield Promise.all([
                    this.coreGlue.interop.subscribe(GlueWebPlatformStreamName),
                    this.coreGlue.interop.registerAsync(GlueClientControlName, (args, _, success, error) => this.passMessageController(args, success, error))
                ]);
                this.sub = sub;
                this.sub.onData((pkg) => this.passMessageController(pkg.data));
            });
        }
        getInteropInstance(windowId) {
            const result = this.coreGlue.interop.servers().find((s) => s.windowId && s.windowId === windowId);
            return {
                application: result === null || result === void 0 ? void 0 : result.application,
                applicationName: result === null || result === void 0 ? void 0 : result.applicationName,
                peerId: result === null || result === void 0 ? void 0 : result.peerId,
                instance: result === null || result === void 0 ? void 0 : result.instance,
                windowId: result === null || result === void 0 ? void 0 : result.windowId
            };
        }
        send(domain, operation, operationData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (operation.dataDecoder) {
                    try {
                        operation.dataDecoder.runWithException(operationData);
                    }
                    catch (error) {
                        throw new Error(`Unexpected internal outgoing validation error: ${error.message}, for operation: ${operation.name} and input: ${JSON.stringify(error.input)}`);
                    }
                }
                let operationResult;
                try {
                    operationResult = yield this.transmitMessage(domain, operation, operationData);
                    if (operation.resultDecoder) {
                        operationResult = operation.resultDecoder.runWithException(operationResult);
                    }
                }
                catch (error) {
                    if (error.kind) {
                        throw new Error(`Unexpected internal incoming validation error: ${error.message}, for operation: ${operation.name} and input: ${JSON.stringify(error.input)}`);
                    }
                    throw new Error(error.message);
                }
                return operationResult;
            });
        }
        checkWaitMethod(name) {
            return PromisePlus((resolve) => {
                const hasMethod = this.coreGlue.interop.methods().some((method) => method.name === name);
                if (hasMethod) {
                    return resolve();
                }
                const unSub = this.coreGlue.interop.methodAdded((method) => {
                    if (method.name === name) {
                        unSub();
                        resolve();
                    }
                });
            }, this.platformMethodTimeoutMs, `Cannot initiate Glue Web, because a system method's discovery timed out: ${name}`);
        }
        passMessageController(args, success, error) {
            const decodeResult = libDomainDecoder.run(args.domain);
            if (!decodeResult.ok) {
                if (error) {
                    error(`Cannot execute this client control, because of domain validation error: ${JSON.stringify(decodeResult.error)}`);
                }
                return;
            }
            const domain = decodeResult.result;
            this.controllers[domain]
                .handleBridgeMessage(args)
                .then((resolutionData) => {
                if (success) {
                    success(resolutionData);
                }
            })
                .catch((err) => {
                if (error) {
                    error(err);
                }
                console.warn(err);
            });
        }
        transmitMessage(domain, operation, data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const messageData = { domain, data, operation: operation.name };
                let invocationResult;
                const baseErrorMessage = `Internal Platform Communication Error. Attempted operation: ${JSON.stringify(operation.name)} with data: ${JSON.stringify(data)}. `;
                try {
                    invocationResult = yield this.coreGlue.interop.invoke(GlueWebPlatformControlName, messageData);
                    if (!invocationResult) {
                        throw new Error("Received unsupported result from the platform - empty result");
                    }
                    if (!Array.isArray(invocationResult.all_return_values) || invocationResult.all_return_values.length === 0) {
                        throw new Error("Received unsupported result from the platform - empty values collection");
                    }
                }
                catch (error) {
                    if (error && error.all_errors && error.all_errors.length) {
                        const invocationErrorMessage = error.all_errors[0].message;
                        throw new Error(`${baseErrorMessage} -> Inner message: ${invocationErrorMessage}`);
                    }
                    throw new Error(`${baseErrorMessage} -> Inner message: ${error.message}`);
                }
                return invocationResult.all_return_values[0].returned;
            });
        }
    }

    const operations$1 = {
        appHello: { name: "appHello", dataDecoder: windowHelloDecoder, resultDecoder: appHelloSuccessDecoder },
        applicationAdded: { name: "applicationAdded", dataDecoder: baseApplicationDataDecoder },
        applicationRemoved: { name: "applicationRemoved", dataDecoder: baseApplicationDataDecoder },
        applicationChanged: { name: "applicationChanged", dataDecoder: baseApplicationDataDecoder },
        instanceStarted: { name: "instanceStarted", dataDecoder: instanceDataDecoder },
        instanceStopped: { name: "instanceStopped", dataDecoder: instanceDataDecoder },
        applicationStart: { name: "applicationStart", dataDecoder: applicationStartConfigDecoder, resultDecoder: instanceDataDecoder },
        instanceStop: { name: "instanceStop", dataDecoder: basicInstanceDataDecoder },
        import: { name: "import" },
        remove: { name: "remove", dataDecoder: appRemoveConfigDecoder },
        export: { name: "export", resultDecoder: appsExportOperationDecoder },
        clear: { name: "clear" }
    };

    class AppManagerController {
        constructor() {
            this.registry = lib();
            this.applications = [];
            this.instances = [];
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("appManger.controller.web");
                this.logger.trace("starting the web appManager controller");
                this.publicWindowId = coreGlue.connection.transport.publicWindowId;
                this.actualWindowId = coreGlue.interop.instance.windowId;
                this.addOperationsExecutors();
                this.ioc = ioc;
                this.bridge = ioc.bridge;
                this.platformRegistration = this.registerWithPlatform();
                yield this.platformRegistration;
                this.logger.trace("registration with the platform successful, attaching the appManager property to glue and returning");
                const api = this.toApi();
                coreGlue.appManager = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.platformRegistration;
                const operationName = appManagerOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$1[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        onInstanceStarted(callback) {
            return this.registry.add("instance-started", callback, this.instances);
        }
        onInstanceStopped(callback) {
            return this.registry.add("instance-stopped", callback);
        }
        startApplication(appName, context, options) {
            var _a, _b;
            return __awaiter$1(this, void 0, void 0, function* () {
                const startOptions = {
                    name: appName,
                    waitForAGMReady: (_a = options === null || options === void 0 ? void 0 : options.waitForAGMReady) !== null && _a !== void 0 ? _a : true,
                    context,
                    top: options === null || options === void 0 ? void 0 : options.top,
                    left: options === null || options === void 0 ? void 0 : options.left,
                    width: options === null || options === void 0 ? void 0 : options.width,
                    height: options === null || options === void 0 ? void 0 : options.height,
                    relativeTo: options === null || options === void 0 ? void 0 : options.relativeTo,
                    relativeDirection: options === null || options === void 0 ? void 0 : options.relativeDirection,
                    id: (_b = options) === null || _b === void 0 ? void 0 : _b.reuseId
                };
                const openResult = yield this.bridge.send("appManager", operations$1.applicationStart, startOptions);
                const app = this.applications.find((a) => a.name === openResult.applicationName);
                return this.ioc.buildInstance(openResult, app);
            });
        }
        toApi() {
            const api = {
                myInstance: this.me,
                inMemory: {
                    import: this.import.bind(this),
                    remove: this.remove.bind(this),
                    export: this.export.bind(this),
                    clear: this.clear.bind(this)
                },
                application: this.getApplication.bind(this),
                applications: this.getApplications.bind(this),
                instances: this.getInstances.bind(this),
                onAppAdded: this.onAppAdded.bind(this),
                onAppChanged: this.onAppChanged.bind(this),
                onAppRemoved: this.onAppRemoved.bind(this),
                onInstanceStarted: this.onInstanceStarted.bind(this),
                onInstanceStopped: this.onInstanceStopped.bind(this)
            };
            return Object.freeze(api);
        }
        addOperationsExecutors() {
            operations$1.applicationAdded.execute = this.handleApplicationAddedMessage.bind(this);
            operations$1.applicationRemoved.execute = this.handleApplicationRemovedMessage.bind(this);
            operations$1.applicationChanged.execute = this.handleApplicationChangedMessage.bind(this);
            operations$1.instanceStarted.execute = this.handleInstanceStartedMessage.bind(this);
            operations$1.instanceStopped.execute = this.handleInstanceStoppedMessage.bind(this);
        }
        onAppAdded(callback) {
            return this.registry.add("application-added", callback, this.applications);
        }
        onAppRemoved(callback) {
            return this.registry.add("application-removed", callback);
        }
        onAppChanged(callback) {
            return this.registry.add("application-changed", callback);
        }
        handleApplicationAddedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.applications.some((app) => app.name === appData.name)) {
                    return;
                }
                const app = yield this.ioc.buildApplication(appData, []);
                const instances = this.instances.filter((instance) => instance.application.name === app.name);
                app.instances.push(...instances);
                this.applications.push(app);
                this.registry.execute("application-added", app);
            });
        }
        handleApplicationRemovedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const appIndex = this.applications.findIndex((app) => app.name === appData.name);
                if (appIndex < 0) {
                    return;
                }
                const app = this.applications[appIndex];
                this.applications.splice(appIndex, 1);
                this.registry.execute("application-removed", app);
            });
        }
        handleApplicationChangedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const app = this.applications.find((app) => app.name === appData.name);
                if (!app) {
                    return this.handleApplicationAddedMessage(appData);
                }
                app.title = appData.title;
                app.version = appData.version;
                app.icon = appData.icon;
                app.caption = appData.caption;
                app.userProperties = appData.userProperties;
                this.registry.execute("application-changed", app);
            });
        }
        handleInstanceStartedMessage(instanceData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.instances.some((instance) => instance.id === instanceData.id)) {
                    return;
                }
                const application = this.applications.find((app) => app.name === instanceData.applicationName);
                if (!application) {
                    throw new Error(`Cannot add instance: ${instanceData.id}, because there is no application definition associated with it`);
                }
                const instance = this.ioc.buildInstance(instanceData, application);
                this.instances.push(instance);
                application.instances.push(instance);
                this.registry.execute("instance-started", instance);
            });
        }
        handleInstanceStoppedMessage(instanceData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const instance = this.instances.find((i) => i.id === instanceData.id);
                if (instance) {
                    const instIdx = this.instances.findIndex((inst) => inst.id === instanceData.id);
                    this.instances.splice(instIdx, 1);
                }
                const application = this.applications.find((app) => app.instances.some((inst) => inst.id === instanceData.id));
                if (application) {
                    const instIdxApps = application.instances.findIndex((inst) => inst.id === instanceData.id);
                    application.instances.splice(instIdxApps, 1);
                }
                if (!instance) {
                    return;
                }
                this.registry.execute("instance-stopped", instance);
            });
        }
        import(definitions, mode = "replace") {
            return __awaiter$1(this, void 0, void 0, function* () {
                importModeDecoder.runWithException(mode);
                if (!Array.isArray(definitions)) {
                    throw new Error("Import must be called with an array of definitions");
                }
                const parseResult = definitions.reduce((soFar, definition) => {
                    const decodeResult = allApplicationDefinitionsDecoder.run(definition);
                    if (!decodeResult.ok) {
                        soFar.invalid.push({ app: definition === null || definition === void 0 ? void 0 : definition.name, error: JSON.stringify(decodeResult.error) });
                    }
                    else {
                        soFar.valid.push(definition);
                    }
                    return soFar;
                }, { valid: [], invalid: [] });
                yield this.bridge.send("appManager", operations$1.import, { definitions: parseResult.valid, mode });
                return {
                    imported: parseResult.valid.map((valid) => valid.name),
                    errors: parseResult.invalid
                };
            });
        }
        remove(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                yield this.bridge.send("appManager", operations$1.remove, { name });
            });
        }
        clear() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.bridge.send("appManager", operations$1.clear, undefined);
            });
        }
        export() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const response = yield this.bridge.send("appManager", operations$1.export, undefined);
                return response.definitions;
            });
        }
        getApplication(name) {
            const verifiedName = nonEmptyStringDecoder.runWithException(name);
            return this.applications.find((app) => app.name === verifiedName);
        }
        getApplications() {
            return this.applications.slice();
        }
        getInstances() {
            return this.instances.slice();
        }
        registerWithPlatform() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.bridge.send("appManager", operations$1.appHello, { windowId: this.actualWindowId });
                this.logger.trace("the platform responded to the hello message with a full list of apps");
                this.applications = yield Promise.all(result.apps.map((app) => this.ioc.buildApplication(app, app.instances)));
                this.instances = this.applications.reduce((instancesSoFar, app) => {
                    instancesSoFar.push(...app.instances);
                    return instancesSoFar;
                }, []);
                this.me = this.findMyInstance();
                this.logger.trace(`all applications were parsed and saved. I am ${this.me ? "NOT a" : "a"} valid instance`);
            });
        }
        findMyInstance() {
            for (const app of this.applications) {
                const foundInstance = app.instances.find((instance) => instance.id === this.publicWindowId);
                if (foundInstance) {
                    return foundInstance;
                }
            }
        }
    }

    class InstanceModel {
        constructor(data, bridge, application) {
            this.data = data;
            this.bridge = bridge;
            this.application = application;
            this.myCtxKey = `___instance___${this.data.id}`;
        }
        toApi() {
            const agm = this.bridge.getInteropInstance(this.data.id);
            const api = {
                id: this.data.id,
                agm,
                application: this.application,
                stop: this.stop.bind(this),
                getContext: this.getContext.bind(this)
            };
            this.me = Object.freeze(api);
            return this.me;
        }
        getContext() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return this.bridge.contextLib.get(this.myCtxKey);
            });
        }
        stop() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.bridge.send("appManager", operations$1.instanceStop, { id: this.data.id });
            });
        }
    }

    class ApplicationModel {
        constructor(data, instances, controller) {
            this.data = data;
            this.instances = instances;
            this.controller = controller;
        }
        toApi() {
            const api = {
                name: this.data.name,
                title: this.data.title,
                version: this.data.version,
                icon: this.data.icon,
                caption: this.data.caption,
                userProperties: this.data.userProperties,
                instances: this.instances,
                start: this.start.bind(this),
                onInstanceStarted: this.onInstanceStarted.bind(this),
                onInstanceStopped: this.onInstanceStopped.bind(this)
            };
            this.me = api;
            return this.me;
        }
        onInstanceStarted(callback) {
            if (typeof callback !== "function") {
                throw new Error("OnInstanceStarted requires a single argument of type function");
            }
            this.controller.onInstanceStarted((instance) => {
                if (instance.application.name === this.data.name) {
                    callback(instance);
                }
            });
        }
        onInstanceStopped(callback) {
            if (typeof callback !== "function") {
                throw new Error("OnInstanceStarted requires a single argument of type function");
            }
            this.controller.onInstanceStopped((instance) => {
                if (instance.application.name === this.data.name) {
                    callback(instance);
                }
            });
        }
        start(context, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                return this.controller.startApplication(this.data.name, context, options);
            });
        }
    }

    const operations$2 = {
        layoutAdded: { name: "layoutAdded", dataDecoder: glueLayoutDecoder },
        layoutChanged: { name: "layoutChanged", dataDecoder: glueLayoutDecoder },
        layoutRemoved: { name: "layoutRemoved", dataDecoder: glueLayoutDecoder },
        get: { name: "get", dataDecoder: simpleLayoutConfigDecoder, resultDecoder: optionalSimpleLayoutResult },
        getAll: { name: "getAll", dataDecoder: getAllLayoutsConfigDecoder, resultDecoder: allLayoutsSummariesResultDecoder },
        export: { name: "export", dataDecoder: getAllLayoutsConfigDecoder, resultDecoder: allLayoutsFullConfigDecoder },
        import: { name: "import", dataDecoder: layoutsImportConfigDecoder },
        remove: { name: "remove", dataDecoder: simpleLayoutConfigDecoder }
    };

    class LayoutsController {
        constructor() {
            this.registry = lib();
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("layouts.controller.web");
                this.logger.trace("starting the web layouts controller");
                this.bridge = ioc.bridge;
                this.addOperationsExecutors();
                const api = this.toApi();
                this.logger.trace("no need for platform registration, attaching the layouts property to glue and returning");
                coreGlue.layouts = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const operationName = layoutsOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$2[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        toApi() {
            const api = {
                get: this.get.bind(this),
                getAll: this.getAll.bind(this),
                export: this.export.bind(this),
                import: this.import.bind(this),
                save: this.save.bind(this),
                restore: this.restore.bind(this),
                remove: this.remove.bind(this),
                onAdded: this.onAdded.bind(this),
                onChanged: this.onChanged.bind(this),
                onRemoved: this.onRemoved.bind(this)
            };
            return Object.freeze(api);
        }
        addOperationsExecutors() {
            operations$2.layoutAdded.execute = this.handleOnAdded.bind(this);
            operations$2.layoutChanged.execute = this.handleOnChanged.bind(this);
            operations$2.layoutRemoved.execute = this.handleOnRemoved.bind(this);
        }
        get(name, type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                layoutTypeDecoder.runWithException(type);
                const result = yield this.bridge.send("layouts", operations$2.get, { name, type });
                return result.layout;
            });
        }
        getAll(type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                layoutTypeDecoder.runWithException(type);
                const result = yield this.bridge.send("layouts", operations$2.getAll, { type });
                return result.summaries;
            });
        }
        export(type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (type) {
                    layoutTypeDecoder.runWithException(type);
                }
                const result = yield this.bridge.send("layouts", operations$2.export, { type: "Workspace" });
                return result.layouts;
            });
        }
        import(layouts, mode = "replace") {
            return __awaiter$1(this, void 0, void 0, function* () {
                importModeDecoder.runWithException(mode);
                if (!Array.isArray(layouts)) {
                    throw new Error("Import must be called with an array of layouts");
                }
                const parseResult = layouts.reduce((soFar, layout) => {
                    const decodeResult = glueLayoutDecoder.run(layout);
                    if (decodeResult.ok) {
                        soFar.valid.push(layout);
                    }
                    else {
                        this.logger.warn(`A layout with name: ${layout.name} was not imported, because of error: ${JSON.stringify(decodeResult.error)}`);
                    }
                    return soFar;
                }, { valid: [] });
                yield this.bridge.send("layouts", operations$2.import, { layouts: parseResult.valid, mode });
            });
        }
        save(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                newLayoutOptionsDecoder.runWithException(layout);
                throw new Error("Save is not supported in Core at the moment");
            });
        }
        restore(options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                restoreOptionsDecoder.runWithException(options);
                throw new Error("Restore is not supported in Core at the moment");
            });
        }
        remove(type, name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                layoutTypeDecoder.runWithException(type);
                nonEmptyStringDecoder.runWithException(name);
                yield this.bridge.send("layouts", operations$2.remove, { type, name });
            });
        }
        onAdded(callback) {
            return this.registry.add(operations$2.layoutAdded.name, callback);
        }
        onChanged(callback) {
            return this.registry.add(operations$2.layoutChanged.name, callback);
        }
        onRemoved(callback) {
            return this.registry.add(operations$2.layoutRemoved.name, callback);
        }
        handleOnAdded(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutAdded.name, layout);
            });
        }
        handleOnChanged(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutChanged.name, layout);
            });
        }
        handleOnRemoved(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutRemoved.name, layout);
            });
        }
    }

    class NotificationsController {
        start(coreGlue) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("notifications.controller.web");
                this.logger.trace("starting the web notifications controller");
                this.interop = coreGlue.interop;
                const api = this.toApi();
                coreGlue.notifications = api;
                this.logger.trace("notifications are ready");
            });
        }
        handleBridgeMessage() {
            return __awaiter$1(this, void 0, void 0, function* () {
            });
        }
        toApi() {
            const api = {
                raise: this.raise.bind(this)
            };
            return Object.freeze(api);
        }
        raise(options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (!("Notification" in window)) {
                    throw new Error("this browser does not support desktop notification");
                }
                let permissionPromise;
                if (Notification.permission === "granted") {
                    permissionPromise = Promise.resolve("granted");
                }
                else if (Notification.permission === "denied") {
                    permissionPromise = Promise.reject("no permissions from user");
                }
                else {
                    permissionPromise = Notification.requestPermission();
                }
                yield permissionPromise;
                const notification = this.raiseUsingWebApi(options);
                if (options.clickInterop) {
                    const interopOptions = options.clickInterop;
                    notification.onclick = () => {
                        var _a, _b;
                        this.interop.invoke(interopOptions.method, (_a = interopOptions === null || interopOptions === void 0 ? void 0 : interopOptions.arguments) !== null && _a !== void 0 ? _a : {}, (_b = interopOptions === null || interopOptions === void 0 ? void 0 : interopOptions.target) !== null && _b !== void 0 ? _b : "best");
                    };
                }
                return notification;
            });
        }
        raiseUsingWebApi(options) {
            return new Notification(options.title);
        }
    }

    const operations$3 = {
        getIntents: { name: "getIntents", resultDecoder: wrappedIntentsDecoder },
        findIntent: { name: "findIntent", dataDecoder: wrappedIntentFilterDecoder, resultDecoder: wrappedIntentsDecoder },
        raiseIntent: { name: "raiseIntent", dataDecoder: intentRequestDecoder, resultDecoder: intentResultDecoder }
    };

    class IntentsController {
        constructor() {
            this.myIntents = new Set();
            this.GlueWebIntentsPrefix = "Tick42.FDC3.Intents.";
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("intents.controller.web");
                this.logger.trace("starting the web intents controller");
                this.bridge = ioc.bridge;
                this.interop = coreGlue.interop;
                const api = this.toApi();
                this.logger.trace("no need for platform registration, attaching the intents property to glue and returning");
                coreGlue.intents = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const operationName = intentsOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$3[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        toApi() {
            const api = {
                raise: this.raise.bind(this),
                all: this.all.bind(this),
                addIntentListener: this.addIntentListener.bind(this),
                find: this.find.bind(this)
            };
            return Object.freeze(api);
        }
        raise(request) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const requestObj = raiseRequestDecoder.runWithException(request);
                let data;
                if (typeof requestObj === "string") {
                    data = {
                        intent: requestObj
                    };
                }
                else {
                    data = requestObj;
                }
                const result = yield this.bridge.send("intents", operations$3.raiseIntent, data);
                return result;
            });
        }
        all() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.bridge.send("intents", operations$3.getIntents, undefined);
                return result.intents;
            });
        }
        addIntentListener(intent, handler) {
            addIntentListenerIntentDecoder.runWithException(intent);
            if (typeof handler !== "function") {
                throw new Error("Cannot add intent listener, because the provided handler is not a function!");
            }
            let subscribed = true;
            const intentName = typeof intent === "string" ? intent : intent.intent;
            const methodName = `${this.GlueWebIntentsPrefix}${intentName}`;
            const alreadyRegistered = this.myIntents.has(intentName);
            if (alreadyRegistered) {
                throw new Error(`Intent listener for intent ${intentName} already registered!`);
            }
            this.myIntents.add(intentName);
            const result = {
                unsubscribe: () => {
                    subscribed = false;
                    try {
                        this.interop.unregister(methodName);
                        this.myIntents.delete(intentName);
                    }
                    catch (error) {
                        this.logger.trace(`Unsubscribed intent listener, but ${methodName} unregistration failed!`);
                    }
                }
            };
            const flags = typeof intent === "string" ? { intent } : intent;
            this.interop.register({ name: methodName, flags }, (args) => {
                if (subscribed) {
                    return handler(args);
                }
            });
            return result;
        }
        find(intentFilter) {
            return __awaiter$1(this, void 0, void 0, function* () {
                let data = undefined;
                if (typeof intentFilter !== "undefined") {
                    const intentFilterObj = findFilterDecoder.runWithException(intentFilter);
                    if (typeof intentFilterObj === "string") {
                        data = {
                            filter: {
                                name: intentFilterObj
                            }
                        };
                    }
                    else if (typeof intentFilterObj === "object") {
                        data = {
                            filter: intentFilterObj
                        };
                    }
                }
                const result = yield this.bridge.send("intents", operations$3.findIntent, data);
                return result.intents;
            });
        }
    }

    class ChannelsController {
        constructor() {
            this.registry = lib();
            this.GlueWebChannelsPrefix = "___channel___";
            this.SubsKey = "subs";
            this.ChangedKey = "changed";
        }
        start(coreGlue) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("channels.controller.web");
                this.logger.trace("starting the web channels controller");
                this.contexts = coreGlue.contexts;
                this.logger.trace("no need for platform registration, attaching the channels property to glue and returning");
                const api = this.toApi();
                coreGlue.channels = api;
            });
        }
        handleBridgeMessage() {
            return __awaiter$1(this, void 0, void 0, function* () {
            });
        }
        toApi() {
            const api = {
                subscribe: this.subscribe.bind(this),
                subscribeFor: this.subscribeFor.bind(this),
                publish: this.publish.bind(this),
                all: this.all.bind(this),
                list: this.list.bind(this),
                get: this.get.bind(this),
                join: this.join.bind(this),
                leave: this.leave.bind(this),
                current: this.current.bind(this),
                my: this.my.bind(this),
                changed: this.changed.bind(this),
                onChanged: this.onChanged.bind(this),
                add: this.add.bind(this)
            };
            return Object.freeze(api);
        }
        createContextName(channelName) {
            return `${this.GlueWebChannelsPrefix}${channelName}`;
        }
        getAllChannelNames() {
            const contextNames = this.contexts.all();
            const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(this.GlueWebChannelsPrefix));
            const channelNames = channelContextNames.map((channelContextName) => channelContextName.replace(this.GlueWebChannelsPrefix, ""));
            return channelNames;
        }
        unsubscribe() {
            if (this.unsubscribeFunc) {
                this.unsubscribeFunc();
                this.unsubscribeFunc = undefined;
            }
        }
        switchToChannel(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.unsubscribe();
                this.currentChannelName = name;
                if (typeof name !== "undefined") {
                    const contextName = this.createContextName(name);
                    this.unsubscribeFunc = yield this.contexts.subscribe(contextName, (context, _, __, ___, extraData) => {
                        this.registry.execute(this.SubsKey, context.data, context, extraData === null || extraData === void 0 ? void 0 : extraData.updaterId);
                    });
                }
                this.registry.execute(this.ChangedKey, name);
            });
        }
        updateData(name, data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const contextName = this.createContextName(name);
                if (this.contexts.setPathSupported) {
                    const pathValues = Object.keys(data).map((key) => {
                        return {
                            path: `data.${key}`,
                            value: data[key]
                        };
                    });
                    yield this.contexts.setPaths(contextName, pathValues);
                }
                else {
                    yield this.contexts.update(contextName, { data });
                }
            });
        }
        subscribe(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to channels, because the provided callback is not a function!");
            }
            return this.registry.add(this.SubsKey, callback);
        }
        subscribeFor(name, callback) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                if (typeof callback !== "function") {
                    throw new Error(`Cannot subscribe to channel ${name}, because the provided callback is not a function!`);
                }
                const contextName = this.createContextName(name);
                return this.contexts.subscribe(contextName, (context, _, __, ___, extraData) => {
                    callback(context.data, context, extraData === null || extraData === void 0 ? void 0 : extraData.updaterId);
                });
            });
        }
        publish(data, name) {
            if (typeof data !== "object") {
                throw new Error("Cannot publish to channel, because the provided data is not an object!");
            }
            if (typeof name !== "undefined") {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                return this.updateData(name, data);
            }
            if (typeof this.currentChannelName === "undefined") {
                throw new Error("Cannot publish to channel, because not joined to a channel!");
            }
            return this.updateData(this.currentChannelName, data);
        }
        all() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                return channelNames;
            });
        }
        list() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                const channelContexts = yield Promise.all(channelNames.map((channelName) => this.get(channelName)));
                return channelContexts;
            });
        }
        get(name) {
            const channelNames = this.getAllChannelNames();
            channelNameDecoder(channelNames).runWithException(name);
            const contextName = this.createContextName(name);
            return this.contexts.get(contextName);
        }
        join(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                yield this.switchToChannel(name);
            });
        }
        leave() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.switchToChannel();
            });
        }
        current() {
            return this.currentChannelName;
        }
        my() {
            return this.current();
        }
        changed(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to channel changed, because the provided callback is not a function!");
            }
            return this.registry.add(this.ChangedKey, callback);
        }
        onChanged(callback) {
            return this.changed(callback);
        }
        add(info) {
            throw new Error("Method `add()` isn't implemented.");
        }
    }

    class IoC {
        constructor(coreGlue) {
            this.coreGlue = coreGlue;
            this.controllers = {
                windows: this.windowsController,
                appManager: this.appManagerController,
                layouts: this.layoutsController,
                notifications: this.notificationsController,
                intents: this.intentsController,
                channels: this.channelsController
            };
        }
        get windowsController() {
            if (!this._windowsControllerInstance) {
                this._windowsControllerInstance = new WindowsController();
            }
            return this._windowsControllerInstance;
        }
        get appManagerController() {
            if (!this._appManagerControllerInstance) {
                this._appManagerControllerInstance = new AppManagerController();
            }
            return this._appManagerControllerInstance;
        }
        get layoutsController() {
            if (!this._layoutsControllerInstance) {
                this._layoutsControllerInstance = new LayoutsController();
            }
            return this._layoutsControllerInstance;
        }
        get notificationsController() {
            if (!this._notificationsControllerInstance) {
                this._notificationsControllerInstance = new NotificationsController();
            }
            return this._notificationsControllerInstance;
        }
        get intentsController() {
            if (!this._intentsControllerInstance) {
                this._intentsControllerInstance = new IntentsController();
            }
            return this._intentsControllerInstance;
        }
        get channelsController() {
            if (!this._channelsControllerInstance) {
                this._channelsControllerInstance = new ChannelsController();
            }
            return this._channelsControllerInstance;
        }
        get bridge() {
            if (!this._bridgeInstance) {
                this._bridgeInstance = new GlueBridge(this.coreGlue);
            }
            return this._bridgeInstance;
        }
        buildWebWindow(id, name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const model = new WebWindowModel(id, name, this.bridge);
                const api = yield model.toApi();
                return { id, model, api };
            });
        }
        buildApplication(app, applicationInstances) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const application = (new ApplicationModel(app, [], this.appManagerController)).toApi();
                const instances = applicationInstances.map((instanceData) => this.buildInstance(instanceData, application));
                application.instances.push(...instances);
                return application;
            });
        }
        buildInstance(instanceData, app) {
            return (new InstanceModel(instanceData, this.bridge, app)).toApi();
        }
    }

    var version = "2.0.4";

    const createFactoryFunction = (coreFactoryFunction) => {
        return (userConfig) => __awaiter$1(void 0, void 0, void 0, function* () {
            const config = parseConfig(userConfig);
            if (window.glue42gd) {
                return enterprise(config);
            }
            checkSingleton();
            const glue = yield PromiseWrap(() => coreFactoryFunction(config, { version }), 30000, "Glue Web initialization timed out, because core didn't resolve");
            const logger = glue.logger.subLogger("web.main.controller");
            const ioc = new IoC(glue);
            yield ioc.bridge.start(ioc.controllers);
            logger.trace("the bridge has been started, initializing all controllers");
            yield Promise.all(Object.values(ioc.controllers).map((controller) => controller.start(glue, ioc)));
            logger.trace("all controllers reported started, starting all additional libraries");
            yield Promise.all(config.libraries.map((lib) => lib(glue, config)));
            logger.trace("all libraries were started, glue is ready, returning it");
            return glue;
        });
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign$1 = function() {
        __assign$1 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$1.apply(this, arguments);
    };

    function __awaiter$1$1(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    var MetricTypes = {
        STRING: 1,
        NUMBER: 2,
        TIMESTAMP: 3,
        OBJECT: 4
    };

    function getMetricTypeByValue(metric) {
        if (metric.type === MetricTypes.TIMESTAMP) {
            return "timestamp";
        }
        else if (metric.type === MetricTypes.NUMBER) {
            return "number";
        }
        else if (metric.type === MetricTypes.STRING) {
            return "string";
        }
        else if (metric.type === MetricTypes.OBJECT) {
            return "object";
        }
        return "unknown";
    }
    function getTypeByValue(value) {
        if (value.constructor === Date) {
            return "timestamp";
        }
        else if (typeof value === "number") {
            return "number";
        }
        else if (typeof value === "string") {
            return "string";
        }
        else if (typeof value === "object") {
            return "object";
        }
        else {
            return "string";
        }
    }
    function serializeMetric(metric) {
        var serializedMetrics = {};
        var type = getMetricTypeByValue(metric);
        if (type === "object") {
            var values = Object.keys(metric.value).reduce(function (memo, key) {
                var innerType = getTypeByValue(metric.value[key]);
                if (innerType === "object") {
                    var composite = defineNestedComposite(metric.value[key]);
                    memo[key] = {
                        type: "object",
                        description: "",
                        context: {},
                        composite: composite,
                    };
                }
                else {
                    memo[key] = {
                        type: innerType,
                        description: "",
                        context: {},
                    };
                }
                return memo;
            }, {});
            serializedMetrics.composite = values;
        }
        serializedMetrics.name = normalizeMetricName(metric.path.join("/") + "/" + metric.name);
        serializedMetrics.type = type;
        serializedMetrics.description = metric.description;
        serializedMetrics.context = {};
        return serializedMetrics;
    }
    function defineNestedComposite(values) {
        return Object.keys(values).reduce(function (memo, key) {
            var type = getTypeByValue(values[key]);
            if (type === "object") {
                memo[key] = {
                    type: "object",
                    description: "",
                    context: {},
                    composite: defineNestedComposite(values[key]),
                };
            }
            else {
                memo[key] = {
                    type: type,
                    description: "",
                    context: {},
                };
            }
            return memo;
        }, {});
    }
    function normalizeMetricName(name) {
        if (typeof name !== "undefined" && name.length > 0 && name[0] !== "/") {
            return "/" + name;
        }
        else {
            return name;
        }
    }
    function getMetricValueByType(metric) {
        var type = getMetricTypeByValue(metric);
        if (type === "timestamp") {
            return Date.now();
        }
        else {
            return publishNestedComposite(metric.value);
        }
    }
    function publishNestedComposite(values) {
        if (typeof values !== "object") {
            return values;
        }
        return Object.keys(values).reduce(function (memo, key) {
            var value = values[key];
            if (typeof value === "object" && value.constructor !== Date) {
                memo[key] = publishNestedComposite(value);
            }
            else if (value.constructor === Date) {
                memo[key] = new Date(value).getTime();
            }
            else if (value.constructor === Boolean) {
                memo[key] = value.toString();
            }
            else {
                memo[key] = value;
            }
            return memo;
        }, {});
    }
    function flatten(arr) {
        return arr.reduce(function (flat, toFlatten) {
            return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);
        }, []);
    }
    function getHighestState(arr) {
        return arr.sort(function (a, b) {
            if (!a.state) {
                return 1;
            }
            if (!b.state) {
                return -1;
            }
            return b.state - a.state;
        })[0];
    }
    function aggregateDescription(arr) {
        var msg = "";
        arr.forEach(function (m, idx, a) {
            var path = m.path.join(".");
            if (idx === a.length - 1) {
                msg += path + "." + m.name + ": " + m.description;
            }
            else {
                msg += path + "." + m.name + ": " + m.description + ",";
            }
        });
        if (msg.length > 100) {
            return msg.slice(0, 100) + "...";
        }
        else {
            return msg;
        }
    }
    function composeMsgForRootStateMetric(system) {
        var aggregatedState = system.root.getAggregateState();
        var merged = flatten(aggregatedState);
        var highestState = getHighestState(merged);
        var aggregateDesc = aggregateDescription(merged);
        return {
            description: aggregateDesc,
            value: highestState.state,
        };
    }

    function gw3 (connection, config) {
        var _this = this;
        if (!connection || typeof connection !== "object") {
            throw new Error("Connection is required parameter");
        }
        var joinPromise;
        var session;
        var init = function (repo) {
            var resolveReadyPromise;
            joinPromise = new Promise(function (resolve) {
                resolveReadyPromise = resolve;
            });
            session = connection.domain("metrics");
            session.onJoined(function (reconnect) {
                if (!reconnect && resolveReadyPromise) {
                    resolveReadyPromise();
                    resolveReadyPromise = undefined;
                }
                var rootStateMetric = {
                    name: "/State",
                    type: "object",
                    composite: {
                        Description: {
                            type: "string",
                            description: "",
                        },
                        Value: {
                            type: "number",
                            description: "",
                        },
                    },
                    description: "System state",
                    context: {},
                };
                var defineRootMetricsMsg = {
                    type: "define",
                    metrics: [rootStateMetric],
                };
                session.send(defineRootMetricsMsg);
                if (reconnect) {
                    replayRepo(repo);
                }
            });
            session.join({
                system: config.system,
                service: config.service,
                instance: config.instance
            });
        };
        var replayRepo = function (repo) {
            replaySystem(repo.root);
        };
        var replaySystem = function (system) {
            createSystem(system);
            system.metrics.forEach(function (m) {
                createMetric(m);
            });
            system.subSystems.forEach(function (ss) {
                replaySystem(ss);
            });
        };
        var createSystem = function (system) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metric, createMetricsMsg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (system.parent === undefined) {
                            return [2];
                        }
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        metric = {
                            name: normalizeMetricName(system.path.join("/") + "/" + system.name + "/State"),
                            type: "object",
                            composite: {
                                Description: {
                                    type: "string",
                                    description: "",
                                },
                                Value: {
                                    type: "number",
                                    description: "",
                                },
                            },
                            description: "System state",
                            context: {},
                        };
                        createMetricsMsg = {
                            type: "define",
                            metrics: [metric],
                        };
                        session.send(createMetricsMsg);
                        return [2];
                }
            });
        }); };
        var updateSystem = function (system, state) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var shadowedUpdateMetric, stateObj, rootMetric;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, joinPromise];
                    case 1:
                        _a.sent();
                        shadowedUpdateMetric = {
                            type: "publish",
                            values: [{
                                    name: normalizeMetricName(system.path.join("/") + "/" + system.name + "/State"),
                                    value: {
                                        Description: state.description,
                                        Value: state.state,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(shadowedUpdateMetric);
                        stateObj = composeMsgForRootStateMetric(system);
                        rootMetric = {
                            type: "publish",
                            peer_id: connection.peerId,
                            values: [{
                                    name: "/State",
                                    value: {
                                        Description: stateObj.description,
                                        Value: stateObj.value,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(rootMetric);
                        return [2];
                }
            });
        }); };
        var createMetric = function (metric) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metricClone, m, createMetricsMsg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        m = serializeMetric(metricClone);
                        createMetricsMsg = {
                            type: "define",
                            metrics: [m],
                        };
                        session.send(createMetricsMsg);
                        if (typeof metricClone.value !== "undefined") {
                            updateMetricCore(metricClone);
                        }
                        return [2];
                }
            });
        }); };
        var updateMetric = function (metric) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metricClone;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        updateMetricCore(metricClone);
                        return [2];
                }
            });
        }); };
        var updateMetricCore = function (metric) {
            if (canUpdate()) {
                var value = getMetricValueByType(metric);
                var publishMetricsMsg = {
                    type: "publish",
                    values: [{
                            name: normalizeMetricName(metric.path.join("/") + "/" + metric.name),
                            value: value,
                            timestamp: Date.now(),
                        }],
                };
                return session.sendFireAndForget(publishMetricsMsg);
            }
            return Promise.resolve();
        };
        var cloneMetric = function (metric) {
            var metricClone = __assign$1({}, metric);
            if (typeof metric.value === "object" && metric.value !== null) {
                metricClone.value = __assign$1({}, metric.value);
            }
            return metricClone;
        };
        var canUpdate = function () {
            var _a;
            try {
                var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });
                return func();
            }
            catch (_b) {
                return true;
            }
        };
        return {
            init: init,
            createSystem: createSystem,
            updateSystem: updateSystem,
            createMetric: createMetric,
            updateMetric: updateMetric,
        };
    }

    var Helpers = {
        validate: function (definition, parent, transport) {
            if (definition === null || typeof definition !== "object") {
                throw new Error("Missing definition");
            }
            if (parent === null || typeof parent !== "object") {
                throw new Error("Missing parent");
            }
            if (transport === null || typeof transport !== "object") {
                throw new Error("Missing transport");
            }
        },
    };

    var BaseMetric = (function () {
        function BaseMetric(definition, system, transport, value, type) {
            this.definition = definition;
            this.system = system;
            this.transport = transport;
            this.value = value;
            this.type = type;
            this.path = [];
            Helpers.validate(definition, system, transport);
            this.path = system.path.slice(0);
            this.path.push(system.name);
            this.name = definition.name;
            this.description = definition.description;
            transport.createMetric(this);
        }
        Object.defineProperty(BaseMetric.prototype, "repo", {
            get: function () {
                var _a;
                return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseMetric.prototype, "id", {
            get: function () { return this.system.path + "/" + name; },
            enumerable: true,
            configurable: true
        });
        BaseMetric.prototype.update = function (newValue) {
            this.value = newValue;
            return this.transport.updateMetric(this);
        };
        return BaseMetric;
    }());

    var NumberMetric = (function (_super) {
        __extends(NumberMetric, _super);
        function NumberMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;
        }
        NumberMetric.prototype.incrementBy = function (num) {
            this.update(this.value + num);
        };
        NumberMetric.prototype.increment = function () {
            this.incrementBy(1);
        };
        NumberMetric.prototype.decrement = function () {
            this.incrementBy(-1);
        };
        NumberMetric.prototype.decrementBy = function (num) {
            this.incrementBy(num * -1);
        };
        return NumberMetric;
    }(BaseMetric));

    var ObjectMetric = (function (_super) {
        __extends(ObjectMetric, _super);
        function ObjectMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;
        }
        ObjectMetric.prototype.update = function (newValue) {
            this.mergeValues(newValue);
            return this.transport.updateMetric(this);
        };
        ObjectMetric.prototype.mergeValues = function (values) {
            var _this = this;
            return Object.keys(this.value).forEach(function (k) {
                if (typeof values[k] !== "undefined") {
                    _this.value[k] = values[k];
                }
            });
        };
        return ObjectMetric;
    }(BaseMetric));

    var StringMetric = (function (_super) {
        __extends(StringMetric, _super);
        function StringMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;
        }
        return StringMetric;
    }(BaseMetric));

    var TimestampMetric = (function (_super) {
        __extends(TimestampMetric, _super);
        function TimestampMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;
        }
        TimestampMetric.prototype.now = function () {
            this.update(new Date());
        };
        return TimestampMetric;
    }(BaseMetric));

    function system(name, repo, protocol, parent, description) {
        if (!repo) {
            throw new Error("Repository is required");
        }
        if (!protocol) {
            throw new Error("Transport is required");
        }
        var _transport = protocol;
        var _name = name;
        var _description = description || "";
        var _repo = repo;
        var _parent = parent;
        var _path = _buildPath(parent);
        var _state = {};
        var id = _arrayToString(_path, "/") + name;
        var root = repo.root;
        var _subSystems = [];
        var _metrics = [];
        function subSystem(nameSystem, descriptionSystem) {
            if (!nameSystem || nameSystem.length === 0) {
                throw new Error("name is required");
            }
            var match = _subSystems.filter(function (s) { return s.name === nameSystem; });
            if (match.length > 0) {
                return match[0];
            }
            var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);
            _subSystems.push(_system);
            return _system;
        }
        function setState(state, stateDescription) {
            _state = { state: state, description: stateDescription };
            _transport.updateSystem(me, _state);
        }
        function stringMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });
        }
        function numberMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });
        }
        function objectMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });
        }
        function timestampMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });
        }
        function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {
            var metricDef = { name: "" };
            if (typeof metricObject === "string") {
                metricDef = { name: metricObject };
            }
            else {
                metricDef = metricObject;
            }
            var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });
            if (matching.length > 0) {
                var existing = matching[0];
                if (existing.type !== expectedType) {
                    throw new Error("A metric named " + metricDef.name + " is already defined with different type.");
                }
                if (typeof value !== "undefined") {
                    existing
                        .update(value)
                        .catch(function () { });
                }
                return existing;
            }
            var metric = createMetric(metricDef);
            _metrics.push(metric);
            return metric;
        }
        function _buildPath(shadowedSystem) {
            if (!shadowedSystem || !shadowedSystem.parent) {
                return [];
            }
            var path = _buildPath(shadowedSystem.parent);
            path.push(shadowedSystem.name);
            return path;
        }
        function _arrayToString(path, separator) {
            return ((path && path.length > 0) ? path.join(separator) : "");
        }
        function getAggregateState() {
            var aggState = [];
            if (Object.keys(_state).length > 0) {
                aggState.push({
                    name: _name,
                    path: _path,
                    state: _state.state,
                    description: _state.description,
                });
            }
            _subSystems.forEach(function (shadowedSubSystem) {
                var result = shadowedSubSystem.getAggregateState();
                if (result.length > 0) {
                    aggState.push.apply(aggState, result);
                }
            });
            return aggState;
        }
        var me = {
            get name() {
                return _name;
            },
            get description() {
                return _description;
            },
            get repo() {
                return _repo;
            },
            get parent() {
                return _parent;
            },
            path: _path,
            id: id,
            root: root,
            get subSystems() {
                return _subSystems;
            },
            get metrics() {
                return _metrics;
            },
            subSystem: subSystem,
            getState: function () {
                return _state;
            },
            setState: setState,
            stringMetric: stringMetric,
            timestampMetric: timestampMetric,
            objectMetric: objectMetric,
            numberMetric: numberMetric,
            getAggregateState: getAggregateState,
        };
        _transport.createSystem(me);
        return me;
    }

    var Repository = (function () {
        function Repository(options, protocol) {
            protocol.init(this);
            this.root = system("", this, protocol);
            this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);
        }
        Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {
            if (typeof navigator !== "undefined") {
                rootSystem.stringMetric("UserAgent", navigator.userAgent);
            }
            if (useClickStream && typeof document !== "undefined") {
                var clickStream_1 = rootSystem.subSystem("ClickStream");
                var documentClickHandler = function (e) {
                    if (!e.target) {
                        return;
                    }
                    var target = e.target;
                    clickStream_1.objectMetric("LastBrowserEvent", {
                        type: "click",
                        timestamp: new Date(),
                        target: {
                            className: e.target ? target.className : "",
                            id: target.id,
                            type: "<" + target.tagName.toLowerCase() + ">",
                            href: target.href || "",
                        },
                    });
                };
                clickStream_1.objectMetric("Page", {
                    title: document.title,
                    page: window.location.href,
                });
                if (document.addEventListener) {
                    document.addEventListener("click", documentClickHandler);
                }
                else {
                    document.attachEvent("onclick", documentClickHandler);
                }
            }
            var startTime = rootSystem.stringMetric("StartTime", (new Date()).toString());
            var urlMetric = rootSystem.stringMetric("StartURL", "");
            var appNameMetric = rootSystem.stringMetric("AppName", "");
            if (typeof window !== "undefined") {
                if (typeof window.location !== "undefined") {
                    var startUrl = window.location.href;
                    urlMetric.update(startUrl);
                }
                if (typeof window.glue42gd !== "undefined") {
                    appNameMetric.update(window.glue42gd.appName);
                }
            }
        };
        return Repository;
    }());

    var NullProtocol = (function () {
        function NullProtocol() {
        }
        NullProtocol.prototype.init = function (repo) {
        };
        NullProtocol.prototype.createSystem = function (system) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateSystem = function (metric, state) {
            return Promise.resolve();
        };
        NullProtocol.prototype.createMetric = function (metric) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateMetric = function (metric) {
            return Promise.resolve();
        };
        return NullProtocol;
    }());

    var PerfTracker = (function () {
        function PerfTracker(api, initialPublishTimeout, publishInterval) {
            this.api = api;
            this.lastCount = 0;
            this.initialPublishTimeout = 10 * 1000;
            this.publishInterval = 60 * 1000;
            this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;
            this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;
            this.scheduleCollection();
            this.system = this.api.subSystem("performance", "Performance data published by the web application");
        }
        PerfTracker.prototype.scheduleCollection = function () {
            var _this = this;
            setTimeout(function () {
                _this.collect();
                setInterval(function () {
                    _this.collect();
                }, _this.publishInterval);
            }, this.initialPublishTimeout);
        };
        PerfTracker.prototype.collect = function () {
            try {
                this.collectMemory();
                this.collectEntries();
            }
            catch (_a) {
            }
        };
        PerfTracker.prototype.collectMemory = function () {
            var memory = window.performance.memory;
            this.system.stringMetric("memory", JSON.stringify({
                totalJSHeapSize: memory.totalJSHeapSize,
                usedJSHeapSize: memory.usedJSHeapSize
            }));
        };
        PerfTracker.prototype.collectEntries = function () {
            var allEntries = window.performance.getEntries();
            if (allEntries.length <= this.lastCount) {
                return;
            }
            this.lastCount = allEntries.length;
            this.system.stringMetric("entries", JSON.stringify(allEntries));
        };
        return PerfTracker;
    }());

    var metrics = (function (options) {
        var protocol;
        if (!options.connection || typeof options.connection !== "object") {
            protocol = new NullProtocol();
        }
        else {
            protocol = gw3(options.connection, options);
        }
        var repo = new Repository(options, protocol);
        var rootSystem = repo.root;
        if (!options.disableAutoAppSystem) {
            rootSystem = rootSystem.subSystem("App");
        }
        var api = addFAVSupport(rootSystem);
        initPerf(api, options.pagePerformanceMetrics);
        return api;
    });
    var perf;
    function initPerf(api, config) {
        var _a, _b;
        if (typeof window === "undefined") {
            return;
        }
        var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;
        if (perfConfig) {
            config = perfConfig;
        }
        if (config === null || config === void 0 ? void 0 : config.enabled) {
            perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);
        }
    }
    function addFAVSupport(system) {
        var reportingSystem = system.subSystem("reporting");
        var def = {
            name: "features"
        };
        var featureMetric;
        var featureMetricFunc = function (name, action, payload) {
            if (typeof name === "undefined" || name === "") {
                throw new Error("name is mandatory");
            }
            else if (typeof action === "undefined" || action === "") {
                throw new Error("action is mandatory");
            }
            else if (typeof payload === "undefined" || payload === "") {
                throw new Error("payload is mandatory");
            }
            if (!featureMetric) {
                featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });
            }
            else {
                featureMetric.update({
                    name: name,
                    action: action,
                    payload: payload
                });
            }
        };
        system.featureMetric = featureMetricFunc;
        return system;
    }

    function createRegistry$1(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$1.default = createRegistry$1;
    var lib$1 = createRegistry$1;

    var InProcTransport = (function () {
        function InProcTransport(settings, logger) {
            var _this = this;
            this.registry = lib$1();
            this.gw = settings.facade;
            this.gw.connect(function (_client, message) {
                _this.messageHandler(message);
            }).then(function (client) {
                _this.client = client;
            });
        }
        Object.defineProperty(InProcTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InProcTransport.prototype.sendObject = function (msg) {
            if (this.client) {
                this.client.send(msg);
                return Promise.resolve(undefined);
            }
            else {
                return Promise.reject("not connected");
            }
        };
        InProcTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        InProcTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        InProcTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
        };
        InProcTransport.prototype.close = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.open = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.name = function () {
            return "in-memory";
        };
        InProcTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return InProcTransport;
    }());

    var SharedWorkerTransport = (function () {
        function SharedWorkerTransport(workerFile, logger) {
            var _this = this;
            this.logger = logger;
            this.registry = lib$1();
            this.worker = new SharedWorker(workerFile);
            this.worker.port.onmessage = function (e) {
                _this.messageHandler(e.data);
            };
        }
        Object.defineProperty(SharedWorkerTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        SharedWorkerTransport.prototype.sendObject = function (msg) {
            this.worker.port.postMessage(msg);
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        SharedWorkerTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
        };
        SharedWorkerTransport.prototype.close = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.open = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.name = function () {
            return "shared-worker";
        };
        SharedWorkerTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return SharedWorkerTransport;
    }());

    var Utils = (function () {
        function Utils() {
        }
        Utils.getGDMajorVersion = function () {
            if (typeof window === "undefined") {
                return undefined;
            }
            if (!window.glueDesktop) {
                return undefined;
            }
            if (!window.glueDesktop.version) {
                return undefined;
            }
            var ver = Number(window.glueDesktop.version.substr(0, 1));
            return isNaN(ver) ? undefined : ver;
        };
        Utils.isNode = function () {
            if (typeof Utils._isNode !== "undefined") {
                return Utils._isNode;
            }
            if (typeof window !== "undefined") {
                Utils._isNode = false;
                return false;
            }
            try {
                Utils._isNode = Object.prototype.toString.call(global.process) === "[object process]";
            }
            catch (e) {
                Utils._isNode = false;
            }
            return Utils._isNode;
        };
        return Utils;
    }());

    var PromiseWrapper = (function () {
        function PromiseWrapper() {
            var _this = this;
            this.rejected = false;
            this.resolved = false;
            this.promise = new Promise(function (resolve, reject) {
                _this.resolve = function (t) {
                    _this.resolved = true;
                    resolve(t);
                };
                _this.reject = function (err) {
                    _this.rejected = true;
                    reject(err);
                };
            });
        }
        PromiseWrapper.delay = function (time) {
            return new Promise(function (resolve) { return setTimeout(resolve, time); });
        };
        Object.defineProperty(PromiseWrapper.prototype, "ended", {
            get: function () {
                return this.rejected || this.resolved;
            },
            enumerable: true,
            configurable: true
        });
        return PromiseWrapper;
    }());

    var timers = {};
    function getAllTimers() {
        return timers;
    }
    function timer (timerName) {
        var existing = timers[timerName];
        if (existing) {
            return existing;
        }
        var marks = [];
        function now() {
            return new Date().getTime();
        }
        var startTime = now();
        mark("start", startTime);
        var endTime;
        var period;
        function stop() {
            endTime = now();
            mark("end", endTime);
            period = endTime - startTime;
            return period;
        }
        function mark(name, time) {
            var currentTime = time !== null && time !== void 0 ? time : now();
            var diff = 0;
            if (marks.length > 0) {
                diff = currentTime - marks[marks.length - 1].time;
            }
            marks.push({ name: name, time: currentTime, diff: diff });
        }
        var timerObj = {
            get startTime() {
                return startTime;
            },
            get endTime() {
                return endTime;
            },
            get period() {
                return period;
            },
            stop: stop,
            mark: mark,
            marks: marks
        };
        timers[timerName] = timerObj;
        return timerObj;
    }

    var WebSocketConstructor = Utils.isNode() ? require("ws") : window.WebSocket;
    var WS = (function () {
        function WS(settings, logger) {
            this.startupTimer = timer("connection");
            this._running = true;
            this._registry = lib$1();
            this.wsRequests = [];
            this.settings = settings;
            this.logger = logger;
            if (!this.settings.ws) {
                throw new Error("ws is missing");
            }
        }
        WS.prototype.onMessage = function (callback) {
            return this._registry.add("onMessage", callback);
        };
        WS.prototype.send = function (msg, options) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(function () {
                    var _a;
                    try {
                        (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);
                        resolve();
                    }
                    catch (e) {
                        reject(e);
                    }
                }, reject);
            });
        };
        WS.prototype.open = function () {
            var _this = this;
            this.logger.info("opening ws...");
            this._running = true;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(resolve, reject);
            });
        };
        WS.prototype.close = function () {
            this._running = false;
            if (this.ws) {
                this.ws.close();
            }
            return Promise.resolve();
        };
        WS.prototype.onConnectedChanged = function (callback) {
            return this._registry.add("onConnectedChanged", callback);
        };
        WS.prototype.name = function () {
            return "ws " + this.settings.ws;
        };
        WS.prototype.reconnect = function () {
            var _a;
            (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();
            var pw = new PromiseWrapper();
            this.waitForSocketConnection(function () {
                pw.resolve();
            });
            return pw.promise;
        };
        WS.prototype.waitForSocketConnection = function (callback, failed) {
            var _a;
            failed = failed !== null && failed !== void 0 ? failed : (function () { });
            if (!this._running) {
                failed("wait for socket on " + this.settings.ws + " failed - socket closed by user");
                return;
            }
            if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {
                callback();
                return;
            }
            this.wsRequests.push({ callback: callback, failed: failed });
            if (this.wsRequests.length > 1) {
                return;
            }
            this.openSocket();
        };
        WS.prototype.openSocket = function (retryInterval, retriesLeft) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var _a;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.startupTimer.mark("opening-socket");
                            if (retryInterval === undefined) {
                                retryInterval = this.settings.reconnectInterval;
                            }
                            if (retriesLeft !== undefined) {
                                if (retriesLeft === 0) {
                                    this.notifyForSocketState("wait for socket on " + this.settings.ws + " failed - no more retries left");
                                    return [2];
                                }
                                this.logger.debug("will retry " + retriesLeft + " more times (every " + retryInterval + " ms)");
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4, this.initiateSocket()];
                        case 2:
                            _b.sent();
                            this.startupTimer.mark("socket-initiated");
                            this.notifyForSocketState();
                            return [3, 4];
                        case 3:
                            _a = _b.sent();
                            setTimeout(function () {
                                var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;
                                _this.openSocket(retryInterval, retries);
                            }, retryInterval);
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        };
        WS.prototype.initiateSocket = function () {
            var _this = this;
            var pw = new PromiseWrapper();
            this.logger.debug("initiating ws to " + this.settings.ws + "...");
            this.ws = new WebSocketConstructor(this.settings.ws || "");
            this.ws.onerror = function (err) {
                var reason = "";
                try {
                    reason = JSON.stringify(err);
                }
                catch (error) {
                    var seen_1 = new WeakSet();
                    var replacer = function (key, value) {
                        if (typeof value === "object" && value !== null) {
                            if (seen_1.has(value)) {
                                return;
                            }
                            seen_1.add(value);
                        }
                        return value;
                    };
                    reason = JSON.stringify(err, replacer);
                }
                pw.reject("error");
                _this.notifyStatusChanged(false, reason);
            };
            this.ws.onclose = function (err) {
                _this.logger.info("ws closed " + err);
                pw.reject("closed");
                _this.notifyStatusChanged(false);
            };
            this.ws.onopen = function () {
                var _a;
                _this.startupTimer.mark("ws-opened");
                _this.logger.info("ws opened " + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));
                pw.resolve();
                _this.notifyStatusChanged(true);
            };
            this.ws.onmessage = function (message) {
                _this._registry.execute("onMessage", message.data);
            };
            return pw.promise;
        };
        WS.prototype.notifyForSocketState = function (error) {
            this.wsRequests.forEach(function (wsRequest) {
                if (error) {
                    if (wsRequest.failed) {
                        wsRequest.failed(error);
                    }
                }
                else {
                    wsRequest.callback();
                }
            });
            this.wsRequests = [];
        };
        WS.prototype.notifyStatusChanged = function (status, reason) {
            this._registry.execute("onConnectedChanged", status, reason);
        };
        return WS;
    }());

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue() {
        seed = (seed * 9301 + 49297) % 233280;
        return seed/(233280.0);
    }

    function setSeed(_seed_) {
        seed = _seed_;
    }

    var randomFromSeed = {
        nextValue: getNextValue,
        seed: setSeed
    };

    var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet;
    var previousSeed;

    var shuffled;

    function reset() {
        shuffled = false;
    }

    function setCharacters(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet !== ORIGINAL) {
                alphabet = ORIGINAL;
                reset();
            }
            return;
        }

        if (_alphabet_ === alphabet) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet = _alphabet_;
        reset();
    }

    function characters(_alphabet_) {
        setCharacters(_alphabet_);
        return alphabet;
    }

    function setSeed$1(seed) {
        randomFromSeed.seed(seed);
        if (previousSeed !== seed) {
            reset();
            previousSeed = seed;
        }
    }

    function shuffle() {
        if (!alphabet) {
            setCharacters(ORIGINAL);
        }

        var sourceArray = alphabet.split('');
        var targetArray = [];
        var r = randomFromSeed.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled() {
        if (shuffled) {
            return shuffled;
        }
        shuffled = shuffle();
        return shuffled;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup(index) {
        var alphabetShuffled = getShuffled();
        return alphabetShuffled[index];
    }

    var alphabet_1 = {
        characters: characters,
        seed: setSeed$1,
        lookup: lookup,
        shuffled: getShuffled
    };

    var crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    function randomByte() {
        if (!crypto || !crypto.getRandomValues) {
            return Math.floor(Math.random() * 256) & 0x30;
        }
        var dest = new Uint8Array(1);
        crypto.getRandomValues(dest);
        return dest[0] & 0x30;
    }

    var randomByteBrowser = randomByte;

    function encode(lookup, number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var encode_1 = encode;

    /**
     * Decode the id to get the version and worker
     * Mainly for debugging and testing.
     * @param id - the shortid-generated id.
     */
    function decode(id) {
        var characters = alphabet_1.shuffled();
        return {
            version: characters.indexOf(id.substr(0, 1)) & 0x0f,
            worker: characters.indexOf(id.substr(1, 1)) & 0x0f
        };
    }

    var decode_1 = decode;

    function isShortId(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var characters = alphabet_1.characters();
        var len = id.length;
        for(var i = 0; i < len;i++) {
            if (characters.indexOf(id[i]) === -1) {
                return false;
            }
        }
        return true;
    }

    var isValid = isShortId;

    var lib$1$1 = createCommonjsModule(function (module) {






    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1459707606518;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version = 6;

    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {

        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + encode_1(alphabet_1.lookup, version);
        str = str + encode_1(alphabet_1.lookup, clusterWorkerId);
        if (counter > 0) {
            str = str + encode_1(alphabet_1.lookup, counter);
        }
        str = str + encode_1(alphabet_1.lookup, seconds);

        return str;
    }


    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1.characters(newCharacters);
        }

        return alphabet_1.shuffled();
    }


    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.decode = decode_1;
    module.exports.isValid = isValid;
    });
    var lib_1 = lib$1$1.generate;
    var lib_2 = lib$1$1.seed;
    var lib_3 = lib$1$1.worker;
    var lib_4 = lib$1$1.characters;
    var lib_5 = lib$1$1.decode;
    var lib_6 = lib$1$1.isValid;

    var shortid = lib$1$1;

    function domainSession (domain, connection, logger, successMessages, errorMessages) {
        if (domain == null) {
            domain = "global";
        }
        successMessages = successMessages || ["success"];
        errorMessages = errorMessages || ["error"];
        var isJoined = false;
        var tryReconnecting = false;
        var _latestOptions;
        var _connectionOn = false;
        var callbacks = lib$1();
        connection.disconnected(handleConnectionDisconnected);
        connection.loggedIn(handleConnectionLoggedIn);
        connection.on("success", function (msg) { return handleSuccessMessage(msg); });
        connection.on("error", function (msg) { return handleErrorMessage(msg); });
        connection.on("result", function (msg) { return handleSuccessMessage(msg); });
        if (successMessages) {
            successMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleSuccessMessage(msg); });
            });
        }
        if (errorMessages) {
            errorMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleErrorMessage(msg); });
            });
        }
        var requestsMap = {};
        function join(options) {
            _latestOptions = options;
            return new Promise(function (resolve, reject) {
                if (isJoined) {
                    resolve();
                    return;
                }
                var joinPromise;
                if (domain === "global") {
                    joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject("not connected to gateway");
                }
                else {
                    logger.debug("joining domain " + domain);
                    var joinMsg = {
                        type: "join",
                        destination: domain,
                        domain: "global",
                        options: options,
                    };
                    joinPromise = send(joinMsg);
                }
                joinPromise
                    .then(function () {
                    handleJoined();
                    resolve();
                })
                    .catch(function (err) {
                    logger.debug("error joining " + domain + " domain: " + JSON.stringify(err));
                    reject(err);
                });
            });
        }
        function leave() {
            if (domain === "global") {
                return Promise.resolve();
            }
            logger.debug("stopping session " + domain + "...");
            var leaveMsg = {
                type: "leave",
                destination: domain,
                domain: "global",
            };
            tryReconnecting = false;
            return send(leaveMsg).then(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            });
        }
        function handleJoined() {
            logger.debug("did join " + domain);
            isJoined = true;
            var wasReconnect = tryReconnecting;
            tryReconnecting = false;
            callbacks.execute("onJoined", wasReconnect);
        }
        function handleConnectionDisconnected() {
            _connectionOn = false;
            logger.debug("connection is down");
            isJoined = false;
            tryReconnecting = true;
            callbacks.execute("onLeft", { disconnected: true });
        }
        function handleConnectionLoggedIn() {
            _connectionOn = true;
            if (tryReconnecting) {
                logger.debug("connection is now up - trying to reconnect...");
                join(_latestOptions);
            }
        }
        function onJoined(callback) {
            if (isJoined) {
                callback(false);
            }
            return callbacks.add("onJoined", callback);
        }
        function onLeft(callback) {
            if (!isJoined) {
                callback();
            }
            return callbacks.add("onLeft", callback);
        }
        function handleErrorMessage(msg) {
            if (domain !== msg.domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.error(msg);
        }
        function handleSuccessMessage(msg) {
            if (msg.domain !== domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.success(msg);
        }
        function getNextRequestId() {
            return shortid();
        }
        function send(msg, tag, options) {
            options = options || {};
            msg.request_id = msg.request_id || getNextRequestId();
            msg.domain = msg.domain || domain;
            if (!options.skipPeerId) {
                msg.peer_id = connection.peerId;
            }
            var requestId = msg.request_id;
            return new Promise(function (resolve, reject) {
                requestsMap[requestId] = {
                    success: function (successMsg) {
                        delete requestsMap[requestId];
                        successMsg._tag = tag;
                        resolve(successMsg);
                    },
                    error: function (errorMsg) {
                        logger.warn("GW error - " + JSON.stringify(errorMsg) + " for request " + JSON.stringify(msg));
                        delete requestsMap[requestId];
                        errorMsg._tag = tag;
                        reject(errorMsg);
                    },
                };
                connection
                    .send(msg, options)
                    .catch(function (err) {
                    requestsMap[requestId].error({ err: err });
                });
            });
        }
        function sendFireAndForget(msg) {
            msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();
            msg.domain = msg.domain || domain;
            msg.peer_id = connection.peerId;
            return connection.send(msg);
        }
        return {
            join: join,
            leave: leave,
            onJoined: onJoined,
            onLeft: onLeft,
            send: send,
            sendFireAndForget: sendFireAndForget,
            on: function (type, callback) {
                connection.on(type, function (msg) {
                    if (msg.domain !== domain) {
                        return;
                    }
                    try {
                        callback(msg);
                    }
                    catch (e) {
                        logger.error("Callback  failed: " + e + " \n " + e.stack + " \n msg was: " + JSON.stringify(msg), e);
                    }
                });
            },
            loggedIn: function (callback) { return connection.loggedIn(callback); },
            connected: function (callback) { return connection.connected(callback); },
            disconnected: function (callback) { return connection.disconnected(callback); },
            get peerId() {
                return connection.peerId;
            },
            get domain() {
                return domain;
            },
        };
    }

    var GW3ProtocolImpl = (function () {
        function GW3ProtocolImpl(connection, settings, logger) {
            var _this = this;
            this.connection = connection;
            this.settings = settings;
            this.logger = logger;
            this.protocolVersion = 3;
            this.datePrefix = "#T42_DATE#";
            this.datePrefixLen = this.datePrefix.length;
            this.dateMinLen = this.datePrefixLen + 1;
            this.datePrefixFirstChar = this.datePrefix[0];
            this.registry = lib$1();
            this._isLoggedIn = false;
            this.shouldTryLogin = true;
            this.initialLogin = true;
            this.initialLoginAttempts = 3;
            this.sessions = [];
            connection.disconnected(function () {
                _this.handleDisconnected();
            });
            this.ping();
        }
        Object.defineProperty(GW3ProtocolImpl.prototype, "isLoggedIn", {
            get: function () {
                return this._isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        GW3ProtocolImpl.prototype.processStringMessage = function (message) {
            var _this = this;
            var msg = JSON.parse(message, function (key, value) {
                if (typeof value !== "string") {
                    return value;
                }
                if (value.length < _this.dateMinLen) {
                    return value;
                }
                if (value[0] !== _this.datePrefixFirstChar) {
                    return value;
                }
                if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {
                    return value;
                }
                try {
                    var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);
                    if (isNaN(milliseconds)) {
                        return value;
                    }
                    return new Date(milliseconds);
                }
                catch (ex) {
                    return value;
                }
            });
            return {
                msg: msg,
                msgType: msg.type,
            };
        };
        GW3ProtocolImpl.prototype.createStringMessage = function (message) {
            var oldToJson = Date.prototype.toJSON;
            try {
                var datePrefix_1 = this.datePrefix;
                Date.prototype.toJSON = function () {
                    return datePrefix_1 + this.getTime();
                };
                var result = JSON.stringify(message);
                return result;
            }
            finally {
                Date.prototype.toJSON = oldToJson;
            }
        };
        GW3ProtocolImpl.prototype.processObjectMessage = function (message) {
            if (!message.type) {
                throw new Error("Object should have type property");
            }
            return {
                msg: message,
                msgType: message.type,
            };
        };
        GW3ProtocolImpl.prototype.createObjectMessage = function (message) {
            return message;
        };
        GW3ProtocolImpl.prototype.login = function (config, reconnect) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.logger.debug("logging in...");
                            this.loginConfig = config;
                            if (!this.loginConfig) {
                                this.loginConfig = { username: "", password: "" };
                            }
                            this.shouldTryLogin = true;
                            authentication = {};
                            this.connection.gatewayToken = config.gatewayToken;
                            if (!config.gatewayToken) return [3, 5];
                            if (!reconnect) return [3, 4];
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 3, , 4]);
                            return [4, this.getNewGWToken()];
                        case 2:
                            token = _c.sent();
                            config.gatewayToken = token;
                            return [3, 4];
                        case 3:
                            e_1 = _c.sent();
                            this.logger.warn("failed to get GW token when reconnecting " + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));
                            return [3, 4];
                        case 4:
                            authentication.method = "gateway-token";
                            authentication.token = config.gatewayToken;
                            this.connection.gatewayToken = config.gatewayToken;
                            return [3, 10];
                        case 5:
                            if (!(config.flowName === "sspi")) return [3, 9];
                            authentication.provider = "win";
                            authentication.method = "access-token";
                            if (!(config.flowCallback && config.sessionId)) return [3, 7];
                            _a = authentication;
                            return [4, config.flowCallback(config.sessionId, null)];
                        case 6:
                            _a.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            return [3, 8];
                        case 7: throw new Error("Invalid SSPI config");
                        case 8: return [3, 10];
                        case 9:
                            if (config.token) {
                                authentication.method = "access-token";
                                authentication.token = config.token;
                            }
                            else if (config.username) {
                                authentication.method = "secret";
                                authentication.login = config.username;
                                authentication.secret = config.password;
                            }
                            else {
                                throw new Error("invalid auth message" + JSON.stringify(config));
                            }
                            _c.label = 10;
                        case 10:
                            helloMsg = {
                                type: "hello",
                                identity: this.settings.identity,
                                authentication: authentication
                            };
                            if (config.sessionId) {
                                helloMsg.request_id = config.sessionId;
                            }
                            this.globalDomain = domainSession("global", this.connection, this.logger.subLogger("global-domain"), [
                                "welcome",
                                "token",
                                "authentication-request"
                            ]);
                            sendOptions = { skipPeerId: true };
                            if (this.initialLogin) {
                                sendOptions.retryInterval = this.settings.reconnectInterval;
                                sendOptions.maxRetries = this.settings.reconnectAttempts;
                            }
                            _c.label = 11;
                        case 11:
                            _c.trys.push([11, 19, 20, 21]);
                            welcomeMsg = void 0;
                            _c.label = 12;
                        case 12:
                            return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];
                        case 13:
                            msg = _c.sent();
                            if (!(msg.type === "authentication-request")) return [3, 16];
                            token = Buffer.from(msg.authentication.token, "base64");
                            if (!(config.flowCallback && config.sessionId)) return [3, 15];
                            _b = helloMsg.authentication;
                            return [4, config.flowCallback(config.sessionId, token)];
                        case 14:
                            _b.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            _c.label = 15;
                        case 15:
                            helloMsg.request_id = config.sessionId;
                            return [3, 12];
                        case 16:
                            if (msg.type === "welcome") {
                                welcomeMsg = msg;
                                return [3, 18];
                            }
                            else if (msg.type === "error") {
                                throw new Error("Authentication failed: " + msg.reason);
                            }
                            else {
                                throw new Error("Unexpected message type during authentication: " + msg.type);
                            }
                        case 17: return [3, 12];
                        case 18:
                            this.initialLogin = false;
                            this.logger.debug("login successful with peerId " + welcomeMsg.peer_id);
                            this.connection.peerId = welcomeMsg.peer_id;
                            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;
                            this.connection.availableDomains = welcomeMsg.available_domains;
                            if (welcomeMsg.options) {
                                this.connection.token = welcomeMsg.options.access_token;
                                this.connection.info = welcomeMsg.options.info;
                            }
                            this.setLoggedIn(true);
                            return [2, welcomeMsg.resolved_identity];
                        case 19:
                            err_1 = _c.sent();
                            this.logger.error("error sending hello message - " + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);
                            throw err_1;
                        case 20:
                            if (config && config.flowCallback && config.sessionId) {
                                config.flowCallback(config.sessionId, null);
                            }
                            return [7];
                        case 21: return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.logout = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var promises;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("logging out...");
                            this.shouldTryLogin = false;
                            if (this.pingTimer) {
                                clearTimeout(this.pingTimer);
                            }
                            promises = this.sessions.map(function (session) {
                                session.leave();
                            });
                            return [4, Promise.all(promises)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.loggedIn = function (callback) {
            if (this._isLoggedIn) {
                callback();
            }
            return this.registry.add("onLoggedIn", callback);
        };
        GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {
            var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];
            if (!session) {
                session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);
                this.sessions.push(session);
            }
            return session;
        };
        GW3ProtocolImpl.prototype.handleDisconnected = function () {
            var _this = this;
            this.setLoggedIn(false);
            var tryToLogin = this.shouldTryLogin;
            if (tryToLogin && this.initialLogin) {
                if (this.initialLoginAttempts <= 0) {
                    return;
                }
                this.initialLoginAttempts--;
            }
            this.logger.debug("disconnected - will try new login?" + this.shouldTryLogin);
            if (this.shouldTryLogin) {
                if (!this.loginConfig) {
                    throw new Error("no login info");
                }
                this.connection.login(this.loginConfig, true)
                    .catch(function () {
                    setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);
                });
            }
        };
        GW3ProtocolImpl.prototype.setLoggedIn = function (value) {
            this._isLoggedIn = value;
            if (this._isLoggedIn) {
                this.registry.execute("onLoggedIn");
            }
        };
        GW3ProtocolImpl.prototype.ping = function () {
            var _this = this;
            if (!this.shouldTryLogin) {
                return;
            }
            if (this._isLoggedIn) {
                this.connection.send({ type: "ping" });
            }
            this.pingTimer = setTimeout(function () {
                _this.ping();
            }, 30 * 1000);
        };
        GW3ProtocolImpl.prototype.authToken = function () {
            var createTokenReq = {
                type: "create-token"
            };
            if (!this.globalDomain) {
                return Promise.reject(new Error("no global domain session"));
            }
            return this.globalDomain.send(createTokenReq)
                .then(function (res) {
                return res.token;
            });
        };
        GW3ProtocolImpl.prototype.getNewGWToken = function () {
            if (typeof window !== undefined) {
                var glue42gd = window.glue42gd;
                if (glue42gd) {
                    return glue42gd.getGWToken();
                }
            }
            return Promise.reject(new Error("not running in GD"));
        };
        return GW3ProtocolImpl;
    }());

    var MessageReplayerImpl = (function () {
        function MessageReplayerImpl(specs) {
            this.specsNames = [];
            this.messages = {};
            this.subs = {};
            this.subsRefCount = {};
            this.specs = {};
            for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
                var spec = specs_1[_i];
                this.specs[spec.name] = spec;
                this.specsNames.push(spec.name);
            }
        }
        MessageReplayerImpl.prototype.init = function (connection) {
            var _this = this;
            this.connection = connection;
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var _loop_1 = function (type) {
                    var refCount = this_1.subsRefCount[type];
                    if (!refCount) {
                        refCount = 0;
                    }
                    refCount += 1;
                    this_1.subsRefCount[type] = refCount;
                    if (refCount > 1) {
                        return "continue";
                    }
                    var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });
                    this_1.subs[type] = sub;
                };
                var this_1 = this;
                for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {
                    var type = _c[_b];
                    _loop_1(type);
                }
            }
        };
        MessageReplayerImpl.prototype.processMessage = function (type, msg) {
            if (this.isDone || !msg) {
                return;
            }
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_2 = _a[_i];
                if (this.specs[name_2].types.indexOf(type) !== -1) {
                    var messages = this.messages[name_2] || [];
                    this.messages[name_2] = messages;
                    messages.push(msg);
                }
            }
        };
        MessageReplayerImpl.prototype.drain = function (name, callback) {
            var _a;
            if (callback) {
                (this.messages[name] || []).forEach(callback);
            }
            delete this.messages[name];
            for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {
                var type = _b[_i];
                this.subsRefCount[type] -= 1;
                if (this.subsRefCount[type] <= 0) {
                    (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);
                    delete this.subs[type];
                    delete this.subsRefCount[type];
                }
            }
            delete this.specs[name];
            if (!this.specs.length) {
                this.isDone = true;
            }
        };
        return MessageReplayerImpl;
    }());

    var PromisePlus$1 = function (executor, timeoutMilliseconds, timeoutMessage) {
        return new Promise(function (resolve, reject) {
            var timeout = setTimeout(function () {
                var message = timeoutMessage || "Promise timeout hit: " + timeoutMilliseconds;
                reject(message);
            }, timeoutMilliseconds);
            var providedPromise = new Promise(executor);
            providedPromise
                .then(function (result) {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch(function (error) {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var WebPlatformTransport = (function () {
        function WebPlatformTransport(settings, logger, identity) {
            this.settings = settings;
            this.logger = logger;
            this.identity = identity;
            this.parentReady = false;
            this.iAmConnected = false;
            this.rejected = false;
            this.children = [];
            this.parentPingTimeout = 3000;
            this.connectionRequestTimeout = 5000;
            this.defaultTargetString = "*";
            this.registry = lib$1();
            this.messages = {
                connectionAccepted: { name: "connectionAccepted", handle: this.handleConnectionAccepted.bind(this) },
                connectionRejected: { name: "connectionRejected", handle: this.handleConnectionRejected.bind(this) },
                connectionRequest: { name: "connectionRequest", handle: this.handleConnectionRequest.bind(this) },
                parentReady: { name: "parentReady", handle: this.handleParentReady.bind(this) },
                parentPing: { name: "parentPing", handle: this.handleParentPing.bind(this) },
                platformPing: { name: "platformPing", handle: this.handlePlatformPing.bind(this) },
                platformUnload: { name: "platformUnload", handle: this.handlePlatformUnload.bind(this) },
                platformReady: { name: "platformReady", handle: this.handlePlatformReady.bind(this) },
                clientUnload: { name: "clientUnload", handle: this.handleClientUnload.bind(this) }
            };
            this.setUpMessageListener();
            this.setUpUnload();
            if (!this.settings.port) {
                this.parent = window.opener || window.parent;
                this.parentType = window.opener ? "opener" :
                    window.name.indexOf("#wsp") !== -1 ? "workspace" : "top";
            }
        }
        Object.defineProperty(WebPlatformTransport.prototype, "transportWindowId", {
            get: function () {
                return this.publicWindowId;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.sendObject = function (msg) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    if (!this.port) {
                        throw new Error("Cannot send message, because the port was not opened yet");
                    }
                    this.port.postMessage(msg);
                    return [2];
                });
            });
        };
        Object.defineProperty(WebPlatformTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        WebPlatformTransport.prototype.send = function () {
            return Promise.reject("not supported");
        };
        WebPlatformTransport.prototype.onConnectedChanged = function (callback) {
            return this.registry.add("onConnectedChanged", callback);
        };
        WebPlatformTransport.prototype.open = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("opening a connection to the web platform gateway.");
                            return [4, this.connect()];
                        case 1:
                            _a.sent();
                            this.notifyStatusChanged(true);
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.close = function () {
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.name = function () {
            return "web-platform";
        };
        WebPlatformTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.connect = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (this.parentReady) {
                                this.logger.debug("cancelling connection attempt, because this client's parent has already given a ready signal");
                                return [2];
                            }
                            if (this.settings.port) {
                                this.logger.debug("opening an internal web platform connection");
                                this.port = this.settings.port;
                                this.publicWindowId = this.settings.windowId;
                                if (this.identity) {
                                    this.identity.windowId = this.publicWindowId;
                                }
                                this.port.onmessage = function (event) { return _this.registry.execute("onMessage", event.data); };
                                this.logger.debug("internal web platform connection completed");
                                return [2];
                            }
                            if (!this.parentType || !this.parent) {
                                throw new Error("Cannot initiate a connection, because there is no opener, no top and no port.");
                            }
                            this.logger.debug("opening a " + (this.parentType === "opener" ? "child" : "grandchild") + " client web platform connection");
                            return [4, this.waitParent(this.parent, this.parentType)];
                        case 1:
                            _a.sent();
                            return [4, this.initiateRemoteConnection(this.parent, this.parentType)];
                        case 2:
                            _a.sent();
                            this.logger.debug("the " + (this.parentType === "opener" ? "child" : "grandchild") + " client is connected");
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {
            var _this = this;
            return PromisePlus$1(function (resolve, reject) {
                _this.connectionResolve = resolve;
                _this.connectionReject = reject;
                _this.myClientId = shortid();
                var bridgeInstanceId = _this.parentType === "workspace" ? window.name.substring(0, window.name.indexOf("#wsp")) : window.name;
                var request = {
                    glue42core: {
                        type: _this.messages.connectionRequest.name,
                        clientId: _this.myClientId,
                        clientType: parentType === "top" || parentType === "workspace" ? "grandChild" : "child",
                        bridgeInstanceId: bridgeInstanceId
                    }
                };
                _this.logger.debug("sending connection request to " + parentType);
                target.postMessage(request, _this.defaultTargetString);
            }, this.connectionRequestTimeout, "The connection to the opener/top window timed out");
        };
        WebPlatformTransport.prototype.waitParent = function (target, parentType) {
            var _this = this;
            return PromisePlus$1(function (resolve) {
                _this.parentPingResolve = resolve;
                var message = {
                    glue42core: {
                        type: parentType === "opener" ? _this.messages.platformPing.name : _this.messages.parentPing.name
                    }
                };
                _this.logger.debug("checking for " + parentType + " window availability");
                target.postMessage(message, _this.defaultTargetString);
            }, this.parentPingTimeout, "Cannot initiate glue, because this window was not opened or created by a glue client");
        };
        WebPlatformTransport.prototype.setUpMessageListener = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping generic message listener, because this is an internal client");
                return;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || _this.rejected) {
                    return;
                }
                if (!_this.checkMessageTypeValid(data.type)) {
                    _this.logger.error("cannot handle the incoming glue42 core message, because the type is invalid: " + data.type);
                    return;
                }
                var messageType = data.type;
                _this.logger.debug("received valid glue42core message of type: " + messageType);
                _this.messages[messageType].handle(event);
            });
        };
        WebPlatformTransport.prototype.setUpUnload = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping unload event listener, because this is an internal client");
                return;
            }
            window.addEventListener("beforeunload", function () {
                var _a, _b;
                var message = {
                    glue42core: {
                        type: _this.messages.clientUnload.name,
                        data: {
                            clientId: _this.myClientId,
                            ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                        }
                    }
                };
                if (_this.parent) {
                    _this.parent.postMessage(message, _this.defaultTargetString);
                }
                (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            });
        };
        WebPlatformTransport.prototype.handleParentReady = function () {
            this.logger.debug("handling the ready signal from the parent, by resoling the pending promise.");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
                return;
            }
            this.logger.debug("silently handling the ready signal from the top parent, because there is no defined promise");
        };
        WebPlatformTransport.prototype.handlePlatformReady = function () {
            this.logger.debug("the web platform gave the ready signal");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
                return;
            }
            this.logger.debug("silently handling the ready signal from the top parent, because there is no defined promise");
        };
        WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (this.myClientId === data.clientId) {
                return this.handleAcceptanceOfMyRequest(data);
            }
            return this.handleAcceptanceOfGrandChildRequest(data, event);
        };
        WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {
            var _this = this;
            this.logger.debug("handling a connection accepted signal targeted at me.");
            if (!data.port) {
                this.logger.error("cannot set up my connection, because I was not provided with a port");
                return;
            }
            this.publicWindowId = this.parentType === "opener" ? window.name :
                this.parentType === "top" ? data.parentWindowId :
                    window.name.substring(0, window.name.indexOf("#wsp"));
            if (this.identity && this.parentType !== "top") {
                this.identity.windowId = this.publicWindowId;
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            this.port = data.port;
            this.port.onmessage = function (e) { return _this.registry.execute("onMessage", e.data); };
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
            this.logger.error("unable to call the connection resolve, because no connection promise was found");
        };
        WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {
            this.logger.debug("handling a connection accepted signal targeted at a grandchild: " + data.clientId);
            var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });
            if (!child) {
                this.logger.error("cannot handle connection accepted for grandchild: " + data.clientId + ", because there is no grandchild with this id");
                return;
            }
            child.connected = true;
            this.logger.debug("the grandchild connection for " + data.clientId + " is set up, forwarding the success message and the gateway port");
            data.parentWindowId = this.publicWindowId;
            child.source.postMessage(event.data, child.origin, [data.port]);
            return;
        };
        WebPlatformTransport.prototype.handleConnectionRejected = function () {
            this.logger.debug("handling a connection rejection. Most likely the reason is that this window was not created by a glue API call");
            if (this.connectionReject) {
                this.connectionReject("The platform connection was rejected. Most likely because this window was not created by a glue API call");
                delete this.connectionReject;
            }
        };
        WebPlatformTransport.prototype.handleConnectionRequest = function (event) {
            var source = event.source;
            var data = event.data.glue42core;
            if (!data.clientType || data.clientType !== "grandChild") {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source was not opened by a glue API call");
            }
            if (!data.clientId) {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source did not provide a valid id");
            }
            if (this.parentType !== "opener" || !this.parent) {
                return this.rejectConnectionRequest(source, event.origin, "Cannot forward the connection request, because no direct connection to the platform was found");
            }
            this.logger.debug("handling a connection request for a grandchild: " + data.clientId);
            this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });
            this.logger.debug("grandchild: " + data.clientId + " is prepared, forwarding connection request to the platform");
            this.parent.postMessage(event.data, this.defaultTargetString);
        };
        WebPlatformTransport.prototype.handleParentPing = function (event) {
            if (!this.parentReady) {
                this.logger.debug("my parent is not ready, I am ignoring the parent ping");
                return;
            }
            if (!this.iAmConnected) {
                this.logger.debug("i am not fully connected yet, I am ignoring the parent ping");
                return;
            }
            var message = {
                glue42core: {
                    type: this.messages.parentReady.name
                }
            };
            var source = event.source;
            this.logger.debug("responding to a parent ping with a ready message");
            source.postMessage(message, event.origin);
        };
        WebPlatformTransport.prototype.handlePlatformUnload = function (event) {
            this.logger.debug("detected a web platform unload");
            this.parentReady = false;
            if (this.children.length) {
                this.logger.debug("forwarding the platform unload to all known children and starting platform discovery polling");
                this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });
            }
            this.notifyStatusChanged(false, "Gateway unloaded");
        };
        WebPlatformTransport.prototype.handleClientUnload = function (event) {
            var data = event.data.glue42core;
            if (!data.clientId) {
                this.logger.warn("cannot process grand child unload, because the provided id was not valid");
                return;
            }
            var foundChild = this.children.find(function (child) { return child.grandChildId === data.clientId; });
            if (!foundChild) {
                this.logger.warn("cannot process grand child unload, because this client is unaware of this grandchild");
                return;
            }
            this.logger.debug("handling grandchild unload for id: " + data.clientId);
            this.children = this.children.filter(function (child) { return child.grandChildId !== data.clientId; });
        };
        WebPlatformTransport.prototype.handlePlatformPing = function () {
            this.logger.error("cannot handle platform ping, because this is not a platform calls handling component");
        };
        WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {
            this.iAmConnected = status;
            this.registry.execute("onConnectedChanged", status, reason);
        };
        WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {
            return typeof typeToValidate === "string" && !!this.messages[typeToValidate];
        };
        WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {
            this.rejected = true;
            this.logger.error(reason);
            var rejection = {
                glue42core: {
                    type: this.messages.connectionRejected.name
                }
            };
            source.postMessage(rejection, origin);
        };
        return WebPlatformTransport;
    }());

    var Connection = (function () {
        function Connection(settings, logger) {
            this.settings = settings;
            this.logger = logger;
            this.messageHandlers = {};
            this.ids = 1;
            this.registry = lib$1();
            this._connected = false;
            this.isTrace = false;
            settings = settings || {};
            settings.reconnectAttempts = settings.reconnectAttempts || 10;
            settings.reconnectInterval = settings.reconnectInterval || 1000;
            if (settings.inproc) {
                this.transport = new InProcTransport(settings.inproc, logger.subLogger("inMemory"));
            }
            else if (settings.sharedWorker) {
                this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger("shared-worker"));
            }
            else if (settings.webPlatform) {
                this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger("web-platform"), settings.identity);
            }
            else if (settings.ws !== undefined) {
                this.transport = new WS(settings, logger.subLogger("ws"));
            }
            else {
                throw new Error("No connection information specified");
            }
            this.isTrace = logger.canPublish("trace");
            logger.debug("starting with " + this.transport.name() + " transport");
            this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger("protocol"));
            this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            this.transport.onMessage(this.handleTransportMessage.bind(this));
            if (settings.replaySpecs && settings.replaySpecs.length) {
                this.replayer = new MessageReplayerImpl(settings.replaySpecs);
                this.replayer.init(this);
            }
        }
        Object.defineProperty(Connection.prototype, "protocolVersion", {
            get: function () {
                var _a;
                return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.send = function (message, options) {
            if (this.transport.sendObject &&
                this.transport.isObjectBasedTransport) {
                var msg = this.protocol.createObjectMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + JSON.stringify(msg));
                }
                return this.transport.sendObject(msg, options);
            }
            else {
                var strMessage = this.protocol.createStringMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + strMessage);
                }
                return this.transport.send(strMessage, options);
            }
        };
        Connection.prototype.on = function (type, messageHandler) {
            type = type.toLowerCase();
            if (this.messageHandlers[type] === undefined) {
                this.messageHandlers[type] = {};
            }
            var id = this.ids++;
            this.messageHandlers[type][id] = messageHandler;
            return {
                type: type,
                id: id,
            };
        };
        Connection.prototype.off = function (info) {
            delete this.messageHandlers[info.type.toLowerCase()][info.id];
        };
        Object.defineProperty(Connection.prototype, "isConnected", {
            get: function () {
                return this.protocol.isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.connected = function (callback) {
            var _this = this;
            return this.protocol.loggedIn(function () {
                callback(_this.settings.ws || _this.settings.sharedWorker || "");
            });
        };
        Connection.prototype.disconnected = function (callback) {
            return this.registry.add("disconnected", callback);
        };
        Connection.prototype.login = function (authRequest, reconnect) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var identity;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.transport.open()];
                        case 1:
                            _a.sent();
                            timer("connection").mark("transport-opened");
                            identity = this.protocol.login(authRequest, reconnect);
                            timer("connection").mark("protocol-logged-in");
                            return [2, identity];
                    }
                });
            });
        };
        Connection.prototype.logout = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.protocol.logout()];
                        case 1:
                            _a.sent();
                            return [4, this.transport.close()];
                        case 2:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Connection.prototype.loggedIn = function (callback) {
            return this.protocol.loggedIn(callback);
        };
        Connection.prototype.domain = function (domain, successMessages, errorMessages) {
            return this.protocol.domain(domain, this.logger.subLogger("domain=" + domain), successMessages, errorMessages);
        };
        Connection.prototype.authToken = function () {
            return this.protocol.authToken();
        };
        Connection.prototype.reconnect = function () {
            return this.transport.reconnect();
        };
        Connection.prototype.distributeMessage = function (message, type) {
            var _this = this;
            var handlers = this.messageHandlers[type.toLowerCase()];
            if (handlers !== undefined) {
                Object.keys(handlers).forEach(function (handlerId) {
                    var handler = handlers[handlerId];
                    if (handler !== undefined) {
                        try {
                            handler(message);
                        }
                        catch (error) {
                            try {
                                _this.logger.error("Message handler failed with " + error.stack, error);
                            }
                            catch (loggerError) {
                                console.log("Message handler failed", error);
                            }
                        }
                    }
                });
            }
        };
        Connection.prototype.handleConnectionChanged = function (connected) {
            if (this._connected === connected) {
                return;
            }
            this._connected = connected;
            if (connected) {
                this.registry.execute("connected");
            }
            else {
                this.registry.execute("disconnected");
            }
        };
        Connection.prototype.handleTransportMessage = function (msg) {
            var msgObj;
            if (typeof msg === "string") {
                msgObj = this.protocol.processStringMessage(msg);
            }
            else {
                msgObj = this.protocol.processObjectMessage(msg);
            }
            if (this.isTrace) {
                this.logger.trace("<< " + JSON.stringify(msgObj));
            }
            this.distributeMessage(msgObj.msg, msgObj.msgType);
        };
        return Connection;
    }());

    var order = ["trace", "debug", "info", "warn", "error", "off"];
    var Logger = (function () {
        function Logger(name, parent, logFn) {
            this.name = name;
            this.parent = parent;
            this.subLoggers = [];
            this.logFn = console;
            this.customLogFn = false;
            this.name = name;
            if (parent) {
                this.path = parent.path + "." + name;
            }
            else {
                this.path = name;
            }
            this.loggerFullName = "[" + this.path + "]";
            this.includeTimeAndLevel = !logFn;
            if (logFn) {
                this.logFn = logFn;
                this.customLogFn = true;
            }
        }
        Logger.prototype.subLogger = function (name) {
            var existingSub = this.subLoggers.filter(function (subLogger) {
                return subLogger.name === name;
            })[0];
            if (existingSub !== undefined) {
                return existingSub;
            }
            Object.keys(this).forEach(function (key) {
                if (key === name) {
                    throw new Error("This sub logger name is not allowed.");
                }
            });
            var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);
            this.subLoggers.push(sub);
            return sub;
        };
        Logger.prototype.publishLevel = function (level) {
            var _a;
            if (level) {
                this._publishLevel = level;
            }
            return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());
        };
        Logger.prototype.consoleLevel = function (level) {
            var _a;
            if (level) {
                this._consoleLevel = level;
            }
            return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());
        };
        Logger.prototype.log = function (message, level, error) {
            this.publishMessage(level || "info", message, error);
        };
        Logger.prototype.trace = function (message) {
            this.log(message, "trace");
        };
        Logger.prototype.debug = function (message) {
            this.log(message, "debug");
        };
        Logger.prototype.info = function (message) {
            this.log(message, "info");
        };
        Logger.prototype.warn = function (message) {
            this.log(message, "warn");
        };
        Logger.prototype.error = function (message, err) {
            this.log(message, "error");
        };
        Logger.prototype.canPublish = function (level, compareWith) {
            var levelIdx = order.indexOf(level);
            var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || "trace");
            return levelIdx >= restrictionIdx;
        };
        Logger.prototype.publishMessage = function (level, message, error) {
            var loggerName = this.loggerFullName;
            if (level === "error" && !error) {
                var e = new Error();
                if (e.stack) {
                    message =
                        message +
                            "\n" +
                            e.stack
                                .split("\n")
                                .slice(3)
                                .join("\n");
                }
            }
            if (this.canPublish(level, this.publishLevel())) {
                var interop = Logger.Interop;
                if (interop) {
                    try {
                        if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {
                            interop.invoke(Logger.InteropMethodName, {
                                msg: "" + message,
                                logger: loggerName,
                                level: level
                            });
                        }
                    }
                    catch (_a) {
                    }
                }
            }
            if (this.canPublish(level)) {
                var prefix = "";
                if (this.includeTimeAndLevel) {
                    var date = new Date();
                    var time = date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
                    prefix = "[" + time + "] [" + level + "] ";
                }
                var toPrint = "" + prefix + loggerName + ": " + message;
                switch (level) {
                    case "trace":
                        this.logFn.debug(toPrint);
                        break;
                    case "debug":
                        if (this.logFn.debug) {
                            this.logFn.debug(toPrint);
                        }
                        else {
                            this.logFn.log(toPrint);
                        }
                        break;
                    case "info":
                        this.logFn.info(toPrint);
                        break;
                    case "warn":
                        this.logFn.warn(toPrint);
                        break;
                    case "error":
                        this.logFn.error(toPrint, error);
                        break;
                }
            }
        };
        Logger.InteropMethodName = "T42.AppLogger.Log";
        return Logger;
    }());

    var GW_MESSAGE_CREATE_CONTEXT = "create-context";
    var GW_MESSAGE_ACTIVITY_CREATED = "created";
    var GW_MESSAGE_ACTIVITY_DESTROYED = "destroyed";
    var GW_MESSAGE_CONTEXT_CREATED = "context-created";
    var GW_MESSAGE_CONTEXT_ADDED = "context-added";
    var GW_MESSAGE_SUBSCRIBE_CONTEXT = "subscribe-context";
    var GW_MESSAGE_SUBSCRIBED_CONTEXT = "subscribed-context";
    var GW_MESSAGE_UNSUBSCRIBE_CONTEXT = "unsubscribe-context";
    var GW_MESSAGE_DESTROY_CONTEXT = "destroy-context";
    var GW_MESSAGE_CONTEXT_DESTROYED = "context-destroyed";
    var GW_MESSAGE_UPDATE_CONTEXT = "update-context";
    var GW_MESSAGE_CONTEXT_UPDATED = "context-updated";
    var GW_MESSAGE_JOINED_ACTIVITY = "joined";

    var ContextMessageReplaySpec = {
        get name() {
            return "context";
        },
        get types() {
            return [
                GW_MESSAGE_CREATE_CONTEXT,
                GW_MESSAGE_ACTIVITY_CREATED,
                GW_MESSAGE_ACTIVITY_DESTROYED,
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_CONTEXT_ADDED,
                GW_MESSAGE_SUBSCRIBE_CONTEXT,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_UNSUBSCRIBE_CONTEXT,
                GW_MESSAGE_DESTROY_CONTEXT,
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_UPDATE_CONTEXT,
                GW_MESSAGE_CONTEXT_UPDATED,
                GW_MESSAGE_JOINED_ACTIVITY
            ];
        }
    };

    var version$1 = "5.4.0";

    function prepareConfig (configuration, ext, glue42gd) {
        var _a, _b, _c, _d, _e;
        var nodeStartingContext;
        if (Utils.isNode()) {
            var startingContextString = process.env._GD_STARTING_CONTEXT_;
            if (startingContextString) {
                try {
                    nodeStartingContext = JSON.parse(startingContextString);
                }
                catch (_f) {
                }
            }
        }
        function getConnection() {
            var _a, _b, _c, _d, _e;
            var gwConfig = configuration.gateway;
            var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;
            var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;
            var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;
            var defaultWs = "ws://localhost:8385";
            var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;
            var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;
            var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;
            var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;
            if (glue42gd) {
                ws = glue42gd.gwURL;
            }
            if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {
                ws = nodeStartingContext.gwURL;
            }
            if (!ws && !sharedWorker && !inproc) {
                ws = defaultWs;
            }
            var instanceId;
            var windowId;
            var pid;
            var environment;
            var region;
            var appName = getApplication();
            var uniqueAppName = appName;
            if (typeof glue42gd !== "undefined") {
                windowId = glue42gd.windowId;
                pid = glue42gd.pid;
                if (glue42gd.env) {
                    environment = glue42gd.env.env;
                    region = glue42gd.env.region;
                }
                uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : "glue-app";
                instanceId = glue42gd.appInstanceId;
            }
            else if (Utils.isNode()) {
                pid = process.pid;
                if (nodeStartingContext) {
                    environment = nodeStartingContext.env;
                    region = nodeStartingContext.region;
                    instanceId = nodeStartingContext.instanceId;
                }
            }
            var replaySpecs = (_e = (_d = configuration.gateway) === null || _d === void 0 ? void 0 : _d.replaySpecs) !== null && _e !== void 0 ? _e : [];
            replaySpecs.push(ContextMessageReplaySpec);
            return {
                identity: {
                    application: uniqueAppName,
                    applicationName: appName,
                    windowId: windowId,
                    instance: instanceId,
                    process: pid,
                    region: region,
                    environment: environment,
                    api: ext.version || version$1
                },
                reconnectInterval: reconnectInterval,
                ws: ws,
                sharedWorker: sharedWorker,
                webPlatform: webPlatform,
                inproc: inproc,
                protocolVersion: protocolVersion,
                reconnectAttempts: reconnectAttempts,
                replaySpecs: replaySpecs,
            };
        }
        function getApplication() {
            if (configuration.application) {
                return configuration.application;
            }
            if (glue42gd) {
                return glue42gd.applicationName;
            }
            var uid = shortid();
            if (Utils.isNode()) {
                if (nodeStartingContext) {
                    return nodeStartingContext.applicationConfig.name;
                }
                return "NodeJS" + uid;
            }
            if (typeof window !== "undefined" && typeof document !== "undefined") {
                return document.title + (" (" + uid + ")");
            }
            return uid;
        }
        function getAuth() {
            var _a, _b, _c;
            if (typeof configuration.auth === "string") {
                return {
                    token: configuration.auth
                };
            }
            if (configuration.auth) {
                return configuration.auth;
            }
            if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {
                return {
                    gatewayToken: nodeStartingContext.gwToken
                };
            }
            if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {
                return {
                    username: "glue42", password: "glue42"
                };
            }
        }
        function getLogger() {
            var _a, _b;
            var config = configuration.logger;
            var defaultLevel = "warn";
            if (!config) {
                config = defaultLevel;
            }
            var gdConsoleLevel;
            if (glue42gd) {
                gdConsoleLevel = glue42gd.consoleLogLevel;
            }
            if (typeof config === "string") {
                return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };
            }
            return {
                console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,
                publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel
            };
        }
        var connection = getConnection();
        var application = getApplication();
        if (typeof window !== "undefined") {
            var windowAsAny = window;
            var containerApplication = windowAsAny.htmlContainer ?
                windowAsAny.htmlContainer.containerName + "." + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;
            if (containerApplication) {
                application = containerApplication;
            }
        }
        return {
            bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,
            application: application,
            auth: getAuth(),
            logger: getLogger(),
            connection: connection,
            metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,
            contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,
            version: ext.version || version$1,
            libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],
            customLogger: configuration.customLogger
        };
    }

    var GW3ContextData = (function () {
        function GW3ContextData(contextId, name, isAnnounced, activityId) {
            this.updateCallbacks = {};
            this.contextId = contextId;
            this.name = name;
            this.isAnnounced = isAnnounced;
            this.activityId = activityId;
            this.context = {};
        }
        GW3ContextData.prototype.hasCallbacks = function () {
            return Object.keys(this.updateCallbacks).length > 0;
        };
        GW3ContextData.prototype.getState = function () {
            if (this.isAnnounced && this.hasCallbacks()) {
                return 3;
            }
            if (this.isAnnounced) {
                return 2;
            }
            if (this.hasCallbacks()) {
                return 1;
            }
            return 0;
        };
        return GW3ContextData;
    }());

    function applyContextDelta(context, delta, logger) {
        try {
            if (logger === null || logger === void 0 ? void 0 : logger.canPublish("trace")) {
                logger === null || logger === void 0 ? void 0 : logger.trace("applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context));
            }
            if (!delta) {
                return context;
            }
            if (delta.reset) {
                context = __assign$1({}, delta.reset);
                return context;
            }
            context = deepClone(context, undefined);
            if (delta.commands) {
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        deletePath(context, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath(context, command.value, command.path);
                    }
                }
                return context;
            }
            var added_1 = delta.added;
            var updated_1 = delta.updated;
            var removed = delta.removed;
            if (added_1) {
                Object.keys(added_1).forEach(function (key) {
                    context[key] = added_1[key];
                });
            }
            if (updated_1) {
                Object.keys(updated_1).forEach(function (key) {
                    mergeObjectsProperties(key, context, updated_1);
                });
            }
            if (removed) {
                removed.forEach(function (key) {
                    delete context[key];
                });
            }
            return context;
        }
        catch (e) {
            logger === null || logger === void 0 ? void 0 : logger.error("error applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context), e);
            return context;
        }
    }
    function deepClone(obj, hash) {
        hash = hash || new WeakMap();
        if (Object(obj) !== obj) {
            return obj;
        }
        if (obj instanceof Set) {
            return new Set(obj);
        }
        if (hash.has(obj)) {
            return hash.get(obj);
        }
        var result = obj instanceof Date ? new Date(obj)
            : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)
                : obj.constructor ? new obj.constructor()
                    : Object.create(null);
        hash.set(obj, result);
        return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {
            var _a;
            return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);
        })));
    }
    var mergeObjectsProperties = function (key, what, withWhat) {
        var right = withWhat[key];
        if (right === undefined) {
            return what;
        }
        var left = what[key];
        if (!left || !right) {
            what[key] = right;
            return what;
        }
        if (typeof left === "string" ||
            typeof left === "number" ||
            typeof left === "boolean" ||
            typeof right === "string" ||
            typeof right === "number" ||
            typeof right === "boolean" ||
            Array.isArray(left) ||
            Array.isArray(right)) {
            what[key] = right;
            return what;
        }
        what[key] = Object.assign({}, left, right);
        return what;
    };
    function deepEqual(x, y) {
        if (x === y) {
            return true;
        }
        if (!(x instanceof Object) || !(y instanceof Object)) {
            return false;
        }
        if (x.constructor !== y.constructor) {
            return false;
        }
        for (var p in x) {
            if (!x.hasOwnProperty(p)) {
                continue;
            }
            if (!y.hasOwnProperty(p)) {
                return false;
            }
            if (x[p] === y[p]) {
                continue;
            }
            if (typeof (x[p]) !== "object") {
                return false;
            }
            if (!deepEqual(x[p], y[p])) {
                return false;
            }
        }
        for (var p in y) {
            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
                return false;
            }
        }
        return true;
    }
    function setValueToPath(obj, value, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                obj[pathArr[i]] = {};
            }
            if (typeof obj[pathArr[i]] !== "object") {
                obj[pathArr[i]] = {};
            }
            obj = obj[pathArr[i]];
        }
        obj[pathArr[i]] = value;
    }
    function isSubset(superObj, subObj) {
        return Object.keys(subObj).every(function (ele) {
            if (typeof subObj[ele] === "object") {
                return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});
            }
            return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);
        });
    }
    function deletePath(obj, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                return;
            }
            obj = obj[pathArr[i]];
        }
        delete obj[pathArr[i]];
    }

    var GW3Bridge = (function () {
        function GW3Bridge(config) {
            var _this = this;
            var _a;
            this._contextNameToData = {};
            this._gw3Subscriptions = [];
            this._nextCallbackSubscriptionNumber = 0;
            this._contextNameToId = {};
            this._contextIdToName = {};
            this._protocolVersion = undefined;
            this._connection = config.connection;
            this._logger = config.logger;
            this._gw3Session = this._connection.domain("global", [
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_CONTEXT_UPDATED,
            ]);
            this.subscribeToContextCreatedMessages();
            this.subscribeToContextUpdatedMessages();
            this.subscribeToContextDestroyedMessages();
            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {
                var type = message.type;
                if (!type) {
                    return;
                }
                if (type === GW_MESSAGE_CONTEXT_CREATED ||
                    type === GW_MESSAGE_CONTEXT_ADDED ||
                    type === GW_MESSAGE_ACTIVITY_CREATED) {
                    _this.handleContextCreatedMessage(message);
                }
                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||
                    type === GW_MESSAGE_CONTEXT_UPDATED ||
                    type === GW_MESSAGE_JOINED_ACTIVITY) {
                    _this.handleContextUpdatedMessage(message);
                }
                else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||
                    type === GW_MESSAGE_ACTIVITY_DESTROYED) {
                    _this.handleContextDestroyedMessage(message);
                }
            });
        }
        Object.defineProperty(GW3Bridge.prototype, "protocolVersion", {
            get: function () {
                var _a;
                if (!this._protocolVersion) {
                    var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === "context"; });
                    this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;
                }
                return this._protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GW3Bridge.prototype, "setPathSupported", {
            get: function () {
                return this.protocolVersion >= 2;
            },
            enumerable: true,
            configurable: true
        });
        GW3Bridge.prototype.dispose = function () {
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            this._gw3Subscriptions.length = 0;
            for (var contextName in this._contextNameToData) {
                if (this._contextNameToId.hasOwnProperty(contextName)) {
                    delete this._contextNameToData[contextName];
                }
            }
        };
        GW3Bridge.prototype.createContext = function (name, data) {
            var _this = this;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_CREATE_CONTEXT,
                domain: "global",
                name: name,
                data: data,
                lifetime: "retained",
            })
                .then(function (createContextMsg) {
                _this._contextNameToId[name] = createContextMsg.context_id;
                _this._contextIdToName[createContextMsg.context_id] = name;
                var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);
                contextData.isAnnounced = true;
                contextData.name = name;
                contextData.contextId = createContextMsg.context_id;
                contextData.context = data;
                _this._contextNameToData[name] = contextData;
                return createContextMsg.context_id;
            });
        };
        GW3Bridge.prototype.all = function () {
            var _this = this;
            return Object.keys(this._contextNameToData)
                .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });
        };
        GW3Bridge.prototype.update = function (name, delta) {
            var _a;
            return __awaiter$1$1(this, void 0, void 0, function () {
                var contextData, currentContext, calculatedDelta;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            contextData = this._contextNameToData[name];
                            if (!contextData || !contextData.isAnnounced) {
                                return [2, this.createContext(name, delta)];
                            }
                            currentContext = contextData.context;
                            if (!!contextData.hasCallbacks()) return [3, 2];
                            return [4, this.get(contextData.name)];
                        case 1:
                            currentContext = _b.sent();
                            _b.label = 2;
                        case 2:
                            calculatedDelta = this.protocolVersion === 2 ?
                                this.calculateContextDeltaV2(currentContext, delta) :
                                this.calculateContextDeltaV1(currentContext, delta);
                            if (!Object.keys(calculatedDelta.added).length
                                && !Object.keys(calculatedDelta.updated).length
                                && !calculatedDelta.removed.length
                                && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {
                                return [2, Promise.resolve()];
                            }
                            return [2, this._gw3Session
                                    .send({
                                    type: GW_MESSAGE_UPDATE_CONTEXT,
                                    domain: "global",
                                    context_id: contextData.contextId,
                                    delta: calculatedDelta,
                                }, {}, { skipPeerId: false })
                                    .then(function (gwResponse) {
                                    _this.handleUpdated(contextData, calculatedDelta, {
                                        updaterId: gwResponse.peer_id
                                    });
                                })];
                    }
                });
            });
        };
        GW3Bridge.prototype.set = function (name, data) {
            var _this = this;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return this.createContext(name, data);
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
                delta: { reset: data },
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.setPath = function (name, path, value) {
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPath operation is not supported, use Glue42 3.10 or later");
            }
            return this.setPaths(name, [{ path: path, value: value }]);
        };
        GW3Bridge.prototype.setPaths = function (name, pathValues) {
            var _this = this;
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later");
            }
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                var obj = {};
                for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {
                    var pathValue = pathValues_1[_i];
                    setValueToPath(obj, pathValue.value, pathValue.path);
                }
                return this.createContext(name, obj);
            }
            var commands = [];
            for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {
                var pathValue = pathValues_2[_a];
                if (pathValue.value === null) {
                    commands.push({ type: "remove", path: pathValue.path });
                }
                else {
                    commands.push({ type: "set", path: pathValue.path, value: pathValue.value });
                }
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
                delta: { commands: commands }
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.get = function (name) {
            var _this = this;
            var _a;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return Promise.resolve({});
            }
            if (contextData && !contextData.hasCallbacks()) {
                return new Promise(function (resolve, _) { return __awaiter$1$1(_this, void 0, void 0, function () {
                    var _this = this;
                    return __generator(this, function (_a) {
                        this.subscribe(name, function (data, _d, _r, un) {
                            _this.unsubscribe(un);
                            resolve(data);
                        });
                        return [2];
                    });
                }); });
            }
            var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};
            return Promise.resolve(context);
        };
        GW3Bridge.prototype.subscribe = function (name, callback) {
            var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;
            this._nextCallbackSubscriptionNumber += 1;
            var contextData = this._contextNameToData[name];
            if (!contextData ||
                !contextData.isAnnounced) {
                contextData = contextData || new GW3ContextData(undefined, name, false, undefined);
                this._contextNameToData[name] = contextData;
                contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
            var hadCallbacks = contextData.hasCallbacks();
            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
            if (!hadCallbacks) {
                if (!contextData.joinedActivity) {
                    if (contextData.context && contextData.sentExplicitSubscription) {
                        var clone = deepClone(contextData.context);
                        callback(clone, clone, [], thisCallbackSubscriptionNumber);
                        return Promise.resolve(thisCallbackSubscriptionNumber);
                    }
                    return this.sendSubscribe(contextData)
                        .then(function () { return thisCallbackSubscriptionNumber; });
                }
                else {
                    var clone = deepClone(contextData.context);
                    callback(clone, clone, [], thisCallbackSubscriptionNumber);
                    return Promise.resolve(thisCallbackSubscriptionNumber);
                }
            }
            else {
                var clone = deepClone(contextData.context);
                callback(clone, clone, [], thisCallbackSubscriptionNumber);
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
        };
        GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {
            for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var contextId = this._contextNameToId[name_1];
                var contextData = this._contextNameToData[name_1];
                if (!contextData) {
                    return;
                }
                var hadCallbacks = contextData.hasCallbacks();
                delete contextData.updateCallbacks[subscriptionKey];
                if (contextData.isAnnounced &&
                    hadCallbacks &&
                    !contextData.hasCallbacks() &&
                    contextData.sentExplicitSubscription) {
                    this.sendUnsubscribe(contextData);
                }
                if (!contextData.isAnnounced &&
                    !contextData.hasCallbacks()) {
                    delete this._contextNameToData[name_1];
                }
            }
        };
        GW3Bridge.prototype.destroy = function (name) {
            var contextData = this._contextNameToData[name];
            if (!contextData) {
                return Promise.reject("context with " + name + " does not exist");
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_DESTROY_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {
            var oldContext = contextData.context;
            contextData.context = applyContextDelta(contextData.context, delta, this._logger);
            if (this._contextNameToData[contextData.name] === contextData &&
                !deepEqual(oldContext, contextData.context)) {
                this.invokeUpdateCallbacks(contextData, delta, extraData);
            }
        };
        GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {
            var createdMessageTypes = [
                GW_MESSAGE_CONTEXT_ADDED,
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_ACTIVITY_CREATED,
            ];
            for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {
                var createdMessageType = createdMessageTypes_1[_i];
                var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {
            var createdMessageType = contextCreatedMsg.type;
            if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {
                this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;
            }
            else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {
                this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;
            }
            var name = this._contextIdToName[contextCreatedMsg.context_id];
            if (!name) {
                throw new Error("Received created event for context with unknown name: " + contextCreatedMsg.context_id);
            }
            if (!this._contextNameToId[name]) {
                throw new Error("Received created event for context with unknown id: " + contextCreatedMsg.context_id);
            }
            var contextData = this._contextNameToData[name];
            if (contextData) {
                if (contextData.isAnnounced) {
                    return;
                }
                else {
                    if (!contextData.hasCallbacks()) {
                        throw new Error("Assertion failure: contextData.hasCallbacks()");
                    }
                    contextData.isAnnounced = true;
                    contextData.contextId = contextCreatedMsg.context_id;
                    contextData.activityId = contextCreatedMsg.activity_id;
                    if (!contextData.sentExplicitSubscription) {
                        this.sendSubscribe(contextData);
                    }
                }
            }
            else {
                this._contextNameToData[name] = contextData =
                    new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);
            }
        };
        GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {
            var updatedMessageTypes = [
                GW_MESSAGE_CONTEXT_UPDATED,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_JOINED_ACTIVITY,
            ];
            for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {
                var updatedMessageType = updatedMessageTypes_1[_i];
                var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {
            var updatedMessageType = contextUpdatedMsg.type;
            var contextId = contextUpdatedMsg.context_id;
            var contextData = this._contextNameToData[this._contextIdToName[contextId]];
            var justSeen = !contextData || !contextData.isAnnounced;
            if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {
                if (!contextData) {
                    contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);
                    this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;
                    this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;
                    this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;
                }
                else {
                    contextData.contextId = contextId;
                    contextData.isAnnounced = true;
                    contextData.activityId = contextUpdatedMsg.activity_id;
                }
                contextData.joinedActivity = true;
            }
            else {
                if (!contextData || !contextData.isAnnounced) {
                    if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                        contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);
                        contextData.sentExplicitSubscription = true;
                        this._contextNameToData[contextUpdatedMsg.name] = contextData;
                        this._contextIdToName[contextId] = contextUpdatedMsg.name;
                        this._contextNameToId[contextUpdatedMsg.name] = contextId;
                    }
                    else {
                        this._logger.error("Received 'update' for unknown context: " + contextId);
                    }
                    return;
                }
            }
            var oldContext = contextData.context;
            if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                contextData.context = contextUpdatedMsg.data || {};
            }
            else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {
                contextData.context = contextUpdatedMsg.context_snapshot || {};
            }
            else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {
                contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);
            }
            else {
                throw new Error("Unrecognized context update message " + updatedMessageType);
            }
            if (justSeen ||
                !deepEqual(contextData.context, oldContext) ||
                updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });
            }
        };
        GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {
            delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };
            if (delta.commands) {
                delta.added = delta.updated = delta.reset = {};
                delta.removed = [];
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        if (command.path.indexOf(".") === -1) {
                            delta.removed.push(command.path);
                        }
                        setValueToPath(delta.updated, null, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath(delta.updated, command.value, command.path);
                    }
                }
            }
            for (var updateCallbackIndex in contextData.updateCallbacks) {
                if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {
                    try {
                        var updateCallback = contextData.updateCallbacks[updateCallbackIndex];
                        updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);
                    }
                    catch (err) {
                        this._logger.debug("callback error: " + JSON.stringify(err));
                    }
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {
            var destroyedMessageTypes = [
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_ACTIVITY_DESTROYED,
            ];
            for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {
                var destroyedMessageType = destroyedMessageTypes_1[_i];
                var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {
            var destroyedMessageType = destroyedMsg.type;
            var contextId;
            var name;
            if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {
                name = destroyedMsg.activity_id;
                contextId = this._contextNameToId[name];
                if (!contextId) {
                    this._logger.error("Received 'destroyed' for unknown activity: " + destroyedMsg.activity_id);
                    return;
                }
            }
            else {
                contextId = destroyedMsg.context_id;
                name = this._contextIdToName[contextId];
                if (!name) {
                    this._logger.error("Received 'destroyed' for unknown context: " + destroyedMsg.context_id);
                    return;
                }
            }
            delete this._contextIdToName[contextId];
            delete this._contextNameToId[name];
            var contextData = this._contextNameToData[name];
            delete this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                this._logger.error("Received 'destroyed' for unknown context: " + contextId);
                return;
            }
        };
        GW3Bridge.prototype.sendSubscribe = function (contextData) {
            contextData.sentExplicitSubscription = true;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_SUBSCRIBE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.sendUnsubscribe = function (contextData) {
            contextData.sentExplicitSubscription = false;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {
            var delta = { added: {}, updated: {}, removed: [], reset: undefined };
            if (from) {
                for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {
                    var x = _a[_i];
                    if (Object.keys(to).indexOf(x) !== -1
                        && to[x] !== null
                        && !deepEqual(from[x], to[x])) {
                        delta.updated[x] = to[x];
                    }
                }
            }
            for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {
                var x = _c[_b];
                if (!from || (Object.keys(from).indexOf(x) === -1)) {
                    if (to[x] !== null) {
                        delta.added[x] = to[x];
                    }
                }
                else if (to[x] === null) {
                    delta.removed.push(x);
                }
            }
            return delta;
        };
        GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {
            var _a, _b;
            var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };
            for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {
                var x = _c[_i];
                if (to[x] !== null) {
                    var fromX = from ? from[x] : null;
                    if (!deepEqual(fromX, to[x])) {
                        (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: "set", path: x, value: to[x] });
                    }
                }
                else {
                    (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: "remove", path: x });
                }
            }
            return delta;
        };
        return GW3Bridge;
    }());

    var ContextsModule = (function () {
        function ContextsModule(config) {
            this._bridge = new GW3Bridge(config);
        }
        ContextsModule.prototype.all = function () {
            return this._bridge.all();
        };
        ContextsModule.prototype.update = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.update(name, data);
        };
        ContextsModule.prototype.set = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.set(name, data);
        };
        ContextsModule.prototype.setPath = function (name, path, data) {
            this.checkName(name);
            this.checkPath(path);
            var isTopLevelPath = path === "";
            if (isTopLevelPath) {
                this.checkData(data);
                return this.set(name, data);
            }
            return this._bridge.setPath(name, path, data);
        };
        ContextsModule.prototype.setPaths = function (name, paths) {
            this.checkName(name);
            if (!Array.isArray(paths)) {
                throw new Error("Please provide the paths as an array of PathValues!");
            }
            for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {
                var _a = paths_1[_i], path = _a.path, value = _a.value;
                this.checkPath(path);
                var isTopLevelPath = path === "";
                if (isTopLevelPath) {
                    this.checkData(value);
                }
            }
            return this._bridge.setPaths(name, paths);
        };
        ContextsModule.prototype.subscribe = function (name, callback) {
            var _this = this;
            this.checkName(name);
            if (typeof callback !== "function") {
                throw new Error("Please provide the callback as a function!");
            }
            return this._bridge
                .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })
                .then(function (key) {
                return function () {
                    _this._bridge.unsubscribe(key);
                };
            });
        };
        ContextsModule.prototype.get = function (name) {
            this.checkName(name);
            return this._bridge.get(name);
        };
        ContextsModule.prototype.ready = function () {
            return Promise.resolve(this);
        };
        ContextsModule.prototype.destroy = function (name) {
            this.checkName(name);
            return this._bridge.destroy(name);
        };
        Object.defineProperty(ContextsModule.prototype, "setPathSupported", {
            get: function () {
                return this._bridge.setPathSupported;
            },
            enumerable: true,
            configurable: true
        });
        ContextsModule.prototype.checkName = function (name) {
            if (typeof name !== "string" || name === "") {
                throw new Error("Please provide the name as a non-empty string!");
            }
        };
        ContextsModule.prototype.checkPath = function (path) {
            if (typeof path !== "string") {
                throw new Error("Please provide the path as a dot delimited string!");
            }
        };
        ContextsModule.prototype.checkData = function (data) {
            if (typeof data !== "object") {
                throw new Error("Please provide the data as an object!");
            }
        };
        return ContextsModule;
    }());

    function promisify (promise, successCallback, errorCallback) {
        if (typeof successCallback !== "function" && typeof errorCallback !== "function") {
            return promise;
        }
        if (typeof successCallback !== "function") {
            successCallback = function () { };
        }
        else if (typeof errorCallback !== "function") {
            errorCallback = function () { };
        }
        return promise.then(successCallback, errorCallback);
    }

    function rejectAfter(ms, promise, error) {
        if (ms === void 0) { ms = 0; }
        var timeout;
        promise.finally(function () {
            if (timeout) {
                clearTimeout(timeout);
            }
        });
        return new Promise(function (resolve, reject) {
            timeout = setTimeout(function () { return reject(error); }, ms);
        });
    }

    var InvokeStatus;
    (function (InvokeStatus) {
        InvokeStatus[InvokeStatus["Success"] = 0] = "Success";
        InvokeStatus[InvokeStatus["Error"] = 1] = "Error";
    })(InvokeStatus || (InvokeStatus = {}));
    var Client = (function () {
        function Client(protocol, repo, instance, configuration) {
            this.protocol = protocol;
            this.repo = repo;
            this.instance = instance;
            this.configuration = configuration;
        }
        Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {
            var _this = this;
            var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {
                var _a;
                options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;
                _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);
            };
            var promise = new Promise(function (resolve, reject) {
                var successProxy = function (sub) {
                    resolve(sub);
                };
                var errorProxy = function (err) {
                    reject(err);
                };
                if (!method) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                var methodDef;
                if (typeof method === "string") {
                    methodDef = { name: method };
                }
                else {
                    methodDef = method;
                }
                if (!methodDef.name) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                if (options === undefined) {
                    options = {};
                }
                var target = options.target;
                if (target === undefined) {
                    target = "best";
                }
                if (typeof target === "string" && target !== "all" && target !== "best") {
                    reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\", \"best\", or an instance."));
                    return;
                }
                if (options.methodResponseTimeout === undefined) {
                    options.methodResponseTimeout = options.method_response_timeout;
                    if (options.methodResponseTimeout === undefined) {
                        options.methodResponseTimeout = _this.configuration.methodResponseTimeout;
                    }
                }
                if (options.waitTimeoutMs === undefined) {
                    options.waitTimeoutMs = options.wait_for_method_timeout;
                    if (options.waitTimeoutMs === undefined) {
                        options.waitTimeoutMs = _this.configuration.waitTimeoutMs;
                    }
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                if (currentServers.length > 0) {
                    callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);
                }
                else {
                    var retry_1 = function () {
                        if (!target || !(options.waitTimeoutMs)) {
                            return;
                        }
                        delayTillNow += delayStep;
                        currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                        if (currentServers.length > 0) {
                            var streamInfo = currentServers[0].methods[0];
                            callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);
                        }
                        else if (delayTillNow >= options.waitTimeoutMs) {
                            var def = typeof method === "string" ? { name: method } : method;
                            callProtocolSubscribe(currentServers, def, successProxy, errorProxy);
                        }
                        else {
                            setTimeout(retry_1, delayStep);
                        }
                    };
                    setTimeout(retry_1, delayStep);
                }
            });
            return promisify(promise, successCallback, errorCallback);
        };
        Client.prototype.servers = function (methodFilter) {
            var filterCopy = methodFilter === undefined
                ? undefined
                : __assign$1({}, methodFilter);
            return this.getServers(filterCopy).map(function (serverMethodMap) {
                return serverMethodMap.server.instance;
            });
        };
        Client.prototype.methods = function (methodFilter) {
            if (typeof methodFilter === "string") {
                methodFilter = { name: methodFilter };
            }
            else {
                methodFilter = __assign$1({}, methodFilter);
            }
            return this.getMethods(methodFilter);
        };
        Client.prototype.methodsForInstance = function (instance) {
            return this.getMethodsForInstance(instance);
        };
        Client.prototype.methodAdded = function (callback) {
            return this.repo.onMethodAdded(callback);
        };
        Client.prototype.methodRemoved = function (callback) {
            return this.repo.onMethodRemoved(callback);
        };
        Client.prototype.serverAdded = function (callback) {
            return this.repo.onServerAdded(callback);
        };
        Client.prototype.serverRemoved = function (callback) {
            return this.repo.onServerRemoved(function (server, reason) {
                callback(server, reason);
            });
        };
        Client.prototype.serverMethodAdded = function (callback) {
            return this.repo.onServerMethodAdded(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.serverMethodRemoved = function (callback) {
            return this.repo.onServerMethodRemoved(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var getInvokePromise;
                var _this = this;
                return __generator(this, function (_a) {
                    getInvokePromise = function () { return __awaiter$1$1(_this, void 0, void 0, function () {
                        var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;
                        var _this = this;
                        var _a, _b, _c;
                        return __generator(this, function (_d) {
                            switch (_d.label) {
                                case 0:
                                    if (typeof methodFilter === "string") {
                                        methodDefinition = { name: methodFilter };
                                    }
                                    else {
                                        methodDefinition = __assign$1({}, methodFilter);
                                    }
                                    if (!methodDefinition.name) {
                                        return [2, Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.")];
                                    }
                                    if (!argumentObj) {
                                        argumentObj = {};
                                    }
                                    if (!target) {
                                        target = "best";
                                    }
                                    if (typeof target === "string" && target !== "all" && target !== "best" && target !== "skipMine") {
                                        return [2, Promise.reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\" and \"best\"."))];
                                    }
                                    if (!additionalOptions) {
                                        additionalOptions = {};
                                    }
                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                        additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;
                                        if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                            additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs === undefined) {
                                        additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;
                                        if (additionalOptions.waitTimeoutMs === undefined) {
                                            additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== "number") {
                                        return [2, Promise.reject(new Error("\"" + additionalOptions.waitTimeoutMs + "\" is not a valid number for \"waitTimeoutMs\" "))];
                                    }
                                    if (typeof argumentObj !== "object") {
                                        return [2, Promise.reject(new Error("The method arguments must be an object. method: " + methodDefinition.name))];
                                    }
                                    serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                                    if (!(serversMethodMap.length === 0)) return [3, 4];
                                    _d.label = 1;
                                case 1:
                                    _d.trys.push([1, 3, , 4]);
                                    return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];
                                case 2:
                                    serversMethodMap = _d.sent();
                                    return [3, 4];
                                case 3:
                                    err_1 = _d.sent();
                                    method = __assign$1(__assign$1({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });
                                    errorObj = {
                                        method: method,
                                        called_with: argumentObj,
                                        message: "Can not find a method matching " + JSON.stringify(methodFilter) + " with server filter " + JSON.stringify(target),
                                        executed_by: undefined,
                                        returned: undefined,
                                        status: undefined,
                                    };
                                    return [2, Promise.reject(errorObj)];
                                case 4:
                                    timeout = additionalOptions.methodResponseTimeoutMs;
                                    additionalOptionsCopy = additionalOptions;
                                    invokePromises = serversMethodMap.map(function (serversMethodPair) {
                                        var invId = shortid();
                                        var method = serversMethodPair.methods[0];
                                        var server = serversMethodPair.server;
                                        var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);
                                        return Promise.race([
                                            invokePromise,
                                            rejectAfter(timeout, invokePromise, {
                                                invocationId: invId,
                                                message: "Invocation timeout (" + timeout + " ms) reached for method name: " + (method === null || method === void 0 ? void 0 : method.name) + ", target instance: " + JSON.stringify(server.instance) + ", options: " + JSON.stringify(additionalOptionsCopy),
                                                status: InvokeStatus.Error,
                                            })
                                        ]);
                                    });
                                    return [4, Promise.all(invokePromises)];
                                case 5:
                                    invocationMessages = _d.sent();
                                    results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);
                                    allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });
                                    if (allRejected) {
                                        return [2, Promise.reject(results)];
                                    }
                                    return [2, results];
                            }
                        });
                    }); };
                    return [2, promisify(getInvokePromise(), success, error)];
                });
            });
        };
        Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {
            var all_return_values = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })
                .reduce(function (allValues, currentValue) {
                allValues = __spreadArrays(allValues, [
                    {
                        executed_by: currentValue.instance,
                        returned: currentValue.result,
                        called_with: calledWith,
                        method: method,
                        message: currentValue.message,
                        status: currentValue.status,
                    }
                ]);
                return allValues;
            }, []);
            var all_errors = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })
                .reduce(function (allErrors, currError) {
                allErrors = __spreadArrays(allErrors, [
                    {
                        executed_by: currError.instance,
                        called_with: calledWith,
                        name: method.name,
                        message: currError.message,
                    }
                ]);
                return allErrors;
            }, []);
            var invResult = invocationResults[0];
            var result = {
                method: method,
                called_with: calledWith,
                returned: invResult.result,
                executed_by: invResult.instance,
                all_return_values: all_return_values,
                all_errors: all_errors,
                message: invResult.message,
                status: invResult.status
            };
            return result;
        };
        Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (additionalOptions.waitTimeoutMs === 0) {
                    reject();
                    return;
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var retry = function () {
                    delayTillNow += delayStep;
                    var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                    if (serversMethodMap.length > 0) {
                        clearInterval(interval);
                        resolve(serversMethodMap);
                    }
                    else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {
                        clearInterval(interval);
                        reject();
                        return;
                    }
                };
                var interval = setInterval(retry, delayStep);
            });
        };
        Client.prototype.filterByTarget = function (target, serverMethodMap) {
            var _this = this;
            if (typeof target === "string") {
                if (target === "all") {
                    return __spreadArrays(serverMethodMap);
                }
                else if (target === "best") {
                    var localMachine = serverMethodMap
                        .find(function (s) { return s.server.instance.isLocal; });
                    if (localMachine) {
                        return [localMachine];
                    }
                    if (serverMethodMap[0] !== undefined) {
                        return [serverMethodMap[0]];
                    }
                }
                else if (target === "skipMine") {
                    return serverMethodMap.filter(function (_a) {
                        var server = _a.server;
                        return server.instance.peerId !== _this.instance.peerId;
                    });
                }
            }
            else {
                var targetArray = void 0;
                if (!Array.isArray(target)) {
                    targetArray = [target];
                }
                else {
                    targetArray = target;
                }
                var allServersMatching = targetArray.reduce(function (matches, filter) {
                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {
                        return _this.instanceMatch(filter, serverMethodPair.server.instance);
                    });
                    return matches.concat(myMatches);
                }, []);
                return allServersMatching;
            }
            return [];
        };
        Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {
            return this.containsProps(instanceFilter, instanceDefinition);
        };
        Client.prototype.methodMatch = function (methodFilter, methodDefinition) {
            return this.containsProps(methodFilter, methodDefinition);
        };
        Client.prototype.containsProps = function (filter, repoMethod) {
            var filterProps = Object.keys(filter)
                .filter(function (prop) {
                return filter[prop] !== undefined
                    && typeof filter[prop] !== "function"
                    && prop !== "object_types"
                    && prop !== "display_name"
                    && prop !== "id"
                    && prop !== "gatewayId"
                    && prop !== "identifier"
                    && prop[0] !== "_";
            });
            return filterProps.every(function (prop) {
                var isMatch;
                var filterValue = filter[prop];
                var repoMethodValue = repoMethod[prop];
                switch (prop) {
                    case "objectTypes":
                        isMatch = (filterValue || []).every(function (filterValueEl) {
                            return (repoMethodValue || []).includes(filterValueEl);
                        });
                        break;
                    case "flags":
                        isMatch = isSubset(repoMethodValue || {}, filterValue || {});
                        break;
                    default:
                        isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();
                }
                return isMatch;
            });
        };
        Client.prototype.getMethods = function (methodFilter) {
            var _this = this;
            if (methodFilter === undefined) {
                return this.repo.getMethods();
            }
            var methods = this.repo.getMethods().filter(function (method) {
                return _this.methodMatch(methodFilter, method);
            });
            return methods;
        };
        Client.prototype.getMethodsForInstance = function (instanceFilter) {
            var _this = this;
            var allServers = this.repo.getServers();
            var matchingServers = allServers.filter(function (server) {
                return _this.instanceMatch(instanceFilter, server.instance);
            });
            if (matchingServers.length === 0) {
                return [];
            }
            var resultMethodsObject = {};
            if (matchingServers.length === 1) {
                resultMethodsObject = matchingServers[0].methods;
            }
            else {
                matchingServers.forEach(function (server) {
                    Object.keys(server.methods).forEach(function (methodKey) {
                        var method = server.methods[methodKey];
                        resultMethodsObject[method.identifier] = method;
                    });
                });
            }
            return Object.keys(resultMethodsObject)
                .map(function (key) {
                return resultMethodsObject[key];
            });
        };
        Client.prototype.getServers = function (methodFilter) {
            var _this = this;
            var servers = this.repo.getServers();
            if (methodFilter === undefined) {
                return servers.map(function (server) {
                    return { server: server, methods: [] };
                });
            }
            return servers.reduce(function (prev, current) {
                var methodsForServer = Object.values(current.methods);
                var matchingMethods = methodsForServer.filter(function (method) {
                    return _this.methodMatch(methodFilter, method);
                });
                if (matchingMethods.length > 0) {
                    prev.push({ server: current, methods: matchingMethods });
                }
                return prev;
            }, []);
        };
        Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {
            var serversMethodMap = this.getServers(methodFilter);
            return this.filterByTarget(target, serversMethodMap);
        };
        return Client;
    }());

    var ServerSubscription = (function () {
        function ServerSubscription(protocol, repoMethod, subscription) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.subscription = subscription;
        }
        Object.defineProperty(ServerSubscription.prototype, "stream", {
            get: function () {
                if (!this.repoMethod.stream) {
                    throw new Error("no stream");
                }
                return this.repoMethod.stream;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "arguments", {
            get: function () { return this.subscription.arguments || {}; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "branchKey", {
            get: function () { return this.subscription.branchKey; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "instance", {
            get: function () {
                if (!this.subscription.instance) {
                    throw new Error("no instance");
                }
                return this.subscription.instance;
            },
            enumerable: true,
            configurable: true
        });
        ServerSubscription.prototype.close = function () {
            this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);
        };
        ServerSubscription.prototype.push = function (data) {
            this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);
        };
        return ServerSubscription;
    }());

    var Request = (function () {
        function Request(protocol, repoMethod, requestContext) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.requestContext = requestContext;
            this.arguments = requestContext.arguments;
            this.instance = requestContext.instance;
        }
        Request.prototype.accept = function () {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, "");
        };
        Request.prototype.acceptOnBranch = function (branch) {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);
        };
        Request.prototype.reject = function (reason) {
            this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);
        };
        return Request;
    }());

    var ServerStreaming = (function () {
        function ServerStreaming(protocol, server) {
            var _this = this;
            this.protocol = protocol;
            this.server = server;
            protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });
            protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });
            protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });
        }
        ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRequestHandler === "function")) {
                return;
            }
            var request = new Request(this.protocol, repoMethod, requestContext);
            repoMethod.streamCallbacks.subscriptionRequestHandler(request);
        };
        ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionAddedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionAddedHandler(sub);
        };
        ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);
        };
        return ServerStreaming;
    }());

    var ServerBranch = (function () {
        function ServerBranch(key, protocol, repoMethod) {
            this.key = key;
            this.protocol = protocol;
            this.repoMethod = repoMethod;
        }
        ServerBranch.prototype.subscriptions = function () {
            var _this = this;
            var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);
            return subList.map(function (sub) {
                return new ServerSubscription(_this.protocol, _this.repoMethod, sub);
            });
        };
        ServerBranch.prototype.close = function () {
            this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);
        };
        ServerBranch.prototype.push = function (data) {
            this.protocol.server.pushData(this.repoMethod, data, [this.key]);
        };
        return ServerBranch;
    }());

    var ServerStream = (function () {
        function ServerStream(_protocol, _repoMethod, _server) {
            this._protocol = _protocol;
            this._repoMethod = _repoMethod;
            this._server = _server;
            this.name = this._repoMethod.definition.name;
        }
        ServerStream.prototype.branches = function (key) {
            var _this = this;
            var bList = this._protocol.server.getBranchList(this._repoMethod);
            if (key) {
                if (bList.indexOf(key) > -1) {
                    return new ServerBranch(key, this._protocol, this._repoMethod);
                }
                return undefined;
            }
            else {
                return bList.map(function (branchKey) {
                    return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);
                });
            }
        };
        ServerStream.prototype.branch = function (key) {
            return this.branches(key);
        };
        ServerStream.prototype.subscriptions = function () {
            var _this = this;
            var subList = this._protocol.server.getSubscriptionList(this._repoMethod);
            return subList.map(function (sub) {
                return new ServerSubscription(_this._protocol, _this._repoMethod, sub);
            });
        };
        Object.defineProperty(ServerStream.prototype, "definition", {
            get: function () {
                var _a;
                var def2 = this._repoMethod.definition;
                return {
                    accepts: def2.accepts,
                    description: def2.description,
                    displayName: def2.displayName,
                    name: def2.name,
                    objectTypes: def2.objectTypes,
                    returns: def2.returns,
                    supportsStreaming: def2.supportsStreaming,
                    flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,
                };
            },
            enumerable: true,
            configurable: true
        });
        ServerStream.prototype.close = function () {
            this._protocol.server.closeAllSubscriptions(this._repoMethod);
            this._server.unregister(this._repoMethod.definition, true);
        };
        ServerStream.prototype.push = function (data, branches) {
            if (typeof branches !== "string" && !Array.isArray(branches) && branches !== undefined) {
                throw new Error("invalid branches should be string or string array");
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            this._protocol.server.pushData(this._repoMethod, data, branches);
        };
        ServerStream.prototype.updateRepoMethod = function (repoMethod) {
            this._repoMethod = repoMethod;
        };
        return ServerStream;
    }());

    var Server = (function () {
        function Server(protocol, serverRepository) {
            this.protocol = protocol;
            this.serverRepository = serverRepository;
            this.invocations = 0;
            this.currentlyUnregistering = {};
            this.streaming = new ServerStreaming(protocol, this);
            this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));
        }
        Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {
            var _this = this;
            var promise = new Promise(function (resolve, reject) {
                if (!streamDef) {
                    reject("The stream name must be unique! Please, provide either a unique string for a stream name to \u201Cglue.interop.createStream()\u201D or a \u201CmethodDefinition\u201D object with a unique \u201Cname\u201D property for the stream.");
                    return;
                }
                var streamMethodDefinition;
                if (typeof streamDef === "string") {
                    streamMethodDefinition = { name: "" + streamDef };
                }
                else {
                    streamMethodDefinition = __assign$1({}, streamDef);
                }
                if (!streamMethodDefinition.name) {
                    return reject("The \u201Cname\u201D property is required for the \u201CstreamDefinition\u201D object and must be unique. Stream definition: " + JSON.stringify(streamMethodDefinition));
                }
                var nameAlreadyExists = _this.serverRepository.getList()
                    .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });
                if (nameAlreadyExists) {
                    return reject("A stream with the name \"" + streamMethodDefinition.name + "\" already exists! Please, provide a unique name for the stream.");
                }
                streamMethodDefinition.supportsStreaming = true;
                if (!callbacks) {
                    callbacks = {};
                }
                if (typeof callbacks.subscriptionRequestHandler !== "function") {
                    callbacks.subscriptionRequestHandler = function (request) {
                        request.accept();
                    };
                }
                var repoMethod = _this.serverRepository.add({
                    definition: streamMethodDefinition,
                    streamCallbacks: callbacks,
                    protocolState: {},
                });
                _this.protocol.server.createStream(repoMethod)
                    .then(function () {
                    var streamUserObject;
                    if (existingStream) {
                        streamUserObject = existingStream;
                        existingStream.updateRepoMethod(repoMethod);
                    }
                    else {
                        streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);
                    }
                    repoMethod.stream = streamUserObject;
                    resolve(streamUserObject);
                })
                    .catch(function (err) {
                    if (repoMethod.repoId) {
                        _this.serverRepository.remove(repoMethod.repoId);
                    }
                    reject(err);
                });
            });
            return promisify(promise, successCallback, errorCallback);
        };
        Server.prototype.register = function (methodDefinition, callback) {
            var _this = this;
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter$1$1(_this, void 0, void 0, function () {
                var result, resultValue, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 4, , 5]);
                            result = callback(context.args, context.instance);
                            if (!(result && typeof result.then === "function")) return [3, 2];
                            return [4, result];
                        case 1:
                            resultValue = _a.sent();
                            resultCallback(undefined, resultValue);
                            return [3, 3];
                        case 2:
                            resultCallback(undefined, result);
                            _a.label = 3;
                        case 3: return [3, 5];
                        case 4:
                            e_1 = _a.sent();
                            if (!e_1) {
                                e_1 = "";
                            }
                            resultCallback(e_1, e_1);
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            }); };
            wrappedCallbackFunction.userCallback = callback;
            return this.registerCore(methodDefinition, wrappedCallbackFunction);
        };
        Server.prototype.registerAsync = function (methodDefinition, callback) {
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallback = function (context, resultCallback) {
                try {
                    var resultCalled_1 = false;
                    var success = function (result) {
                        if (!resultCalled_1) {
                            resultCallback(undefined, result);
                        }
                        resultCalled_1 = true;
                    };
                    var error = function (e) {
                        if (!resultCalled_1) {
                            if (!e) {
                                e = "";
                            }
                            resultCallback(e, e);
                        }
                        resultCalled_1 = true;
                    };
                    var methodResult = callback(context.args, context.instance, success, error);
                    if (methodResult && typeof methodResult.then === "function") {
                        methodResult
                            .then(success)
                            .catch(error);
                    }
                }
                catch (e) {
                    resultCallback(e, undefined);
                }
            };
            wrappedCallback.userCallbackAsync = callback;
            return this.registerCore(methodDefinition, wrappedCallback);
        };
        Server.prototype.unregister = function (methodFilter, forStream) {
            if (forStream === void 0) { forStream = false; }
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodDefinition, methodToBeRemoved;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (methodFilter === undefined) {
                                return [2, Promise.reject("Please, provide either a unique string for a name or an object containing a \u201Cname\u201D property.")];
                            }
                            if (!(typeof methodFilter === "function")) return [3, 2];
                            return [4, this.unregisterWithPredicate(methodFilter, forStream)];
                        case 1:
                            _a.sent();
                            return [2];
                        case 2:
                            if (typeof methodFilter === "string") {
                                methodDefinition = { name: methodFilter };
                            }
                            else {
                                methodDefinition = methodFilter;
                            }
                            if (methodDefinition.name === undefined) {
                                return [2, Promise.reject("Method name is required. Cannot find a method if the method name is undefined!")];
                            }
                            methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {
                                return serverMethod.definition.name === methodDefinition.name
                                    && (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodToBeRemoved) {
                                return [2, Promise.reject("Method with a name \"" + methodDefinition.name + "\" does not exist or is not registered by your application!")];
                            }
                            return [4, this.removeMethodsOrStreams([methodToBeRemoved])];
                        case 3:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodsOrStreamsToRemove;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            methodsOrStreamsToRemove = this.serverRepository.getList()
                                .filter(function (sm) { return filterPredicate(sm.definition); })
                                .filter(function (serverMethod) {
                                return (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {
                                return [2, Promise.reject("Could not find a " + (forStream ? "stream" : "method") + " matching the specified condition!")];
                            }
                            return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {
            var _this = this;
            var methodUnregPromises = [];
            methodsToRemove.forEach(function (method) {
                var promise = _this.protocol.server.unregister(method)
                    .then(function () {
                    if (method.repoId) {
                        _this.serverRepository.remove(method.repoId);
                    }
                });
                methodUnregPromises.push(promise);
                _this.addAsCurrentlyUnregistering(method.definition.name, promise);
            });
            return Promise.all(methodUnregPromises);
        };
        Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var timeout;
                var _this = this;
                return __generator(this, function (_a) {
                    timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });
                    this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {
                        delete _this.currentlyUnregistering[methodName];
                    });
                    return [2];
                });
            });
        };
        Server.prototype.registerCore = function (method, theFunction) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (typeof method === "string") {
                                methodDefinition = { name: "" + method };
                            }
                            else {
                                methodDefinition = __assign$1({}, method);
                            }
                            if (!methodDefinition.name) {
                                return [2, Promise.reject("Please, provide a (unique) string value for the \u201Cname\u201D property in the \u201CmethodDefinition\u201D object: " + JSON.stringify(method))];
                            }
                            unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];
                            if (!unregisterInProgress) return [3, 2];
                            return [4, unregisterInProgress];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            nameAlreadyExists = this.serverRepository.getList()
                                .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });
                            if (nameAlreadyExists) {
                                return [2, Promise.reject("A method with the name \"" + methodDefinition.name + "\" already exists! Please, provide a unique name for the method.")];
                            }
                            if (methodDefinition.supportsStreaming) {
                                return [2, Promise.reject("When you create methods with \u201Cglue.interop.register()\u201D or \u201Cglue.interop.registerAsync()\u201D the property \u201CsupportsStreaming\u201D cannot be \u201Ctrue\u201D. If you want \u201C" + methodDefinition.name + "\u201D to be a stream, please use the \u201Cglue.interop.createStream()\u201D method.")];
                            }
                            repoMethod = this.serverRepository.add({
                                definition: methodDefinition,
                                theFunction: theFunction,
                                protocolState: {},
                            });
                            return [2, this.protocol.server.register(repoMethod)
                                    .catch(function (err) {
                                    if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {
                                        _this.serverRepository.remove(repoMethod.repoId);
                                    }
                                    throw err;
                                })];
                    }
                });
            });
        };
        Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {
            var _this = this;
            if (!methodToExecute || !methodToExecute.theFunction) {
                return;
            }
            methodToExecute.theFunction(invocationArgs, function (err, result) {
                if (err !== undefined && err !== null) {
                    if (err.message && typeof err.message === "string") {
                        err = err.message;
                    }
                    else if (typeof err !== "string") {
                        try {
                            err = JSON.stringify(err);
                        }
                        catch (unStrException) {
                            err = "un-stringifyable error in onMethodInvoked! Top level prop names: " + Object.keys(err);
                        }
                    }
                }
                if (!result) {
                    result = {};
                }
                else if (typeof result !== "object" || Array.isArray(result)) {
                    result = { _value: result };
                }
                _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);
            });
        };
        return Server;
    }());

    var InstanceWrapper = (function () {
        function InstanceWrapper(API, instance, connection) {
            var _this = this;
            this.wrapped = {};
            this.wrapped.getMethods = function () {
                return API.methodsForInstance(this);
            };
            this.wrapped.getStreams = function () {
                return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });
            };
            if (instance) {
                this.refreshWrappedObject(instance);
            }
            if (connection) {
                connection.loggedIn(function () {
                    _this.refresh(connection);
                });
                this.refresh(connection);
            }
        }
        InstanceWrapper.prototype.unwrap = function () {
            return this.wrapped;
        };
        InstanceWrapper.prototype.refresh = function (connection) {
            if (!connection) {
                return;
            }
            var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;
            var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });
            this.refreshWrappedObject(instance);
        };
        InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {
            var _a, _b, _c;
            this.wrapped.user = resolvedIdentity.user;
            this.wrapped.instance = resolvedIdentity.instance;
            this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();
            this.wrapped.applicationName = resolvedIdentity.applicationName;
            this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);
            this.wrapped.machine = resolvedIdentity.machine;
            this.wrapped.environment = resolvedIdentity.environment;
            this.wrapped.region = resolvedIdentity.region;
            this.wrapped.windowId = resolvedIdentity.windowId;
            this.wrapped.isLocal = true;
            this.wrapped.api = resolvedIdentity.api;
            this.wrapped.service = resolvedIdentity.service;
            this.wrapped.peerId = resolvedIdentity.peerId;
        };
        return InstanceWrapper;
    }());

    var hideMethodSystemFlags = function (method) {
        return __assign$1(__assign$1({}, method), { flags: method.flags.metadata || {} });
    };
    var ClientRepository = (function () {
        function ClientRepository(logger, API) {
            this.logger = logger;
            this.API = API;
            this.servers = {};
            this.methodsCount = {};
            this.callbacks = lib$1();
            var peerId = this.API.instance.peerId;
            this.myServer = {
                id: peerId,
                methods: {},
                instance: this.API.instance,
                wrapper: this.API.unwrappedInstance,
            };
            this.servers[peerId] = this.myServer;
        }
        ClientRepository.prototype.addServer = function (info, serverId) {
            this.logger.debug("adding server " + serverId);
            var current = this.servers[serverId];
            if (current) {
                return current.id;
            }
            var wrapper = new InstanceWrapper(this.API, info);
            var serverEntry = {
                id: serverId,
                methods: {},
                instance: wrapper.unwrap(),
                wrapper: wrapper,
            };
            this.servers[serverId] = serverEntry;
            this.callbacks.execute("onServerAdded", serverEntry.instance);
            return serverId;
        };
        ClientRepository.prototype.removeServerById = function (id, reason) {
            var _this = this;
            var server = this.servers[id];
            if (!server) {
                this.logger.warn("not aware of server " + id + ", my state " + JSON.stringify(Object.keys(this.servers)));
                return;
            }
            else {
                this.logger.debug("removing server " + id);
            }
            Object.keys(server.methods).forEach(function (methodId) {
                _this.removeServerMethod(id, methodId);
            });
            delete this.servers[id];
            this.callbacks.execute("onServerRemoved", server.instance, reason);
        };
        ClientRepository.prototype.addServerMethod = function (serverId, method) {
            var _a;
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            if (server.methods[method.id]) {
                return;
            }
            var identifier = this.createMethodIdentifier(method);
            var that = this;
            var methodDefinition = {
                identifier: identifier,
                gatewayId: method.id,
                name: method.name,
                displayName: method.display_name,
                description: method.description,
                version: method.version,
                objectTypes: method.object_types || [],
                accepts: method.input_signature,
                returns: method.result_signature,
                supportsStreaming: typeof method.flags !== "undefined" ? method.flags.streaming : false,
                flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},
                getServers: function () {
                    return that.getServersByMethod(identifier);
                }
            };
            methodDefinition.object_types = methodDefinition.objectTypes;
            methodDefinition.display_name = methodDefinition.displayName;
            methodDefinition.version = methodDefinition.version;
            server.methods[method.id] = methodDefinition;
            var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);
            if (!this.methodsCount[identifier]) {
                this.methodsCount[identifier] = 0;
                this.callbacks.execute("onMethodAdded", clientMethodDefinition);
            }
            this.methodsCount[identifier] = this.methodsCount[identifier] + 1;
            this.callbacks.execute("onServerMethodAdded", server.instance, clientMethodDefinition);
            return methodDefinition;
        };
        ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            var method = server.methods[methodId];
            delete server.methods[methodId];
            var clientMethodDefinition = hideMethodSystemFlags(method);
            this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;
            if (this.methodsCount[method.identifier] === 0) {
                this.callbacks.execute("onMethodRemoved", clientMethodDefinition);
            }
            this.callbacks.execute("onServerMethodRemoved", server.instance, clientMethodDefinition);
        };
        ClientRepository.prototype.getMethods = function () {
            return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);
        };
        ClientRepository.prototype.getServers = function () {
            return Object.values(this.servers).map(this.hideServerMethodSystemFlags);
        };
        ClientRepository.prototype.onServerAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerAdded", callback);
            var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);
        };
        ClientRepository.prototype.onMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodAdded", callback);
            var methodsToReplay = this.getMethods();
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);
        };
        ClientRepository.prototype.onServerMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodAdded", callback);
            var unsubCalled = false;
            var servers = this.getServers();
            setTimeout(function () {
                servers.forEach(function (server) {
                    var methods = server.methods;
                    Object.keys(methods).forEach(function (methodId) {
                        if (!unsubCalled) {
                            callback(server.instance, methods[methodId]);
                        }
                    });
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.onMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.getServerById = function (id) {
            return this.hideServerMethodSystemFlags(this.servers[id]);
        };
        ClientRepository.prototype.reset = function () {
            var _a;
            var _this = this;
            Object.keys(this.servers).forEach(function (key) {
                _this.removeServerById(key, "reset");
            });
            this.servers = (_a = {},
                _a[this.myServer.id] = this.myServer,
                _a);
            this.methodsCount = {};
        };
        ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {
            var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : "";
            var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : "";
            return (methodInfo.name + accepts + returns).toLowerCase();
        };
        ClientRepository.prototype.getServersByMethod = function (identifier) {
            var allServers = [];
            Object.values(this.servers).forEach(function (server) {
                Object.values(server.methods).forEach(function (method) {
                    if (method.identifier === identifier) {
                        allServers.push(server.instance);
                    }
                });
            });
            return allServers;
        };
        ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {
            var unsubCalled = false;
            setTimeout(function () {
                collectionToReplay.forEach(function (item) {
                    if (!unsubCalled) {
                        callback(item);
                    }
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {
            var clientMethods = {};
            Object.entries(server.methods).forEach(function (_a) {
                var name = _a[0], method = _a[1];
                clientMethods[name] = hideMethodSystemFlags(method);
            });
            return __assign$1(__assign$1({}, server), { methods: clientMethods });
        };
        ClientRepository.prototype.extractMethodsFromServers = function (servers) {
            var methods = Object.values(servers).reduce(function (clientMethods, server) {
                return __spreadArrays(clientMethods, Object.values(server.methods));
            }, []);
            return methods;
        };
        return ClientRepository;
    }());

    var ServerRepository = (function () {
        function ServerRepository() {
            this.nextId = 0;
            this.methods = [];
        }
        ServerRepository.prototype.add = function (method) {
            method.repoId = String(this.nextId);
            this.nextId += 1;
            this.methods.push(method);
            return method;
        };
        ServerRepository.prototype.remove = function (repoId) {
            if (typeof repoId !== "string") {
                return new TypeError("Expecting a string");
            }
            this.methods = this.methods.filter(function (m) {
                return m.repoId !== repoId;
            });
        };
        ServerRepository.prototype.getById = function (id) {
            if (typeof id !== "string") {
                return undefined;
            }
            return this.methods.find(function (m) {
                return m.repoId === id;
            });
        };
        ServerRepository.prototype.getList = function () {
            return this.methods.map(function (m) { return m; });
        };
        ServerRepository.prototype.length = function () {
            return this.methods.length;
        };
        ServerRepository.prototype.reset = function () {
            this.methods = [];
        };
        return ServerRepository;
    }());

    var SUBSCRIPTION_REQUEST = "onSubscriptionRequest";
    var SUBSCRIPTION_ADDED = "onSubscriptionAdded";
    var SUBSCRIPTION_REMOVED = "onSubscriptionRemoved";
    var ServerStreaming$1 = (function () {
        function ServerStreaming(session, repository, serverRepository) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.serverRepository = serverRepository;
            this.ERR_URI_SUBSCRIPTION_FAILED = "com.tick42.agm.errors.subscription.failure";
            this.callbacks = lib$1();
            this.nextStreamId = 0;
            session.on("add-interest", function (msg) {
                _this.handleAddInterest(msg);
            });
            session.on("remove-interest", function (msg) {
                _this.handleRemoveInterest(msg);
            });
        }
        ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {
            if (typeof branch !== "string") {
                branch = "";
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                throw new TypeError("The streaming method is missing its subscriptions.");
            }
            if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                throw new TypeError("The streaming method is missing its branches.");
            }
            var streamId = this.getStreamId(streamingMethod, branch);
            var key = requestContext.msg.subscription_id;
            var subscription = {
                id: key,
                arguments: requestContext.arguments,
                instance: requestContext.instance,
                branchKey: branch,
                streamId: streamId,
                subscribeMsg: requestContext.msg,
            };
            streamingMethod.protocolState.subscriptionsMap[key] = subscription;
            this.session.sendFireAndForget({
                type: "accepted",
                subscription_id: key,
                stream_id: streamId,
            });
            this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {
            if (typeof reason !== "string") {
                reason = "";
            }
            this.sendSubscriptionFailed("Subscription rejected by user. " + reason, requestContext.msg.subscription_id);
        };
        ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {
            var _this = this;
            if (typeof streamingMethod !== "object" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                return;
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            if (typeof branches === "string") {
                branches = [branches];
            }
            else if (!Array.isArray(branches) || branches.length <= 0) {
                branches = [];
            }
            var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap
                .filter(function (br) {
                if (!branches || branches.length === 0) {
                    return true;
                }
                return branches.indexOf(br.key) >= 0;
            }).map(function (br) {
                return br.streamId;
            });
            streamIdList.forEach(function (streamId) {
                var publishMessage = {
                    type: "publish",
                    stream_id: streamId,
                    data: data,
                };
                _this.session.sendFireAndForget(publishMessage);
            });
        };
        ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            var postMessage = {
                type: "post",
                subscription_id: subscription.id,
                data: data,
            };
            this.session.sendFireAndForget(postMessage);
        };
        ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {
            if (streamingMethod.protocolState.subscriptionsMap) {
                delete streamingMethod.protocolState.subscriptionsMap[subscription.id];
            }
            var dropSubscriptionMessage = {
                type: "drop-subscription",
                subscription_id: subscription.id,
                reason: "Server dropping a single subscription",
            };
            this.session.sendFireAndForget(dropSubscriptionMessage);
            var subscriber = subscription.instance;
            this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {
            var _this = this;
            if (typeof streamingMethod !== "object" || typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var subscriptionsToClose = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey === "string") {
                subscriptionsToClose = subscriptionsToClose.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            subscriptionsToClose.forEach(function (subscription) {
                delete subscriptionsMap[subscription.id];
                var drop = {
                    type: "drop-subscription",
                    subscription_id: subscription.id,
                    reason: "Server dropping all subscriptions on stream_id: " + subscription.streamId,
                };
                _this.session.sendFireAndForget(drop);
            });
        };
        ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            var subscriptions = [];
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey !== "string") {
                subscriptions = allSubscriptions;
            }
            else {
                subscriptions = allSubscriptions.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            return subscriptions;
        };
        ServerStreaming.prototype.getBranchList = function (streamingMethod) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            var result = [];
            allSubscriptions.forEach(function (sub) {
                var branch = "";
                if (typeof sub === "object" && typeof sub.branchKey === "string") {
                    branch = sub.branchKey;
                }
                if (result.indexOf(branch) === -1) {
                    result.push(branch);
                }
            });
            return result;
        };
        ServerStreaming.prototype.onSubAdded = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);
        };
        ServerStreaming.prototype.onSubRequest = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);
        };
        ServerStreaming.prototype.onSubRemoved = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);
        };
        ServerStreaming.prototype.handleRemoveInterest = function (msg) {
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (typeof msg.subscription_id !== "string" ||
                typeof streamingMethod !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== "object") {
                return;
            }
            var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {
            this.callbacks.add(eventName, handlerFunc);
        };
        ServerStreaming.prototype.getNextStreamId = function () {
            return this.nextStreamId++ + "";
        };
        ServerStreaming.prototype.handleAddInterest = function (msg) {
            var caller = this.repository.getServerById(msg.caller_id);
            var instance = caller.instance;
            var requestContext = {
                msg: msg,
                arguments: msg.arguments_kv || {},
                instance: instance,
            };
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (streamingMethod === undefined) {
                var errorMsg = "No method with id " + msg.method_id + " on this server.";
                this.sendSubscriptionFailed(errorMsg, msg.subscription_id);
                return;
            }
            if (streamingMethod.protocolState.subscriptionsMap &&
                streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {
                this.sendSubscriptionFailed("A subscription with id " + msg.subscription_id + " already exists.", msg.subscription_id);
                return;
            }
            this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);
        };
        ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {
            var errorMessage = {
                type: "error",
                reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,
                reason: reason,
                request_id: subscriptionId,
            };
            this.session.sendFireAndForget(errorMessage);
        };
        ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {
            if (typeof branchKey !== "string") {
                branchKey = "";
            }
            if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {
                throw new Error("streaming " + streamingMethod.definition.name + " method without protocol state");
            }
            var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {
                return branch.key === branchKey;
            })[0];
            var streamId = (needleBranch ? needleBranch.streamId : undefined);
            if (typeof streamId !== "string" || streamId === "") {
                streamId = this.getNextStreamId();
                streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });
            }
            return streamId;
        };
        return ServerStreaming;
    }());

    var ServerProtocol = (function () {
        function ServerProtocol(session, clientRepository, serverRepository, logger) {
            var _this = this;
            this.session = session;
            this.clientRepository = clientRepository;
            this.serverRepository = serverRepository;
            this.logger = logger;
            this.callbacks = lib$1();
            this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);
            this.session.on("invoke", function (msg) { return _this.handleInvokeMessage(msg); });
        }
        ServerProtocol.prototype.createStream = function (repoMethod) {
            repoMethod.protocolState.subscriptionsMap = {};
            repoMethod.protocolState.branchKeyToStreamIdMap = [];
            return this.register(repoMethod, true);
        };
        ServerProtocol.prototype.register = function (repoMethod, isStreaming) {
            var _this = this;
            var _a;
            var methodDef = repoMethod.definition;
            var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });
            var registerMsg = {
                type: "register",
                methods: [{
                        id: repoMethod.repoId,
                        name: methodDef.name,
                        display_name: methodDef.displayName,
                        description: methodDef.description,
                        version: methodDef.version,
                        flags: flags,
                        object_types: methodDef.objectTypes || methodDef.object_types,
                        input_signature: methodDef.accepts,
                        result_signature: methodDef.returns,
                        restrictions: undefined,
                    }],
            };
            return this.session.send(registerMsg, { methodId: repoMethod.repoId })
                .then(function () {
                _this.logger.debug("registered method " + repoMethod.definition.name + " with id " + repoMethod.repoId);
            })
                .catch(function (msg) {
                _this.logger.warn("failed to register method " + repoMethod.definition.name + " with id " + repoMethod.repoId + " - " + JSON.stringify(msg));
                throw msg;
            });
        };
        ServerProtocol.prototype.onInvoked = function (callback) {
            this.callbacks.add("onInvoked", callback);
        };
        ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {
            var msg;
            if (err || err === "") {
                msg = {
                    type: "error",
                    request_id: invocationId,
                    reason_uri: "agm.errors.client_error",
                    reason: err,
                    context: result,
                    peer_id: undefined,
                };
            }
            else {
                msg = {
                    type: "yield",
                    invocation_id: invocationId,
                    peer_id: this.session.peerId,
                    result: result,
                    request_id: undefined,
                };
            }
            this.session.sendFireAndForget(msg);
        };
        ServerProtocol.prototype.unregister = function (method) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var msg;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            msg = {
                                type: "unregister",
                                methods: [method.repoId],
                            };
                            return [4, this.session.send(msg)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        ServerProtocol.prototype.getBranchList = function (method) {
            return this.streaming.getBranchList(method);
        };
        ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {
            return this.streaming.getSubscriptionList(method, branchKey);
        };
        ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {
            this.streaming.closeMultipleSubscriptions(method, branchKey);
        };
        ServerProtocol.prototype.pushData = function (method, data, branches) {
            this.streaming.pushData(method, data, branches);
        };
        ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {
            this.streaming.pushDataToSingle(method, subscription, data);
        };
        ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {
            this.streaming.closeSingleSubscription(method, subscription);
        };
        ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {
            this.streaming.acceptRequestOnBranch(requestContext, method, branch);
        };
        ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {
            this.streaming.rejectRequest(requestContext, method, reason);
        };
        ServerProtocol.prototype.onSubRequest = function (callback) {
            this.streaming.onSubRequest(callback);
        };
        ServerProtocol.prototype.onSubAdded = function (callback) {
            this.streaming.onSubAdded(callback);
        };
        ServerProtocol.prototype.onSubRemoved = function (callback) {
            this.streaming.onSubRemoved(callback);
        };
        ServerProtocol.prototype.handleInvokeMessage = function (msg) {
            var invocationId = msg.invocation_id;
            var callerId = msg.caller_id;
            var methodId = msg.method_id;
            var args = msg.arguments_kv;
            var methodList = this.serverRepository.getList();
            var method = methodList.filter(function (m) {
                return m.repoId === methodId;
            })[0];
            if (method === undefined) {
                return;
            }
            var client = this.clientRepository.getServerById(callerId).instance;
            var invocationArgs = { args: args, instance: client };
            this.callbacks.execute("onInvoked", method, invocationId, invocationArgs);
        };
        return ServerProtocol;
    }());

    var UserSubscription = (function () {
        function UserSubscription(repository, subscriptionData) {
            this.repository = repository;
            this.subscriptionData = subscriptionData;
        }
        Object.defineProperty(UserSubscription.prototype, "requestArguments", {
            get: function () {
                return this.subscriptionData.params.arguments || {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "servers", {
            get: function () {
                var _this = this;
                return this.subscriptionData.trackedServers
                    .filter(function (pair) { return pair.subscriptionId; })
                    .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "serverInstance", {
            get: function () {
                return this.servers[0];
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "stream", {
            get: function () {
                return this.subscriptionData.method;
            },
            enumerable: true,
            configurable: true
        });
        UserSubscription.prototype.onData = function (dataCallback) {
            if (typeof dataCallback !== "function") {
                throw new TypeError("The data callback must be a function.");
            }
            this.subscriptionData.handlers.onData.push(dataCallback);
            if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {
                this.subscriptionData.queued.data.forEach(function (dataItem) {
                    dataCallback(dataItem);
                });
            }
        };
        UserSubscription.prototype.onClosed = function (closedCallback) {
            if (typeof closedCallback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onClosed.push(closedCallback);
        };
        UserSubscription.prototype.onFailed = function (callback) {
        };
        UserSubscription.prototype.onConnected = function (callback) {
            if (typeof callback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onConnected.push(callback);
        };
        UserSubscription.prototype.close = function () {
            this.subscriptionData.close();
        };
        UserSubscription.prototype.setNewSubscription = function (newSub) {
            this.subscriptionData = newSub;
        };
        return UserSubscription;
    }());

    var STATUS_AWAITING_ACCEPT = "awaitingAccept";
    var STATUS_SUBSCRIBED = "subscribed";
    var ERR_MSG_SUB_FAILED = "Subscription failed.";
    var ERR_MSG_SUB_REJECTED = "Subscription rejected.";
    var ON_CLOSE_MSG_SERVER_INIT = "ServerInitiated";
    var ON_CLOSE_MSG_CLIENT_INIT = "ClientInitiated";
    var ClientStreaming = (function () {
        function ClientStreaming(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            this.nextSubLocalKey = 0;
            this.handleErrorSubscribing = function (errorResponse) {
                var tag = errorResponse._tag;
                var subLocalKey = tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                    return server.serverId !== tag.serverId;
                });
                if (pendingSub.trackedServers.length <= 0) {
                    clearTimeout(pendingSub.timeoutId);
                    if (pendingSub.status === STATUS_AWAITING_ACCEPT) {
                        var reason = (typeof errorResponse.reason === "string" && errorResponse.reason !== "") ?
                            ' Publisher said "' + errorResponse.reason + '".' :
                            " No reason given.";
                        var callArgs = typeof pendingSub.params.arguments === "object" ?
                            JSON.stringify(pendingSub.params.arguments) :
                            "{}";
                        pendingSub.error({
                            message: ERR_MSG_SUB_REJECTED + reason + " Called with:" + callArgs,
                            called_with: pendingSub.params.arguments,
                            method: pendingSub.method,
                        });
                    }
                    else if (pendingSub.status === STATUS_SUBSCRIBED) {
                        _this.callOnClosedHandlers(pendingSub);
                    }
                    delete _this.subscriptionsList[subLocalKey];
                }
            };
            this.handleSubscribed = function (msg) {
                var subLocalKey = msg._tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                var serverId = msg._tag.serverId;
                var acceptingServer = pendingSub.trackedServers
                    .filter(function (server) {
                    return server.serverId === serverId;
                })[0];
                if (typeof acceptingServer !== "object") {
                    return;
                }
                acceptingServer.subscriptionId = msg.subscription_id;
                _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;
                var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);
                pendingSub.status = STATUS_SUBSCRIBED;
                if (isFirstResponse) {
                    var reconnect = false;
                    var sub = pendingSub.subscription;
                    if (sub) {
                        sub.setNewSubscription(pendingSub);
                        pendingSub.success(sub);
                        reconnect = true;
                    }
                    else {
                        sub = new UserSubscription(_this.repository, pendingSub);
                        pendingSub.subscription = sub;
                        pendingSub.success(sub);
                    }
                    for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {
                        var handler = _a[_i];
                        try {
                            handler(sub.serverInstance, reconnect);
                        }
                        catch (e) {
                        }
                    }
                }
            };
            this.handleEventData = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var trackedServersFound = subscription.trackedServers.filter(function (server) {
                    return server.subscriptionId === msg.subscription_id;
                });
                if (trackedServersFound.length !== 1) {
                    return;
                }
                var isPrivateData = msg.oob;
                var sendingServerId = trackedServersFound[0].serverId;
                var receivedStreamData = function () {
                    return {
                        data: msg.data,
                        server: _this.repository.getServerById(sendingServerId).instance,
                        requestArguments: subscription.params.arguments,
                        message: undefined,
                        private: isPrivateData,
                    };
                };
                var onDataHandlers = subscription.handlers.onData;
                var queuedData = subscription.queued.data;
                if (onDataHandlers.length > 0) {
                    onDataHandlers.forEach(function (callback) {
                        if (typeof callback === "function") {
                            callback(receivedStreamData());
                        }
                    });
                }
                else {
                    queuedData.push(receivedStreamData());
                }
            };
            this.handleSubscriptionCancelled = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var expectedNewLength = subscription.trackedServers.length - 1;
                subscription.trackedServers = subscription.trackedServers.filter(function (server) {
                    if (server.subscriptionId === msg.subscription_id) {
                        subscription.queued.closers.push(server.serverId);
                        return false;
                    }
                    else {
                        return true;
                    }
                });
                if (subscription.trackedServers.length !== expectedNewLength) {
                    return;
                }
                if (subscription.trackedServers.length <= 0) {
                    clearTimeout(subscription.timeoutId);
                    _this.callOnClosedHandlers(subscription);
                    delete _this.subscriptionsList[subLocalKey];
                }
                delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
            };
            session.on("subscribed", this.handleSubscribed);
            session.on("event", this.handleEventData);
            session.on("subscription-cancelled", this.handleSubscriptionCancelled);
        }
        ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {
            var _this = this;
            if (targetServers.length === 0) {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED + " No available servers matched the target params.",
                });
                return;
            }
            var subLocalKey = this.getNextSubscriptionLocalKey();
            var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);
            if (typeof pendingSub !== "object") {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED + " Unable to register the user callbacks.",
                });
                return;
            }
            targetServers.forEach(function (target) {
                var serverId = target.server.id;
                var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });
                if (!method) {
                    _this.logger.error("can not find method " + streamingMethod.name + " for target " + target.server.id);
                    return;
                }
                pendingSub.trackedServers.push({
                    serverId: serverId,
                    subscriptionId: undefined,
                });
                var msg = {
                    type: "subscribe",
                    server_id: serverId,
                    method_id: method.gatewayId,
                    arguments_kv: params.arguments,
                };
                _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })
                    .then(function (m) { return _this.handleSubscribed(m); })
                    .catch(function (err) { return _this.handleErrorSubscribing(err); });
            });
        };
        ClientStreaming.prototype.drainSubscriptions = function () {
            var existing = Object.values(this.subscriptionsList);
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            return existing;
        };
        ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {
            var current = this.nextSubLocalKey;
            this.nextSubLocalKey += 1;
            return current;
        };
        ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {
            var _this = this;
            var subsInfo = {
                localKey: subLocalKey,
                status: STATUS_AWAITING_ACCEPT,
                method: method,
                params: params,
                success: success,
                error: error,
                trackedServers: [],
                handlers: {
                    onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],
                    onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],
                    onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],
                },
                queued: {
                    data: [],
                    closers: [],
                },
                timeoutId: undefined,
                close: function () { return _this.closeSubscription(subLocalKey); },
                subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription
            };
            if (!existingSub) {
                if (params.onData) {
                    subsInfo.handlers.onData.push(params.onData);
                }
                if (params.onClosed) {
                    subsInfo.handlers.onClosed.push(params.onClosed);
                }
                if (params.onConnected) {
                    subsInfo.handlers.onConnected.push(params.onConnected);
                }
            }
            this.subscriptionsList[subLocalKey] = subsInfo;
            subsInfo.timeoutId = setTimeout(function () {
                if (_this.subscriptionsList[subLocalKey] === undefined) {
                    return;
                }
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {
                    error({
                        method: method,
                        called_with: params.arguments,
                        message: ERR_MSG_SUB_FAILED + " Subscription attempt timed out after " + timeout + " ms.",
                    });
                    delete _this.subscriptionsList[subLocalKey];
                }
                else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {
                    pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                        return (typeof server.subscriptionId !== "undefined");
                    });
                    delete pendingSub.timeoutId;
                    if (pendingSub.trackedServers.length <= 0) {
                        _this.callOnClosedHandlers(pendingSub);
                        delete _this.subscriptionsList[subLocalKey];
                    }
                }
            }, timeout);
            return subsInfo;
        };
        ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {
            var closersCount = subscription.queued.closers.length;
            var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;
            var closingServer;
            if (closingServerId !== undefined && typeof closingServerId === "string") {
                closingServer = this.repository.getServerById(closingServerId).instance;
            }
            subscription.handlers.onClosed.forEach(function (callback) {
                if (typeof callback !== "function") {
                    return;
                }
                callback({
                    message: reason || ON_CLOSE_MSG_SERVER_INIT,
                    requestArguments: subscription.params.arguments || {},
                    server: closingServer,
                    stream: subscription.method,
                });
            });
        };
        ClientStreaming.prototype.closeSubscription = function (subLocalKey) {
            var _this = this;
            var subscription = this.subscriptionsList[subLocalKey];
            if (typeof subscription !== "object") {
                return;
            }
            subscription.trackedServers.forEach(function (server) {
                if (typeof server.subscriptionId === "undefined") {
                    return;
                }
                subscription.queued.closers.push(server.serverId);
                _this.session.sendFireAndForget({
                    type: "unsubscribe",
                    subscription_id: server.subscriptionId,
                    reason_uri: "",
                    reason: ON_CLOSE_MSG_CLIENT_INIT,
                });
                delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];
            });
            subscription.trackedServers = [];
            this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);
            delete this.subscriptionsList[subLocalKey];
        };
        return ClientStreaming;
    }());

    var ClientProtocol = (function () {
        function ClientProtocol(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            session.on("peer-added", function (msg) { return _this.handlePeerAdded(msg); });
            session.on("peer-removed", function (msg) { return _this.handlePeerRemoved(msg); });
            session.on("methods-added", function (msg) { return _this.handleMethodsAddedMessage(msg); });
            session.on("methods-removed", function (msg) { return _this.handleMethodsRemovedMessage(msg); });
            this.streaming = new ClientStreaming(session, repository, logger);
        }
        ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {
            this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);
        };
        ClientProtocol.prototype.invoke = function (id, method, args, target) {
            var _this = this;
            var serverId = target.id;
            var methodId = method.gatewayId;
            var msg = {
                type: "call",
                server_id: serverId,
                method_id: methodId,
                arguments_kv: args,
            };
            return this.session.send(msg, { invocationId: id, serverId: serverId })
                .then(function (m) { return _this.handleResultMessage(m); })
                .catch(function (err) { return _this.handleInvocationError(err); });
        };
        ClientProtocol.prototype.drainSubscriptions = function () {
            return this.streaming.drainSubscriptions();
        };
        ClientProtocol.prototype.handlePeerAdded = function (msg) {
            var newPeerId = msg.new_peer_id;
            var remoteId = msg.identity;
            var isLocal = msg.meta ? msg.meta.local : true;
            var pid = Number(remoteId.process);
            var serverInfo = {
                machine: remoteId.machine,
                pid: isNaN(pid) ? remoteId.process : pid,
                instance: remoteId.instance,
                application: remoteId.application,
                applicationName: remoteId.applicationName,
                environment: remoteId.environment,
                region: remoteId.region,
                user: remoteId.user,
                windowId: remoteId.windowId,
                peerId: newPeerId,
                api: remoteId.api,
                isLocal: isLocal
            };
            this.repository.addServer(serverInfo, newPeerId);
        };
        ClientProtocol.prototype.handlePeerRemoved = function (msg) {
            var removedPeerId = msg.removed_id;
            var reason = msg.reason;
            this.repository.removeServerById(removedPeerId, reason);
        };
        ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methods = msg.methods;
            methods.forEach(function (method) {
                _this.repository.addServerMethod(serverId, method);
            });
        };
        ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methodIdList = msg.methods;
            var server = this.repository.getServerById(serverId);
            var serverMethodKeys = Object.keys(server.methods);
            serverMethodKeys.forEach(function (methodKey) {
                var method = server.methods[methodKey];
                if (methodIdList.indexOf(method.gatewayId) > -1) {
                    _this.repository.removeServerMethod(serverId, methodKey);
                }
            });
        };
        ClientProtocol.prototype.handleResultMessage = function (msg) {
            var invocationId = msg._tag.invocationId;
            var result = msg.result;
            var serverId = msg._tag.serverId;
            var server = this.repository.getServerById(serverId);
            return {
                invocationId: invocationId,
                result: result,
                instance: server.instance,
                status: InvokeStatus.Success,
                message: ""
            };
        };
        ClientProtocol.prototype.handleInvocationError = function (msg) {
            this.logger.debug("handle invocation error " + JSON.stringify(msg));
            if ("_tag" in msg) {
                var invocationId = msg._tag.invocationId;
                var serverId = msg._tag.serverId;
                var server = this.repository.getServerById(serverId);
                var message = msg.reason;
                var context_1 = msg.context;
                return {
                    invocationId: invocationId,
                    result: context_1,
                    instance: server.instance,
                    status: InvokeStatus.Error,
                    message: message
                };
            }
            else {
                return {
                    invocationId: "",
                    message: msg.message,
                    status: InvokeStatus.Error,
                    error: msg
                };
            }
        };
        return ClientProtocol;
    }());

    function gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {
        var logger = libConfig.logger.subLogger("gw3-protocol");
        var resolveReadyPromise;
        var readyPromise = new Promise(function (resolve) {
            resolveReadyPromise = resolve;
        });
        var session = connection.domain("agm", ["subscribed"]);
        var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger("server"));
        var client = new ClientProtocol(session, clientRepository, logger.subLogger("client"));
        function handleReconnect() {
            logger.info("reconnected - will replay registered methods and subscriptions");
            var existingSubscriptions = client.drainSubscriptions();
            for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {
                var sub = existingSubscriptions_1[_i];
                var methodInfo = sub.method;
                var params = Object.assign({}, sub.params);
                logger.info("trying to re-subscribe to method " + methodInfo.name);
                interop.client.subscribe(methodInfo, params, undefined, undefined, sub);
            }
            var registeredMethods = serverRepository.getList();
            serverRepository.reset();
            for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {
                var method = registeredMethods_1[_a];
                var def = method.definition;
                logger.info("re-publishing method " + def.name);
                if (method.stream) {
                    interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);
                }
                else if (method.theFunction && method.theFunction.userCallback) {
                    interop.register(def, method.theFunction.userCallback);
                }
                else if (method.theFunction && method.theFunction.userCallbackAsync) {
                    interop.registerAsync(def, method.theFunction.userCallbackAsync);
                }
            }
        }
        function handleInitialJoin() {
            if (resolveReadyPromise) {
                resolveReadyPromise({
                    client: client,
                    server: server,
                });
                resolveReadyPromise = undefined;
            }
        }
        session.onJoined(function (reconnect) {
            clientRepository.addServer(instance, connection.peerId);
            if (reconnect) {
                handleReconnect();
            }
            else {
                handleInitialJoin();
            }
        });
        session.onLeft(function () {
            clientRepository.reset();
        });
        session.join();
        return readyPromise;
    }

    var Interop = (function () {
        function Interop(configuration) {
            var _this = this;
            if (typeof configuration === "undefined") {
                throw new Error("configuration is required");
            }
            if (typeof configuration.connection === "undefined") {
                throw new Error("configuration.connections is required");
            }
            var connection = configuration.connection;
            if (typeof configuration.methodResponseTimeout !== "number") {
                configuration.methodResponseTimeout = 30 * 1000;
            }
            if (typeof configuration.waitTimeoutMs !== "number") {
                configuration.waitTimeoutMs = 30 * 1000;
            }
            this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);
            this.instance = this.unwrappedInstance.unwrap();
            this.clientRepository = new ClientRepository(configuration.logger.subLogger("cRep"), this);
            this.serverRepository = new ServerRepository();
            var protocolPromise;
            if (connection.protocolVersion === 3) {
                protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);
            }
            else {
                throw new Error("protocol " + connection.protocolVersion + " not supported");
            }
            this.readyPromise = protocolPromise.then(function (protocol) {
                _this.protocol = protocol;
                _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);
                _this.server = new Server(_this.protocol, _this.serverRepository);
                return _this;
            });
        }
        Interop.prototype.ready = function () {
            return this.readyPromise;
        };
        Interop.prototype.serverRemoved = function (callback) {
            return this.client.serverRemoved(callback);
        };
        Interop.prototype.serverAdded = function (callback) {
            return this.client.serverAdded(callback);
        };
        Interop.prototype.serverMethodRemoved = function (callback) {
            return this.client.serverMethodRemoved(callback);
        };
        Interop.prototype.serverMethodAdded = function (callback) {
            return this.client.serverMethodAdded(callback);
        };
        Interop.prototype.methodRemoved = function (callback) {
            return this.client.methodRemoved(callback);
        };
        Interop.prototype.methodAdded = function (callback) {
            return this.client.methodAdded(callback);
        };
        Interop.prototype.methodsForInstance = function (instance) {
            return this.client.methodsForInstance(instance);
        };
        Interop.prototype.methods = function (methodFilter) {
            return this.client.methods(methodFilter);
        };
        Interop.prototype.servers = function (methodFilter) {
            return this.client.servers(methodFilter);
        };
        Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {
            return this.client.subscribe(method, options, successCallback, errorCallback);
        };
        Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {
            return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);
        };
        Interop.prototype.unregister = function (methodFilter) {
            return this.server.unregister(methodFilter);
        };
        Interop.prototype.registerAsync = function (methodDefinition, callback) {
            return this.server.registerAsync(methodDefinition, callback);
        };
        Interop.prototype.register = function (methodDefinition, callback) {
            return this.server.register(methodDefinition, callback);
        };
        Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);
        };
        Interop.prototype.waitForMethod = function (name) {
            var pw = new PromiseWrapper();
            var unsubscribe = this.client.methodAdded(function (m) {
                if (m.name === name) {
                    unsubscribe();
                    pw.resolve(m);
                }
            });
            return pw.promise;
        };
        return Interop;
    }());

    var successMessages = ["subscribed", "success"];
    var MessageBus = (function () {
        function MessageBus(connection, logger) {
            var _this = this;
            this.publish = function (topic, data, options) {
                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                var args = _this.removeEmptyValues({
                    type: "publish",
                    topic: topic,
                    data: data,
                    peer_id: _this.peerId,
                    routing_key: routingKey,
                    target_identity: target
                });
                _this.session.send(args);
            };
            this.subscribe = function (topic, callback, options) {
                return new Promise(function (resolve, reject) {
                    var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                    var args = _this.removeEmptyValues({
                        type: "subscribe",
                        topic: topic,
                        peer_id: _this.peerId,
                        routing_key: routingKey,
                        source: target
                    });
                    _this.session.send(args)
                        .then(function (response) {
                        var subscription_id = response.subscription_id;
                        _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });
                        resolve({
                            unsubscribe: function () {
                                _this.session.send({ type: "unsubscribe", subscription_id: subscription_id, peer_id: _this.peerId });
                                _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });
                                return Promise.resolve();
                            }
                        });
                    })
                        .catch(function (error) { return reject(error); });
                });
            };
            this.watchOnEvent = function () {
                _this.session.on("event", function (args) {
                    var data = args.data, subscription_id = args.subscription_id;
                    var source = args["publisher-identity"];
                    var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });
                    if (subscription) {
                        if (!subscription.source) {
                            subscription.callback(data, subscription.topic, source);
                        }
                        else {
                            if (_this.keysMatch(subscription.source, source)) {
                                subscription.callback(data, subscription.topic, source);
                            }
                        }
                    }
                });
            };
            this.connection = connection;
            this.logger = logger;
            this.peerId = connection.peerId;
            this.subscriptions = [];
            this.session = connection.domain("bus", successMessages);
            this.readyPromise = this.session.join();
            this.readyPromise.then(function () {
                _this.watchOnEvent();
            });
        }
        MessageBus.prototype.ready = function () {
            return this.readyPromise;
        };
        MessageBus.prototype.removeEmptyValues = function (obj) {
            var cleaned = {};
            Object.keys(obj).forEach(function (key) {
                if (obj[key] !== undefined && obj[key] !== null) {
                    cleaned[key] = obj[key];
                }
            });
            return cleaned;
        };
        MessageBus.prototype.keysMatch = function (obj1, obj2) {
            var keysObj1 = Object.keys(obj1);
            var allMatch = true;
            keysObj1.forEach(function (key) {
                if (obj1[key] !== obj2[key]) {
                    allMatch = false;
                }
            });
            return allMatch;
        };
        return MessageBus;
    }());

    var GlueCore = function (userConfig, ext) {
        var gdVersion = Utils.getGDMajorVersion();
        var glue42gd;
        var preloadPromise = Promise.resolve();
        if (gdVersion) {
            if (gdVersion < 3) {
                throw new Error("GD v2 is not supported. Use v4 of the API to run in that context.");
            }
            else if (gdVersion >= 3) {
                glue42gd = window.glue42gd;
                preloadPromise = window.gdPreloadPromise || preloadPromise;
            }
        }
        var glueInitTimer = timer("glue");
        userConfig = userConfig || {};
        ext = ext || {};
        var internalConfig = prepareConfig(userConfig, ext, glue42gd);
        var _connection;
        var _interop;
        var _logger;
        var _metrics;
        var _contexts;
        var _bus;
        var _allowTrace;
        var libs = {};
        function registerLib(name, inner, t) {
            _allowTrace = _logger.canPublish("trace");
            if (_allowTrace) {
                _logger.trace("registering " + name + " module");
            }
            var done = function () {
                inner.initTime = t.stop();
                inner.initEndTime = t.endTime;
                inner.marks = t.marks;
                if (_allowTrace) {
                    _logger.trace(name + " is ready - " + (t.endTime - t.startTime));
                }
            };
            inner.initStartTime = t.startTime;
            if (inner.ready) {
                inner.ready().then(function () {
                    done();
                });
            }
            else {
                done();
            }
            if (!Array.isArray(name)) {
                name = [name];
            }
            name.forEach(function (n) {
                libs[n] = inner;
                GlueCore[n] = inner;
            });
        }
        function setupConnection() {
            var initTimer = timer("connection");
            _connection = new Connection(internalConfig.connection, _logger.subLogger("connection"));
            var authPromise = Promise.resolve(internalConfig.auth);
            if (internalConfig.connection && !internalConfig.auth) {
                if (glue42gd) {
                    authPromise = glue42gd.getGWToken()
                        .then(function (token) {
                        return {
                            gatewayToken: token
                        };
                    });
                }
                else {
                    authPromise = Promise.reject("You need to provide auth information");
                }
            }
            return authPromise
                .then(function (authConfig) {
                initTimer.mark("auth-promise-resolved");
                var authRequest;
                if (Object.prototype.toString.call(authConfig) === "[object Object]") {
                    authRequest = authConfig;
                }
                else {
                    throw new Error("Invalid auth object - " + JSON.stringify(authConfig));
                }
                return _connection.login(authRequest);
            })
                .then(function () {
                registerLib("connection", _connection, initTimer);
                return internalConfig;
            })
                .catch(function (e) {
                if (_connection) {
                    _connection.logout();
                }
                throw e;
            });
        }
        function setupLogger() {
            var _a;
            var initTimer = timer("logger");
            _logger = new Logger("" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);
            _logger.consoleLevel(internalConfig.logger.console);
            _logger.publishLevel(internalConfig.logger.publish);
            if (_logger.canPublish("debug")) {
                _logger.debug("initializing glue...");
            }
            registerLib("logger", _logger, initTimer);
            return Promise.resolve(undefined);
        }
        function setupMetrics() {
            var _a, _b, _c, _d;
            var initTimer = timer("metrics");
            var config = internalConfig.metrics;
            var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;
            var identity = internalConfig.connection.identity;
            var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };
            var disableAutoAppSystem = (_a = (typeof config !== "boolean" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;
            _metrics = metrics({
                connection: config ? _connection : undefined,
                logger: _logger.subLogger("metrics"),
                canUpdateMetric: canUpdateMetric,
                system: "Glue42",
                service: (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : "metrics-service",
                instance: (_d = (_c = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _c !== void 0 ? _c : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _d !== void 0 ? _d : shortid(),
                disableAutoAppSystem: disableAutoAppSystem,
                pagePerformanceMetrics: typeof config !== "boolean" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined
            });
            registerLib("metrics", _metrics, initTimer);
            return Promise.resolve();
        }
        function setupInterop() {
            var initTimer = timer("interop");
            var agmConfig = {
                connection: _connection,
                logger: _logger.subLogger("interop"),
            };
            _interop = new Interop(agmConfig);
            Logger.Interop = _interop;
            registerLib(["interop", "agm"], _interop, initTimer);
            return Promise.resolve();
        }
        function setupContexts() {
            var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);
            var needsContexts = internalConfig.contexts || hasActivities;
            if (needsContexts) {
                var initTimer = timer("contexts");
                _contexts = new ContextsModule({
                    connection: _connection,
                    logger: _logger.subLogger("contexts")
                });
                registerLib("contexts", _contexts, initTimer);
                return _contexts;
            }
            else {
                var replayer = _connection.replayer;
                if (replayer) {
                    replayer.drain(ContextMessageReplaySpec.name);
                }
            }
        }
        function setupBus() {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var initTimer;
                return __generator(this, function (_a) {
                    if (!internalConfig.bus) {
                        return [2, Promise.resolve()];
                    }
                    initTimer = timer("bus");
                    _bus = new MessageBus(_connection, _logger.subLogger("bus"));
                    registerLib("bus", _bus, initTimer);
                    return [2, Promise.resolve()];
                });
            });
        }
        function setupExternalLibs(externalLibs) {
            try {
                externalLibs.forEach(function (lib) {
                    setupExternalLib(lib.name, lib.create);
                });
                return Promise.resolve();
            }
            catch (e) {
                return Promise.reject(e);
            }
        }
        function setupExternalLib(name, createCallback) {
            var initTimer = timer(name);
            var lib = createCallback(libs);
            if (lib) {
                registerLib(name, lib, initTimer);
            }
        }
        function waitForLibs() {
            var libsReadyPromises = Object.keys(libs).map(function (key) {
                var lib = libs[key];
                return lib.ready ?
                    lib.ready() : Promise.resolve();
            });
            return Promise.all(libsReadyPromises);
        }
        function constructGlueObject() {
            var feedbackFunc = function (feedbackInfo) {
                if (!_interop) {
                    return;
                }
                _interop.invoke("T42.ACS.Feedback", feedbackInfo, "best");
            };
            var info = {
                coreVersion: version$1,
                version: internalConfig.version
            };
            glueInitTimer.stop();
            var glue = {
                feedback: feedbackFunc,
                info: info,
                logger: _logger,
                interop: _interop,
                agm: _interop,
                connection: _connection,
                metrics: _metrics,
                contexts: _contexts,
                bus: _bus,
                version: internalConfig.version,
                userConfig: userConfig,
                done: function () {
                    _logger === null || _logger === void 0 ? void 0 : _logger.info("done called by user...");
                    return _connection.logout();
                }
            };
            glue.performance = {
                get glueVer() {
                    return internalConfig.version;
                },
                get glueConfig() {
                    return JSON.stringify(userConfig);
                },
                get browser() {
                    return window.performance.timing.toJSON();
                },
                get memory() {
                    return window.performance.memory;
                },
                get initTimes() {
                    var all = getAllTimers();
                    return Object.keys(all).map(function (key) {
                        var t = all[key];
                        return {
                            name: key,
                            duration: t.endTime - t.startTime,
                            marks: t.marks
                        };
                    });
                }
            };
            Object.keys(libs).forEach(function (key) {
                var lib = libs[key];
                glue[key] = lib;
            });
            glue.config = {};
            Object.keys(internalConfig).forEach(function (k) {
                glue.config[k] = internalConfig[k];
            });
            if (ext && ext.extOptions) {
                Object.keys(ext.extOptions).forEach(function (k) {
                    glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];
                });
            }
            if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {
                ext.enrichGlue(glue);
            }
            if (glue42gd && glue42gd.updatePerfData) {
                glue42gd.updatePerfData(glue.performance);
            }
            if (glue.agm) {
                var deprecatedDecorator = function (fn, wrong, proper) {
                    return function () {
                        glue.logger.warn("glue.js - 'glue.agm." + wrong + "' method is deprecated, use 'glue.interop." + proper + "' instead.");
                        return fn.apply(glue.agm, arguments);
                    };
                };
                var agmAny = glue.agm;
                agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, "method_added", "methodAdded");
                agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, "method_removed", "methodRemoved");
                agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, "server_added", "serverAdded");
                agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, "server_method_aded", "serverMethodAdded");
                agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, "server_method_removed", "serverMethodRemoved");
            }
            return glue;
        }
        return preloadPromise
            .then(setupLogger)
            .then(setupConnection)
            .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })
            .then(function () { return _interop.readyPromise; })
            .then(function () {
            return setupExternalLibs(internalConfig.libs || []);
        })
            .then(waitForLibs)
            .then(constructGlueObject)
            .catch(function (err) {
            return Promise.reject({
                err: err,
                libs: libs
            });
        });
    };
    if (typeof window !== "undefined") {
        window.GlueCore = GlueCore;
    }
    GlueCore.version = version$1;
    GlueCore.default = GlueCore;

    const glueWebFactory = createFactoryFunction(GlueCore);
    if (typeof window !== "undefined") {
        const windowAny = window;
        windowAny.GlueWeb = glueWebFactory;
        delete windowAny.GlueCore;
    }
    glueWebFactory.version = version;

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function createCommonjsModule$1(fn, basedir, module) {
    	return module = {
    		path: basedir,
    		exports: {},
    		require: function (path, base) {
    			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    		}
    	}, fn(module, module.exports), module.exports;
    }

    function getAugmentedNamespace(n) {
    	if (n.__esModule) return n;
    	var a = Object.defineProperty({}, '__esModule', {value: true});
    	Object.keys(n).forEach(function (k) {
    		var d = Object.getOwnPropertyDescriptor(n, k);
    		Object.defineProperty(a, k, d.get ? d : {
    			enumerable: true,
    			get: function () {
    				return n[k];
    			}
    		});
    	});
    	return a;
    }

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    (function(){
    var aa="cljs.core",ca="cljs.pprint",da="cljs.spec.alpha",ea="cljs.test",fa="cljs.tools.reader",ha="gateway-web.core",ja="gateway.auth.impl",ka="gateway.auth.spec",la="gateway.basic-auth.core",ma="gateway.cljs.authenticators",na="gateway.cljs.common",oa="gateway.cljs.local-client",pa="gateway.common.context.ops",qa="gateway.common.context.spec.messages",ra="gateway.common.context.spec.requests",sa="gateway.common.context.state",ta="gateway.common.spec.messages",va="gateway.common.spec.requests",xa=
    "gateway.domain",ya="gateway.domains.activity.activities",za="gateway.domains.activity.core",Aa="gateway.domains.agm.core",Ba="gateway.domains.agm.spec.messages",Ca="gateway.domains.agm.spec.register",Da="gateway.domains.agm.spec.requests",Ea="gateway.domains.agm.spec.unregister",Fa="gateway.domains.agm.subscriptions",Ga="gateway.domains.bus.core",Ha="gateway.domains.context.core",Ia="gateway.domains.global.core",Ja="gateway.domains.global.internal",Ka="gateway.domains.global.spec.messages",La="gateway.domains.global.spec.requests",
    Ma="gateway.domains.global.state",Na="gateway.domains.metrics.core",Oa="gateway.local-node.core",Pa="gateway.node",Qa="gateway.state.spec.activity",Ra="gateway.state.spec.agm",Sa="gateway.state.spec.bus",Ta="gateway.state.spec.common",Ua="gateway.state.spec.context",Va="gateway.state.spec.domain-registry",Wa="gateway.state.spec.factory",Xa="gateway.state.spec.mthds",Ya="gateway.state.spec.pending-requests",Za="gateway.state.spec.restrictions",$a="gateway.state.spec.state",ab="gateway.state.spec.tokens",
    bb="instaparse.gll",g,cb=this||self;
    function db(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return "array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return "object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return "array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return "function"}else return "null";
    else if("function"==b&&"undefined"==typeof a.call)return "object";return b}function eb(a){var b=db(a);return "array"==b||"object"==b&&"number"==typeof a.length}function fb(a){return "function"==db(a)}function hb(a){return a[jb]||(a[jb]=++kb)}var jb="closure_uid_"+(1E9*Math.random()>>>0),kb=0;function lb(a,b,c){return a.call.apply(a.bind,arguments)}
    function mb(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function nb(a,b,c){nb=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?lb:mb;return nb.apply(null,arguments)}
    function qb(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function tb(a,b){a=a.split(".");var c=cb;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}:c[d]=b;}
    function ub(a,b){function c(){}c.prototype=b.prototype;a.$h=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Td=function(d,e,f){for(var k=Array(arguments.length-2),l=2;l<arguments.length;l++)k[l-2]=arguments[l];return b.prototype[e].apply(d,k)};}function vb(a,b){var c=wb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)}function xb(a,b){this.ja=a|0;this.ea=b|0;}function yb(a){return 4294967296*a.ea+(a.ja>>>0)}g=xb.prototype;g.isSafeInteger=function(){var a=this.ea>>21;return 0==a||-1==a&&!(0==this.ja&&-2097152==this.ea)};
    g.toString=function(a){a=a||10;if(2>a||36<a)throw Error("radix out of range: "+a);if(this.isSafeInteger()){var b=yb(this);return 10==a?""+b:b.toString(a)}b=14-(a>>2);var c=Math.pow(a,b),d=zb(c,c/4294967296);c=Ab(this,d);d=Math.abs(yb(Bb(this,c.multiply(d))));var e=10==a?""+d:d.toString(a);e.length<b&&(e="0000000000000".substr(e.length-b)+e);d=yb(c);return (10==a?d:d.toString(a))+e};function Cb(a){return 0==a.ja&&0==a.ea}g.nd=function(a){return this.ja==a.ja&&this.ea==a.ea};
    g.compare=function(a){return this.ea==a.ea?this.ja==a.ja?0:this.ja>>>0>a.ja>>>0?1:-1:this.ea>a.ea?1:-1};function Db(a){var b=~a.ja+1|0;return zb(b,~a.ea+!b|0)}g.add=function(a){var b=this.ea>>>16,c=this.ea&65535,d=this.ja>>>16,e=a.ea>>>16,f=a.ea&65535,k=a.ja>>>16;a=(this.ja&65535)+(a.ja&65535);k=(a>>>16)+(d+k);d=k>>>16;d+=c+f;b=(d>>>16)+(b+e)&65535;return zb((k&65535)<<16|a&65535,b<<16|d&65535)};function Bb(a,b){return a.add(Db(b))}
    g.multiply=function(a){if(Cb(this))return this;if(Cb(a))return a;var b=this.ea>>>16,c=this.ea&65535,d=this.ja>>>16,e=this.ja&65535,f=a.ea>>>16,k=a.ea&65535,l=a.ja>>>16;a=a.ja&65535;var m=e*a;var r=(m>>>16)+d*a;var u=r>>>16;r=(r&65535)+e*l;u+=r>>>16;u+=c*a;var v=u>>>16;u=(u&65535)+d*l;v+=u>>>16;u=(u&65535)+e*k;v=v+(u>>>16)+(b*a+c*l+d*k+e*f)&65535;return zb((r&65535)<<16|m&65535,v<<16|u&65535)};
    function Ab(a,b){if(Cb(b))throw Error("division by zero");if(0>a.ea){if(a.nd(Eb)){if(b.nd(Fb)||b.nd(Gb))return Eb;if(b.nd(Eb))return Fb;var c=1;if(0==c)c=a;else {var d=a.ea;c=32>c?zb(a.ja>>>c|d<<32-c,d>>c):zb(d>>c-32,0<=d?0:-1);}c=Ab(c,b).shiftLeft(1);if(c.nd(Hb))return 0>b.ea?Fb:Gb;a=Bb(a,b.multiply(c));return c.add(Ab(a,b))}return 0>b.ea?Ab(Db(a),Db(b)):Db(Ab(Db(a),b))}if(Cb(a))return Hb;if(0>b.ea)return b.nd(Eb)?Hb:Db(Ab(a,Db(b)));for(d=Hb;0<=a.compare(b);){c=Math.max(1,Math.floor(yb(a)/yb(b)));
    var e=Math.ceil(Math.log(c)/Math.LN2);e=48>=e?1:Math.pow(2,e-48);for(var f=Ib(c),k=f.multiply(b);0>k.ea||0<k.compare(a);)c-=e,f=Ib(c),k=f.multiply(b);Cb(f)&&(f=Fb);d=d.add(f);a=Bb(a,k);}return d}g.and=function(a){return zb(this.ja&a.ja,this.ea&a.ea)};g.or=function(a){return zb(this.ja|a.ja,this.ea|a.ea)};g.xor=function(a){return zb(this.ja^a.ja,this.ea^a.ea)};g.shiftLeft=function(a){a&=63;if(0==a)return this;var b=this.ja;return 32>a?zb(b<<a,this.ea<<a|b>>>32-a):zb(0,b<<a-32)};
    function Ib(a){return 0<a?0x7fffffffffffffff<=a?Jb:new xb(a,a/4294967296):0>a?-9223372036854775808>=a?Eb:Db(new xb(-a,-a/4294967296)):Hb}function zb(a,b){return new xb(a,b)}var Hb=zb(0,0),Fb=zb(1,0),Gb=zb(-1,-1),Jb=zb(4294967295,2147483647),Eb=zb(0,2147483648);function Kb(a){return Array.prototype.concat.apply([],arguments)}function Lb(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return []}function Mb(a,b,c,d){return Array.prototype.splice.apply(a,Nb(arguments,1))}function Nb(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}function Ob(a,b){a.sort(b||Pb);}
    function Qb(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||Pb;Ob(c,function(f,k){return e(f.value,k.value)||f.index-k.index});for(d=0;d<a.length;d++)a[d]=c[d].value;}function Pb(a,b){return a>b?1:a<b?-1:0}function Rb(a){for(var b=[],c=0;c<a;c++)b[c]=0;return b}function Cc(a){this.kh=a;}Cc.prototype.toString=function(){return this.kh};var Um=new Cc("APPLET"),Xm=new Cc("BASE"),Gn=new Cc("EMBED"),fo=new Cc("IFRAME"),Mo=new Cc("LINK"),np=new Cc("MATH"),xp=new Cc("META"),Pq=new Cc("OBJECT"),yr=new Cc("SCRIPT"),Ms=new Cc("STYLE"),st=new Cc("SVG"),Vt=new Cc("TEMPLATE");function Ub(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function Vb(a,b){return null!==a&&b in a?a[b]:void 0}function mv(a){var b=arguments.length;if(1==b&&"array"==db(arguments[0]))return mv.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c}function Wb(a,b){this.Hh=a===Xb&&b||"";this.Wf=Yb;}var Yb={},Xb={},Zb=new Wb(Xb,"");function $b(){}$b.prototype.Jc=function(){return this};(new $b).Jc("");function ac(a,b){this.yh=a===bc&&b||"";this.Xf=cc;}var cc={},bc={};function dc(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c}function ec(a){return /^[\s\xa0]*$/.test(a)}var fc=String.prototype.trim?function(a){return a.trim()}:function(a){return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};function gc(a){return -1!=hc.toLowerCase().indexOf(a.toLowerCase())}function ic(a,b){return a<b?-1:a>b?1:0}function jc(){}jc.prototype.Jc=function(){return this};(new jc).Jc("");function kc(){}kc.prototype.Jc=function(){return this};(new kc).Jc("");var hc;a:{var lc=cb.navigator;if(lc){var nc=lc.userAgent;if(nc){hc=nc;break a}}hc="";}function oc(a){return -1!=hc.indexOf(a)}function pc(){return oc("Firefox")||oc("FxiOS")}function qc(){return (oc("Chrome")||oc("CriOS"))&&!oc("Edge")}function rc(){this.Ef="";this.Vf=sc;}function tc(){var a=uc;if(a instanceof rc&&a.constructor===rc&&a.Vf===sc)return a.Ef;db(a);return "type_error:SafeHtml"}mv(Um,Xm,Gn,fo,Mo,np,xp,Pq,yr,Ms,st,Vt);var sc={};rc.prototype.Jc=function(a){this.Ef=a;return this};(new rc).Jc("\x3c!DOCTYPE html\x3e");var uc=(new rc).Jc("");(new rc).Jc("\x3cbr\x3e");function vc(a){var b=new ac(bc,Zb instanceof Wb&&Zb.constructor===Wb&&Zb.Wf===Yb?Zb.Hh:"type_error:Const");b instanceof ac&&b.constructor===ac&&b.Xf===cc?b=b.yh:(db(b),b="type_error:TrustedResourceUrl");a.src=b.toString();}function wc(a){return 1==a.length&&" "<=a&&"~">=a||""<=a&&"�">=a}var yc=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};function zc(a,b){null!=a&&this.append.apply(this,arguments);}g=zc.prototype;g.Nc="";g.set=function(a){this.Nc=""+a;};g.append=function(a,b,c){this.Nc+=String(a);if(null!=b)for(var d=1;d<arguments.length;d++)this.Nc+=arguments[d];return this};g.clear=function(){this.Nc="";};g.getLength=function(){return this.Nc.length};g.toString=function(){return this.Nc};var Ac={},Bc={},vv,h={},Dc=null,Ec=null,Fc=!0,Gc=!0,Hc=null,Ic=null;function Jc(){return new n(null,5,[Kc,!0,Lc,Gc,Mc,!1,Nc,!1,Oc,Hc],null)}function Pc(){Fc=!1;Ec=function(){return console.log.apply(console,Lb(arguments))};}function p(a){return null!=a&&!1!==a}function Qc(a){return null==a}function Rc(a){return a instanceof Array}function Sc(a){return "number"===typeof a}function Tc(a){return null==a?!0:!1===a?!0:!1}function Uc(a){return null!=a}function Vc(a){return "string"==typeof a}
    function Wc(){return !0}function Xc(a,b){return a[db(null==b?null:b)]?!0:a._?!0:!1}function Yc(a){return null==a?null:a.constructor}function Zc(a,b){var c=Yc(b);c=p(p(c)?c.Ia:c)?c.Da:db(b);return Error(["No protocol method ",a," defined for type ",c,": ",b].join(""))}function $c(a){var b=a.Da;return p(b)?b:q.a(a)}
    var ad="undefined"!==typeof Symbol&&"function"===db(Symbol)?Symbol.iterator:"@@iterator",bd={"]":"_RBRACK_","'":"_SINGLEQUOTE_","\x3d":"_EQ_",'"':"_DOUBLEQUOTE_","!":"_BANG_","*":"_STAR_","%":"_PERCENT_","|":"_BAR_","~":"_TILDE_","/":"_SLASH_","\\":"_BSLASH_","-":"_","?":"_QMARK_","\x26":"_AMPERSAND_",":":"_COLON_","\x3c":"_LT_","{":"_LBRACE_","}":"_RBRACE_","[":"_LBRACK_","#":"_SHARP_","^":"_CARET_","+":"_PLUS_","@":"_CIRCA_","\x3e":"_GT_"},cd={_RBRACE_:"}",_COLON_:":",_BANG_:"!",_QMARK_:"?",_BSLASH_:"\\\\",
    _SLASH_:"/",_PERCENT_:"%",_PLUS_:"+",_SHARP_:"#",_LBRACE_:"{",_BAR_:"|",_LBRACK_:"[",_EQ_:"\x3d",_:"-",_TILDE_:"~",_RBRACK_:"]",_GT_:"\x3e",_SINGLEQUOTE_:"'",_CIRCA_:"@",_AMPERSAND_:"\x26",_DOUBLEQUOTE_:'\\"',_CARET_:"^",_LT_:"\x3c",_STAR_:"*"},dd=null;function ed(a){for(var b=a.length,c=Array(b),d=0;;)if(d<b)c[d]=a[d],d+=1;else break;return c}function fd(a){function b(d,e){d.push(e);return d}var c=[];return gd.c?gd.c(b,c,a):gd.call(null,b,c,a)}
    function nh(a){return "symbol"===db(a)||"undefined"!==typeof Symbol&&a instanceof Symbol}function hd(){}function id(){}function jd(){}function kd(a){if(null!=a&&null!=a.X)a=a.X(a);else {var b=kd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=kd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("ICounted.-count",a);}return a}function ld(){}
    function md(a){if(null!=a&&null!=a.pa)a=a.pa(a);else {var b=md[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=md._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IEmptyableCollection.-empty",a);}return a}function nd(){}function od(a,b){if(null!=a&&null!=a.ga)a=a.ga(a,b);else {var c=od[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=od._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ICollection.-conj",a);}return a}function pd(){}
    var Mz=function(){function a(d,e,f){var k=qd[db(null==d?null:d)];if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);k=qd._;if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);throw Zc("IIndexed.-nth",d);}function b(d,e){var f=qd[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=qd._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("IIndexed.-nth",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+
    arguments.length);};c.b=b;c.c=a;return c}(),qd=function qd(a){switch(arguments.length){case 2:return qd.b(arguments[0],arguments[1]);case 3:return qd.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};qd.b=function(a,b){return null!=a&&null!=a.W?a.W(a,b):Mz(a,b)};qd.c=function(a,b,c){return null!=a&&null!=a.wa?a.wa(a,b,c):Mz(a,b,c)};qd.F=3;function rd(){}
    function sd(a){if(null!=a&&null!=a.Fa)a=a.Fa(a);else {var b=sd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=sd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("ISeq.-first",a);}return a}function td(a){if(null!=a&&null!=a.Ha)a=a.Ha(a);else {var b=td[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=td._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("ISeq.-rest",a);}return a}function ud(){}
    function vd(a){if(null!=a&&null!=a.za)a=a.za(a);else {var b=vd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=vd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("INext.-next",a);}return a}function wd(){}
    var UA=function(){function a(d,e,f){var k=xd[db(null==d?null:d)];if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);k=xd._;if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);throw Zc("ILookup.-lookup",d);}function b(d,e){var f=xd[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=xd._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("ILookup.-lookup",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,
    f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.c=a;return c}(),xd=function xd(a){switch(arguments.length){case 2:return xd.b(arguments[0],arguments[1]);case 3:return xd.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};xd.b=function(a,b){return null!=a&&null!=a.ia?a.ia(a,b):UA(a,b)};xd.c=function(a,b,c){return null!=a&&null!=a.M?a.M(a,b,c):UA(a,b,c)};xd.F=3;function yd(){}
    function zd(a,b,c){if(null!=a&&null!=a.fa)a=a.fa(a,b,c);else {var d=zd[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=zd._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IAssociative.-assoc",a);}return a}function Ad(a,b){if(null!=a&&null!=a.Ac)a=a.Ac(a,b);else {var c=Ad[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Ad._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IFind.-find",a);}return a}function Bd(){}
    function Cd(a,b){if(null!=a&&null!=a.Ka)a=a.Ka(a,b);else {var c=Cd[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Cd._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IMap.-dissoc",a);}return a}function Dd(a){if(null!=a&&null!=a.Ce)a=a.key;else {var b=Dd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Dd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IMapEntry.-key",a);}return a}
    function Ed(a){if(null!=a&&null!=a.De)a=a.m;else {var b=Ed[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Ed._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IMapEntry.-val",a);}return a}function Fd(){}function Gd(a,b){if(null!=a&&null!=a.rf)a=a.rf(a,b);else {var c=Gd[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Gd._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ISet.-disjoin",a);}return a}
    function Hd(a){if(null!=a&&null!=a.Xb)a=a.Xb(a);else {var b=Hd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Hd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IStack.-peek",a);}return a}function Id(a){if(null!=a&&null!=a.Yb)a=a.Yb(a);else {var b=Id[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Id._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IStack.-pop",a);}return a}function Jd(){}
    function Kd(a,b,c){if(null!=a&&null!=a.Ib)a=a.Ib(a,b,c);else {var d=Kd[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=Kd._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IVector.-assoc-n",a);}return a}function Ld(){}function t(a){if(null!=a&&null!=a.zb)a=a.zb(a);else {var b=t[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=t._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IDeref.-deref",a);}return a}function Md(){}
    function Nd(a){if(null!=a&&null!=a.N)a=a.N(a);else {var b=Nd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Nd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IMeta.-meta",a);}return a}function Od(){}function Pd(a,b){if(null!=a&&null!=a.O)a=a.O(a,b);else {var c=Pd[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Pd._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IWithMeta.-with-meta",a);}return a}function Qd(){}
    var iC=function(){function a(d,e,f){var k=Rd[db(null==d?null:d)];if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);k=Rd._;if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);throw Zc("IReduce.-reduce",d);}function b(d,e){var f=Rd[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=Rd._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("IReduce.-reduce",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,
    f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.c=a;return c}(),Rd=function Rd(a){switch(arguments.length){case 2:return Rd.b(arguments[0],arguments[1]);case 3:return Rd.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};Rd.b=function(a,b){return null!=a&&null!=a.Ba?a.Ba(a,b):iC(a,b)};Rd.c=function(a,b,c){return null!=a&&null!=a.Ca?a.Ca(a,b,c):iC(a,b,c)};Rd.F=3;function Sd(){}
    function Td(a,b,c){if(null!=a&&null!=a.Aa)a=a.Aa(a,b,c);else {var d=Td[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=Td._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IKVReduce.-kv-reduce",a);}return a}function Ud(a,b){if(null!=a&&null!=a.Y)a=a.Y(a,b);else {var c=Ud[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Ud._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IEquiv.-equiv",a);}return a}
    function Vd(a){if(null!=a&&null!=a.Z)a=a.Z(a);else {var b=Vd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Vd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IHash.-hash",a);}return a}function Wd(){}function Xd(a){if(null!=a&&null!=a.$)a=a.$(a);else {var b=Xd[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Xd._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("ISeqable.-seq",a);}return a}function Yd(){}function Zd(){}function $d(){}function ae(){}
    function be(a){if(null!=a&&null!=a.Bc)a=a.Bc(a);else {var b=be[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=be._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IReversible.-rseq",a);}return a}function ce(a,b){if(null!=a&&null!=a.Pc)a=a.Pc(a,b);else {var c=ce[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=ce._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IWriter.-write",a);}return a}
    function de(a){if(null!=a&&null!=a.qc)a=a.qc(a);else {var b=de[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=de._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IWriter.-flush",a);}return a}function ee(){}function fe(a,b,c){if(null!=a&&null!=a.S)a=a.S(a,b,c);else {var d=fe[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=fe._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IPrintWithWriter.-pr-writer",a);}return a}function ge(){}
    function he(a){if(null!=a&&null!=a.Bd)a=a.Bd(a);else {var b=he[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=he._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IPending.-realized?",a);}return a}function ie(a,b,c){if(null!=a&&null!=a.Ge)a.Ge(a,b,c);else {var d=ie[db(null==a?null:a)];if(null!=d)d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=ie._,null!=d)d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IWatchable.-notify-watches",a);}}
    function je(a){if(null!=a&&null!=a.hd)a=a.hd(a);else {var b=je[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=je._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IEditableCollection.-as-transient",a);}return a}function ke(a,b){if(null!=a&&null!=a.kd)a=a.kd(a,b);else {var c=ke[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=ke._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ITransientCollection.-conj!",a);}return a}
    function le(a){if(null!=a&&null!=a.Cd)a=a.Cd(a);else {var b=le[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=le._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("ITransientCollection.-persistent!",a);}return a}function me(a,b,c){if(null!=a&&null!=a.jd)a=a.jd(a,b,c);else {var d=me[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=me._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("ITransientAssociative.-assoc!",a);}return a}
    function ne(a,b){if(null!=a&&null!=a.Fe)a=a.Fe(a,b);else {var c=ne[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=ne._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ITransientMap.-dissoc!",a);}return a}function oe(){}function pe(a,b){if(null!=a&&null!=a.Wb)a=a.Wb(a,b);else {var c=pe[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=pe._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IComparable.-compare",a);}return a}
    function qe(a){if(null!=a&&null!=a.ze)a=a.ze(a);else {var b=qe[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=qe._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IChunk.-drop-first",a);}return a}function re(a){if(null!=a&&null!=a.$d)a=a.$d(a);else {var b=re[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=re._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IChunkedSeq.-chunked-first",a);}return a}
    function se(a){if(null!=a&&null!=a.gd)a=a.gd(a);else {var b=se[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=se._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IChunkedSeq.-chunked-rest",a);}return a}function te(a){if(null!=a&&null!=a.yd)a=a.yd(a);else {var b=te[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=te._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("INamed.-name",a);}return a}
    function ue(a){if(null!=a&&null!=a.zd)a=a.zd(a);else {var b=ue[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=ue._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("INamed.-namespace",a);}return a}function ve(a,b){if(null!=a&&null!=a.mg)a=a.mg(a,b);else {var c=ve[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=ve._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IReset.-reset!",a);}return a}
    var WC=function(){function a(f,k,l,m,r){var u=we[db(null==f?null:f)];if(null!=u)return u.K?u.K(f,k,l,m,r):u.call(null,f,k,l,m,r);u=we._;if(null!=u)return u.K?u.K(f,k,l,m,r):u.call(null,f,k,l,m,r);throw Zc("ISwap.-swap!",f);}function b(f,k,l,m){var r=we[db(null==f?null:f)];if(null!=r)return r.A?r.A(f,k,l,m):r.call(null,f,k,l,m);r=we._;if(null!=r)return r.A?r.A(f,k,l,m):r.call(null,f,k,l,m);throw Zc("ISwap.-swap!",f);}function c(f,k,l){var m=we[db(null==f?null:f)];if(null!=m)return m.c?m.c(f,k,l):m.call(null,
    f,k,l);m=we._;if(null!=m)return m.c?m.c(f,k,l):m.call(null,f,k,l);throw Zc("ISwap.-swap!",f);}function d(f,k){var l=we[db(null==f?null:f)];if(null!=l)return l.b?l.b(f,k):l.call(null,f,k);l=we._;if(null!=l)return l.b?l.b(f,k):l.call(null,f,k);throw Zc("ISwap.-swap!",f);}var e=null;e=function(f,k,l,m,r){switch(arguments.length){case 2:return d.call(this,f,k);case 3:return c.call(this,f,k,l);case 4:return b.call(this,f,k,l,m);case 5:return a.call(this,f,k,l,m,r)}throw Error("Invalid arity: "+arguments.length);
    };e.b=d;e.c=c;e.A=b;e.K=a;return e}(),we=function we(a){switch(arguments.length){case 2:return we.b(arguments[0],arguments[1]);case 3:return we.c(arguments[0],arguments[1],arguments[2]);case 4:return we.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return we.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};we.b=function(a,b){return null!=a&&null!=a.ng?a.ng(a,b):WC(a,b)};
    we.c=function(a,b,c){return null!=a&&null!=a.og?a.og(a,b,c):WC(a,b,c)};we.A=function(a,b,c,d){return null!=a&&null!=a.pg?a.pg(a,b,c,d):WC(a,b,c,d)};we.K=function(a,b,c,d,e){return null!=a&&null!=a.qg?a.qg(a,b,c,d,e):WC(a,b,c,d,e)};we.F=5;function xe(a,b){if(null!=a&&null!=a.Cc)a.Cc(a,b);else {var c=xe[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=xe._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IVolatile.-vreset!",a);}}function ye(){}
    function ze(a){if(null!=a&&null!=a.ua)a=a.ua(a);else {var b=ze[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=ze._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IIterable.-iterator",a);}return a}function Ae(a){this.Fh=a;this.h=1073741824;this.I=0;}Ae.prototype.Pc=function(a,b){return this.Fh.append(b)};Ae.prototype.qc=function(){return null};function Be(a){var b=new zc,c=new Ae(b);a.S(null,c,Jc());c.qc(null);return q.a(b)}
    var Ce="undefined"!==typeof Math&&"undefined"!==typeof Math.imul&&0!==Math.imul(4294967295,5)?function(a,b){return Math.imul(a,b)}:function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};function De(a){a=Ce(a|0,-862048943);return Ce(a<<15|a>>>-15,461845907)}function Ee(a,b){a=(a|0)^(b|0);return Ce(a<<13|a>>>-13,5)+-430675100|0}function Fe(a,b){a=(a|0)^b;a=Ce(a^a>>>16,-2048144789);a=Ce(a^a>>>13,-1028477387);return a^a>>>16}var Ge={},He=0;
    function Ie(a){255<He&&(Ge={},He=0);if(null==a)return 0;var b=Ge[a];if("number"===typeof b)a=b;else {a:if(null!=a)if(b=a.length,0<b)for(var c=0,d=0;;)if(c<b)d=Ce(31,d)+a.charCodeAt(c),c+=1;else {b=d;break a}else b=0;else b=0;Ge[a]=b;He+=1;a=b;}return a}
    function Je(a){if(null!=a&&(a.h&4194304||h===a.Oh))return a.Z(null)^0;if("number"===typeof a){if(p(isFinite(a)))return Math.floor(a)%2147483647;switch(a){case Infinity:return 2146435072;case -Infinity:return -1048576;default:return 2146959360}}else return !0===a?a=1231:!1===a?a=1237:"string"===typeof a?(a=Ie(a),a=0===a?a:Fe(Ee(0,De(a)),4)):a=a instanceof Date?a.valueOf()^0:null==a?0:Vd(a)^0,a}
    function Ke(a){var b=a.name;a:{var c=1;for(var d=0;;)if(c<b.length)d=Ee(d,De(b.charCodeAt(c-1)|b.charCodeAt(c)<<16)),c+=2;else {c=d;break a}}b=Fe(1===(b.length&1)?c^De(b.charCodeAt(b.length-1)):c,Ce(2,b.length));a=Ie(a.vb);return b^a+2654435769+(b<<6)+(b>>2)}function Le(a,b){if(a.wc===b.wc)return 0;if(p(Tc(a.vb)?b.vb:!1))return -1;if(p(a.vb)){if(Tc(b.vb))return 1;var c=Pb(a.vb,b.vb);return 0===c?Pb(a.name,b.name):c}return Pb(a.name,b.name)}
    function w(a,b,c,d,e){this.vb=a;this.name=b;this.wc=c;this.ed=d;this.Kb=e;this.h=2154168321;this.I=4096;}g=w.prototype;g.toString=function(){return this.wc};g.Y=function(a,b){return b instanceof w?this.wc===b.wc:!1};
    g.call=function(){function a(d,e,f){return x.c?x.c(e,this,f):x.call(null,e,this,f)}function b(d,e){return x.b?x.b(e,this):x.call(null,e,this)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+(arguments.length-1));};c.b=b;c.c=a;return c}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return x.b?x.b(a,this):x.call(null,a,this)};
    g.b=function(a,b){return x.c?x.c(a,this,b):x.call(null,a,this,b)};g.N=function(){return this.Kb};g.O=function(a,b){return new w(this.vb,this.name,this.wc,this.ed,b)};g.Z=function(){var a=this.ed;return null!=a?a:this.ed=a=Ke(this)};g.yd=function(){return this.name};g.zd=function(){return this.vb};g.S=function(a,b){return ce(b,this.wc)};
    var Me=function Me(a){switch(arguments.length){case 1:return Me.a(arguments[0]);case 2:return Me.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};Me.a=function(a){for(;;){if(a instanceof w)return a;if("string"===typeof a){var b=a.indexOf("/");return 1>b?Me.b(null,a):Me.b(a.substring(0,b),a.substring(b+1,a.length))}if(a instanceof Ne)return a.bd;if(a instanceof z)a=a.da;else throw Error("no conversion to symbol");}};
    Me.b=function(a,b){var c=null!=a?[q.a(a),"/",q.a(b)].join(""):b;return new w(a,b,c,null,null)};Me.F=2;function Ne(a,b,c){this.m=a;this.bd=b;this.Kb=c;this.h=6717441;this.I=0;}g=Ne.prototype;g.toString=function(){return ["#'",q.a(this.bd)].join("")};g.zb=function(){return this.m.o?this.m.o():this.m.call(null)};g.N=function(){return this.Kb};g.O=function(a,b){return new Ne(this.m,this.bd,b)};g.Y=function(a,b){return b instanceof Ne?(a=this.bd,b=b.bd,A.b?A.b(a,b):A.call(null,a,b)):!1};g.Z=function(){return Ke(this.bd)};
    g.mf=h;
    g.call=function(){function a(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return Oe.Be?Oe.Be(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_):Oe.call(null,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_)}function b(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.rb?rb.rb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_):
    rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_)}function c(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.hb?rb.hb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_)}function d(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.qb?rb.qb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,
    UG,x_,y_,z_,A_,B_,C_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_)}function e(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.gb?rb.gb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_)}function f(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.pb?rb.pb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,
    z_,A_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_)}function k(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.fb?rb.fb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_)}function l(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.ob?rb.ob(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,
    TG,UG,x_,y_)}function m(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.eb?rb.eb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_)}function r(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.nb?rb.nb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG)}function u(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);
    return rb.cb?rb.cb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG)}function v(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.mb?rb.mb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG)}function y(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.Xa?rb.Xa(xc,Sb,ob,Tb,gb,ib,mc,of,lv):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv)}function E(rb,xc,Sb,ob,Tb,gb,ib,mc,of){rb=this;
    rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.Ga?rb.Ga(xc,Sb,ob,Tb,gb,ib,mc,of):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc,of)}function H(rb,xc,Sb,ob,Tb,gb,ib,mc){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.ib?rb.ib(xc,Sb,ob,Tb,gb,ib,mc):rb.call(null,xc,Sb,ob,Tb,gb,ib,mc)}function T(rb,xc,Sb,ob,Tb,gb,ib){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.la?rb.la(xc,Sb,ob,Tb,gb,ib):rb.call(null,xc,Sb,ob,Tb,gb,ib)}function Y(rb,xc,Sb,ob,Tb,gb){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.K?
    rb.K(xc,Sb,ob,Tb,gb):rb.call(null,xc,Sb,ob,Tb,gb)}function ia(rb,xc,Sb,ob,Tb){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.A?rb.A(xc,Sb,ob,Tb):rb.call(null,xc,Sb,ob,Tb)}function ba(rb,xc,Sb,ob){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.c?rb.c(xc,Sb,ob):rb.call(null,xc,Sb,ob)}function wa(rb,xc,Sb){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.b?rb.b(xc,Sb):rb.call(null,xc,Sb)}function ua(rb,xc){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.a?rb.a(xc):rb.call(null,xc)}
    function pb(rb){rb=this;rb=rb.m.o?rb.m.o():rb.m.call(null);return rb.o?rb.o():rb.call(null)}var sb=null;sb=function(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){switch(arguments.length){case 1:return pb.call(this,rb);case 2:return ua.call(this,rb,xc);case 3:return wa.call(this,rb,xc,Sb);case 4:return ba.call(this,rb,xc,Sb,ob);case 5:return ia.call(this,rb,xc,Sb,ob,Tb);case 6:return Y.call(this,rb,xc,Sb,ob,Tb,gb);case 7:return T.call(this,rb,xc,Sb,ob,Tb,gb,ib);case 8:return H.call(this,
    rb,xc,Sb,ob,Tb,gb,ib,mc);case 9:return E.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of);case 10:return y.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv);case 11:return v.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG);case 12:return u.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG);case 13:return r.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG);case 14:return m.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_);case 15:return l.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_);case 16:return k.call(this,rb,
    xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_);case 17:return f.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_);case 18:return e.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_);case 19:return d.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_);case 20:return c.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_);case 21:return b.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_);case 22:return a.call(this,rb,
    xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_)}throw Error("Invalid arity: "+(arguments.length-1));};sb.a=pb;sb.b=ua;sb.c=wa;sb.A=ba;sb.K=ia;sb.la=Y;sb.ib=T;sb.Ga=H;sb.Xa=E;sb.mb=y;sb.cb=v;sb.nb=u;sb.eb=r;sb.ob=m;sb.fb=l;sb.pb=k;sb.gb=f;sb.qb=e;sb.hb=d;sb.rb=c;sb.Sc=b;sb.Be=a;return sb}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.o=function(){var a=this.m.o?this.m.o():this.m.call(null);return a.o?a.o():a.call(null)};
    g.a=function(a){var b=this.m.o?this.m.o():this.m.call(null);return b.a?b.a(a):b.call(null,a)};g.b=function(a,b){var c=this.m.o?this.m.o():this.m.call(null);return c.b?c.b(a,b):c.call(null,a,b)};g.c=function(a,b,c){var d=this.m.o?this.m.o():this.m.call(null);return d.c?d.c(a,b,c):d.call(null,a,b,c)};g.A=function(a,b,c,d){var e=this.m.o?this.m.o():this.m.call(null);return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d)};
    g.K=function(a,b,c,d,e){var f=this.m.o?this.m.o():this.m.call(null);return f.K?f.K(a,b,c,d,e):f.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){var k=this.m.o?this.m.o():this.m.call(null);return k.la?k.la(a,b,c,d,e,f):k.call(null,a,b,c,d,e,f)};g.ib=function(a,b,c,d,e,f,k){var l=this.m.o?this.m.o():this.m.call(null);return l.ib?l.ib(a,b,c,d,e,f,k):l.call(null,a,b,c,d,e,f,k)};
    g.Ga=function(a,b,c,d,e,f,k,l){var m=this.m.o?this.m.o():this.m.call(null);return m.Ga?m.Ga(a,b,c,d,e,f,k,l):m.call(null,a,b,c,d,e,f,k,l)};g.Xa=function(a,b,c,d,e,f,k,l,m){var r=this.m.o?this.m.o():this.m.call(null);return r.Xa?r.Xa(a,b,c,d,e,f,k,l,m):r.call(null,a,b,c,d,e,f,k,l,m)};g.mb=function(a,b,c,d,e,f,k,l,m,r){var u=this.m.o?this.m.o():this.m.call(null);return u.mb?u.mb(a,b,c,d,e,f,k,l,m,r):u.call(null,a,b,c,d,e,f,k,l,m,r)};
    g.cb=function(a,b,c,d,e,f,k,l,m,r,u){var v=this.m.o?this.m.o():this.m.call(null);return v.cb?v.cb(a,b,c,d,e,f,k,l,m,r,u):v.call(null,a,b,c,d,e,f,k,l,m,r,u)};g.nb=function(a,b,c,d,e,f,k,l,m,r,u,v){var y=this.m.o?this.m.o():this.m.call(null);return y.nb?y.nb(a,b,c,d,e,f,k,l,m,r,u,v):y.call(null,a,b,c,d,e,f,k,l,m,r,u,v)};g.eb=function(a,b,c,d,e,f,k,l,m,r,u,v,y){var E=this.m.o?this.m.o():this.m.call(null);return E.eb?E.eb(a,b,c,d,e,f,k,l,m,r,u,v,y):E.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y)};
    g.ob=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E){var H=this.m.o?this.m.o():this.m.call(null);return H.ob?H.ob(a,b,c,d,e,f,k,l,m,r,u,v,y,E):H.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E)};g.fb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H){var T=this.m.o?this.m.o():this.m.call(null);return T.fb?T.fb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H):T.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H)};
    g.pb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T){var Y=this.m.o?this.m.o():this.m.call(null);return Y.pb?Y.pb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T):Y.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T)};g.gb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){var ia=this.m.o?this.m.o():this.m.call(null);return ia.gb?ia.gb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y):ia.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y)};
    g.qb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia){var ba=this.m.o?this.m.o():this.m.call(null);return ba.qb?ba.qb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia):ba.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia)};g.hb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba){var wa=this.m.o?this.m.o():this.m.call(null);return wa.hb?wa.hb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba):wa.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba)};
    g.rb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa){var ua=this.m.o?this.m.o():this.m.call(null);return ua.rb?ua.rb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):ua.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa)};g.Sc=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua){var pb=this.m.o?this.m.o():this.m.call(null);return Oe.Be?Oe.Be(pb,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua):Oe.call(null,pb,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua)};
    function Pe(a){return null!=a?a.I&131072||h===a.Ph?!0:a.I?!1:Xc(ye,a):Xc(ye,a)}function B(a){if(null==a)return null;if(null!=a&&(a.h&8388608||h===a.qf))return a.$(null);if(Rc(a)||"string"===typeof a)return 0===a.length?null:new Qe(a,0,null);if(null!=a&&null!=a[ad])return a=Vb(a,ad).call(a),lo.a?lo.a(a):lo.call(null,a);if(Xc(Wd,a))return Xd(a);throw Error([q.a(a)," is not ISeqable"].join(""));}
    function C(a){if(null==a)return null;if(null!=a&&(a.h&64||h===a.D))return a.Fa(null);a=B(a);return null==a?null:sd(a)}function Re(a){return null!=a?null!=a&&(a.h&64||h===a.D)?a.Ha(null):(a=B(a))?a.Ha(null):Se:Se}function D(a){return null==a?null:null!=a&&(a.h&128||h===a.Ad)?a.za(null):B(Re(a))}
    var A=function A(a){switch(arguments.length){case 1:return A.a(arguments[0]);case 2:return A.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return A.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};A.a=function(){return !0};A.b=function(a,b){return null==a?null==b:a===b||Ud(a,b)};A.g=function(a,b,c){for(;;)if(A.b(a,b))if(D(c))a=b,b=C(c),c=D(c);else return A.b(b,C(c));else return !1};
    A.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};A.F=2;function Te(a){this.ha=a;}Te.prototype.next=function(){if(null!=this.ha){var a=C(this.ha);this.ha=D(this.ha);return {value:a,done:!1}}return {value:null,done:!0}};function Ue(a){return new Te(B(a))}function Lo(a,b){this.value=a;this.Se=b;this.Pb=null;this.h=8388672;this.I=0;}Lo.prototype.$=function(){return this};Lo.prototype.Fa=function(){return this.value};
    Lo.prototype.Ha=function(){null==this.Pb&&(this.Pb=lo.a?lo.a(this.Se):lo.call(null,this.Se));return this.Pb};function lo(a){var b=a.next();return p(b.done)?null:new Lo(b.value,a)}function Ve(a,b){return Fe(Ee(0,De(a)),b)}function We(a){var b=0,c=1;for(a=B(a);;)if(null!=a)b+=1,c=Ce(31,c)+Je(C(a))|0,a=D(a);else return Ve(c,b)}var Xe=Ve(1,0);function Ye(a){var b=0,c=0;for(a=B(a);;)if(null!=a)b+=1,c=c+Je(C(a))|0,a=D(a);else return Ve(c,b)}var Ze=Ve(0,0);jd["null"]=!0;kd["null"]=function(){return 0};
    Date.prototype.Y=function(a,b){return b instanceof Date&&this.valueOf()===b.valueOf()};Date.prototype.Oc=h;Date.prototype.Wb=function(a,b){if(b instanceof Date)return Pb(this.valueOf(),b.valueOf());throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};Ud.number=function(a,b){return a===b};hd["function"]=!0;Md["function"]=!0;Nd["function"]=function(){return null};Vd._=function(a){return hb(a)};function $e(a){return a+1}function af(a){this.m=a;this.h=32768;this.I=0;}af.prototype.zb=function(){return this.m};
    function bf(a){return new af(a)}function cf(a){return a instanceof af}function df(a){return cf(a)?ef.a?ef.a(a):ef.call(null,a):a}function ef(a){return t(a)}function ff(a,b){var c=a.X(null);if(0===c)return b.o?b.o():b.call(null);for(var d=a.W(null,0),e=1;;)if(e<c){var f=a.W(null,e);d=b.b?b.b(d,f):b.call(null,d,f);if(cf(d))return t(d);e+=1;}else return d}
    function gf(a,b,c){var d=a.X(null),e=c;for(c=0;;)if(c<d){var f=a.W(null,c);e=b.b?b.b(e,f):b.call(null,e,f);if(cf(e))return t(e);c+=1;}else return e}function hf(a,b){var c=a.length;if(0===a.length)return b.o?b.o():b.call(null);for(var d=a[0],e=1;;)if(e<c){var f=a[e];d=b.b?b.b(d,f):b.call(null,d,f);if(cf(d))return t(d);e+=1;}else return d}function jf(a,b,c){var d=a.length,e=c;for(c=0;;)if(c<d){var f=a[c];e=b.b?b.b(e,f):b.call(null,e,f);if(cf(e))return t(e);c+=1;}else return e}
    function kf(a,b,c,d){for(var e=a.length;;)if(d<e){var f=a[d];c=b.b?b.b(c,f):b.call(null,c,f);if(cf(c))return t(c);d+=1;}else return c}function lf(a){return null!=a?a.h&2||h===a.bg?!0:a.h?!1:Xc(jd,a):Xc(jd,a)}function mf(a){return null!=a?a.h&16||h===a.pf?!0:a.h?!1:Xc(pd,a):Xc(pd,a)}function nf(a,b,c){var d=F.a?F.a(a):F.call(null,a);if(c>=d)return -1;!(0<c)&&0>c&&(c+=d,c=0>c?0:c);for(;;)if(c<d){if(A.b(pf?pf(a,c):qf.call(null,a,c),b))return c;c+=1;}else return -1}
    function rf(a,b,c){var d=F.a?F.a(a):F.call(null,a);if(0===d)return -1;0<c?(--d,c=d<c?d:c):c=0>c?d+c:c;for(;;)if(0<=c){if(A.b(pf?pf(a,c):qf.call(null,a,c),b))return c;--c;}else return -1}function sf(a,b){this.l=a;this.J=b;}sf.prototype.ra=function(){return this.J<this.l.length};sf.prototype.next=function(){var a=this.l[this.J];this.J+=1;return a};function Qe(a,b,c){this.l=a;this.J=b;this.H=c;this.h=166592766;this.I=139264;}g=Qe.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F.a?F.a(this):F.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.W=function(a,b){a=b+this.J;if(0<=a&&a<this.l.length)return this.l[a];throw Error("Index out of bounds");};g.wa=function(a,b,c){a=b+this.J;return 0<=a&&a<this.l.length?this.l[a]:c};
    g.ua=function(){return new sf(this.l,this.J)};g.N=function(){return this.H};g.za=function(){return this.J+1<this.l.length?new Qe(this.l,this.J+1,null):null};g.X=function(){var a=this.l.length-this.J;return 0>a?0:a};g.Bc=function(){var a=this.X(null);return 0<a?new tf(this,a-1,null):null};g.Z=function(){return We(this)};g.Y=function(a,b){return uf.b?uf.b(this,b):uf.call(null,this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return kf(this.l,b,this.l[this.J],this.J+1)};
    g.Ca=function(a,b,c){return kf(this.l,b,c,this.J)};g.Fa=function(){return this.l[this.J]};g.Ha=function(){return this.J+1<this.l.length?new Qe(this.l,this.J+1,null):Se};g.$=function(){return this.J<this.l.length?this:null};g.O=function(a,b){return b===this.H?this:new Qe(this.l,this.J,b)};g.ga=function(a,b){return vf.b?vf.b(b,this):vf.call(null,b,this)};Qe.prototype[ad]=function(){return Ue(this)};function G(a){return 0<a.length?new Qe(a,0,null):null}
    function tf(a,b,c){this.Zd=a;this.J=b;this.H=c;this.h=32374990;this.I=8192;}g=tf.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F.a?F.a(this):F.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 0<this.J?new tf(this.Zd,this.J-1,null):null};g.X=function(){return this.J+1};g.Z=function(){return We(this)};
    g.Y=function(a,b){return uf.b?uf.b(this,b):uf.call(null,this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf?wf(b,this):xf.call(null,b,this)};g.Ca=function(a,b,c){return yf?yf(b,c,this):xf.call(null,b,c,this)};g.Fa=function(){return qd(this.Zd,this.J)};g.Ha=function(){return 0<this.J?new tf(this.Zd,this.J-1,null):Se};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new tf(this.Zd,this.J,b)};g.ga=function(a,b){return vf.b?vf.b(b,this):vf.call(null,b,this)};
    tf.prototype[ad]=function(){return Ue(this)};function zf(a){return C(D(a))}function Af(a){return C(D(a))}function Bf(a){for(;;){var b=D(a);if(null!=b)a=b;else return C(a)}}Ud._=function(a,b){return a===b};var Cf=function Cf(a){switch(arguments.length){case 0:return Cf.o();case 1:return Cf.a(arguments[0]);case 2:return Cf.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Cf.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};
    Cf.o=function(){return I};Cf.a=function(a){return a};Cf.b=function(a,b){return null!=a?od(a,b):new Df(null,b,null,1,null)};Cf.g=function(a,b,c){for(;;)if(p(c))a=Cf.b(a,b),b=C(c),c=D(c);else return Cf.b(a,b)};Cf.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Cf.F=2;function Ef(a){return null==a?null:null!=a&&(a.h&4||h===a.dg)?a.pa(null):(null!=a?a.h&4||h===a.dg||(a.h?0:Xc(ld,a)):Xc(ld,a))?md(a):null}
    function F(a){if(null!=a)if(null!=a&&(a.h&2||h===a.bg))a=a.X(null);else if(Rc(a))a=a.length;else if("string"===typeof a)a=a.length;else if(null!=a&&(a.h&8388608||h===a.qf))a:{a=B(a);for(var b=0;;){if(lf(a)){a=b+kd(a);break a}a=D(a);b+=1;}}else a=kd(a);else a=0;return a}function Ff(a,b,c){for(;;){if(null==a)return c;if(0===b)return B(a)?C(a):c;if(mf(a))return qd(a,b,c);if(B(a))a=D(a),--b;else return c}}
    function qf(a){switch(arguments.length){case 2:return pf(arguments[0],arguments[1]);case 3:return J(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}
    function pf(a,b){if("number"!==typeof b)throw Error("Index argument to nth must be a number");if(null==a)return a;if(null!=a&&(a.h&16||h===a.pf))return a.W(null,b);if(Rc(a)){if(-1<b&&b<a.length)return a[b|0];throw Error("Index out of bounds");}if("string"===typeof a){if(-1<b&&b<a.length)return a.charAt(b|0);throw Error("Index out of bounds");}if(null!=a&&(a.h&64||h===a.D)||null!=a&&(a.h&16777216||h===a.Ee)){if(0>b)throw Error("Index out of bounds");a:for(;;){if(null==a)throw Error("Index out of bounds");
    if(0===b){if(B(a)){a=C(a);break a}throw Error("Index out of bounds");}if(mf(a)){a=qd(a,b);break a}if(B(a))a=D(a),--b;else throw Error("Index out of bounds");}return a}if(Xc(pd,a))return qd(a,b);throw Error(["nth not supported on this type ",q.a($c(Yc(a)))].join(""));}
    function J(a,b,c){if("number"!==typeof b)throw Error("Index argument to nth must be a number.");if(null==a)return c;if(null!=a&&(a.h&16||h===a.pf))return a.wa(null,b,c);if(Rc(a))return -1<b&&b<a.length?a[b|0]:c;if("string"===typeof a)return -1<b&&b<a.length?a.charAt(b|0):c;if(null!=a&&(a.h&64||h===a.D)||null!=a&&(a.h&16777216||h===a.Ee))return 0>b?c:Ff(a,b,c);if(Xc(pd,a))return qd(a,b,c);throw Error(["nth not supported on this type ",q.a($c(Yc(a)))].join(""));}
    var x=function x(a){switch(arguments.length){case 2:return x.b(arguments[0],arguments[1]);case 3:return x.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};x.b=function(a,b){return null==a?null:null!=a&&(a.h&256||h===a.hg)?a.ia(null,b):Rc(a)?null!=b&&b<a.length?a[b|0]:null:"string"===typeof a?null!=b&&-1<b&&b<a.length?a.charAt(b|0):null:Xc(wd,a)?xd(a,b):null};
    x.c=function(a,b,c){return null!=a?null!=a&&(a.h&256||h===a.hg)?a.M(null,b,c):Rc(a)?null!=b&&-1<b&&b<a.length?a[b|0]:c:"string"===typeof a?null!=b&&-1<b&&b<a.length?a.charAt(b|0):c:Xc(wd,a)?xd(a,b,c):c:c};x.F=3;var K=function K(a){switch(arguments.length){case 3:return K.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return K.g(arguments[0],arguments[1],arguments[2],new Qe(c.slice(3),0,null))}};
    K.c=function(a,b,c){return null!=a&&(a.h&512||h===a.ag)?a.fa(null,b,c):null!=a?zd(a,b,c):Gf([b,c])};K.g=function(a,b,c,d){for(;;)if(a=K.c(a,b,c),p(d))b=C(d),c=zf(d),d=D(D(d));else return a};K.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};K.F=3;
    var Hf=function Hf(a){switch(arguments.length){case 1:return Hf.a(arguments[0]);case 2:return Hf.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Hf.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};Hf.a=function(a){return a};Hf.b=function(a,b){return null==a?null:Cd(a,b)};Hf.g=function(a,b,c){for(;;){if(null==a)return null;a=Hf.b(a,b);if(p(c))b=C(c),c=D(c);else return a}};
    Hf.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Hf.F=2;function If(a){var b=fb(a);return b?b:null!=a?h===a.mf?!0:a.Ke?!1:Xc(hd,a):Xc(hd,a)}function Jf(a,b){this.P=a;this.H=b;this.h=393217;this.I=0;}g=Jf.prototype;g.N=function(){return this.H};g.O=function(a,b){return new Jf(this.P,b)};g.mf=h;
    g.call=function(){function a(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){rb=this;return Oe.Be?Oe.Be(rb.P,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_):Oe.call(null,rb.P,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_)}function b(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_){rb=this;return rb.P.rb?rb.P.rb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,
    A_,B_,C_,D_,E_)}function c(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_){rb=this;return rb.P.hb?rb.P.hb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_)}function d(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_){rb=this;return rb.P.qb?rb.P.qb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_)}function e(rb,xc,Sb,ob,Tb,
    gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_){rb=this;return rb.P.gb?rb.P.gb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_)}function f(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_){rb=this;return rb.P.pb?rb.P.pb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_)}function k(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_){rb=this;return rb.P.fb?rb.P.fb(xc,Sb,ob,Tb,gb,
    ib,mc,of,lv,SG,TG,UG,x_,y_,z_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_)}function l(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_){rb=this;return rb.P.ob?rb.P.ob(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_)}function m(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_){rb=this;return rb.P.eb?rb.P.eb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_)}function r(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,
    SG,TG,UG){rb=this;return rb.P.nb?rb.P.nb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG)}function u(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG){rb=this;return rb.P.cb?rb.P.cb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG)}function v(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG){rb=this;return rb.P.mb?rb.P.mb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG)}function y(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv){rb=this;return rb.P.Xa?
    rb.P.Xa(xc,Sb,ob,Tb,gb,ib,mc,of,lv):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv)}function E(rb,xc,Sb,ob,Tb,gb,ib,mc,of){rb=this;return rb.P.Ga?rb.P.Ga(xc,Sb,ob,Tb,gb,ib,mc,of):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc,of)}function H(rb,xc,Sb,ob,Tb,gb,ib,mc){rb=this;return rb.P.ib?rb.P.ib(xc,Sb,ob,Tb,gb,ib,mc):rb.P.call(null,xc,Sb,ob,Tb,gb,ib,mc)}function T(rb,xc,Sb,ob,Tb,gb,ib){rb=this;return rb.P.la?rb.P.la(xc,Sb,ob,Tb,gb,ib):rb.P.call(null,xc,Sb,ob,Tb,gb,ib)}function Y(rb,xc,Sb,ob,Tb,gb){rb=this;return rb.P.K?
    rb.P.K(xc,Sb,ob,Tb,gb):rb.P.call(null,xc,Sb,ob,Tb,gb)}function ia(rb,xc,Sb,ob,Tb){rb=this;return rb.P.A?rb.P.A(xc,Sb,ob,Tb):rb.P.call(null,xc,Sb,ob,Tb)}function ba(rb,xc,Sb,ob){rb=this;return rb.P.c?rb.P.c(xc,Sb,ob):rb.P.call(null,xc,Sb,ob)}function wa(rb,xc,Sb){rb=this;return rb.P.b?rb.P.b(xc,Sb):rb.P.call(null,xc,Sb)}function ua(rb,xc){rb=this;return rb.P.a?rb.P.a(xc):rb.P.call(null,xc)}function pb(rb){rb=this;return rb.P.o?rb.P.o():rb.P.call(null)}var sb=null;sb=function(rb,xc,Sb,ob,Tb,gb,ib,mc,
    of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){switch(arguments.length){case 1:return pb.call(this,rb);case 2:return ua.call(this,rb,xc);case 3:return wa.call(this,rb,xc,Sb);case 4:return ba.call(this,rb,xc,Sb,ob);case 5:return ia.call(this,rb,xc,Sb,ob,Tb);case 6:return Y.call(this,rb,xc,Sb,ob,Tb,gb);case 7:return T.call(this,rb,xc,Sb,ob,Tb,gb,ib);case 8:return H.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc);case 9:return E.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of);case 10:return y.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,
    of,lv);case 11:return v.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG);case 12:return u.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG);case 13:return r.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG);case 14:return m.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_);case 15:return l.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_);case 16:return k.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_);case 17:return f.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_);case 18:return e.call(this,
    rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_);case 19:return d.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_);case 20:return c.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_);case 21:return b.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_);case 22:return a.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_)}throw Error("Invalid arity: "+(arguments.length-1));};sb.a=pb;sb.b=ua;sb.c=wa;sb.A=ba;sb.K=
    ia;sb.la=Y;sb.ib=T;sb.Ga=H;sb.Xa=E;sb.mb=y;sb.cb=v;sb.nb=u;sb.eb=r;sb.ob=m;sb.fb=l;sb.pb=k;sb.gb=f;sb.qb=e;sb.hb=d;sb.rb=c;sb.Sc=b;sb.Be=a;return sb}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.o=function(){return this.P.o?this.P.o():this.P.call(null)};g.a=function(a){return this.P.a?this.P.a(a):this.P.call(null,a)};g.b=function(a,b){return this.P.b?this.P.b(a,b):this.P.call(null,a,b)};g.c=function(a,b,c){return this.P.c?this.P.c(a,b,c):this.P.call(null,a,b,c)};
    g.A=function(a,b,c,d){return this.P.A?this.P.A(a,b,c,d):this.P.call(null,a,b,c,d)};g.K=function(a,b,c,d,e){return this.P.K?this.P.K(a,b,c,d,e):this.P.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){return this.P.la?this.P.la(a,b,c,d,e,f):this.P.call(null,a,b,c,d,e,f)};g.ib=function(a,b,c,d,e,f,k){return this.P.ib?this.P.ib(a,b,c,d,e,f,k):this.P.call(null,a,b,c,d,e,f,k)};g.Ga=function(a,b,c,d,e,f,k,l){return this.P.Ga?this.P.Ga(a,b,c,d,e,f,k,l):this.P.call(null,a,b,c,d,e,f,k,l)};
    g.Xa=function(a,b,c,d,e,f,k,l,m){return this.P.Xa?this.P.Xa(a,b,c,d,e,f,k,l,m):this.P.call(null,a,b,c,d,e,f,k,l,m)};g.mb=function(a,b,c,d,e,f,k,l,m,r){return this.P.mb?this.P.mb(a,b,c,d,e,f,k,l,m,r):this.P.call(null,a,b,c,d,e,f,k,l,m,r)};g.cb=function(a,b,c,d,e,f,k,l,m,r,u){return this.P.cb?this.P.cb(a,b,c,d,e,f,k,l,m,r,u):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u)};g.nb=function(a,b,c,d,e,f,k,l,m,r,u,v){return this.P.nb?this.P.nb(a,b,c,d,e,f,k,l,m,r,u,v):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v)};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,u,v,y){return this.P.eb?this.P.eb(a,b,c,d,e,f,k,l,m,r,u,v,y):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y)};g.ob=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E){return this.P.ob?this.P.ob(a,b,c,d,e,f,k,l,m,r,u,v,y,E):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E)};g.fb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H){return this.P.fb?this.P.fb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H)};
    g.pb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T){return this.P.pb?this.P.pb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T)};g.gb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){return this.P.gb?this.P.gb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y)};g.qb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia){return this.P.qb?this.P.qb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia)};
    g.hb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba){return this.P.hb?this.P.hb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba)};g.rb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa){return this.P.rb?this.P.rb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):this.P.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa)};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua){return Oe.Be?Oe.Be(this.P,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua):Oe.call(null,this.P,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua)};function Kf(a,b){return fb(a)?new Jf(a,b):null==a?null:Pd(a,b)}function Lf(a){return null!=a&&(null!=a?a.h&131072||h===a.xd||(a.h?0:Xc(Md,a)):Xc(Md,a))?Nd(a):null}function Mf(a){return null==a?null:Hd(a)}function Nf(a){return null==a?null:Id(a)}
    var Of=function Of(a){switch(arguments.length){case 1:return Of.a(arguments[0]);case 2:return Of.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Of.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};Of.a=function(a){return a};Of.b=function(a,b){return null==a?null:Gd(a,b)};Of.g=function(a,b,c){for(;;){if(null==a)return null;a=Of.b(a,b);if(p(c))b=C(c),c=D(c);else return a}};
    Of.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Of.F=2;function Pf(a){return null==a||Tc(B(a))}function Qf(a){return null==a?!1:null!=a?a.h&8||h===a.Lh?!0:a.h?!1:Xc(nd,a):Xc(nd,a)}function Rf(a){return null==a?!1:null!=a?a.h&4096||h===a.Wh?!0:a.h?!1:Xc(Fd,a):Xc(Fd,a)}function Sf(a){return null!=a?a.h&512||h===a.ag?!0:a.h?!1:Xc(yd,a):Xc(yd,a)}function Tf(a){return null!=a?a.h&16777216||h===a.Ee?!0:a.h?!1:Xc(Yd,a):Xc(Yd,a)}
    function M(a){return null==a?!1:null!=a?a.h&1024||h===a.Sh?!0:a.h?!1:Xc(Bd,a):Xc(Bd,a)}function Uf(a){return null!=a?a.h&67108864||h===a.kg?!0:a.h?!1:Xc($d,a):Xc($d,a)}function Vf(a){return null!=a?a.h&16384||h===a.Xh?!0:a.h?!1:Xc(Jd,a):Xc(Jd,a)}function Wf(a){return null!=a?a.I&512||h===a.Kh?!0:!1:!1}function Xf(a,b,c,d,e){for(;0!==e;)c[d]=a[b],d+=1,--e,b+=1;}var Yf={};function Zf(a){return !0===a||!1===a}function $f(a){return null==a?!1:null!=a?a.h&64||h===a.D?!0:a.h?!1:Xc(rd,a):Xc(rd,a)}
    function ag(a){return null==a?!1:!1===a?!1:!0}function bg(a){return "number"===typeof a&&!isNaN(a)&&Infinity!==a&&parseFloat(a)===parseInt(a,10)}function cg(a){return bg(a)||a instanceof xb}function N(a,b){return x.c(a,b,Yf)===Yf?!1:!0}
    function dg(a,b){if(a===b)return 0;if(null==a)return -1;if(null==b)return 1;if("number"===typeof a){if("number"===typeof b)return Pb(a,b);throw Error(["Cannot compare ",q.a(a)," to ",q.a(b)].join(""));}if(null!=a?a.I&2048||h===a.Oc||(a.I?0:Xc(oe,a)):Xc(oe,a))return pe(a,b);if("string"!==typeof a&&!Rc(a)&&!0!==a&&!1!==a||Yc(a)!==Yc(b))throw Error(["Cannot compare ",q.a(a)," to ",q.a(b)].join(""));return Pb(a,b)}
    function eg(a,b){var c=F(a),d=F(b);if(c<d)a=-1;else if(c>d)a=1;else if(0===c)a=0;else a:for(d=0;;){var e=dg(pf(a,d),pf(b,d));if(0===e&&d+1<c)d+=1;else {a=e;break a}}return a}function fg(a){return A.b(a,dg)?dg:function(b,c){var d=a.b?a.b(b,c):a.call(null,b,c);return "number"===typeof d?d:p(d)?-1:p(a.b?a.b(c,b):a.call(null,c,b))?1:0}}function gg(a){var b=Ub(cd);return B(b)?(b=hg.a?hg.a(b):hg.call(null,b),Qb(b,fg(a)),B(b)):Se}
    function xf(a){switch(arguments.length){case 2:return wf(arguments[0],arguments[1]);case 3:return yf(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function wf(a,b){var c=B(b);return c?(b=C(c),c=D(c),gd.c?gd.c(a,b,c):gd.call(null,a,b,c)):a.o?a.o():a.call(null)}function yf(a,b,c){for(c=B(c);;)if(c){var d=C(c);b=a.b?a.b(b,d):a.call(null,b,d);if(cf(b))return t(b);c=D(c);}else return b}
    function ig(a,b){a=ze(a);if(p(a.ra()))for(var c=a.next();;)if(a.ra()){var d=a.next();c=b.b?b.b(c,d):b.call(null,c,d);if(cf(c))return t(c)}else return c;else return b.o?b.o():b.call(null)}function jg(a,b,c){for(a=ze(a);;)if(a.ra()){var d=a.next();c=b.b?b.b(c,d):b.call(null,c,d);if(cf(c))return t(c)}else return c}
    var gd=function gd(a){switch(arguments.length){case 2:return gd.b(arguments[0],arguments[1]);case 3:return gd.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};gd.b=function(a,b){return null!=b&&(b.h&524288||h===b.lg)?b.Ba(null,a):Rc(b)?hf(b,a):"string"===typeof b?hf(b,a):Xc(Qd,b)?Rd(b,a):Pe(b)?ig(b,a):wf(a,b)};
    gd.c=function(a,b,c){return null!=c&&(c.h&524288||h===c.lg)?c.Ca(null,a,b):Rc(c)?jf(c,a,b):"string"===typeof c?jf(c,a,b):Xc(Qd,c)?Rd(c,a,b):Pe(c)?jg(c,a,b):yf(a,b,c)};gd.F=3;function kg(a,b,c){return null!=c?Td(c,a,b):b}function lg(a){return a}
    function mg(a,b){return function(){function c(k,l){return a.b?a.b(k,l):a.call(null,k,l)}function d(k){return b.a?b.a(k):b.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=e;f.a=d;f.b=c;return f}()}function ng(a,b,c){return og(a,b,b.o?b.o():b.call(null),c)}
    function og(a,b,c,d){a=a.a?a.a(b):a.call(null,b);c=gd.c(a,c,d);return a.a?a.a(c):a.call(null,c)}var pg=function pg(a){switch(arguments.length){case 0:return pg.o();case 1:return pg.a(arguments[0]);case 2:return pg.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pg.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};pg.o=function(){return 0};pg.a=function(a){return a};pg.b=function(a,b){return a+b};
    pg.g=function(a,b,c){return gd.c(pg,a+b,c)};pg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};pg.F=2;var qg=function qg(a){switch(arguments.length){case 1:return qg.a(arguments[0]);case 2:return qg.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return qg.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};qg.a=function(){return !0};qg.b=function(a,b){return a>b};
    qg.g=function(a,b,c){for(;;)if(a>b)if(D(c))a=b,b=C(c),c=D(c);else return b>C(c);else return !1};qg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};qg.F=2;function rg(a){if("number"===typeof a)return String.fromCharCode(a);if("string"===typeof a&&1===a.length)return a;throw Error("Argument to char must be a character or number");}function sg(a){return 0<=a?Math.floor(a):Math.ceil(a)}function tg(a,b){return sg((a-a%b)/b)}function ug(a,b){return a-b*tg(a,b)}
    function vg(a){a-=a>>1&1431655765;a=(a&858993459)+(a>>2&858993459);return 16843009*(a+(a>>4)&252645135)>>24}function wg(a){switch(arguments.length){case 1:return !0;case 2:return Ud(arguments[0],arguments[1]);default:for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(c=arguments[0],d=arguments[1],b=new Qe(b.slice(2),0,null);;)if(c===d)if(D(b))c=d,d=C(b),b=D(b);else {c=d===C(b);break a}else {c=!1;break a}return c}}function xg(a,b){return Ud(a,b)}
    function yg(a){return 0<a}var q=function q(a){switch(arguments.length){case 0:return q.o();case 1:return q.a(arguments[0]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return q.g(arguments[0],new Qe(c.slice(1),0,null))}};q.o=function(){return ""};q.a=function(a){return null==a?"":[a].join("")};q.g=function(a,b){for(a=new zc(q.a(a));;)if(p(b))a=a.append(q.a(C(b))),b=D(b);else return a.toString()};q.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    q.F=1;function zg(a){switch(arguments.length){case 2:return arguments[0].substring(arguments[1]);case 3:return arguments[0].substring(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function Ag(a,b){return a.substring(b)}function Bg(a,b,c){return a.substring(b,c)}
    function uf(a,b){if(Tf(b))if(lf(a)&&lf(b)&&F(a)!==F(b))a=!1;else a:for(a=B(a),b=B(b);;){if(null==a){a=null==b;break a}if(null!=b&&A.b(C(a),C(b)))a=D(a),b=D(b);else {a=!1;break a}}else a=null;return ag(a)}function Df(a,b,c,d,e){this.H=a;this.first=b;this.ab=c;this.count=d;this.B=e;this.h=65937646;this.I=8192;}g=Df.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,this.count)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 1===this.count?null:this.ab};g.X=function(){return this.count};g.Xb=function(){return this.first};g.Yb=function(){return this.Ha(null)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Pd(Se,this.H)};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return this.first};g.Ha=function(){return 1===this.count?Se:this.ab};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new Df(b,this.first,this.ab,this.count,this.B)};g.ga=function(a,b){return new Df(this.H,b,this,this.count+1,null)};
    function Cg(a){return null!=a?a.h&33554432||h===a.Rh?!0:a.h?!1:Xc(Zd,a):Xc(Zd,a)}Df.prototype[ad]=function(){return Ue(this)};function Dg(a){this.H=a;this.h=65937614;this.I=8192;}g=Dg.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null};g.X=function(){return 0};g.Xb=function(){return null};g.Yb=function(){throw Error("Can't pop empty list");};g.Z=function(){return Xe};
    g.Y=function(a,b){return Cg(b)||Tf(b)?null==B(b):!1};g.pa=function(){return this};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return null};g.Ha=function(){return Se};g.$=function(){return null};g.O=function(a,b){return b===this.H?this:new Dg(b)};g.ga=function(a,b){return new Df(this.H,b,null,1,null)};var Se=new Dg(null);Dg.prototype[ad]=function(){return Ue(this)};
    function Eg(a){return (null!=a?a.h&134217728||h===a.Vh||(a.h?0:Xc(ae,a)):Xc(ae,a))?(a=be(a))?a:Se:gd.c(Cf,Se,a)}var O=function O(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return O.g(0<c.length?new Qe(c.slice(0),0,null):null)};O.g=function(a){if(a instanceof Qe&&0===a.J)var b=a.l;else a:for(b=[];;)if(null!=a)b.push(sd(a)),a=vd(a);else break a;a=b.length;for(var c=Se;;)if(0<a){var d=a-1;c=od(c,b[a-1]);a=d;}else return c};O.F=0;O.G=function(a){return this.g(B(a))};
    function Fg(a,b,c,d){this.H=a;this.first=b;this.ab=c;this.B=d;this.h=65929452;this.I=8192;}g=Fg.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null==this.ab?null:B(this.ab)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};
    g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return this.first};g.Ha=function(){return null==this.ab?Se:this.ab};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new Fg(b,this.first,this.ab,this.B)};g.ga=function(a,b){return new Fg(null,b,this,null)};Fg.prototype[ad]=function(){return Ue(this)};function vf(a,b){return null==b?new Df(null,a,null,1,null):null!=b&&(b.h&64||h===b.D)?new Fg(null,a,b,null):new Fg(null,a,B(b),null)}
    function Gg(a,b){if(a.da===b.da)return 0;if(p(Tc(a.vb)?b.vb:!1))return -1;if(p(a.vb)){if(Tc(b.vb))return 1;var c=Pb(a.vb,b.vb);return 0===c?Pb(a.name,b.name):c}return Pb(a.name,b.name)}function z(a,b,c,d){this.vb=a;this.name=b;this.da=c;this.ed=d;this.h=2153775105;this.I=4096;}g=z.prototype;g.toString=function(){return [":",q.a(this.da)].join("")};g.Y=function(a,b){return b instanceof z?this.da===b.da:!1};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return x.b(c,this);case 3:return x.c(c,this,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return x.b(c,this)};a.c=function(b,c,d){return x.c(c,this,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return x.b(a,this)};g.b=function(a,b){return x.c(a,this,b)};g.Z=function(){var a=this.ed;return null!=a?a:this.ed=a=Ke(this)+2654435769|0};
    g.yd=function(){return this.name};g.zd=function(){return this.vb};g.S=function(a,b){return ce(b,[":",q.a(this.da)].join(""))};function Hg(a){return a instanceof z}function P(a,b){return a===b?!0:a instanceof z&&b instanceof z?a.da===b.da:!1}function Ig(a){if(null!=a&&(a.I&4096||h===a.jg))return a.zd(null);throw Error(["Doesn't support namespace: ",q.a(a)].join(""));}function Jg(a){return a instanceof z||a instanceof w}
    var Kg=function Kg(a){switch(arguments.length){case 1:return Kg.a(arguments[0]);case 2:return Kg.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};Kg.a=function(a){if(a instanceof z)return a;if(a instanceof w)return new z(Ig(a),Lg.a?Lg.a(a):Lg.call(null,a),a.wc,null);if(A.b("/",a))return new z(null,a,a,null);if("string"===typeof a){var b=a.split("/");return 2===b.length?new z(b[0],b[1],a,null):new z(null,b[0],a,null)}return null};
    Kg.b=function(a,b){a=a instanceof z?Lg.a?Lg.a(a):Lg.call(null,a):a instanceof w?Lg.a?Lg.a(a):Lg.call(null,a):a;b=b instanceof z?Lg.a?Lg.a(b):Lg.call(null,b):b instanceof w?Lg.a?Lg.a(b):Lg.call(null,b):b;return new z(a,b,[p(a)?[q.a(a),"/"].join(""):null,q.a(b)].join(""),null)};Kg.F=2;function Mg(a,b,c,d){this.H=a;this.od=b;this.ha=c;this.B=d;this.h=32374988;this.I=1;}g=Mg.prototype;g.toString=function(){return Be(this)};
    function Ng(a){null!=a.od&&(a.ha=a.od.o?a.od.o():a.od.call(null),a.od=null);return a.ha}g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){this.$(null);return null==this.ha?null:D(this.ha)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};
    g.pa=function(){return Pd(Se,this.H)};g.Bd=function(){return Tc(this.od)};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){this.$(null);return null==this.ha?null:C(this.ha)};g.Ha=function(){this.$(null);return null!=this.ha?Re(this.ha):Se};g.$=function(){Ng(this);if(null==this.ha)return null;for(var a=this.ha;;)if(a instanceof Mg)a=Ng(a);else return this.ha=a,B(this.ha)};
    g.O=function(a,b){var c=this;return b===this.H?c:new Mg(b,function(){return c.$(null)},null,this.B)};g.ga=function(a,b){return vf(b,this)};Mg.prototype[ad]=function(){return Ue(this)};function Og(a){this.ca=a;this.end=0;this.h=2;this.I=0;}Og.prototype.add=function(a){this.ca[this.end]=a;return this.end+=1};Og.prototype.Bb=function(){var a=new Pg(this.ca,0,this.end);this.ca=null;return a};Og.prototype.X=function(){return this.end};function Qg(a){return new Og(Array(a))}
    function Pg(a,b,c){this.l=a;this.$a=b;this.end=c;this.h=524306;this.I=0;}g=Pg.prototype;g.X=function(){return this.end-this.$a};g.W=function(a,b){return this.l[this.$a+b]};g.wa=function(a,b,c){return 0<=b&&b<this.end-this.$a?this.l[this.$a+b]:c};g.ze=function(){if(this.$a===this.end)throw Error("-drop-first of empty chunk");return new Pg(this.l,this.$a+1,this.end)};g.Ba=function(a,b){return kf(this.l,b,this.l[this.$a],this.$a+1)};g.Ca=function(a,b,c){return kf(this.l,b,c,this.$a)};
    function Rg(a,b,c,d){this.Bb=a;this.lc=b;this.H=c;this.B=d;this.h=31850732;this.I=1536;}g=Rg.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 1<kd(this.Bb)?new Rg(qe(this.Bb),this.lc,null,null):null==this.lc?null:Xd(this.lc)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Fa=function(){return qd(this.Bb,0)};g.Ha=function(){return 1<kd(this.Bb)?new Rg(qe(this.Bb),this.lc,null,null):null==this.lc?Se:this.lc};g.$=function(){return this};g.$d=function(){return this.Bb};g.gd=function(){return null==this.lc?Se:this.lc};g.O=function(a,b){return b===this.H?this:new Rg(this.Bb,this.lc,b,this.B)};g.ga=function(a,b){return vf(b,this)};g.Ae=function(){return null==this.lc?null:this.lc};Rg.prototype[ad]=function(){return Ue(this)};
    function Sg(a,b){return 0===kd(a)?b:new Rg(a,b,null,null)}function Tg(a,b){a.add(b);}function Ug(a){return a.Bb()}function hg(a){var b=[];for(a=B(a);;)if(null!=a)b.push(C(a)),a=D(a);else return b}function Vg(a,b){if(lf(b))return F(b);var c=0;for(b=B(b);;)if(null!=b&&c<a)c+=1,b=D(b);else return c}
    var Wg=function Wg(a){if(null==a)return null;var c=D(a);return null==c?B(C(a)):vf(C(a),Wg.a?Wg.a(c):Wg.call(null,c))},Xg=function Xg(a){switch(arguments.length){case 0:return Xg.o();case 1:return Xg.a(arguments[0]);case 2:return Xg.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Xg.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};Xg.o=function(){return new Mg(null,function(){return null},null,null)};
    Xg.a=function(a){return new Mg(null,function(){return a},null,null)};Xg.b=function(a,b){return new Mg(null,function(){var c=B(a);return c?Wf(c)?Sg(re(c),Xg.b(se(c),b)):vf(C(c),Xg.b(Re(c),b)):b},null,null)};Xg.g=function(a,b,c){return function k(e,f){return new Mg(null,function(){var l=B(e);return l?Wf(l)?Sg(re(l),k(se(l),f)):vf(C(l),k(Re(l),f)):p(f)?k(C(f),D(f)):null},null,null)}(Xg.b(a,b),c)};Xg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Xg.F=2;
    var Yg=function Yg(a){switch(arguments.length){case 0:return Yg.o();case 1:return Yg.a(arguments[0]);case 2:return Yg.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Yg.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};Yg.o=function(){return je(I)};Yg.a=function(a){return a};Yg.b=function(a,b){return ke(a,b)};Yg.g=function(a,b,c){for(;;)if(a=ke(a,b),p(c))b=C(c),c=D(c);else return a};
    Yg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Yg.F=2;function Zg(a,b,c){return me(a,b,c)}
    function $g(a,b,c){var d=B(c);if(0===b)return a.o?a.o():a.call(null);c=sd(d);var e=td(d);if(1===b)return a.a?a.a(c):a.call(null,c);d=sd(e);var f=td(e);if(2===b)return a.b?a.b(c,d):a.call(null,c,d);e=sd(f);var k=td(f);if(3===b)return a.c?a.c(c,d,e):a.call(null,c,d,e);f=sd(k);var l=td(k);if(4===b)return a.A?a.A(c,d,e,f):a.call(null,c,d,e,f);k=sd(l);var m=td(l);if(5===b)return a.K?a.K(c,d,e,f,k):a.call(null,c,d,e,f,k);l=sd(m);var r=td(m);if(6===b)return a.la?a.la(c,d,e,f,k,l):a.call(null,c,d,e,f,k,l);
    m=sd(r);var u=td(r);if(7===b)return a.ib?a.ib(c,d,e,f,k,l,m):a.call(null,c,d,e,f,k,l,m);r=sd(u);var v=td(u);if(8===b)return a.Ga?a.Ga(c,d,e,f,k,l,m,r):a.call(null,c,d,e,f,k,l,m,r);u=sd(v);var y=td(v);if(9===b)return a.Xa?a.Xa(c,d,e,f,k,l,m,r,u):a.call(null,c,d,e,f,k,l,m,r,u);v=sd(y);var E=td(y);if(10===b)return a.mb?a.mb(c,d,e,f,k,l,m,r,u,v):a.call(null,c,d,e,f,k,l,m,r,u,v);y=sd(E);var H=td(E);if(11===b)return a.cb?a.cb(c,d,e,f,k,l,m,r,u,v,y):a.call(null,c,d,e,f,k,l,m,r,u,v,y);E=sd(H);var T=td(H);
    if(12===b)return a.nb?a.nb(c,d,e,f,k,l,m,r,u,v,y,E):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E);H=sd(T);var Y=td(T);if(13===b)return a.eb?a.eb(c,d,e,f,k,l,m,r,u,v,y,E,H):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H);T=sd(Y);var ia=td(Y);if(14===b)return a.ob?a.ob(c,d,e,f,k,l,m,r,u,v,y,E,H,T):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T);Y=sd(ia);var ba=td(ia);if(15===b)return a.fb?a.fb(c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y);ia=sd(ba);var wa=td(ba);if(16===b)return a.pb?a.pb(c,d,e,
    f,k,l,m,r,u,v,y,E,H,T,Y,ia):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia);ba=sd(wa);var ua=td(wa);if(17===b)return a.gb?a.gb(c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba);wa=sd(ua);var pb=td(ua);if(18===b)return a.qb?a.qb(c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa);ua=sd(pb);pb=td(pb);if(19===b)return a.hb?a.hb(c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua);var sb=
    sd(pb);td(pb);if(20===b)return a.rb?a.rb(c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua,sb):a.call(null,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua,sb);throw Error("Only up to 20 arguments supported on functions");}function ah(a){return null!=a&&(a.h&128||h===a.Ad)?a.za(null):B(Re(a))}function bh(a,b,c){return null==c?a.a?a.a(b):a.call(a,b):ch(a,b,sd(c),ah(c))}function ch(a,b,c,d){return null==d?a.b?a.b(b,c):a.call(a,b,c):dh(a,b,c,sd(d),ah(d))}
    function dh(a,b,c,d,e){return null==e?a.c?a.c(b,c,d):a.call(a,b,c,d):eh(a,b,c,d,sd(e),ah(e))}
    function eh(a,b,c,d,e,f){if(null==f)return a.A?a.A(b,c,d,e):a.call(a,b,c,d,e);var k=sd(f),l=D(f);if(null==l)return a.K?a.K(b,c,d,e,k):a.call(a,b,c,d,e,k);f=sd(l);var m=D(l);if(null==m)return a.la?a.la(b,c,d,e,k,f):a.call(a,b,c,d,e,k,f);l=sd(m);var r=D(m);if(null==r)return a.ib?a.ib(b,c,d,e,k,f,l):a.call(a,b,c,d,e,k,f,l);m=sd(r);var u=D(r);if(null==u)return a.Ga?a.Ga(b,c,d,e,k,f,l,m):a.call(a,b,c,d,e,k,f,l,m);r=sd(u);var v=D(u);if(null==v)return a.Xa?a.Xa(b,c,d,e,k,f,l,m,r):a.call(a,b,c,d,e,k,f,l,
    m,r);u=sd(v);var y=D(v);if(null==y)return a.mb?a.mb(b,c,d,e,k,f,l,m,r,u):a.call(a,b,c,d,e,k,f,l,m,r,u);v=sd(y);var E=D(y);if(null==E)return a.cb?a.cb(b,c,d,e,k,f,l,m,r,u,v):a.call(a,b,c,d,e,k,f,l,m,r,u,v);y=sd(E);var H=D(E);if(null==H)return a.nb?a.nb(b,c,d,e,k,f,l,m,r,u,v,y):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y);E=sd(H);var T=D(H);if(null==T)return a.eb?a.eb(b,c,d,e,k,f,l,m,r,u,v,y,E):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E);H=sd(T);var Y=D(T);if(null==Y)return a.ob?a.ob(b,c,d,e,k,f,l,m,r,u,v,y,E,H):a.call(a,
    b,c,d,e,k,f,l,m,r,u,v,y,E,H);T=sd(Y);var ia=D(Y);if(null==ia)return a.fb?a.fb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E,H,T);Y=sd(ia);var ba=D(ia);if(null==ba)return a.pb?a.pb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y);ia=sd(ba);var wa=D(ba);if(null==wa)return a.gb?a.gb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia);ba=sd(wa);var ua=D(wa);if(null==ua)return a.qb?a.qb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba):a.call(a,
    b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba);wa=sd(ua);var pb=D(ua);if(null==pb)return a.hb?a.hb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa);ua=sd(pb);pb=D(pb);if(null==pb)return a.rb?a.rb(b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua):a.call(a,b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua);b=[b,c,d,e,k,f,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua];for(c=pb;;)if(c)b.push(sd(c)),c=D(c);else break;return a.apply(a,b)}
    function Oe(a){switch(arguments.length){case 2:return fh(arguments[0],arguments[1]);case 3:return gh(arguments[0],arguments[1],arguments[2]);case 4:return hh(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return ih(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return jh(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],new Qe(b.slice(5),0,null))}}
    function fh(a,b){if(a.G){var c=a.F,d=Vg(c+1,b);return d<=c?$g(a,d,b):a.G(b)}b=B(b);return null==b?a.o?a.o():a.call(a):bh(a,sd(b),ah(b))}function gh(a,b,c){if(a.G){b=vf(b,c);var d=a.F;c=Vg(d,c)+1;return c<=d?$g(a,c,b):a.G(b)}return bh(a,b,B(c))}function hh(a,b,c,d){return a.G?(b=vf(b,vf(c,d)),c=a.F,d=2+Vg(c-1,d),d<=c?$g(a,d,b):a.G(b)):ch(a,b,c,B(d))}function ih(a,b,c,d,e){return a.G?(b=vf(b,vf(c,vf(d,e))),c=a.F,e=3+Vg(c-2,e),e<=c?$g(a,e,b):a.G(b)):dh(a,b,c,d,B(e))}
    function jh(a,b,c,d,e,f){return a.G?(f=Wg(f),b=vf(b,vf(c,vf(d,vf(e,f)))),c=a.F,f=4+Vg(c-3,f),f<=c?$g(a,f,b):a.G(b)):eh(a,b,c,d,e,Wg(f))}var kh=function kh(a){switch(arguments.length){case 1:return kh.a(arguments[0]);case 2:return kh.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return kh.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};kh.a=function(){return !1};kh.b=function(a,b){return !A.b(a,b)};
    kh.g=function(a,b,c){return Tc(hh(A,a,b,c))};kh.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};kh.F=2;function lh(a){return B(a)?a:null}
    function mh(){if("undefined"===typeof Ac||"undefined"===typeof Bc||"undefined"===typeof vv)vv=function(a){this.hh=a;this.h=393216;this.I=0;},vv.prototype.O=function(a,b){return new vv(b)},vv.prototype.N=function(){return this.hh},vv.prototype.ra=function(){return !1},vv.prototype.next=function(){return Error("No such element")},vv.prototype.remove=function(){return Error("Unsupported operation")},vv.Pa=function(){return new Q(null,1,5,R,[CD],null)},vv.Ia=!0,vv.Da="cljs.core/t_cljs$core7592",vv.Ja=function(a){return ce(a,
    "cljs.core/t_cljs$core7592")};return new vv(S)}function oh(a){this.ha=a;this.J=0;}oh.prototype.ra=function(){return this.J<this.ha.length};oh.prototype.next=function(){var a=this.ha.charAt(this.J);this.J+=1;return a};oh.prototype.remove=function(){return Error("Unsupported operation")};function ph(a){this.l=a;this.J=0;}ph.prototype.ra=function(){return this.J<this.l.length};ph.prototype.next=function(){var a=this.l[this.J];this.J+=1;return a};ph.prototype.remove=function(){return Error("Unsupported operation")};
    var qh={},rh={};function sh(a){this.vd=qh;this.Hb=a;}sh.prototype.ra=function(){this.vd===qh?(this.vd=rh,this.Hb=B(this.Hb)):this.vd===this.Hb&&(this.Hb=D(this.vd));return null!=this.Hb};sh.prototype.next=function(){if(this.ra())return this.vd=this.Hb,C(this.Hb);throw Error("No such element");};sh.prototype.remove=function(){return Error("Unsupported operation")};
    function th(a){if(Pe(a))return ze(a);if(null==a)return mh();if("string"===typeof a)return new oh(a);if(Rc(a))return new ph(a);var b=null==a;b||(b=(b=null!=a?a.h&8388608||h===a.qf?!0:a.h?!1:Xc(Wd,a):Xc(Wd,a))?b:Rc(a)||"string"===typeof a);if(b)return new sh(a);throw Error(["Cannot create iterator from ",q.a(a)].join(""));}function uh(a){this.te=a;}uh.prototype.add=function(a){this.te.push(a);return this};uh.prototype.remove=function(){return this.te.shift()};uh.prototype.Nd=function(){return 0===this.te.length};
    uh.prototype.toString=function(){return ["Many: ",q.a(this.te)].join("")};var vh={};function wh(a){this.m=a;}wh.prototype.add=function(a){return this.m===vh?(this.m=a,this):new uh([this.m,a])};wh.prototype.remove=function(){if(this.m===vh)throw Error("Removing object from empty buffer");var a=this.m;this.m=vh;return a};wh.prototype.Nd=function(){return this.m===vh};wh.prototype.toString=function(){return ["Single: ",q.a(this.m)].join("")};function xh(){}xh.prototype.add=function(a){return new wh(a)};
    xh.prototype.remove=function(){throw Error("Removing object from empty buffer");};xh.prototype.Nd=function(){return !0};xh.prototype.toString=function(){return "Empty"};var yh=new xh,zh=function zh(a){return new Mg(null,function(){if(a.ra())for(var c=[],d=0;;){var e=a.ra();if(p(p(e)?32>d:e))c[d]=a.next(),d+=1;else return Sg(new Pg(c,0,d),zh.a?zh.a(a):zh.call(null,a))}else return null},null,null)};function Ah(a){this.buffer=yh;this.Hb=vh;this.Ne=!1;this.pc=null;this.Ze=a;this.oh=!1;}
    Ah.prototype.step=function(){if(this.Hb!==vh)return !0;for(;;)if(this.Hb===vh)if(this.buffer.Nd()){if(this.Ne)return !1;if(this.Ze.ra()){if(this.oh)var a=fh(this.pc,vf(null,this.Ze.next()));else a=this.Ze.next(),a=this.pc.b?this.pc.b(null,a):this.pc.call(null,null,a);cf(a)&&(this.pc.a?this.pc.a(null):this.pc.call(null,null),this.Ne=!0);}else this.pc.a?this.pc.a(null):this.pc.call(null,null),this.Ne=!0;}else this.Hb=this.buffer.remove();else return !0};Ah.prototype.ra=function(){return this.step()};
    Ah.prototype.next=function(){if(this.ra()){var a=this.Hb;this.Hb=vh;return a}throw Error("No such element");};Ah.prototype.remove=function(){return Error("Unsupported operation")};Ah.prototype[ad]=function(){return Ue(this)};
    function Bh(a,b){var c=new Ah(b);c.pc=function(){var d=function(){function e(k,l){c.buffer=c.buffer.add(l);return k}var f=null;f=function(k,l){switch(arguments.length){case 0:return null;case 1:return k;case 2:return e.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=function(){return null};f.a=function(k){return k};f.b=e;return f}();return a.a?a.a(d):a.call(null,d)}();return c}function Ch(a){return $f(a)?a:(a=B(a))?a:Se}
    function Dh(a,b){for(;;){if(null==B(b))return !0;var c=C(b);c=a.a?a.a(c):a.call(null,c);if(p(c))b=D(b);else return !1}}function Eh(a,b){for(;;)if(b=B(b)){var c=C(b);c=a.a?a.a(c):a.call(null,c);if(p(c))return c;b=D(b);}else return null}function Fh(a){if(bg(a))return 0===(a&1);throw Error(["Argument must be an integer: ",q.a(a)].join(""));}
    function Gh(a){return function(){function b(k,l){return Tc(a.b?a.b(k,l):a.call(null,k,l))}function c(k){return Tc(a.a?a.a(k):a.call(null,k))}function d(){return Tc(a.o?a.o():a.call(null))}var e=null,f=function(){function k(m,r,u){var v=null;if(2<arguments.length){v=0;for(var y=Array(arguments.length-2);v<y.length;)y[v]=arguments[v+2],++v;v=new Qe(y,0,null);}return l.call(this,m,r,v)}function l(m,r,u){return Tc(hh(a,m,r,u))}k.F=2;k.G=function(m){var r=C(m);m=D(m);var u=C(m);m=Re(m);return l(r,u,m)};
    k.g=l;return k}();e=function(k,l,m){switch(arguments.length){case 0:return d.call(this);case 1:return c.call(this,k);case 2:return b.call(this,k,l);default:var r=null;if(2<arguments.length){r=0;for(var u=Array(arguments.length-2);r<u.length;)u[r]=arguments[r+2],++r;r=new Qe(u,0,null);}return f.g(k,l,r)}};e.F=2;e.G=f.G;e.o=d;e.a=c;e.b=b;e.g=f.g;return e}()}
    function Hh(a){return function(){function b(c){if(0<arguments.length)for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;return a}b.F=0;b.G=function(c){B(c);return a};b.g=function(){return a};return b}()}
    var Ih=function Ih(a){switch(arguments.length){case 0:return Ih.o();case 1:return Ih.a(arguments[0]);case 2:return Ih.b(arguments[0],arguments[1]);case 3:return Ih.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Ih.g(arguments[0],arguments[1],arguments[2],new Qe(c.slice(3),0,null))}};Ih.o=function(){return lg};Ih.a=function(a){return a};
    Ih.b=function(a,b){return function(){function c(m,r,u){m=b.c?b.c(m,r,u):b.call(null,m,r,u);return a.a?a.a(m):a.call(null,m)}function d(m,r){m=b.b?b.b(m,r):b.call(null,m,r);return a.a?a.a(m):a.call(null,m)}function e(m){m=b.a?b.a(m):b.call(null,m);return a.a?a.a(m):a.call(null,m)}function f(){var m=b.o?b.o():b.call(null);return a.a?a.a(m):a.call(null,m)}var k=null,l=function(){function m(u,v,y,E){var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+
    3],++H;H=new Qe(T,0,null);}return r.call(this,u,v,y,H)}function r(u,v,y,E){u=ih(b,u,v,y,E);return a.a?a.a(u):a.call(null,u)}m.F=3;m.G=function(u){var v=C(u);u=D(u);var y=C(u);u=D(u);var E=C(u);u=Re(u);return r(v,y,E,u)};m.g=r;return m}();k=function(m,r,u,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,m,r,u);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=
    arguments[y+3],++y;y=new Qe(E,0,null);}return l.g(m,r,u,y)}};k.F=3;k.G=l.G;k.o=f;k.a=e;k.b=d;k.c=c;k.g=l.g;return k}()};
    Ih.c=function(a,b,c){return function(){function d(r,u,v){r=c.c?c.c(r,u,v):c.call(null,r,u,v);r=b.a?b.a(r):b.call(null,r);return a.a?a.a(r):a.call(null,r)}function e(r,u){r=c.b?c.b(r,u):c.call(null,r,u);r=b.a?b.a(r):b.call(null,r);return a.a?a.a(r):a.call(null,r)}function f(r){r=c.a?c.a(r):c.call(null,r);r=b.a?b.a(r):b.call(null,r);return a.a?a.a(r):a.call(null,r)}function k(){var r=c.o?c.o():c.call(null);r=b.a?b.a(r):b.call(null,r);return a.a?a.a(r):a.call(null,r)}var l=null,m=function(){function r(v,
    y,E,H){var T=null;if(3<arguments.length){T=0;for(var Y=Array(arguments.length-3);T<Y.length;)Y[T]=arguments[T+3],++T;T=new Qe(Y,0,null);}return u.call(this,v,y,E,T)}function u(v,y,E,H){v=ih(c,v,y,E,H);v=b.a?b.a(v):b.call(null,v);return a.a?a.a(v):a.call(null,v)}r.F=3;r.G=function(v){var y=C(v);v=D(v);var E=C(v);v=D(v);var H=C(v);v=Re(v);return u(y,E,H,v)};r.g=u;return r}();l=function(r,u,v,y){switch(arguments.length){case 0:return k.call(this);case 1:return f.call(this,r);case 2:return e.call(this,
    r,u);case 3:return d.call(this,r,u,v);default:var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Qe(H,0,null);}return m.g(r,u,v,E)}};l.F=3;l.G=m.G;l.o=k;l.a=f;l.b=e;l.c=d;l.g=m.g;return l}()};
    Ih.g=function(a,b,c,d){var e=Eg(vf(a,vf(b,vf(c,d))));return function(){function f(l){var m=null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Qe(r,0,null);}return k.call(this,m)}function k(l){l=fh(C(e),l);for(var m=D(e);;)if(m){var r=C(m);l=r.a?r.a(l):r.call(null,l);m=D(m);}else return l}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()};Ih.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};
    Ih.F=3;
    function Jh(a,b){return function(){function c(m,r,u){return a.A?a.A(b,m,r,u):a.call(null,b,m,r,u)}function d(m,r){return a.c?a.c(b,m,r):a.call(null,b,m,r)}function e(m){return a.b?a.b(b,m):a.call(null,b,m)}function f(){return a.a?a.a(b):a.call(null,b)}var k=null,l=function(){function m(u,v,y,E){var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Qe(T,0,null);}return r.call(this,u,v,y,H)}function r(u,v,y,E){return jh(a,b,u,v,y,G([E]))}m.F=
    3;m.G=function(u){var v=C(u);u=D(u);var y=C(u);u=D(u);var E=C(u);u=Re(u);return r(v,y,E,u)};m.g=r;return m}();k=function(m,r,u,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,m,r,u);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=arguments[y+3],++y;y=new Qe(E,0,null);}return l.g(m,r,u,y)}};k.F=3;k.G=l.G;k.o=f;
    k.a=e;k.b=d;k.c=c;k.g=l.g;return k}()}
    function Kh(a,b,c){return function(){function d(r,u,v){return a.K?a.K(b,c,r,u,v):a.call(null,b,c,r,u,v)}function e(r,u){return a.A?a.A(b,c,r,u):a.call(null,b,c,r,u)}function f(r){return a.c?a.c(b,c,r):a.call(null,b,c,r)}function k(){return a.b?a.b(b,c):a.call(null,b,c)}var l=null,m=function(){function r(v,y,E,H){var T=null;if(3<arguments.length){T=0;for(var Y=Array(arguments.length-3);T<Y.length;)Y[T]=arguments[T+3],++T;T=new Qe(Y,0,null);}return u.call(this,v,y,E,T)}function u(v,y,E,H){return jh(a,
    b,c,v,y,G([E,H]))}r.F=3;r.G=function(v){var y=C(v);v=D(v);var E=C(v);v=D(v);var H=C(v);v=Re(v);return u(y,E,H,v)};r.g=u;return r}();l=function(r,u,v,y){switch(arguments.length){case 0:return k.call(this);case 1:return f.call(this,r);case 2:return e.call(this,r,u);case 3:return d.call(this,r,u,v);default:var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Qe(H,0,null);}return m.g(r,u,v,E)}};l.F=3;l.G=m.G;l.o=k;l.a=f;l.b=e;l.c=d;l.g=m.g;return l}()}
    function Lh(a,b,c,d){return function(){function e(u,v,y){return a.la?a.la(b,c,d,u,v,y):a.call(null,b,c,d,u,v,y)}function f(u,v){return a.K?a.K(b,c,d,u,v):a.call(null,b,c,d,u,v)}function k(u){return a.A?a.A(b,c,d,u):a.call(null,b,c,d,u)}function l(){return a.c?a.c(b,c,d):a.call(null,b,c,d)}var m=null,r=function(){function u(y,E,H,T){var Y=null;if(3<arguments.length){Y=0;for(var ia=Array(arguments.length-3);Y<ia.length;)ia[Y]=arguments[Y+3],++Y;Y=new Qe(ia,0,null);}return v.call(this,y,E,H,Y)}function v(y,
    E,H,T){return jh(a,b,c,d,y,G([E,H,T]))}u.F=3;u.G=function(y){var E=C(y);y=D(y);var H=C(y);y=D(y);var T=C(y);y=Re(y);return v(E,H,T,y)};u.g=v;return u}();m=function(u,v,y,E){switch(arguments.length){case 0:return l.call(this);case 1:return k.call(this,u);case 2:return f.call(this,u,v);case 3:return e.call(this,u,v,y);default:var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Qe(T,0,null);}return r.g(u,v,y,H)}};m.F=3;m.G=r.G;m.o=l;m.a=k;m.b=f;m.c=e;m.g=r.g;return m}()}
    function Mh(a,b){return function(){function c(l,m,r){l=null==l?b:l;return a.c?a.c(l,m,r):a.call(null,l,m,r)}function d(l,m){l=null==l?b:l;return a.b?a.b(l,m):a.call(null,l,m)}function e(l){l=null==l?b:l;return a.a?a.a(l):a.call(null,l)}var f=null,k=function(){function l(r,u,v,y){var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Qe(H,0,null);}return m.call(this,r,u,v,E)}function m(r,u,v,y){return ih(a,null==r?b:r,u,v,y)}l.F=3;l.G=function(r){var u=
    C(r);r=D(r);var v=C(r);r=D(r);var y=C(r);r=Re(r);return m(u,v,y,r)};l.g=m;return l}();f=function(l,m,r,u){switch(arguments.length){case 1:return e.call(this,l);case 2:return d.call(this,l,m);case 3:return c.call(this,l,m,r);default:var v=null;if(3<arguments.length){v=0;for(var y=Array(arguments.length-3);v<y.length;)y[v]=arguments[v+3],++v;v=new Qe(y,0,null);}return k.g(l,m,r,v)}};f.F=3;f.G=k.G;f.a=e;f.b=d;f.c=c;f.g=k.g;return f}()}
    function Nh(a){this.state=a;this.bf=this.Tf=this.H=null;this.I=16386;this.h=6455296;}g=Nh.prototype;g.Y=function(a,b){return this===b};g.zb=function(){return this.state};g.N=function(){return this.H};
    g.Ge=function(a,b,c){a=B(this.bf);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f),l=J(k,0,null);k=J(k,1,null);k.A?k.A(l,this,b,c):k.call(null,l,this,b,c);f+=1;}else if(a=B(a))Wf(a)?(d=re(a),a=se(a),l=d,e=F(d),d=l):(d=C(a),l=J(d,0,null),k=J(d,1,null),k.A?k.A(l,this,b,c):k.call(null,l,this,b,c),a=D(a),d=null,e=0),f=0;else return null};g.Z=function(){return hb(this)};function Oh(a){return new Nh(a)}
    function Ph(a,b){if(a instanceof Nh){var c=a.Tf;if(null!=c&&!p(c.a?c.a(b):c.call(null,b)))throw Error("Validator rejected reference state");c=a.state;a.state=b;null!=a.bf&&a.Ge(null,c,b);return b}return ve(a,b)}function Qh(a,b){var c=a.Tf;if(null!=c&&!p(c.a?c.a(b):c.call(null,b)))throw Error("Validator rejected reference state");c=a.state;a.state=b;null!=a.bf&&ie(a,c,b);return new Q(null,2,5,R,[c,b],null)}
    var Rh=function Rh(a){switch(arguments.length){case 2:return Rh.b(arguments[0],arguments[1]);case 3:return Rh.c(arguments[0],arguments[1],arguments[2]);case 4:return Rh.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Rh.g(arguments[0],arguments[1],arguments[2],arguments[3],new Qe(c.slice(4),0,null))}};
    Rh.b=function(a,b){if(a instanceof Nh){var c=a.state;b=b.a?b.a(c):b.call(null,c);a=Ph(a,b);}else a=we(a,b);return a};Rh.c=function(a,b,c){if(a instanceof Nh){var d=a.state;b=b.b?b.b(d,c):b.call(null,d,c);a=Ph(a,b);}else a=we(a,b,c);return a};Rh.A=function(a,b,c,d){if(a instanceof Nh){var e=a.state;b=b.c?b.c(e,c,d):b.call(null,e,c,d);a=Ph(a,b);}else a=we(a,b,c,d);return a};Rh.g=function(a,b,c,d,e){return a instanceof Nh?Ph(a,ih(b,a.state,c,d,e)):we(a,b,c,d,e)};
    Rh.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};Rh.F=4;function Sh(a,b){var c=a.state;b=b.a?b.a(c):b.call(null,c);return Qh(a,b)}function Th(a,b){var c=a.state;b=Hf.b?Hf.b(c,b):Hf.call(null,c,b);return Qh(a,b)}function Uh(a){this.state=a;this.h=32768;this.I=0;}Uh.prototype.Cc=function(a,b){return this.state=b};Uh.prototype.zb=function(){return this.state};function Vh(a,b){xe(a,b);}
    var Wh=function Wh(a){switch(arguments.length){case 1:return Wh.a(arguments[0]);case 2:return Wh.b(arguments[0],arguments[1]);case 3:return Wh.c(arguments[0],arguments[1],arguments[2]);case 4:return Wh.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Wh.g(arguments[0],arguments[1],arguments[2],arguments[3],new Qe(c.slice(4),0,null))}};
    Wh.a=function(a){return function(b){return function(){function c(l,m){m=a.a?a.a(m):a.call(null,m);return b.b?b.b(l,m):b.call(null,l,m)}function d(l){return b.a?b.a(l):b.call(null,l)}function e(){return b.o?b.o():b.call(null)}var f=null,k=function(){function l(r,u,v){var y=null;if(2<arguments.length){y=0;for(var E=Array(arguments.length-2);y<E.length;)E[y]=arguments[y+2],++y;y=new Qe(E,0,null);}return m.call(this,r,u,y)}function m(r,u,v){u=gh(a,u,v);return b.b?b.b(r,u):b.call(null,r,u)}l.F=2;l.G=function(r){var u=
    C(r);r=D(r);var v=C(r);r=Re(r);return m(u,v,r)};l.g=m;return l}();f=function(l,m,r){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,l);case 2:return c.call(this,l,m);default:var u=null;if(2<arguments.length){u=0;for(var v=Array(arguments.length-2);u<v.length;)v[u]=arguments[u+2],++u;u=new Qe(v,0,null);}return k.g(l,m,u)}};f.F=2;f.G=k.G;f.o=e;f.a=d;f.b=c;f.g=k.g;return f}()}};
    Wh.b=function(a,b){return new Mg(null,function(){var c=B(b);if(c){if(Wf(c)){for(var d=re(c),e=F(d),f=Qg(e),k=0;;)if(k<e)Tg(f,function(){var l=qd(d,k);return a.a?a.a(l):a.call(null,l)}()),k+=1;else break;return Sg(Ug(f),Wh.b(a,se(c)))}return vf(function(){var l=C(c);return a.a?a.a(l):a.call(null,l)}(),Wh.b(a,Re(c)))}return null},null,null)};
    Wh.c=function(a,b,c){return new Mg(null,function(){var d=B(b),e=B(c);if(d&&e){var f=C(d);var k=C(e);f=a.b?a.b(f,k):a.call(null,f,k);d=vf(f,Wh.c(a,Re(d),Re(e)));}else d=null;return d},null,null)};Wh.A=function(a,b,c,d){return new Mg(null,function(){var e=B(b),f=B(c),k=B(d);if(e&&f&&k){var l=C(e);var m=C(f),r=C(k);l=a.c?a.c(l,m,r):a.call(null,l,m,r);e=vf(l,Wh.A(a,Re(e),Re(f),Re(k)));}else e=null;return e},null,null)};
    Wh.g=function(a,b,c,d,e){return Wh.b(function(f){return fh(a,f)},function l(k){return new Mg(null,function(){var m=Wh.b(B,k);return Dh(lg,m)?vf(Wh.b(C,m),l(Wh.b(Re,m))):null},null,null)}(Cf.g(e,d,G([c,b]))))};Wh.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};Wh.F=4;
    var Xh=function Xh(a){switch(arguments.length){case 1:return Xh.a(arguments[0]);case 2:return Xh.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    Xh.a=function(a){return function(b){var c=new Uh(a);return function(){function d(l,m){var r=t(c),u=c.Cc(null,c.zb(null)-1);l=0<r?b.b?b.b(l,m):b.call(null,l,m):l;return 0<u?l:cf(l)?l:bf(l)}function e(l){return b.a?b.a(l):b.call(null,l)}function f(){return b.o?b.o():b.call(null)}var k=null;k=function(l,m){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,l);case 2:return d.call(this,l,m)}throw Error("Invalid arity: "+arguments.length);};k.o=f;k.a=e;k.b=d;return k}()}};
    Xh.b=function(a,b){return new Mg(null,function(){if(0<a){var c=B(b);return c?vf(C(c),Xh.b(a-1,Re(c))):null}return null},null,null)};Xh.F=2;function Yh(a,b){return new Mg(null,function(){a:for(var c=a,d=b;;)if(d=B(d),0<c&&d)--c,d=Re(d);else break a;return d},null,null)}function Zh(a,b){return Wh.c(function(c){return c},b,Yh(a,b))}function $h(a,b,c,d){this.H=a;this.count=b;this.m=c;this.next=d;this.B=null;this.h=32374988;this.I=1;}g=$h.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,this.count)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null==this.next?1<this.count?this.next=new $h(null,this.count-1,this.m,null):-1===this.count?this:null:this.next};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Bd=function(){return !1};g.Ba=function(a,b){if(-1===this.count)for(var c=b.b?b.b(this.m,this.m):b.call(null,this.m,this.m);;){if(cf(c))return t(c);c=b.b?b.b(c,this.m):b.call(null,c,this.m);}else for(a=1,c=this.m;;)if(a<this.count){c=b.b?b.b(c,this.m):b.call(null,c,this.m);if(cf(c))return t(c);a+=1;}else return c};
    g.Ca=function(a,b,c){if(-1===this.count)for(c=b.b?b.b(c,this.m):b.call(null,c,this.m);;){if(cf(c))return t(c);c=b.b?b.b(c,this.m):b.call(null,c,this.m);}else for(a=0;;)if(a<this.count){c=b.b?b.b(c,this.m):b.call(null,c,this.m);if(cf(c))return t(c);a+=1;}else return c};g.Fa=function(){return this.m};g.Ha=function(){return null==this.next?1<this.count?this.next=new $h(null,this.count-1,this.m,null):-1===this.count?this:Se:this.next};g.$=function(){return this};
    g.O=function(a,b){return b===this.H?this:new $h(b,this.count,this.m,this.next)};g.ga=function(a,b){return vf(b,this)};function ai(a,b){return 0<a?new $h(null,a,b,null):Se}var bi=function bi(a){switch(arguments.length){case 0:return bi.o();case 1:return bi.a(arguments[0]);case 2:return bi.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return bi.g(arguments[0],arguments[1],new Qe(c.slice(2),0,null))}};bi.o=function(){return Se};
    bi.a=function(a){return new Mg(null,function(){return a},null,null)};bi.b=function(a,b){return new Mg(null,function(){var c=B(a),d=B(b);return c&&d?vf(C(c),vf(C(d),bi.b(Re(c),Re(d)))):null},null,null)};bi.g=function(a,b,c){return new Mg(null,function(){var d=Wh.b(B,Cf.g(c,b,G([a])));return Dh(lg,d)?Xg.b(Wh.b(C,d),fh(bi,Wh.b(Re,d))):null},null,null)};bi.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};bi.F=2;
    function ci(){return function(a){var b=new Uh(!1);return function(){function c(k,l){if(p(t(b)))return k=a.b?a.b(k," "):a.call(null,k," "),cf(k)?k:a.b?a.b(k,l):a.call(null,k,l);xe(b,!0);return a.b?a.b(k,l):a.call(null,k,l)}function d(k){return a.a?a.a(k):a.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};
    f.o=e;f.a=d;f.b=c;return f}()}}function di(a,b){return Yh(1,bi.b(new $h(null,-1,a,null),b))}function ei(a,b){return fh(Xg,gh(Wh,a,b))}var fi=function fi(a){switch(arguments.length){case 1:return fi.a(arguments[0]);case 2:return fi.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    fi.a=function(a){return function(b){return function(){function c(k,l){return p(a.a?a.a(l):a.call(null,l))?b.b?b.b(k,l):b.call(null,k,l):k}function d(k){return b.a?b.a(k):b.call(null,k)}function e(){return b.o?b.o():b.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=e;f.a=d;f.b=c;return f}()}};
    fi.b=function(a,b){return new Mg(null,function(){var c=B(b);if(c){if(Wf(c)){for(var d=re(c),e=F(d),f=Qg(e),k=0;;)if(k<e){var l=qd(d,k);l=a.a?a.a(l):a.call(null,l);p(l)&&(l=qd(d,k),f.add(l));k+=1;}else break;return Sg(Ug(f),fi.b(a,se(c)))}d=C(c);c=Re(c);return p(a.a?a.a(d):a.call(null,d))?vf(d,fi.b(a,c)):fi.b(a,c)}return null},null,null)};fi.F=2;
    var gi=function gi(a){switch(arguments.length){case 1:return gi.a(arguments[0]);case 2:return gi.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};gi.a=function(a){return fi.a(Gh(a))};gi.b=function(a,b){return fi.b(Gh(a),b)};gi.F=2;function hi(a){return function d(c){return new Mg(null,function(){return vf(c,p(Tf.a?Tf.a(c):Tf.call(null,c))?ei(d,G([B.a?B.a(c):B.call(null,c)])):null)},null,null)}(a)}
    function ii(a){return fi.b(function(b){return !Tf(b)},Re(hi(a)))}var ji=function ji(a){switch(arguments.length){case 0:return ji.o();case 1:return ji.a(arguments[0]);case 2:return ji.b(arguments[0],arguments[1]);case 3:return ji.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};ji.o=function(){return I};ji.a=function(a){return a};
    ji.b=function(a,b){return null!=a?null!=a&&(a.I&4||h===a.cg)?Pd(le(gd.c(ke,je(a),b)),Lf(a)):gd.c(od,a,b):gd.c(Cf,a,b)};ji.c=function(a,b,c){return null!=a&&(a.I&4||h===a.cg)?Pd(le(og(b,Yg,je(a),c)),Lf(a)):og(b,Cf,a,c)};ji.F=3;
    var ki=function ki(a){switch(arguments.length){case 2:return ki.b(arguments[0],arguments[1]);case 3:return ki.c(arguments[0],arguments[1],arguments[2]);case 4:return ki.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ki.g(arguments[0],arguments[1],arguments[2],arguments[3],new Qe(c.slice(4),0,null))}};
    ki.b=function(a,b){return le(gd.c(function(c,d){return Yg.b(c,a.a?a.a(d):a.call(null,d))},je(I),b))};ki.c=function(a,b,c){return ji.b(I,Wh.c(a,b,c))};ki.A=function(a,b,c,d){return ji.b(I,Wh.A(a,b,c,d))};ki.g=function(a,b,c,d,e){return ji.b(I,jh(Wh,a,b,c,d,G([e])))};ki.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};ki.F=4;function li(a,b){return le(gd.c(function(c,d){return p(a.a?a.a(d):a.call(null,d))?Yg.b(c,d):c},je(I),b))}
    var mi=function mi(a){switch(arguments.length){case 2:return mi.b(arguments[0],arguments[1]);case 3:return mi.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};mi.b=function(a,b){return gd.c(x,a,b)};mi.c=function(a,b,c){var d=Yf;for(b=B(b);;)if(null!=b){a=x.c(a,C(b),d);if(d===a)return c;b=D(b);}else return a};mi.F=3;
    var ni=function ni(a,b,c){b=B(b);var e=C(b),f=D(b);return f?K.c(a,e,function(){var k=x.b(a,e);return ni.c?ni.c(k,f,c):ni.call(null,k,f,c)}()):K.c(a,e,c)},oi=function oi(a){switch(arguments.length){case 3:return oi.c(arguments[0],arguments[1],arguments[2]);case 4:return oi.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return oi.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return oi.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);
    default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return oi.g(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],new Qe(c.slice(6),0,null))}};oi.c=function(a,b,c){b=B(b);var d=C(b);return (b=D(b))?K.c(a,d,oi.c(x.b(a,d),b,c)):K.c(a,d,function(){var e=x.b(a,d);return c.a?c.a(e):c.call(null,e)}())};
    oi.A=function(a,b,c,d){b=B(b);var e=C(b);return (b=D(b))?K.c(a,e,oi.A(x.b(a,e),b,c,d)):K.c(a,e,function(){var f=x.b(a,e);return c.b?c.b(f,d):c.call(null,f,d)}())};oi.K=function(a,b,c,d,e){b=B(b);var f=C(b);return (b=D(b))?K.c(a,f,oi.K(x.b(a,f),b,c,d,e)):K.c(a,f,function(){var k=x.b(a,f);return c.c?c.c(k,d,e):c.call(null,k,d,e)}())};
    oi.la=function(a,b,c,d,e,f){b=B(b);var k=C(b);return (b=D(b))?K.c(a,k,oi.la(x.b(a,k),b,c,d,e,f)):K.c(a,k,function(){var l=x.b(a,k);return c.A?c.A(l,d,e,f):c.call(null,l,d,e,f)}())};oi.g=function(a,b,c,d,e,f,k){var l=B(b);b=C(l);return (l=D(l))?K.c(a,b,jh(oi,x.b(a,b),l,c,d,G([e,f,k]))):K.c(a,b,jh(c,x.b(a,b),d,e,f,G([k])))};oi.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);var f=D(e);e=C(f);var k=D(f);f=C(k);k=D(k);return this.g(b,a,c,d,e,f,k)};oi.F=6;
    function pi(a,b,c){return K.c(a,b,function(){var d=x.b(a,b);return c.a?c.a(d):c.call(null,d)}())}function qi(a,b,c,d){return K.c(a,b,function(){var e=x.b(a,b);return c.b?c.b(e,d):c.call(null,e,d)}())}function ri(a,b){this.va=a;this.l=b;}function si(a){return new ri(a,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])}function ti(a){return new ri(a.va,ed(a.l))}
    function ui(a){a=a.C;return 32>a?0:a-1>>>5<<5}function vi(a,b,c){for(;;){if(0===b)return c;var d=si(a);d.l[0]=c;c=d;b-=5;}}var wi=function wi(a,b,c,d){var f=ti(c),k=a.C-1>>>b&31;5===b?f.l[k]=d:(c=c.l[k],null!=c?(b-=5,a=wi.A?wi.A(a,b,c,d):wi.call(null,a,b,c,d)):a=vi(null,b-5,d),f.l[k]=a);return f};function xi(a,b){throw Error(["No item ",q.a(a)," in vector of length ",q.a(b)].join(""));}
    function yi(a,b){if(b>=ui(a))return a.ta;var c=a.root;for(a=a.shift;;)if(0<a){var d=a-5;c=c.l[b>>>a&31];a=d;}else return c.l}function zi(a,b){return 0<=b&&b<a.C?yi(a,b):xi(b,a.C)}
    var Ai=function Ai(a,b,c,d,e){var k=ti(c);if(0===b)k.l[d&31]=e;else {var l=d>>>b&31;b-=5;c=c.l[l];a=Ai.K?Ai.K(a,b,c,d,e):Ai.call(null,a,b,c,d,e);k.l[l]=a;}return k},Bi=function Bi(a,b,c){var e=a.C-2>>>b&31;if(5<b){b-=5;var f=c.l[e];a=Bi.c?Bi.c(a,b,f):Bi.call(null,a,b,f);if(null==a&&0===e)return null;c=ti(c);c.l[e]=a;return c}if(0===e)return null;c=ti(c);c.l[e]=null;return c};function Ci(a,b,c,d,e,f){this.J=a;this.Td=b;this.l=c;this.ka=d;this.start=e;this.end=f;}
    Ci.prototype.ra=function(){return this.J<this.end};Ci.prototype.next=function(){32===this.J-this.Td&&(this.l=yi(this.ka,this.J),this.Td+=32);var a=this.l[this.J&31];this.J+=1;return a};function Di(a,b,c){return new Ci(b,b-b%32,b<F(a)?yi(a,b):null,a,b,c)}function Ei(a,b,c,d){return c<d?Fi(a,b,pf(a,c),c+1,d):b.o?b.o():b.call(null)}function Fi(a,b,c,d,e){var f=c;c=d;for(d=yi(a,d);;)if(c<e){var k=c&31;d=0===k?yi(a,c):d;k=d[k];f=b.b?b.b(f,k):b.call(null,f,k);if(cf(f))return t(f);c+=1;}else return f}
    function Q(a,b,c,d,e,f){this.H=a;this.C=b;this.shift=c;this.root=d;this.ta=e;this.B=f;this.h=167666463;this.I=139268;}g=Q.prototype;g.Ac=function(a,b){return 0<=b&&b<this.C?new Gi(b,yi(this,b)[b&31]):null};g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return "number"===typeof b?this.wa(null,b,c):c};
    g.Aa=function(a,b,c){a=0;for(var d=c;;)if(a<this.C){var e=yi(this,a);c=e.length;a:for(var f=0;;)if(f<c){var k=f+a,l=e[f];d=b.c?b.c(d,k,l):b.call(null,d,k,l);if(cf(d)){e=d;break a}f+=1;}else {e=d;break a}if(cf(e))return t(e);a+=c;d=e;}else return d};g.ye=h;g.W=function(a,b){return zi(this,b)[b&31]};g.wa=function(a,b,c){return 0<=b&&b<this.C?yi(this,b)[b&31]:c};
    g.Ib=function(a,b,c){if(0<=b&&b<this.C)return ui(this)<=b?(a=ed(this.ta),a[b&31]=c,new Q(this.H,this.C,this.shift,this.root,a,null)):new Q(this.H,this.C,this.shift,Ai(this,this.shift,this.root,b,c),this.ta,null);if(b===this.C)return this.ga(null,c);throw Error(["Index ",q.a(b)," out of bounds  [0,",q.a(this.C),"]"].join(""));};g.ua=function(){return Di(this,0,this.C)};g.N=function(){return this.H};g.X=function(){return this.C};g.Xb=function(){return 0<this.C?this.W(null,this.C-1):null};
    g.Yb=function(){if(0===this.C)throw Error("Can't pop empty vector");if(1===this.C)return Pd(I,this.H);if(1<this.C-ui(this))return new Q(this.H,this.C-1,this.shift,this.root,this.ta.slice(0,-1),null);var a=yi(this,this.C-2),b=Bi(this,this.shift,this.root);b=null==b?R:b;var c=this.C-1;return 5<this.shift&&null==b.l[1]?new Q(this.H,c,this.shift-5,b.l[0],a,null):new Q(this.H,c,this.shift,b,a,null)};g.Bc=function(){return 0<this.C?new tf(this,this.C-1,null):null};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){if(b instanceof Q)if(this.C===F(b))for(a=this.ua(null),b=b.ua(null);;)if(a.ra()){var c=a.next(),d=b.next();if(!A.b(c,d))return !1}else return !0;else return !1;else return uf(this,b)};g.hd=function(){return new Hi(this.C,this.shift,Ii.a?Ii.a(this.root):Ii.call(null,this.root),Ji.a?Ji.a(this.ta):Ji.call(null,this.ta))};g.pa=function(){return Pd(I,this.H)};g.Ba=function(a,b){return Ei(this,b,0,this.C)};
    g.Ca=function(a,b,c){a=0;for(var d=c;;)if(a<this.C){var e=yi(this,a);c=e.length;a:for(var f=0;;)if(f<c){var k=e[f];d=b.b?b.b(d,k):b.call(null,d,k);if(cf(d)){e=d;break a}f+=1;}else {e=d;break a}if(cf(e))return t(e);a+=c;d=e;}else return d};g.fa=function(a,b,c){if("number"===typeof b)return this.Ib(null,b,c);throw Error("Vector's key for assoc must be a number.");};
    g.$=function(){if(0===this.C)return null;if(32>=this.C)return new Qe(this.ta,0,null);a:{var a=this.root;for(var b=this.shift;;)if(0<b)b-=5,a=a.l[0];else {a=a.l;break a}}return Ki?Ki(this,a,0,0):Li.call(null,this,a,0,0)};g.O=function(a,b){return b===this.H?this:new Q(b,this.C,this.shift,this.root,this.ta,this.B)};
    g.ga=function(a,b){if(32>this.C-ui(this)){a=this.ta.length;for(var c=Array(a+1),d=0;;)if(d<a)c[d]=this.ta[d],d+=1;else break;c[a]=b;return new Q(this.H,this.C+1,this.shift,this.root,c,null)}a=(c=this.C>>>5>1<<this.shift)?this.shift+5:this.shift;c?(c=si(null),c.l[0]=this.root,d=vi(null,this.shift,new ri(null,this.ta)),c.l[1]=d):c=wi(this,this.shift,this.root,new ri(null,this.ta));return new Q(this.H,this.C+1,a,c,[b],null)};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.wa(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.W(null,c)};a.c=function(b,c,d){return this.wa(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.W(null,a)};g.b=function(a,b){return this.wa(null,a,b)};
    var R=new ri(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]),I=new Q(null,0,5,R,[],Xe);function Mi(a,b){var c=a.length;a=b?a:ed(a);if(32>c)return new Q(null,c,5,R,a,null);b=32;for(var d=(new Q(null,32,5,R,a.slice(0,32),null)).hd(null);;)if(b<c){var e=b+1;d=Yg.b(d,a[b]);b=e;}else return le(d)}Q.prototype[ad]=function(){return Ue(this)};
    function Ni(a){return p(Oi.a?Oi.a(a):Oi.call(null,a))?new Q(null,2,5,R,[Pi.a?Pi.a(a):Pi.call(null,a),Qi.a?Qi.a(a):Qi.call(null,a)],null):Vf(a)?Kf(a,null):Rc(a)?Mi(a,!0):le(gd.c(ke,je(I),a))}var Ri=function Ri(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Ri.g(0<c.length?new Qe(c.slice(0),0,null):null)};Ri.g=function(a){return a instanceof Qe&&0===a.J?Mi(a.l,!Rc(a.l)):Ni(a)};Ri.F=0;Ri.G=function(a){return this.g(B(a))};
    function Si(a,b,c,d,e){this.Gb=a;this.node=b;this.J=c;this.$a=d;this.H=e;this.B=null;this.h=32375020;this.I=1536;}g=Si.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){if(this.$a+1<this.node.length){var a=this.Gb;var b=this.node,c=this.J,d=this.$a+1;a=Ki?Ki(a,b,c,d):Li.call(null,a,b,c,d);return null==a?null:a}return this.Ae()};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return Ei(this.Gb,b,this.J+this.$a,F(this.Gb))};g.Ca=function(a,b,c){return Fi(this.Gb,b,c,this.J+this.$a,F(this.Gb))};g.Fa=function(){return this.node[this.$a]};g.Ha=function(){if(this.$a+1<this.node.length){var a=this.Gb;var b=this.node,c=this.J,d=this.$a+1;a=Ki?Ki(a,b,c,d):Li.call(null,a,b,c,d);return null==a?Se:a}return this.gd(null)};g.$=function(){return this};
    g.$d=function(){var a=this.node;return new Pg(a,this.$a,a.length)};g.gd=function(){var a=this.J+this.node.length;if(a<kd(this.Gb)){var b=this.Gb,c=yi(this.Gb,a);return Ki?Ki(b,c,a,0):Li.call(null,b,c,a,0)}return Se};g.O=function(a,b){return b===this.H?this:Ti?Ti(this.Gb,this.node,this.J,this.$a,b):Li.call(null,this.Gb,this.node,this.J,this.$a,b)};g.ga=function(a,b){return vf(b,this)};
    g.Ae=function(){var a=this.J+this.node.length;if(a<kd(this.Gb)){var b=this.Gb,c=yi(this.Gb,a);return Ki?Ki(b,c,a,0):Li.call(null,b,c,a,0)}return null};Si.prototype[ad]=function(){return Ue(this)};
    function Li(a){switch(arguments.length){case 3:var b=arguments[0],c=arguments[1],d=arguments[2];return new Si(b,zi(b,c),c,d,null);case 4:return Ki(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return Ti(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function Ki(a,b,c,d){return new Si(a,b,c,d,null)}function Ti(a,b,c,d,e){return new Si(a,b,c,d,e)}
    function Ui(a,b,c,d,e){this.H=a;this.ka=b;this.start=c;this.end=d;this.B=e;this.h=167666463;this.I=139264;}g=Ui.prototype;g.Ac=function(a,b){if(0>b)return null;a=this.start+b;return a<this.end?new Gi(b,xd(this.ka,a)):null};g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return "number"===typeof b?this.wa(null,b,c):c};
    g.Aa=function(a,b,c){a=this.start;for(var d=0;;)if(a<this.end){var e=d,f=qd(this.ka,a);c=b.c?b.c(c,e,f):b.call(null,c,e,f);if(cf(c))return t(c);d+=1;a+=1;}else return c};g.W=function(a,b){return 0>b||this.end<=this.start+b?xi(b,this.end-this.start):qd(this.ka,this.start+b)};g.wa=function(a,b,c){return 0>b||this.end<=this.start+b?c:qd(this.ka,this.start+b,c)};
    g.Ib=function(a,b,c){a=this.start+b;if(0>b||this.end+1<=a)throw Error(["Index ",q.a(b)," out of bounds [0,",q.a(this.X(null)),"]"].join(""));b=this.H;c=K.c(this.ka,a,c);var d=this.start,e=this.end;a+=1;a=e>a?e:a;return Vi.K?Vi.K(b,c,d,a,null):Vi.call(null,b,c,d,a,null)};g.ua=function(){return null!=this.ka&&h===this.ka.ye?Di(this.ka,this.start,this.end):new sh(this)};g.N=function(){return this.H};g.X=function(){return this.end-this.start};
    g.Xb=function(){return this.start===this.end?null:qd(this.ka,this.end-1)};g.Yb=function(){if(this.start===this.end)throw Error("Can't pop empty vector");var a=this.H,b=this.ka,c=this.start,d=this.end-1;return Vi.K?Vi.K(a,b,c,d,null):Vi.call(null,a,b,c,d,null)};g.Bc=function(){return this.start!==this.end?new tf(this,this.end-this.start-1,null):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Pd(I,this.H)};
    g.Ba=function(a,b){return null!=this.ka&&h===this.ka.ye?Ei(this.ka,b,this.start,this.end):ff(this,b)};g.Ca=function(a,b,c){return null!=this.ka&&h===this.ka.ye?Fi(this.ka,b,c,this.start,this.end):gf(this,b,c)};g.fa=function(a,b,c){if("number"===typeof b)return this.Ib(null,b,c);throw Error("Subvec's key for assoc must be a number.");};g.$=function(){var a=this;return function d(c){return c===a.end?null:vf(qd(a.ka,c),new Mg(null,function(){return d(c+1)},null,null))}(a.start)};
    g.O=function(a,b){return b===this.H?this:Vi.K?Vi.K(b,this.ka,this.start,this.end,this.B):Vi.call(null,b,this.ka,this.start,this.end,this.B)};g.ga=function(a,b){a=this.H;b=Kd(this.ka,this.end,b);var c=this.start,d=this.end+1;return Vi.K?Vi.K(a,b,c,d,null):Vi.call(null,a,b,c,d,null)};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.wa(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.W(null,c)};a.c=function(b,c,d){return this.wa(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.W(null,a)};g.b=function(a,b){return this.wa(null,a,b)};Ui.prototype[ad]=function(){return Ue(this)};
    function Vi(a,b,c,d,e){for(;;)if(b instanceof Ui)c=b.start+c,d=b.start+d,b=b.ka;else {if(!Vf(b))throw Error("v must satisfy IVector");if(0>c||d<c||d>F(b))throw Error("Index out of bounds");return new Ui(a,b,c,d,e)}}function Wi(a,b,c){return Vi(null,a,b|0,c|0,null)}function Xi(a,b){return a===b.va?b:new ri(a,ed(b.l))}function Ii(a){return new ri({},ed(a.l))}
    function Ji(a){var b=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];Xf(a,0,b,0,a.length);return b}var Yi=function Yi(a,b,c,d){c=Xi(a.root.va,c);var f=a.C-1>>>b&31;if(5===b)a=d;else {var k=c.l[f];null!=k?(b-=5,a=Yi.A?Yi.A(a,b,k,d):Yi.call(null,a,b,k,d)):a=vi(a.root.va,b-5,d);}c.l[f]=a;return c};function Hi(a,b,c,d){this.C=a;this.shift=b;this.root=c;this.ta=d;this.I=88;this.h=275;}g=Hi.prototype;
    g.kd=function(a,b){if(this.root.va){if(32>this.C-ui(this))this.ta[this.C&31]=b;else {a=new ri(this.root.va,this.ta);var c=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];c[0]=b;this.ta=c;this.C>>>5>1<<this.shift?(b=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],c=this.shift+
    5,b[0]=this.root,b[1]=vi(this.root.va,this.shift,a),this.root=new ri(this.root.va,b),this.shift=c):this.root=Yi(this,this.shift,this.root,a);}this.C+=1;return this}throw Error("conj! after persistent!");};g.Cd=function(){if(this.root.va){this.root.va=null;var a=this.C-ui(this),b=Array(a);Xf(this.ta,0,b,0,a);return new Q(null,this.C,this.shift,this.root,b,null)}throw Error("persistent! called twice");};
    g.jd=function(a,b,c){if("number"===typeof b)return Zi(this,b,c);throw Error("TransientVector's key for assoc! must be a number.");};
    function Zi(a,b,c){if(a.root.va){if(0<=b&&b<a.C){if(ui(a)<=b)a.ta[b&31]=c;else {var d=function l(f,k){k=Xi(a.root.va,k);if(0===f)k.l[b&31]=c;else {var m=b>>>f&31;f=l(f-5,k.l[m]);k.l[m]=f;}return k}(a.shift,a.root);a.root=d;}return a}if(b===a.C)return a.kd(null,c);throw Error(["Index ",q.a(b)," out of bounds for TransientVector of length",q.a(a.C)].join(""));}throw Error("assoc! after persistent!");}g.X=function(){if(this.root.va)return this.C;throw Error("count after persistent!");};
    g.W=function(a,b){if(this.root.va)return zi(this,b)[b&31];throw Error("nth after persistent!");};g.wa=function(a,b,c){return 0<=b&&b<this.C?this.W(null,b):c};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){if(this.root.va)return "number"===typeof b?this.wa(null,b,c):c;throw Error("lookup after persistent!");};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};function $i(a,b){this.pd=a;this.Rd=b;}
    $i.prototype.ra=function(){var a=null!=this.pd&&B(this.pd);return a?a:null!=this.Rd?this.Rd.ra():!1};$i.prototype.next=function(){if(null!=this.pd){var a=C(this.pd);this.pd=D(this.pd);return a}if(null!=this.Rd&&this.Rd.ra())return this.Rd.next();throw Error("No such element");};$i.prototype.remove=function(){return Error("Unsupported operation")};function aj(a,b,c,d){this.H=a;this.Ab=b;this.Fb=c;this.B=d;this.h=31850700;this.I=0;}g=aj.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=D(this.Ab);return a?new aj(this.H,a,this.Fb,null):null!=this.Fb?new aj(this.H,this.Fb,null,null):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Pd(Se,this.H)};g.Fa=function(){return C(this.Ab)};g.Ha=function(){var a=D(this.Ab);return a?new aj(this.H,a,this.Fb,null):null==this.Fb?this.pa(null):new aj(this.H,this.Fb,null,null)};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new aj(b,this.Ab,this.Fb,this.B)};g.ga=function(a,b){return vf(b,this)};aj.prototype[ad]=function(){return Ue(this)};
    function bj(a,b,c,d,e){this.H=a;this.count=b;this.Ab=c;this.Fb=d;this.B=e;this.I=139264;this.h=31858766;}g=bj.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,this.count.a?this.count.a(this):this.count.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.ua=function(){return new $i(this.Ab,ze(this.Fb))};g.N=function(){return this.H};g.X=function(){return this.count};g.Xb=function(){return C(this.Ab)};
    g.Yb=function(){if(p(this.Ab)){var a=D(this.Ab);return a?new bj(this.H,this.count-1,a,this.Fb,null):new bj(this.H,this.count-1,B(this.Fb),I,null)}return this};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Pd(cj,this.H)};g.Fa=function(){return C(this.Ab)};g.Ha=function(){return Re(B(this))};g.$=function(){var a=B(this.Fb),b=this.Ab;return p(p(b)?b:a)?new aj(null,this.Ab,B(a),null):null};
    g.O=function(a,b){return b===this.H?this:new bj(b,this.count,this.Ab,this.Fb,this.B)};g.ga=function(a,b){p(this.Ab)?(a=this.Fb,b=new bj(this.H,this.count+1,this.Ab,Cf.b(p(a)?a:I,b),null)):b=new bj(this.H,this.count+1,Cf.b(this.Ab,b),I,null);return b};var cj=new bj(null,0,null,I,Xe);bj.prototype[ad]=function(){return Ue(this)};function dj(){this.h=2097152;this.I=0;}dj.prototype.Y=function(){return !1};var ej=new dj;
    function fj(a,b){return ag(M(b)&&!Uf(b)?F(a)===F(b)?(null!=a?a.h&1048576||h===a.Qh||(a.h?0:Xc(Sd,a)):Xc(Sd,a))?kg(function(c,d,e){return A.b(x.c(b,d,ej),e)?!0:bf(!1)},!0,a):Dh(function(c){return A.b(x.c(b,C(c),ej),zf(c))},a):null:null)}function gj(a,b,c,d){this.J=0;this.zh=a;this.jf=b;this.Vc=c;this.vf=d;}gj.prototype.ra=function(){var a=this.J<this.jf;return a?a:this.vf.ra()};gj.prototype.next=function(){if(this.J<this.jf){var a=pf(this.Vc,this.J);this.J+=1;return new Gi(a,xd(this.zh,a))}return this.vf.next()};
    gj.prototype.remove=function(){return Error("Unsupported operation")};function hj(a){this.ha=a;}hj.prototype.next=function(){if(null!=this.ha){var a=C(this.ha),b=J(a,0,null);a=J(a,1,null);this.ha=D(this.ha);return {value:[b,a],done:!1}}return {value:null,done:!0}};function ij(a){this.ha=a;}ij.prototype.next=function(){if(null!=this.ha){var a=C(this.ha);this.ha=D(this.ha);return {value:[a,a],done:!1}}return {value:null,done:!0}};
    function jj(a,b){if(b instanceof z)a:{var c=a.length;b=b.da;for(var d=0;;){if(c<=d){a=-1;break a}if(a[d]instanceof z&&b===a[d].da){a=d;break a}d+=2;}}else if("string"==typeof b||"number"===typeof b)a:for(c=a.length,d=0;;){if(c<=d){a=-1;break a}if(b===a[d]){a=d;break a}d+=2;}else if(b instanceof w)a:for(c=a.length,b=b.wc,d=0;;){if(c<=d){a=-1;break a}if(a[d]instanceof w&&b===a[d].wc){a=d;break a}d+=2;}else if(null==b)a:for(b=a.length,c=0;;){if(b<=c){a=-1;break a}if(null==a[c]){a=c;break a}c+=2;}else a:for(c=
    a.length,d=0;;){if(c<=d){a=-1;break a}if(A.b(b,a[d])){a=d;break a}d+=2;}return a}function Gi(a,b){this.key=a;this.m=b;this.B=null;this.h=166619935;this.I=0;}g=Gi.prototype;g.Ac=function(a,b){switch(b){case 0:return new Gi(0,this.key);case 1:return new Gi(1,this.m);default:return null}};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.m;throw Error("Index out of bounds");};
    g.wa=function(a,b,c){return 0===b?this.key:1===b?this.m:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.m],null)).Ib(null,b,c)};g.N=function(){return null};g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.m};g.Xb=function(){return this.m};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};g.Bc=function(){return new Qe([this.m,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ff(this,b)};g.Ca=function(a,b,c){return gf(this,b,c)};g.fa=function(a,b,c){return K.c(new Q(null,2,5,R,[this.key,this.m],null),b,c)};g.$=function(){return new Qe([this.key,this.m],0,null)};g.O=function(a,b){return Kf(new Q(null,2,5,R,[this.key,this.m],null),b)};g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.m,b],null)};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.wa(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.W(null,c)};a.c=function(b,c,d){return this.wa(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.W(null,a)};g.b=function(a,b){return this.wa(null,a,b)};function Oi(a){return null!=a?a.h&2048||h===a.Th?!0:!1:!1}
    function kj(a,b,c){this.l=a;this.J=b;this.Kb=c;this.h=32374990;this.I=0;}g=kj.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){return this.J<this.l.length-2?new kj(this.l,this.J+2,null):null};g.X=function(){return (this.l.length-this.J)/2};g.Z=function(){return We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return new Gi(this.l[this.J],this.l[this.J+1])};g.Ha=function(){return this.J<this.l.length-2?new kj(this.l,this.J+2,null):Se};g.$=function(){return this};g.O=function(a,b){return b===this.Kb?this:new kj(this.l,this.J,b)};g.ga=function(a,b){return vf(b,this)};kj.prototype[ad]=function(){return Ue(this)};
    function lj(a,b){this.l=a;this.J=0;this.C=b;}lj.prototype.ra=function(){return this.J<this.C};lj.prototype.next=function(){var a=new Gi(this.l[this.J],this.l[this.J+1]);this.J+=2;return a};function n(a,b,c,d){this.H=a;this.C=b;this.l=c;this.B=d;this.h=16647951;this.I=139268;}g=n.prototype;g.Ac=function(a,b){a=jj(this.l,b);return -1===a?null:new Gi(this.l[a],this.l[a+1])};g.toString=function(){return Be(this)};g.keys=function(){return Ue(mj.a?mj.a(this):mj.call(null,this))};g.entries=function(){return new hj(B(B(this)))};
    g.values=function(){return Ue(nj.a?nj.a(this):nj.call(null,this))};g.has=function(a){return N(this,a)};g.get=function(a,b){return this.M(null,a,b)};g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.b?a.b(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Wf(b)?(c=re(b),b=se(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.b?a.b(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){a=jj(this.l,b);return -1===a?c:this.l[a+1]};g.Aa=function(a,b,c){a=this.l.length;for(var d=0;;)if(d<a){var e=this.l[d],f=this.l[d+1];c=b.c?b.c(c,e,f):b.call(null,c,e,f);if(cf(c))return t(c);d+=2;}else return c};g.ua=function(){return new lj(this.l,2*this.C)};g.N=function(){return this.H};g.X=function(){return this.C};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ye(this)};
    g.Y=function(a,b){if(M(b)&&!Uf(b))if(a=this.l.length,this.C===b.X(null))for(var c=0;;)if(c<a){var d=b.M(null,this.l[c],Yf);if(d!==Yf)if(A.b(this.l[c+1],d))c+=2;else return !1;else return !1}else return !0;else return !1;else return !1};g.hd=function(){return new oj(this.l.length,ed(this.l))};g.pa=function(){return Pd(S,this.H)};g.Ba=function(a,b){return ig(this,b)};g.Ca=function(a,b,c){return jg(this,b,c)};
    g.Ka=function(a,b){if(0<=jj(this.l,b)){a=this.l.length;var c=a-2;if(0===c)return this.pa(null);c=Array(c);for(var d=0,e=0;;){if(d>=a)return new n(this.H,this.C-1,c,null);A.b(b,this.l[d])?d+=2:(c[e]=this.l[d],c[e+1]=this.l[d+1],e+=2,d+=2);}}else return this};
    g.fa=function(a,b,c){a=jj(this.l,b);if(-1===a){if(this.C<pj){a=this.l;for(var d=a.length,e=Array(d+2),f=0;;)if(f<d)e[f]=a[f],f+=1;else break;e[d]=b;e[d+1]=c;return new n(this.H,this.C+1,e,null)}return Pd(zd(ji.b(qj,this),b,c),this.H)}if(c===this.l[a+1])return this;b=ed(this.l);b[a+1]=c;return new n(this.H,this.C,b,null)};g.$=function(){var a=this.l;return 0<=a.length-2?new kj(a,0,null):null};g.O=function(a,b){return b===this.H?this:new n(b,this.C,this.l,this.B)};
    g.ga=function(a,b){if(Vf(b))return this.fa(null,qd(b,0),qd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Vf(c))a=zd(a,qd(c,0),qd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};var S=new n(null,0,[],Ze),pj=8;
    function rj(a){return new n(null,a.length/2,a,null)}function Gf(a){for(var b=[],c=0;;)if(c<a.length){var d=a[c],e=a[c+1],f=jj(b,d);-1===f?(f=b,f.push(d),f.push(e)):b[f+1]=e;c+=2;}else break;return new n(null,b.length/2,b,null)}n.prototype[ad]=function(){return Ue(this)};function oj(a,b){this.Uc={};this.jc=a;this.l=b;this.h=259;this.I=56;}g=oj.prototype;g.X=function(){if(this.Uc)return tg(this.jc,2);throw Error("count after persistent!");};g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){if(this.Uc)return a=jj(this.l,b),-1===a?c:this.l[a+1];throw Error("lookup after persistent!");};g.kd=function(a,b){if(this.Uc){if(Oi(b))return this.jd(null,Pi.a?Pi.a(b):Pi.call(null,b),Qi.a?Qi.a(b):Qi.call(null,b));if(Vf(b))return this.jd(null,b.a?b.a(0):b.call(null,0),b.a?b.a(1):b.call(null,1));a=B(b);for(b=this;;){var c=C(a);if(p(c))a=D(a),b=me(b,Pi.a?Pi.a(c):Pi.call(null,c),Qi.a?Qi.a(c):Qi.call(null,c));else return b}}else throw Error("conj! after persistent!");};
    g.Cd=function(){if(this.Uc)return this.Uc=!1,new n(null,tg(this.jc,2),this.l,null);throw Error("persistent! called twice");};g.jd=function(a,b,c){if(this.Uc){a=jj(this.l,b);if(-1===a)return this.jc+2<=2*pj?(this.jc+=2,this.l.push(b),this.l.push(c),this):Zg(sj.b?sj.b(this.jc,this.l):sj.call(null,this.jc,this.l),b,c);c!==this.l[a+1]&&(this.l[a+1]=c);return this}throw Error("assoc! after persistent!");};
    g.Fe=function(a,b){if(this.Uc)return a=jj(this.l,b),0<=a&&(this.l[a]=this.l[this.jc-2],this.l[a+1]=this.l[this.jc-1],a=this.l,a.pop(),a.pop(),this.jc-=2),this;throw Error("dissoc! after persistent!");};g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.M(null,c,null);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.M(null,c,null)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();
    g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.M(null,a,null)};g.b=function(a,b){return this.M(null,a,b)};function sj(a,b){for(var c=je(qj),d=0;;)if(d<a)c=me(c,b[d],b[d+1]),d+=2;else return c}function tj(){this.m=!1;}function uj(a,b){return a===b?!0:P(a,b)?!0:A.b(a,b)}function vj(a,b,c){a=ed(a);a[b]=c;return a}function wj(a,b){var c=Array(a.length-2);Xf(a,0,c,0,2*b);Xf(a,2*(b+1),c,2*b,c.length-2*b);return c}
    function xj(a,b,c,d){a=a.Gc(b);a.l[c]=d;return a}function yj(a,b,c){for(var d=a.length,e=0,f=c;;)if(e<d){c=a[e];if(null!=c){var k=a[e+1];c=b.c?b.c(f,c,k):b.call(null,f,c,k);}else c=a[e+1],c=null!=c?c.ad(b,f):f;if(cf(c))return c;e+=2;f=c;}else return f}function zj(a){this.l=a;this.J=0;this.mc=this.Pd=null;}zj.prototype.advance=function(){for(var a=this.l.length;;)if(this.J<a){var b=this.l[this.J],c=this.l[this.J+1];null!=b?b=this.Pd=new Gi(b,c):null!=c?(b=ze(c),b=b.ra()?this.mc=b:!1):b=!1;this.J+=2;if(b)return !0}else return !1};
    zj.prototype.ra=function(){var a=null!=this.Pd;return a?a:(a=null!=this.mc)?a:this.advance()};zj.prototype.next=function(){if(null!=this.Pd){var a=this.Pd;this.Pd=null;return a}if(null!=this.mc)return a=this.mc.next(),this.mc.ra()||(this.mc=null),a;if(this.advance())return this.next();throw Error("No such element");};zj.prototype.remove=function(){return Error("Unsupported operation")};function Aj(a,b,c){this.va=a;this.oa=b;this.l=c;this.I=131072;this.h=0;}g=Aj.prototype;
    g.Gc=function(a){if(a===this.va)return this;var b=vg(this.oa),c=Array(0>b?4:2*(b+1));Xf(this.l,0,c,0,2*b);return new Aj(a,this.oa,c)};g.Md=function(a,b,c,d,e){var f=1<<(c>>>b&31);if(0===(this.oa&f))return this;var k=vg(this.oa&f-1),l=this.l[2*k],m=this.l[2*k+1];return null==l?(b=m.Md(a,b+5,c,d,e),b===m?this:null!=b?xj(this,a,2*k+1,b):this.oa===f?null:Bj(this,a,f,k)):uj(d,l)?(e.m=!0,Bj(this,a,f,k)):this};
    function Bj(a,b,c,d){if(a.oa===c)return null;a=a.Gc(b);b=a.l;var e=b.length;a.oa^=c;Xf(b,2*(d+1),b,2*d,e-2*(d+1));b[e-2]=null;b[e-1]=null;return a}g.Kd=function(){return Cj?Cj(this.l):Dj.call(null,this.l)};g.ad=function(a,b){return yj(this.l,a,b)};g.$c=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.oa&e))return d;var f=vg(this.oa&e-1);e=this.l[2*f];f=this.l[2*f+1];return null==e?f.$c(a+5,b,c,d):uj(c,e)?f:d};
    g.ic=function(a,b,c,d,e,f){var k=1<<(c>>>b&31),l=vg(this.oa&k-1);if(0===(this.oa&k)){var m=vg(this.oa);if(2*m<this.l.length){a=this.Gc(a);b=a.l;f.m=!0;c=2*(m-l);f=2*l+(c-1);for(m=2*(l+1)+(c-1);0!==c;)b[m]=b[f],--m,--c,--f;b[2*l]=d;b[2*l+1]=e;a.oa|=k;return a}if(16<=m){l=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];l[c>>>b&31]=Ej.ic(a,b+5,c,d,e,f);for(e=d=0;;)if(32>d)0===(this.oa>>>
    d&1)?d+=1:(l[d]=null!=this.l[e]?Ej.ic(a,b+5,Je(this.l[e]),this.l[e],this.l[e+1],f):this.l[e+1],e+=2,d+=1);else break;return new Fj(a,m+1,l)}b=Array(2*(m+4));Xf(this.l,0,b,0,2*l);b[2*l]=d;b[2*l+1]=e;Xf(this.l,2*l,b,2*(l+1),2*(m-l));f.m=!0;a=this.Gc(a);a.l=b;a.oa|=k;return a}m=this.l[2*l];k=this.l[2*l+1];if(null==m)return m=k.ic(a,b+5,c,d,e,f),m===k?this:xj(this,a,2*l+1,m);if(uj(d,m))return e===k?this:xj(this,a,2*l+1,e);f.m=!0;f=b+5;d=Gj?Gj(a,f,m,k,c,d,e):Hj.call(null,a,f,m,k,c,d,e);e=2*l;l=2*l+1;a=
    this.Gc(a);a.l[e]=null;a.l[l]=d;return a};
    g.hc=function(a,b,c,d,e){var f=1<<(b>>>a&31),k=vg(this.oa&f-1);if(0===(this.oa&f)){var l=vg(this.oa);if(16<=l){k=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];k[b>>>a&31]=Ej.hc(a+5,b,c,d,e);for(d=c=0;;)if(32>c)0===(this.oa>>>c&1)?c+=1:(k[c]=null!=this.l[d]?Ej.hc(a+5,Je(this.l[d]),this.l[d],this.l[d+1],e):this.l[d+1],d+=2,c+=1);else break;return new Fj(null,l+1,k)}a=Array(2*(l+1));Xf(this.l,
    0,a,0,2*k);a[2*k]=c;a[2*k+1]=d;Xf(this.l,2*k,a,2*(k+1),2*(l-k));e.m=!0;return new Aj(null,this.oa|f,a)}var m=this.l[2*k];f=this.l[2*k+1];if(null==m)return l=f.hc(a+5,b,c,d,e),l===f?this:new Aj(null,this.oa,vj(this.l,2*k+1,l));if(uj(c,m))return d===f?this:new Aj(null,this.oa,vj(this.l,2*k+1,d));e.m=!0;e=this.oa;l=this.l;a+=5;a=Ij?Ij(a,m,f,b,c,d):Hj.call(null,a,m,f,b,c,d);c=2*k;k=2*k+1;d=ed(l);d[c]=null;d[k]=a;return new Aj(null,e,d)};
    g.Jd=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.oa&e))return d;var f=vg(this.oa&e-1);e=this.l[2*f];f=this.l[2*f+1];return null==e?f.Jd(a+5,b,c,d):uj(c,e)?new Gi(e,f):d};g.Ld=function(a,b,c){var d=1<<(b>>>a&31);if(0===(this.oa&d))return this;var e=vg(this.oa&d-1),f=this.l[2*e],k=this.l[2*e+1];return null==f?(a=k.Ld(a+5,b,c),a===k?this:null!=a?new Aj(null,this.oa,vj(this.l,2*e+1,a)):this.oa===d?null:new Aj(null,this.oa^d,wj(this.l,e))):uj(c,f)?new Aj(null,this.oa^d,wj(this.l,e)):this};
    g.ua=function(){return new zj(this.l)};var Ej=new Aj(null,0,[]);function Jj(a,b,c){var d=a.l,e=d.length;a=Array(2*(a.C-1));for(var f=0,k=1,l=0;;)if(f<e)f!==c&&null!=d[f]?(a[k]=d[f],k+=2,l|=1<<f,f+=1):f+=1;else return new Aj(b,l,a)}function Kj(a){this.l=a;this.J=0;this.mc=null;}Kj.prototype.ra=function(){for(var a=this.l.length;;){if(null!=this.mc&&this.mc.ra())return !0;if(this.J<a){var b=this.l[this.J];this.J+=1;null!=b&&(this.mc=ze(b));}else return !1}};
    Kj.prototype.next=function(){if(this.ra())return this.mc.next();throw Error("No such element");};Kj.prototype.remove=function(){return Error("Unsupported operation")};function Fj(a,b,c){this.va=a;this.C=b;this.l=c;this.I=131072;this.h=0;}g=Fj.prototype;g.Gc=function(a){return a===this.va?this:new Fj(a,this.C,ed(this.l))};
    g.Md=function(a,b,c,d,e){var f=c>>>b&31,k=this.l[f];if(null==k)return this;b=k.Md(a,b+5,c,d,e);if(b===k)return this;if(null==b){if(8>=this.C)return Jj(this,a,f);a=xj(this,a,f,b);--a.C;return a}return xj(this,a,f,b)};g.Kd=function(){return Lj?Lj(this.l):Mj.call(null,this.l)};g.ad=function(a,b){for(var c=this.l.length,d=0;;)if(d<c){var e=this.l[d];if(null!=e){b=e.ad(a,b);if(cf(b))return b;d+=1;}else d+=1;}else return b};g.$c=function(a,b,c,d){var e=this.l[b>>>a&31];return null!=e?e.$c(a+5,b,c,d):d};
    g.ic=function(a,b,c,d,e,f){var k=c>>>b&31,l=this.l[k];if(null==l)return a=xj(this,a,k,Ej.ic(a,b+5,c,d,e,f)),a.C+=1,a;b=l.ic(a,b+5,c,d,e,f);return b===l?this:xj(this,a,k,b)};g.hc=function(a,b,c,d,e){var f=b>>>a&31,k=this.l[f];if(null==k)return new Fj(null,this.C+1,vj(this.l,f,Ej.hc(a+5,b,c,d,e)));a=k.hc(a+5,b,c,d,e);return a===k?this:new Fj(null,this.C,vj(this.l,f,a))};g.Jd=function(a,b,c,d){var e=this.l[b>>>a&31];return null!=e?e.Jd(a+5,b,c,d):d};
    g.Ld=function(a,b,c){var d=b>>>a&31,e=this.l[d];return null!=e?(a=e.Ld(a+5,b,c),a===e?this:null==a?8>=this.C?Jj(this,null,d):new Fj(null,this.C-1,vj(this.l,d,a)):new Fj(null,this.C,vj(this.l,d,a))):this};g.ua=function(){return new Kj(this.l)};function Nj(a,b,c){b*=2;for(var d=0;;)if(d<b){if(uj(c,a[d]))return d;d+=2;}else return -1}function Oj(a,b,c,d){this.va=a;this.Ec=b;this.C=c;this.l=d;this.I=131072;this.h=0;}g=Oj.prototype;
    g.Gc=function(a){if(a===this.va)return this;var b=Array(2*(this.C+1));Xf(this.l,0,b,0,2*this.C);return new Oj(a,this.Ec,this.C,b)};g.Md=function(a,b,c,d,e){b=Nj(this.l,this.C,d);if(-1===b)return this;e.m=!0;if(1===this.C)return null;a=this.Gc(a);e=a.l;e[b]=e[2*this.C-2];e[b+1]=e[2*this.C-1];e[2*this.C-1]=null;e[2*this.C-2]=null;--a.C;return a};g.Kd=function(){return Cj?Cj(this.l):Dj.call(null,this.l)};g.ad=function(a,b){return yj(this.l,a,b)};
    g.$c=function(a,b,c,d){a=Nj(this.l,this.C,c);return 0>a?d:uj(c,this.l[a])?this.l[a+1]:d};
    g.ic=function(a,b,c,d,e,f){if(c===this.Ec){b=Nj(this.l,this.C,d);if(-1===b){if(this.l.length>2*this.C)return b=2*this.C,c=2*this.C+1,a=this.Gc(a),a.l[b]=d,a.l[c]=e,f.m=!0,a.C+=1,a;c=this.l.length;b=Array(c+2);Xf(this.l,0,b,0,c);b[c]=d;b[c+1]=e;f.m=!0;d=this.C+1;a===this.va?(this.l=b,this.C=d,a=this):a=new Oj(this.va,this.Ec,d,b);return a}return this.l[b+1]===e?this:xj(this,a,b+1,e)}return (new Aj(a,1<<(this.Ec>>>b&31),[null,this,null,null])).ic(a,b,c,d,e,f)};
    g.hc=function(a,b,c,d,e){return b===this.Ec?(a=Nj(this.l,this.C,c),-1===a?(a=2*this.C,b=Array(a+2),Xf(this.l,0,b,0,a),b[a]=c,b[a+1]=d,e.m=!0,new Oj(null,this.Ec,this.C+1,b)):A.b(this.l[a+1],d)?this:new Oj(null,this.Ec,this.C,vj(this.l,a+1,d))):(new Aj(null,1<<(this.Ec>>>a&31),[null,this])).hc(a,b,c,d,e)};g.Jd=function(a,b,c,d){a=Nj(this.l,this.C,c);return 0>a?d:uj(c,this.l[a])?new Gi(this.l[a],this.l[a+1]):d};
    g.Ld=function(a,b,c){a=Nj(this.l,this.C,c);return -1===a?this:1===this.C?null:new Oj(null,this.Ec,this.C-1,wj(this.l,tg(a,2)))};g.ua=function(){return new zj(this.l)};function Hj(a){switch(arguments.length){case 6:return Ij(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 7:return Gj(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}
    function Ij(a,b,c,d,e,f){var k=Je(b);if(k===d)return new Oj(null,k,2,[b,c,e,f]);var l=new tj;return Ej.hc(a,k,b,c,l).hc(a,d,e,f,l)}function Gj(a,b,c,d,e,f,k){var l=Je(c);if(l===e)return new Oj(null,l,2,[c,d,f,k]);var m=new tj;return Ej.ic(a,b,l,c,d,m).ic(a,b,e,f,k,m)}function Pj(a,b,c,d,e){this.H=a;this.sa=b;this.J=c;this.ha=d;this.B=e;this.h=32374988;this.I=0;}g=Pj.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){if(null==this.ha){var a=this.sa,b=this.J+2;return Qj?Qj(a,b,null):Dj.call(null,a,b,null)}a=this.sa;b=this.J;var c=D(this.ha);return Qj?Qj(a,b,c):Dj.call(null,a,b,c)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return null==this.ha?new Gi(this.sa[this.J],this.sa[this.J+1]):C(this.ha)};
    g.Ha=function(){var a=this,b=null==a.ha?function(){var c=a.sa,d=a.J+2;return Qj?Qj(c,d,null):Dj.call(null,c,d,null)}():function(){var c=a.sa,d=a.J,e=D(a.ha);return Qj?Qj(c,d,e):Dj.call(null,c,d,e)}();return null!=b?b:Se};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new Pj(b,this.sa,this.J,this.ha,this.B)};g.ga=function(a,b){return vf(b,this)};Pj.prototype[ad]=function(){return Ue(this)};
    function Dj(a){switch(arguments.length){case 1:return Cj(arguments[0]);case 3:return Qj(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function Cj(a){return Qj(a,0,null)}function Qj(a,b,c){if(null==c)for(c=a.length;;)if(b<c){if(null!=a[b])return new Pj(null,a,b,null,null);var d=a[b+1];if(p(d)&&(d=d.Kd(),p(d)))return new Pj(null,a,b+2,d,null);b+=2;}else return null;else return new Pj(null,a,b,c,null)}
    function Rj(a,b,c,d,e){this.H=a;this.sa=b;this.J=c;this.ha=d;this.B=e;this.h=32374988;this.I=0;}g=Rj.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=this.sa,b=this.J,c=D(this.ha);return Sj?Sj(a,b,c):Mj.call(null,a,b,c)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};
    g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return C(this.ha)};g.Ha=function(){var a=this.sa;var b=this.J,c=D(this.ha);a=Sj?Sj(a,b,c):Mj.call(null,a,b,c);return null!=a?a:Se};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new Rj(b,this.sa,this.J,this.ha,this.B)};g.ga=function(a,b){return vf(b,this)};Rj.prototype[ad]=function(){return Ue(this)};
    function Mj(a){switch(arguments.length){case 1:return Lj(arguments[0]);case 3:return Sj(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function Lj(a){return Sj(a,0,null)}function Sj(a,b,c){if(null==c)for(c=a.length;;)if(b<c){var d=a[b];if(p(d)&&(d=d.Kd(),p(d)))return new Rj(null,a,b+1,d,null);b+=1;}else return null;else return new Rj(null,a,b,c,null)}function Tj(a,b){this.Za=a;this.Pf=b;this.Ye=!1;}
    Tj.prototype.ra=function(){return !this.Ye||this.Pf.ra()};Tj.prototype.next=function(){if(this.Ye)return this.Pf.next();this.Ye=!0;return new Gi(null,this.Za)};Tj.prototype.remove=function(){return Error("Unsupported operation")};function Uj(a,b,c,d,e,f){this.H=a;this.C=b;this.root=c;this.Ya=d;this.Za=e;this.B=f;this.h=16123663;this.I=139268;}g=Uj.prototype;g.Ac=function(a,b){return null==b?this.Ya?new Gi(null,this.Za):null:null==this.root?null:this.root.Jd(0,Je(b),b,null)};g.toString=function(){return Be(this)};
    g.keys=function(){return Ue(mj.a?mj.a(this):mj.call(null,this))};g.entries=function(){return new hj(B(B(this)))};g.values=function(){return Ue(nj.a?nj.a(this):nj.call(null,this))};g.has=function(a){return N(this,a)};g.get=function(a,b){return this.M(null,a,b)};
    g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.b?a.b(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Wf(b)?(c=re(b),b=se(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.b?a.b(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return null==b?this.Ya?this.Za:c:null==this.root?c:this.root.$c(0,Je(b),b,c)};
    g.Aa=function(a,b,c){a=this.Ya?b.c?b.c(c,null,this.Za):b.call(null,c,null,this.Za):c;return cf(a)?t(a):null!=this.root?df(this.root.ad(b,a)):a};g.ua=function(){var a=this.root?ze(this.root):mh();return this.Ya?new Tj(this.Za,a):a};g.N=function(){return this.H};g.X=function(){return this.C};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ye(this)};g.Y=function(a,b){return fj(this,b)};g.hd=function(){return new Vj(this.root,this.C,this.Ya,this.Za)};g.pa=function(){return Pd(qj,this.H)};
    g.Ka=function(a,b){if(null==b)return this.Ya?new Uj(this.H,this.C-1,this.root,!1,null,null):this;if(null==this.root)return this;a=this.root.Ld(0,Je(b),b);return a===this.root?this:new Uj(this.H,this.C-1,a,this.Ya,this.Za,null)};g.fa=function(a,b,c){if(null==b)return this.Ya&&c===this.Za?this:new Uj(this.H,this.Ya?this.C:this.C+1,this.root,!0,c,null);a=new tj;b=(null==this.root?Ej:this.root).hc(0,Je(b),b,c,a);return b===this.root?this:new Uj(this.H,a.m?this.C+1:this.C,b,this.Ya,this.Za,null)};
    g.$=function(){if(0<this.C){var a=null!=this.root?this.root.Kd():null;return this.Ya?vf(new Gi(null,this.Za),a):a}return null};g.O=function(a,b){return b===this.H?this:new Uj(b,this.C,this.root,this.Ya,this.Za,this.B)};g.ga=function(a,b){if(Vf(b))return this.fa(null,qd(b,0),qd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Vf(c))a=zd(a,qd(c,0),qd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};var qj=new Uj(null,0,null,!1,null,Ze);
    function Wj(a){for(var b=a.length,c=0,d=je(qj);;)if(c<b){var e=c+2;d=me(d,a[c],a[c+1]);c=e;}else return le(d)}function Xj(a,b){for(var c=a.length,d=0,e=je(qj);;)if(d<c){var f=d+1;e=me(e,a[d],b[d]);d=f;}else return le(e)}Uj.prototype[ad]=function(){return Ue(this)};function Vj(a,b,c,d){this.va={};this.root=a;this.count=b;this.Ya=c;this.Za=d;this.h=259;this.I=56;}
    function Yj(a,b,c){if(a.va){if(null==b)a.Za!==c&&(a.Za=c),a.Ya||(a.count+=1,a.Ya=!0);else {var d=new tj;b=(null==a.root?Ej:a.root).ic(a.va,0,Je(b),b,c,d);b!==a.root&&(a.root=b);d.m&&(a.count+=1);}return a}throw Error("assoc! after persistent!");}g=Vj.prototype;g.X=function(){if(this.va)return this.count;throw Error("count after persistent!");};g.ia=function(a,b){return null==b?this.Ya?this.Za:null:null==this.root?null:this.root.$c(0,Je(b),b)};
    g.M=function(a,b,c){return null==b?this.Ya?this.Za:c:null==this.root?c:this.root.$c(0,Je(b),b,c)};g.kd=function(a,b){a:if(this.va)if(Oi(b))a=Yj(this,Pi.a?Pi.a(b):Pi.call(null,b),Qi.a?Qi.a(b):Qi.call(null,b));else if(Vf(b))a=Yj(this,b.a?b.a(0):b.call(null,0),b.a?b.a(1):b.call(null,1));else for(a=B(b),b=this;;){var c=C(a);if(p(c))a=D(a),b=Yj(b,Pi.a?Pi.a(c):Pi.call(null,c),Qi.a?Qi.a(c):Qi.call(null,c));else {a=b;break a}}else throw Error("conj! after persistent");return a};
    g.Cd=function(){if(this.va){this.va=null;var a=new Uj(null,this.count,this.root,this.Ya,this.Za,null);}else throw Error("persistent! called twice");return a};g.jd=function(a,b,c){return Yj(this,b,c)};g.Fe=function(a,b){if(this.va)null==b?this.Ya&&(this.Ya=!1,this.Za=null,--this.count):null!=this.root&&(a=new tj,b=this.root.Md(this.va,0,Je(b),b,a),b!==this.root&&(this.root=b),a.m&&--this.count);else throw Error("dissoc! after persistent!");return this};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};
    function Zj(a,b,c){for(var d=b;;)if(null!=a)b=c?a.left:a.right,d=Cf.b(d,a),a=b;else return d}function ak(a,b,c,d,e){this.H=a;this.stack=b;this.Rc=c;this.C=d;this.B=e;this.h=32374990;this.I=0;}g=ak.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=C(this.stack);a=Zj(this.Rc?a.right:a.left,D(this.stack),this.Rc);return null==a?null:new ak(null,a,this.Rc,this.C-1,null)};g.X=function(){return 0>this.C?F(D(this))+1:this.C};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return Mf(this.stack)};g.Ha=function(){var a=C(this.stack);a=Zj(this.Rc?a.right:a.left,D(this.stack),this.Rc);return null!=a?new ak(null,a,this.Rc,this.C-1,null):Se};g.$=function(){return this};g.O=function(a,b){return b===this.H?this:new ak(b,this.stack,this.Rc,this.C,this.B)};
    g.ga=function(a,b){return vf(b,this)};ak.prototype[ad]=function(){return Ue(this)};function bk(a,b,c){return new ak(null,Zj(a,null,b),b,c,null)}function ck(a,b,c,d){return c instanceof dk?c.left instanceof dk?new dk(c.key,c.m,c.left.xc(),new ek(a,b,c.right,d)):c.right instanceof dk?new dk(c.right.key,c.right.m,new ek(c.key,c.m,c.left,c.right.left),new ek(a,b,c.right.right,d)):new ek(a,b,c,d):new ek(a,b,c,d)}
    function fk(a,b,c,d){return d instanceof dk?d.right instanceof dk?new dk(d.key,d.m,new ek(a,b,c,d.left),d.right.xc()):d.left instanceof dk?new dk(d.left.key,d.left.m,new ek(a,b,c,d.left.left),new ek(d.key,d.m,d.left.right,d.right)):new ek(a,b,c,d):new ek(a,b,c,d)}
    function gk(a,b,c,d){if(c instanceof dk)return new dk(a,b,c.xc(),d);if(d instanceof ek)return fk(a,b,c,d.Qd());if(d instanceof dk&&d.left instanceof ek)return new dk(d.left.key,d.left.m,new ek(a,b,c,d.left.left),fk(d.key,d.m,d.left.right,d.right.Qd()));throw Error("red-black tree invariant violation");}
    function hk(a,b,c,d){if(d instanceof dk)return new dk(a,b,c,d.xc());if(c instanceof ek)return ck(a,b,c.Qd(),d);if(c instanceof dk&&c.right instanceof ek)return new dk(c.right.key,c.right.m,ck(c.key,c.m,c.left.Qd(),c.right.left),new ek(a,b,c.right.right,d));throw Error("red-black tree invariant violation");}
    var ik=function ik(a,b,c){var e=null!=a.left?function(){var l=a.left;return ik.c?ik.c(l,b,c):ik.call(null,l,b,c)}():c;if(cf(e))return e;var f=function(){var l=a.key,m=a.m;return b.c?b.c(e,l,m):b.call(null,e,l,m)}();if(cf(f))return f;if(null!=a.right){var k=a.right;return ik.c?ik.c(k,b,f):ik.call(null,k,b,f)}return f};function ek(a,b,c,d){this.key=a;this.m=b;this.left=c;this.right=d;this.B=null;this.h=166619935;this.I=0;}g=ek.prototype;
    g.Ac=function(a,b){switch(b){case 0:return new Gi(0,this.key);case 1:return new Gi(1,this.m);default:return null}};g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();g.ef=function(a){return a.hf(this)};g.Qd=function(){return new dk(this.key,this.m,this.left,this.right)};g.xc=function(){return this};g.df=function(a){return a.gf(this)};g.replace=function(a,b,c,d){return new ek(a,b,c,d)};
    g.gf=function(a){return new ek(a.key,a.m,this,a.right)};g.hf=function(a){return new ek(a.key,a.m,a.left,this)};g.ad=function(a,b){return ik(this,a,b)};g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.m;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0===b?this.key:1===b?this.m:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.m],null)).Ib(null,b,c)};g.N=function(){return null};
    g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.m};g.Xb=function(){return this.m};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};g.Bc=function(){return new Qe([this.m,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ff(this,b)};g.Ca=function(a,b,c){return gf(this,b,c)};
    g.fa=function(a,b,c){return K.c(new Q(null,2,5,R,[this.key,this.m],null),b,c)};g.$=function(){return new Qe([this.key,this.m],0,null)};g.O=function(a,b){return Pd(new Q(null,2,5,R,[this.key,this.m],null),b)};g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.m,b],null)};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.wa(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.W(null,c)};a.c=function(b,c,d){return this.wa(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.W(null,a)};g.b=function(a,b){return this.wa(null,a,b)};ek.prototype[ad]=function(){return Ue(this)};
    function dk(a,b,c,d){this.key=a;this.m=b;this.left=c;this.right=d;this.B=null;this.h=166619935;this.I=0;}g=dk.prototype;g.Ac=function(a,b){switch(b){case 0:return new Gi(0,this.key);case 1:return new Gi(1,this.m);default:return null}};
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();g.ef=function(a){return new dk(this.key,this.m,this.left,a)};g.Qd=function(){throw Error("red-black tree invariant violation");};g.xc=function(){return new ek(this.key,this.m,this.left,this.right)};
    g.df=function(a){return new dk(this.key,this.m,a,this.right)};g.replace=function(a,b,c,d){return new dk(a,b,c,d)};g.gf=function(a){return this.left instanceof dk?new dk(this.key,this.m,this.left.xc(),new ek(a.key,a.m,this.right,a.right)):this.right instanceof dk?new dk(this.right.key,this.right.m,new ek(this.key,this.m,this.left,this.right.left),new ek(a.key,a.m,this.right.right,a.right)):new ek(a.key,a.m,this,a.right)};
    g.hf=function(a){return this.right instanceof dk?new dk(this.key,this.m,new ek(a.key,a.m,a.left,this.left),this.right.xc()):this.left instanceof dk?new dk(this.left.key,this.left.m,new ek(a.key,a.m,a.left,this.left.left),new ek(this.key,this.m,this.left.right,this.right)):new ek(a.key,a.m,a.left,this)};g.ad=function(a,b){return ik(this,a,b)};g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};
    g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.m;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0===b?this.key:1===b?this.m:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.m],null)).Ib(null,b,c)};g.N=function(){return null};g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.m};g.Xb=function(){return this.m};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};
    g.Bc=function(){return new Qe([this.m,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ff(this,b)};g.Ca=function(a,b,c){return gf(this,b,c)};g.fa=function(a,b,c){return K.c(new Q(null,2,5,R,[this.key,this.m],null),b,c)};g.$=function(){return new Qe([this.key,this.m],0,null)};g.O=function(a,b){return Pd(new Q(null,2,5,R,[this.key,this.m],null),b)};
    g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.m,b],null)};g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.W(null,c);case 3:return this.wa(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.W(null,c)};a.c=function(b,c,d){return this.wa(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.W(null,a)};
    g.b=function(a,b){return this.wa(null,a,b)};dk.prototype[ad]=function(){return Ue(this)};
    var jk=function jk(a,b,c,d,e){if(null==b)return new dk(c,d,null,null);var k=function(){var l=b.key;return a.b?a.b(c,l):a.call(null,c,l)}();if(0===k)return e[0]=b,null;if(0>k)return k=function(){var l=b.left;return jk.K?jk.K(a,l,c,d,e):jk.call(null,a,l,c,d,e)}(),null!=k?b.df(k):null;k=function(){var l=b.right;return jk.K?jk.K(a,l,c,d,e):jk.call(null,a,l,c,d,e)}();return null!=k?b.ef(k):null},kk=function kk(a,b){if(null==a)return b;if(null==b)return a;if(a instanceof dk){if(b instanceof dk){var d=function(){var e=
    a.right,f=b.left;return kk.b?kk.b(e,f):kk.call(null,e,f)}();return d instanceof dk?new dk(d.key,d.m,new dk(a.key,a.m,a.left,d.left),new dk(b.key,b.m,d.right,b.right)):new dk(a.key,a.m,a.left,new dk(b.key,b.m,d,b.right))}return new dk(a.key,a.m,a.left,function(){var e=a.right;return kk.b?kk.b(e,b):kk.call(null,e,b)}())}if(b instanceof dk)return new dk(b.key,b.m,function(){var e=b.left;return kk.b?kk.b(a,e):kk.call(null,a,e)}(),b.right);d=function(){var e=a.right,f=b.left;return kk.b?kk.b(e,f):kk.call(null,
    e,f)}();return d instanceof dk?new dk(d.key,d.m,new ek(a.key,a.m,a.left,d.left),new ek(b.key,b.m,d.right,b.right)):gk(a.key,a.m,a.left,new ek(b.key,b.m,d,b.right))},lk=function lk(a,b,c,d){if(null!=b){var f=function(){var k=b.key;return a.b?a.b(c,k):a.call(null,c,k)}();if(0===f)return d[0]=b,kk(b.left,b.right);if(0>f)return f=function(){var k=b.left;return lk.A?lk.A(a,k,c,d):lk.call(null,a,k,c,d)}(),null!=f||null!=d[0]?b.left instanceof ek?gk(b.key,b.m,f,b.right):new dk(b.key,b.m,f,b.right):null;
    f=function(){var k=b.right;return lk.A?lk.A(a,k,c,d):lk.call(null,a,k,c,d)}();return null!=f||null!=d[0]?b.right instanceof ek?hk(b.key,b.m,b.left,f):new dk(b.key,b.m,b.left,f):null}return null},mk=function mk(a,b,c,d){var f=b.key,k=a.b?a.b(c,f):a.call(null,c,f);return 0===k?b.replace(f,d,b.left,b.right):0>k?b.replace(f,b.m,function(){var l=b.left;return mk.A?mk.A(a,l,c,d):mk.call(null,a,l,c,d)}(),b.right):b.replace(f,b.m,b.left,function(){var l=b.right;return mk.A?mk.A(a,l,c,d):mk.call(null,a,l,
    c,d)}())};function nk(a,b,c,d,e){this.Ob=a;this.Mc=b;this.C=c;this.H=d;this.B=e;this.h=418776847;this.I=8192;}g=nk.prototype;g.Ac=function(a,b){return ok(this,b)};g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.b?a.b(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Wf(b)?(c=re(b),b=se(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.b?a.b(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};
    g.get=function(a,b){return this.M(null,a,b)};g.entries=function(){return new hj(B(B(this)))};g.toString=function(){return Be(this)};g.keys=function(){return Ue(mj.a?mj.a(this):mj.call(null,this))};g.values=function(){return Ue(nj.a?nj.a(this):nj.call(null,this))};function ok(a,b){for(var c=a.Mc;;)if(null!=c){var d=c.key;d=a.Ob.b?a.Ob.b(b,d):a.Ob.call(null,b,d);if(0===d)return c;c=0>d?c.left:c.right;}else return null}g.has=function(a){return N(this,a)};g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){a=ok(this,b);return null!=a?a.m:c};g.Aa=function(a,b,c){return null!=this.Mc?df(ik(this.Mc,b,c)):c};g.N=function(){return this.H};g.X=function(){return this.C};g.Bc=function(){return 0<this.C?bk(this.Mc,!1,this.C):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ye(this)};g.Y=function(a,b){return fj(this,b)};g.pa=function(){return new nk(this.Ob,null,0,this.H,0)};
    g.Ka=function(a,b){a=[null];b=lk(this.Ob,this.Mc,b,a);return null==b?null==pf(a,0)?this:new nk(this.Ob,null,0,this.H,null):new nk(this.Ob,b.xc(),this.C-1,this.H,null)};g.fa=function(a,b,c){a=[null];var d=jk(this.Ob,this.Mc,b,c,a);return null==d?(a=pf(a,0),A.b(c,a.m)?this:new nk(this.Ob,mk(this.Ob,this.Mc,b,c),this.C,this.H,null)):new nk(this.Ob,d.xc(),this.C+1,this.H,null)};g.$=function(){return 0<this.C?bk(this.Mc,!0,this.C):null};
    g.O=function(a,b){return b===this.H?this:new nk(this.Ob,this.Mc,this.C,b,this.B)};g.ga=function(a,b){if(Vf(b))return this.fa(null,qd(b,0),qd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Vf(c))a=zd(a,qd(c,0),qd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};var pk=new nk(dg,null,0,null,Ze);nk.prototype[ad]=function(){return Ue(this)};
    var qk=function qk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return qk.g(0<c.length?new Qe(c.slice(0),0,null):null)};qk.g=function(a){a=B(a);for(var b=je(qj);;)if(a){var c=D(D(a));b=Zg(b,C(a),zf(a));a=c;}else return le(b)};qk.F=0;qk.G=function(a){return this.g(B(a))};var rk=function rk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return rk.g(0<c.length?new Qe(c.slice(0),0,null):null)};
    rk.g=function(a){a=a instanceof Qe&&0===a.J?a.l:fd(a);return Gf(a)};rk.F=0;rk.G=function(a){return this.g(B(a))};function sk(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(b=B(0<b.length?new Qe(b.slice(0),0,null):null),d=pk;;)if(b)c=D(D(b)),d=K.c(d,C(b),zf(b)),b=c;else break a;return d}
    function tk(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(c=arguments[0],b=B(1<b.length?new Qe(b.slice(1),0,null):null),d=new nk(fg(c),null,0,null,0);;)if(b)c=D(D(b)),d=K.c(d,C(b),zf(b)),b=c;else break a;return d}function uk(a,b){this.na=a;this.Kb=b;this.h=32374988;this.I=0;}g=uk.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Xc(ud,this.na)):Xc(ud,this.na))?this.na.za(null):D(this.na);return null==a?null:new uk(a,null)};g.Z=function(){return We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return this.na.Fa(null).key};g.Ha=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Xc(ud,this.na)):Xc(ud,this.na))?this.na.za(null):D(this.na);return null!=a?new uk(a,null):Se};g.$=function(){return this};g.O=function(a,b){return b===this.Kb?this:new uk(this.na,b)};g.ga=function(a,b){return vf(b,this)};
    uk.prototype[ad]=function(){return Ue(this)};function mj(a){return (a=B(a))?new uk(a,null):null}function Pi(a){return Dd(a)}function vk(a,b){this.na=a;this.Kb=b;this.h=32374988;this.I=0;}g=vk.prototype;g.toString=function(){return Be(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Xc(ud,this.na)):Xc(ud,this.na))?this.na.za(null):D(this.na);return null==a?null:new vk(a,null)};g.Z=function(){return We(this)};
    g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return wf(b,this)};g.Ca=function(a,b,c){return yf(b,c,this)};g.Fa=function(){return this.na.Fa(null).m};g.Ha=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Xc(ud,this.na)):Xc(ud,this.na))?this.na.za(null):D(this.na);return null!=a?new vk(a,null):Se};g.$=function(){return this};g.O=function(a,b){return b===this.Kb?this:new vk(this.na,b)};g.ga=function(a,b){return vf(b,this)};
    vk.prototype[ad]=function(){return Ue(this)};function nj(a){return (a=B(a))?new vk(a,null):null}function Qi(a){return Ed(a)}var wk=function wk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return wk.g(0<c.length?new Qe(c.slice(0),0,null):null)};wk.g=function(a){return p(Eh(lg,a))?gd.b(function(b,c){return Cf.b(p(b)?b:S,c)},a):null};wk.F=0;wk.G=function(a){return this.g(B(a))};
    var xk=function xk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return xk.g(arguments[0],1<c.length?new Qe(c.slice(1),0,null):null)};xk.g=function(a,b){if(p(Eh(lg,b))){var c=function(d,e){var f=Dd(e),k=Ed(e);return N(d,f)?K.c(d,f,function(){var l=x.b(d,f);return a.b?a.b(l,k):a.call(null,l,k)}()):K.c(d,f,k)};return gd.b(function(d,e){return gd.c(c,p(d)?d:S,B(e))},b)}return null};xk.F=1;xk.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    function yk(a,b){var c=S;for(b=B(b);;)if(b){var d=C(b),e=x.c(a,d,zk);c=kh.b(e,zk)?K.c(c,d,e):c;b=D(b);}else return Pd(c,Lf(a))}function Ak(a){this.Se=a;}Ak.prototype.ra=function(){return this.Se.ra()};Ak.prototype.next=function(){if(this.Se.ra())return this.Se.next().key;throw Error("No such element");};Ak.prototype.remove=function(){return Error("Unsupported operation")};function Bk(a,b,c){this.H=a;this.Hc=b;this.B=c;this.h=15077647;this.I=139268;}g=Bk.prototype;g.toString=function(){return Be(this)};
    g.keys=function(){return Ue(B(this))};g.entries=function(){return new ij(B(B(this)))};g.values=function(){return Ue(B(this))};g.has=function(a){return N(this,a)};g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.b?a.b(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Wf(b)?(c=re(b),b=se(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.b?a.b(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){a=Ad(this.Hc,b);return p(a)?Dd(a):c};g.ua=function(){return new Ak(ze(this.Hc))};g.N=function(){return this.H};g.X=function(){return kd(this.Hc)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ye(this)};g.Y=function(a,b){if(Rf(b))if(F(this)===F(b))try{return kg(function(c,d){return (c=N(b,d))?c:bf(!1)},!0,this.Hc)}catch(c){if(c instanceof Error)return !1;throw c;}else return !1;else return !1};g.hd=function(){return new Ck(je(this.Hc))};
    g.pa=function(){return Pd(Dk,this.H)};g.rf=function(a,b){return new Bk(this.H,Cd(this.Hc,b),null)};g.$=function(){return mj(this.Hc)};g.O=function(a,b){return b===this.H?this:new Bk(b,this.Hc,this.B)};g.ga=function(a,b){return new Bk(this.H,K.c(this.Hc,b,null),null)};
    g.call=function(){var a=null;a=function(b,c,d){switch(arguments.length){case 2:return this.ia(null,c);case 3:return this.M(null,c,d)}throw Error("Invalid arity: "+(arguments.length-1));};a.b=function(b,c){return this.ia(null,c)};a.c=function(b,c,d){return this.M(null,c,d)};return a}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return this.ia(null,a)};g.b=function(a,b){return this.M(null,a,b)};var Dk=new Bk(null,S,Ze);
    function Ek(a){for(var b=a.length,c=je(Dk),d=0;;)if(d<b)ke(c,a[d]),d+=1;else break;return le(c)}Bk.prototype[ad]=function(){return Ue(this)};function Ck(a){this.cd=a;this.I=136;this.h=259;}g=Ck.prototype;g.kd=function(a,b){this.cd=me(this.cd,b,null);return this};g.Cd=function(){return new Bk(null,le(this.cd),null)};g.X=function(){return F(this.cd)};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return xd(this.cd,b,Yf)===Yf?c:b};
    g.call=function(){function a(d,e,f){return xd(this.cd,e,Yf)===Yf?f:e}function b(d,e){return xd(this.cd,e,Yf)===Yf?null:e}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+(arguments.length-1));};c.b=b;c.c=a;return c}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return xd(this.cd,a,Yf)===Yf?null:a};g.b=function(a,b){return xd(this.cd,a,Yf)===Yf?b:a};
    function Fk(a){if(Rf(a))return Kf(a,null);a=B(a);if(null==a)return Dk;if(a instanceof Qe&&0===a.J)return Ek(a.l);for(var b=je(Dk);;)if(null!=a){var c=D(a);b=ke(b,sd(a));a=c;}else return le(b)}function Gk(a){return function e(c,d){return new Mg(null,function(){var f;a:{var k=c;for(f=d;;){var l=k;k=J(l,0,null);if(l=B(l))if(N(f,k))k=Re(l);else {f=vf(k,e(Re(l),Cf.b(f,k)));break a}else {f=null;break a}}}return f},null,null)}(a,Dk)}
    function Hk(a){for(var b=I;;)if(D(a))b=Cf.b(b,C(a)),a=D(a);else return B(b)}function Lg(a){if(null!=a&&(a.I&4096||h===a.jg))return a.yd(null);if("string"===typeof a)return a;throw Error(["Doesn't support name: ",q.a(a)].join(""));}function Ik(a,b){var c=je(S);a=B(a);for(b=B(b);;)if(a&&b)c=Zg(c,C(a),C(b)),a=D(a),b=D(b);else return le(c)}
    var Jk=function Jk(a){switch(arguments.length){case 2:return Jk.b(arguments[0],arguments[1]);case 3:return Jk.c(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Jk.g(arguments[0],arguments[1],arguments[2],new Qe(c.slice(3),0,null))}};Jk.b=function(a,b){return b};Jk.c=function(a,b,c){return (a.a?a.a(b):a.call(null,b))>(a.a?a.a(c):a.call(null,c))?b:c};
    Jk.g=function(a,b,c,d){return gd.c(function(e,f){return Jk.c(a,e,f)},Jk.c(a,b,c),d)};Jk.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};Jk.F=3;function Kk(){this.l=[];}Kk.prototype.add=function(a){return this.l.push(a)};Kk.prototype.size=function(){return this.l.length};Kk.prototype.clear=function(){return this.l=[]};Kk.prototype.Nd=function(){return 0===this.l.length};
    function Lk(){return function(a){var b=new Kk;return function(){function c(k,l){b.add(l);return 2===b.size()?(l=Ni(b.l),b.clear(),a.b?a.b(k,l):a.call(null,k,l)):k}function d(k){if(!p(b.Nd())){var l=Ni(b.l);b.clear();k=df(a.b?a.b(k,l):a.call(null,k,l));}return a.a?a.a(k):a.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);
    };f.o=e;f.a=d;f.b=c;return f}()}}function Mk(a,b){return new Mg(null,function(){var c=B(b);if(c){var d=C(c);d=a.a?a.a(d):a.call(null,d);c=p(d)?vf(C(c),Mk(a,Re(c))):null;}else c=null;return c},null,null)}function Nk(a,b,c){this.start=a;this.step=b;this.count=c;this.h=82;this.I=0;}g=Nk.prototype;g.X=function(){return this.count};g.Fa=function(){return this.start};g.W=function(a,b){return this.start+b*this.step};g.wa=function(a,b,c){return 0<=b&&b<this.count?this.start+b*this.step:c};
    g.ze=function(){if(1>=this.count)throw Error("-drop-first of empty chunk");return new Nk(this.start+this.step,this.step,this.count-1)};function Ok(a,b,c){this.J=a;this.end=b;this.step=c;}Ok.prototype.ra=function(){return 0<this.step?this.J<this.end:this.J>this.end};Ok.prototype.next=function(){var a=this.J;this.J+=this.step;return a};function Pk(a,b,c,d,e,f,k){this.H=a;this.start=b;this.end=c;this.step=d;this.Bb=e;this.Yd=f;this.B=k;this.h=32375006;this.I=140800;}g=Pk.prototype;g.toString=function(){return Be(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();function Qk(a){if(null==a.Bb){var b=a.X(null);32<b?(a.Yd=new Pk(null,a.start+32*a.step,a.end,a.step,null,null,null),a.Bb=new Nk(a.start,a.step,32)):a.Bb=new Nk(a.start,a.step,b);}}
    g.W=function(a,b){if(0<=b&&b<this.X(null))return this.start+b*this.step;if(0<=b&&this.start>this.end&&0===this.step)return this.start;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0<=b&&b<this.X(null)?this.start+b*this.step:0<=b&&this.start>this.end&&0===this.step?this.start:c};g.ua=function(){return new Ok(this.start,this.end,this.step)};g.N=function(){return this.H};
    g.za=function(){return 0<this.step?this.start+this.step<this.end?new Pk(null,this.start+this.step,this.end,this.step,null,null,null):null:this.start+this.step>this.end?new Pk(null,this.start+this.step,this.end,this.step,null,null,null):null};g.X=function(){return Math.ceil((this.end-this.start)/this.step)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=We(this)};g.Y=function(a,b){return uf(this,b)};g.pa=function(){return Se};g.Ba=function(a,b){return ff(this,b)};
    g.Ca=function(a,b,c){for(a=this.start;;)if(0<this.step?a<this.end:a>this.end){c=b.b?b.b(c,a):b.call(null,c,a);if(cf(c))return t(c);a+=this.step;}else return c};g.Fa=function(){return this.start};g.Ha=function(){var a=this.za(null);return null==a?Se:a};g.$=function(){return this};g.$d=function(){Qk(this);return this.Bb};g.gd=function(){Qk(this);return null==this.Yd?Se:this.Yd};g.O=function(a,b){return b===this.H?this:new Pk(b,this.start,this.end,this.step,this.Bb,this.Yd,this.B)};
    g.ga=function(a,b){return vf(b,this)};g.Ae=function(){return B(this.gd(null))};Pk.prototype[ad]=function(){return Ue(this)};function Rk(a,b){return b<=a?Se:new Pk(null,a,b,1,null,null,null)}function Sk(a,b){return new Mg(null,function(){var c=B(b);return c?vf(C(c),Sk(a,Yh(a,c))):null},null,null)}function Tk(a){return le(gd.c(function(b,c){return Zg(b,c,x.c(b,c,0)+1)},je(S),a))}
    function Uk(a,b){return function(){function c(m,r,u){return new Q(null,2,5,R,[a.c?a.c(m,r,u):a.call(null,m,r,u),b.c?b.c(m,r,u):b.call(null,m,r,u)],null)}function d(m,r){return new Q(null,2,5,R,[a.b?a.b(m,r):a.call(null,m,r),b.b?b.b(m,r):b.call(null,m,r)],null)}function e(m){return new Q(null,2,5,R,[a.a?a.a(m):a.call(null,m),b.a?b.a(m):b.call(null,m)],null)}function f(){return new Q(null,2,5,R,[a.o?a.o():a.call(null),b.o?b.o():b.call(null)],null)}var k=null,l=function(){function m(u,v,y,E){var H=null;
    if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Qe(T,0,null);}return r.call(this,u,v,y,H)}function r(u,v,y,E){return new Q(null,2,5,R,[ih(a,u,v,y,E),ih(b,u,v,y,E)],null)}m.F=3;m.G=function(u){var v=C(u);u=D(u);var y=C(u);u=D(u);var E=C(u);u=Re(u);return r(v,y,E,u)};m.g=r;return m}();k=function(m,r,u,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,m,r,
    u);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=arguments[y+3],++y;y=new Qe(E,0,null);}return l.g(m,r,u,y)}};k.F=3;k.G=l.G;k.o=f;k.a=e;k.b=d;k.c=c;k.g=l.g;return k}()}function Vk(a){a:for(var b=a;;)if(b=B(b))b=D(b);else break a;return a}
    function Wk(a,b){if("string"===typeof b)return a=a.exec(b),null!=a&&A.b(a[0],b)?1===a.length?a[0]:Ni(a):null;throw new TypeError("re-matches must match against a string.");}function Xk(a,b){if("string"===typeof b)return a=a.exec(b),null==a?null:1===a.length?a[0]:Ni(a);throw new TypeError("re-find must match against a string.");}
    var Yk=function Yk(a,b){var d=a.exec(b);if(null==d)return null;var e=d[0],f=1===d.length?e:Ni(d);return vf(f,new Mg(null,function(){var k=e.length;k=d.index+(1>k?1:k);return k<=b.length?(k=b.substring(k),Yk.b?Yk.b(a,k):Yk.call(null,a,k)):null},null,null))};function Zk(a){if(a instanceof RegExp)return a;var b=Xk(/^\(\?([idmsux]*)\)/,a),c=J(b,0,null);b=J(b,1,null);return new RegExp(a.substring(null==c?0:c.length),p(b)?b:"")}
    function $k(a,b,c,d,e,f,k){var l=Ic;Ic=null==Ic?null:Ic-1;try{if(null!=Ic&&0>Ic)return ce(a,"#");ce(a,c);if(0===Oc.a(f))B(k)&&ce(a,function(){var E=al.a(f);return p(E)?E:"..."}());else {if(B(k)){var m=C(k);b.c?b.c(m,a,f):b.call(null,m,a,f);}for(var r=D(k),u=Oc.a(f)-1;;)if(!r||null!=u&&0===u){B(r)&&0===u&&(ce(a,d),ce(a,function(){var E=al.a(f);return p(E)?E:"..."}()));break}else {ce(a,d);var v=C(r);c=a;k=f;b.c?b.c(v,c,k):b.call(null,v,c,k);var y=D(r);c=u-1;r=y;u=c;}}return ce(a,e)}finally{Ic=l;}}
    function bl(a,b){b=B(b);for(var c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e);ce(a,f);e+=1;}else if(b=B(b))c=b,Wf(c)?(b=re(c),d=se(c),c=b,f=F(b),b=d,d=f):(f=C(c),ce(a,f),b=D(c),c=null,d=0),e=0;else return null}function cl(a){if(null==Ec)throw Error("No *print-fn* fn set for evaluation environment");Ec.call(null,a);return null}var dl={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
    function el(a){return ['"',q.a(a.replace(/[\\"\b\f\n\r\t]/g,function(b){return dl[b]})),'"'].join("")}function fl(a,b){return ag(x.b(a,Mc))?null!=b&&(b.h&131072||h===b.xd)?null!=Lf(b):!1:!1}
    function gl(a,b,c){if(null==a)return ce(b,"nil");if(fl(c,a)){ce(b,"^");var d=Lf(a);hl.c?hl.c(d,b,c):hl.call(null,d,b,c);ce(b," ");}if(a.Ia)return a.Ja(b);if(null!=a?a.h&2147483648||h===a.ma||(a.h?0:Xc(ee,a)):Xc(ee,a))return fe(a,b,c);if(!0===a||!1===a)return ce(b,q.a(a));if("number"===typeof a)return ce(b,isNaN(a)?"##NaN":a===Number.POSITIVE_INFINITY?"##Inf":a===Number.NEGATIVE_INFINITY?"##-Inf":q.a(a));if(null!=a&&a.constructor===Object)return ce(b,"#js "),d=Wh.b(function(f){return new Gi(null!=Wk(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/,
    f)?Kg.a(f):f,a[f])},Ub(a)),il.A?il.A(d,hl,b,c):il.call(null,d,hl,b,c);if(Rc(a))return $k(b,hl,"#js ["," ","]",c,a);if("string"==typeof a)return p(Lc.a(c))?ce(b,el(a)):ce(b,a);if(fb(a)){var e=a.name;c=p(function(){var f=null==e;return f?f:ec(e)}())?"Function":e;return bl(b,G(["#object[",c,p(!1)?[' "',q.a(a),'"'].join(""):"","]"]))}if(a instanceof Date)return c=function(f,k){for(f=q.a(f);;)if(f.length<k)f=["0",f].join("");else return f},bl(b,G(['#inst "',q.a(a.getUTCFullYear()),"-",c(a.getUTCMonth()+
    1,2),"-",c(a.getUTCDate(),2),"T",c(a.getUTCHours(),2),":",c(a.getUTCMinutes(),2),":",c(a.getUTCSeconds(),2),".",c(a.getUTCMilliseconds(),3),"-",'00:00"']));if(a instanceof RegExp)return bl(b,G(['#"',a.source,'"']));if(nh(a))return bl(b,G(["#object[",a.toString(),"]"]));if(p(function(){var f=null==a?null:a.constructor;return null==f?null:f.Da}()))return bl(b,G(["#object[",a.constructor.Da.replace(/\//g,"."),"]"]));e=function(){var f=null==a?null:a.constructor;return null==f?null:f.name}();c=p(function(){var f=
    null==e;return f?f:ec(e)}())?"Object":e;return null==a.constructor?bl(b,G(["#object[",c,"]"])):bl(b,G(["#object[",c," ",q.a(a),"]"]))}function hl(a,b,c){var d=jl.a(c);return p(d)?(c=K.c(c,kl,gl),d.c?d.c(a,b,c):d.call(null,a,b,c)):gl(a,b,c)}
    function ll(a,b){var c=new zc,d=new Ae(c);a:{hl(C(a),d,b);a=B(D(a));for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k);ce(d," ");hl(l,d,b);k+=1;}else if(a=B(a))e=a,Wf(e)?(a=re(e),f=se(e),e=a,l=F(a),a=f,f=l):(l=C(e),ce(d," "),hl(l,d,b),a=D(e),e=null,f=0),k=0;else break a}d.qc(null);return c}function ml(a,b){return Pf(a)?"":q.a(ll(a,b))}function nl(a,b){return cl(ml(a,b))}
    var ol=function ol(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ol.g(0<c.length?new Qe(c.slice(0),0,null):null)};ol.g=function(a){return ml(a,Jc())};ol.F=0;ol.G=function(a){return this.g(B(a))};
    var pl=function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return nl(c,K.c(Jc(),Lc,!1))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),ql=function ql(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ql.g(0<c.length?new Qe(c.slice(0),0,null):null)};ql.g=function(a){return ml(a,K.c(Jc(),Lc,!1))};ql.F=0;
    ql.G=function(a){return this.g(B(a))};function rl(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;sl(0<b.length?new Qe(b.slice(0),0,null):null);}function sl(a){nl(a,K.c(Jc(),Lc,!1));p(Fc)?(a=Jc(),cl("\n"),a=(x.b(a,Kc),null)):a=null;return a}function tl(a){return a instanceof w?Me.b(null,Lg(a)):Kg.b(null,Lg(a))}
    function ul(a){if(p(!1)){var b=B(a),c=B(b),d=C(c);D(c);J(d,0,null);J(d,1,null);c=Ef(a);for(a=null;;){d=a;b=B(b);a=C(b);var e=D(b),f=a;a=J(f,0,null);b=J(f,1,null);if(p(f))if(a instanceof z||a instanceof w)if(p(d))if(A.b(d,Ig(a)))c=K.c(c,tl(a),b),a=d,b=e;else return null;else if(d=Ig(a),p(d))c=K.c(c,tl(a),b),a=d,b=e;else return null;else return null;else return new Q(null,2,5,R,[d,c],null)}}else return null}
    function vl(a,b,c,d,e){return $k(d,function(f,k,l){var m=Dd(f);c.c?c.c(m,k,l):c.call(null,m,k,l);ce(k," ");f=Ed(f);return c.c?c.c(f,k,l):c.call(null,f,k,l)},[q.a(a),"{"].join(""),", ","}",e,B(b))}function il(a,b,c,d){var e=M(a)?ul(a):null,f=J(e,0,null);e=J(e,1,null);return p(f)?vl(["#:",q.a(f)].join(""),e,b,c,d):vl(null,a,b,c,d)}Uh.prototype.ma=h;Uh.prototype.S=function(a,b,c){ce(b,"#object[cljs.core.Volatile ");hl(new n(null,1,[wl,this.state],null),b,c);return ce(b,"]")};Ne.prototype.ma=h;
    Ne.prototype.S=function(a,b,c){ce(b,"#'");return hl(this.bd,b,c)};Qe.prototype.ma=h;Qe.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Mg.prototype.ma=h;Mg.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Gi.prototype.ma=h;Gi.prototype.S=function(a,b,c){return $k(b,hl,"["," ","]",c,this)};ak.prototype.ma=h;ak.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Pj.prototype.ma=h;Pj.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};
    ek.prototype.ma=h;ek.prototype.S=function(a,b,c){return $k(b,hl,"["," ","]",c,this)};kj.prototype.ma=h;kj.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Lo.prototype.ma=h;Lo.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Si.prototype.ma=h;Si.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Fg.prototype.ma=h;Fg.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};tf.prototype.ma=h;
    tf.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Uj.prototype.ma=h;Uj.prototype.S=function(a,b,c){return il(this,hl,b,c)};Rj.prototype.ma=h;Rj.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Ui.prototype.ma=h;Ui.prototype.S=function(a,b,c){return $k(b,hl,"["," ","]",c,this)};nk.prototype.ma=h;nk.prototype.S=function(a,b,c){return il(this,hl,b,c)};Bk.prototype.ma=h;Bk.prototype.S=function(a,b,c){return $k(b,hl,"#{"," ","}",c,this)};Rg.prototype.ma=h;
    Rg.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Nh.prototype.ma=h;Nh.prototype.S=function(a,b,c){ce(b,"#object[cljs.core.Atom ");hl(new n(null,1,[wl,this.state],null),b,c);return ce(b,"]")};vk.prototype.ma=h;vk.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};dk.prototype.ma=h;dk.prototype.S=function(a,b,c){return $k(b,hl,"["," ","]",c,this)};$h.prototype.ma=h;$h.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Q.prototype.ma=h;
    Q.prototype.S=function(a,b,c){return $k(b,hl,"["," ","]",c,this)};aj.prototype.ma=h;aj.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Dg.prototype.ma=h;Dg.prototype.S=function(a,b){return ce(b,"()")};bj.prototype.ma=h;bj.prototype.S=function(a,b,c){return $k(b,hl,"#queue ["," ","]",c,B(this))};n.prototype.ma=h;n.prototype.S=function(a,b,c){return il(this,hl,b,c)};Pk.prototype.ma=h;Pk.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Ah.prototype.ma=h;
    Ah.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};uk.prototype.ma=h;uk.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Df.prototype.ma=h;Df.prototype.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};w.prototype.Oc=h;w.prototype.Wb=function(a,b){if(b instanceof w)return Le(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};z.prototype.Oc=h;
    z.prototype.Wb=function(a,b){if(b instanceof z)return Gg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};Ui.prototype.Oc=h;Ui.prototype.Wb=function(a,b){if(Vf(b))return eg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};Q.prototype.Oc=h;Q.prototype.Wb=function(a,b){if(Vf(b))return eg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};Gi.prototype.Oc=h;
    Gi.prototype.Wb=function(a,b){if(Vf(b))return eg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};ek.prototype.Oc=h;ek.prototype.Wb=function(a,b){if(Vf(b))return eg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};dk.prototype.Oc=h;dk.prototype.Wb=function(a,b){if(Vf(b))return eg(this,b);throw Error(["Cannot compare ",q.a(this)," to ",q.a(b)].join(""));};function xl(a){this.La=a;this.value=null;this.h=2147516416;this.I=1;}
    xl.prototype.zb=function(){p(this.La)&&(this.value=this.La.o?this.La.o():this.La.call(null),this.La=null);return this.value};xl.prototype.Bd=function(){return Tc(this.La)};xl.prototype.S=function(a,b,c){ce(b,"#object[cljs.core.Delay ");hl(new n(null,2,[yl,null==this.La?zl:Al,wl,this.value],null),b,c);return ce(b,"]")};function Bl(a){return a instanceof xl?t(a):a}function Cl(a,b){this.ue=a;this.be=b;this.h=2173173760;this.I=131072;}g=Cl.prototype;
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return nf(this,b,0);case 2:return nf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.a=function(b){return nf(this,b,0)};a.b=function(b,c){return nf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return rf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return rf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return rf(this,c,d)};return b}();g.ua=function(){var a=th(this.be);return Bh(this.ue,a)};g.$=function(){var a=th(this.be);a=Bh(this.ue,a);a=zh(a);return B(p(a)?a:Se)};g.Ba=function(a,b){return ng(this.ue,mg(b,lg),this.be)};
    g.Ca=function(a,b,c){return og(this.ue,mg(b,lg),c,this.be)};g.S=function(a,b,c){return $k(b,hl,"("," ",")",c,this)};Cl.prototype[ad]=function(){return Ue(this)};function Dl(a){return new Cl(fh(Ih,Hk(a)),Bf(a))}function El(){}function Fl(a){if(null!=a&&null!=a.gg)a=a.gg(a);else {var b=Fl[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=Fl._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IEncodeJS.-clj-\x3ejs",a);}return a}
    function Gl(a,b){return (null!=a?h===a.fg||(a.Ke?0:Xc(El,a)):Xc(El,a))?Fl(a):"string"===typeof a||"number"===typeof a||a instanceof z||a instanceof w?b.a?b.a(a):b.call(null,a):ol.g(G([a]))}var Hl=function Hl(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Hl.g(arguments[0],1<c.length?new Qe(c.slice(1),0,null):null)};
    Hl.g=function(a,b){b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;var c=x.c(b,Il,Lg),d=function k(f){if(null==f)return null;if(null!=f?h===f.fg||(f.Ke?0:Xc(El,f)):Xc(El,f))return Fl(f);if(f instanceof z)return c.a?c.a(f):c.call(null,f);if(f instanceof w)return q.a(f);if(M(f)){var l={};f=B(f);for(var m=null,r=0,u=0;;)if(u<r){var v=m.W(null,u),y=J(v,0,null);v=J(v,1,null);y=Gl(y,d);v=k(v);l[y]=v;u+=1;}else if(f=B(f))Wf(f)?(r=re(f),f=se(f),m=r,r=F(r)):(r=C(f),m=J(r,0,null),r=J(r,1,null),m=Gl(m,d),r=k(r),l[m]=
    r,f=D(f),m=null,r=0),u=0;else break;return l}if(Qf(f)){l=[];f=B(Wh.b(k,f));m=null;for(u=r=0;;)if(u<r)y=m.W(null,u),l.push(y),u+=1;else if(f=B(f))m=f,Wf(m)?(f=re(m),u=se(m),m=f,r=F(f),f=u):(f=C(m),l.push(f),f=D(m),m=null,r=0),u=0;else break;return l}return f};return d(a)};Hl.F=1;Hl.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};function Jl(){}
    function Kl(a,b){if(null!=a&&null!=a.eg)a=a.eg(a,b);else {var c=Kl[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=Kl._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IEncodeClojure.-js-\x3eclj",a);}return a}function Ll(a){return Ml(a,G([Nl,!1]))}
    function Ml(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;c=x.b(c,Nl);var d=p(c)?Kg:q;return function k(f){return (null!=f?h===f.Mh||(f.Ke?0:Xc(Jl,f)):Xc(Jl,f))?Kl(f,fh(rk,b)):$f(f)?Vk(Wh.b(k,f)):Oi(f)?new Gi(k(Dd(f)),k(Ed(f))):Qf(f)?ji.c(Ef(f),Wh.a(k),f):Rc(f)?le(gd.c(function(l,m){return Yg.b(l,k(m))},je(I),f)):Yc(f)===Object?le(gd.c(function(l,m){return Zg(l,d.a?d.a(m):d.call(null,m),k(Vb(f,m)))},je(S),Ub(f))):f}(a)}
    function Ol(a,b){return le(gd.c(function(c,d){var e=a.a?a.a(d):a.call(null,d);return Zg(c,e,Cf.b(x.c(c,e,I),d))},je(S),b))}var Pl=null;function Ql(){null==Pl&&(Pl=Oh(new n(null,3,[Rl,S,Sl,S,Tl,S],null)));return Pl}
    function Ul(a,b,c){var d=A.b(b,c);if(d)return d;d=Tl.a(a);d=d.a?d.a(b):d.call(null,b);if(d=N(d,c))return d;if(Vf(c))if(Vf(b))if(F(c)===F(b)){d=!0;for(var e=0;;)if(d&&e!==F(c))d=Ul(a,b.a?b.a(e):b.call(null,e),c.a?c.a(e):c.call(null,e)),e+=1;else return d}else return !1;else return !1;else return !1}function Vl(a){var b=t(Ql());return lh(x.b(Rl.a(b),a))}function Wl(a,b,c,d){Rh.b(a,function(){return t(b)});Rh.b(c,function(){return t(d)});}
    var Xl=function Xl(a,b,c){var e=function(){var f=t(c);return f.a?f.a(a):f.call(null,a)}();e=p(p(e)?e.a?e.a(b):e.call(null,b):e)?!0:null;if(p(e))return e;e=function(){for(var f=Vl(b);;)if(0<F(f)){var k=C(f);Xl.c?Xl.c(a,k,c):Xl.call(null,a,k,c);f=Re(f);}else return null}();if(p(e))return e;e=function(){for(var f=Vl(a);;)if(0<F(f)){var k=C(f);Xl.c?Xl.c(k,b,c):Xl.call(null,k,b,c);f=Re(f);}else return null}();return p(e)?e:!1};function Yl(a,b,c,d){c=Xl(a,b,c);return p(c)?c:Ul(d,a,b)}
    var Zl=function Zl(a,b,c,d,e,f,k,l){var r=gd.c(function(v,y){var E=J(y,0,null);J(y,1,null);if(Ul(t(c),b,E)){v=null==v||Yl(E,C(v),e,t(c))?y:v;if(!Yl(C(v),E,e,t(c)))throw Error(["Multiple methods in multimethod '",q.a(a),"' match dispatch value: ",q.a(b)," -\x3e ",q.a(E)," and ",q.a(C(v)),", and neither is preferred"].join(""));return v}return v},null,t(d)),u=function(){if(null==r){var v=t(d);v=v.a?v.a(l):v.call(null,l);}else v=!1;return p(v)?new Q(null,2,5,R,[l,v],null):r}();if(p(u)){if(A.b(t(k),t(c)))return Rh.A(f,
    K,b,zf(u)),zf(u);Wl(f,d,k,c);return Zl.Ga?Zl.Ga(a,b,c,d,e,f,k,l):Zl.call(null,a,b,c,d,e,f,k,l)}return null};function $l(a,b,c){if(null!=a&&null!=a.v)a.v(a,b,c);else {var d=$l[db(null==a?null:a)];if(null!=d)d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=$l._,null!=d)d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IMultiFn.-add-method",a);}}
    function am(a,b){if(null!=a&&null!=a.Ea)a=a.Ea(a,b);else {var c=am[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=am._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IMultiFn.-get-method",a);}return a}function bm(a){if(null!=a&&null!=a.ig)a=a.R;else {var b=bm[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=bm._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IMultiFn.-dispatch-fn",a);}return a}
    function cm(a,b){throw Error(["No method in multimethod '",q.a(a),"' for dispatch value: ",q.a(b)].join(""));}function dm(a,b,c,d,e,f,k){var l=em;this.name=a;this.R=b;this.vg=l;this.fe=c;this.ke=d;this.xh=e;this.je=f;this.Ud=k;this.h=4194305;this.I=4352;}g=dm.prototype;
    g.call=function(){function a(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){rb=this;var G_=jh(rb.R,xc,Sb,ob,Tb,G([gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_])),H_=this.Ea(null,G_);p(H_)||cm(rb.name,G_);return jh(H_,xc,Sb,ob,Tb,G([gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_]))}function b(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_){rb=this;var F_=rb.R.rb?rb.R.rb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_):rb.R.call(null,xc,Sb,ob,
    Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_),G_=this.Ea(null,F_);p(G_)||cm(rb.name,F_);return G_.rb?G_.rb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_):G_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_)}function c(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_){rb=this;var E_=rb.R.hb?rb.R.hb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_),F_=this.Ea(null,E_);
    p(F_)||cm(rb.name,E_);return F_.hb?F_.hb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_):F_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_)}function d(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_){rb=this;var D_=rb.R.qb?rb.R.qb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_),E_=this.Ea(null,D_);p(E_)||cm(rb.name,D_);return E_.qb?E_.qb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,
    A_,B_,C_):E_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_)}function e(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_){rb=this;var C_=rb.R.gb?rb.R.gb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_),D_=this.Ea(null,C_);p(D_)||cm(rb.name,C_);return D_.gb?D_.gb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_):D_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_)}function f(rb,xc,Sb,ob,Tb,gb,
    ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_){rb=this;var B_=rb.R.pb?rb.R.pb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_),C_=this.Ea(null,B_);p(C_)||cm(rb.name,B_);return C_.pb?C_.pb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_):C_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_)}function k(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_){rb=this;var A_=rb.R.fb?rb.R.fb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_):rb.R.call(null,
    xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_),B_=this.Ea(null,A_);p(B_)||cm(rb.name,A_);return B_.fb?B_.fb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_):B_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_)}function l(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_){rb=this;var z_=rb.R.ob?rb.R.ob(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_),A_=this.Ea(null,z_);p(A_)||cm(rb.name,z_);return A_.ob?A_.ob(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,
    y_):A_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_)}function m(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_){rb=this;var y_=rb.R.eb?rb.R.eb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_),z_=this.Ea(null,y_);p(z_)||cm(rb.name,y_);return z_.eb?z_.eb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_):z_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_)}function r(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG){rb=this;var x_=rb.R.nb?rb.R.nb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,
    SG,TG,UG):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG),y_=this.Ea(null,x_);p(y_)||cm(rb.name,x_);return y_.nb?y_.nb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG):y_.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG)}function u(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG){rb=this;var UG=rb.R.cb?rb.R.cb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG),x_=this.Ea(null,UG);p(x_)||cm(rb.name,UG);return x_.cb?x_.cb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG):x_.call(null,xc,Sb,ob,Tb,gb,ib,mc,
    of,lv,SG,TG)}function v(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG){rb=this;var TG=rb.R.mb?rb.R.mb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG),UG=this.Ea(null,TG);p(UG)||cm(rb.name,TG);return UG.mb?UG.mb(xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG):UG.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG)}function y(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv){rb=this;var SG=rb.R.Xa?rb.R.Xa(xc,Sb,ob,Tb,gb,ib,mc,of,lv):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv),TG=this.Ea(null,SG);p(TG)||cm(rb.name,SG);return TG.Xa?
    TG.Xa(xc,Sb,ob,Tb,gb,ib,mc,of,lv):TG.call(null,xc,Sb,ob,Tb,gb,ib,mc,of,lv)}function E(rb,xc,Sb,ob,Tb,gb,ib,mc,of){rb=this;var lv=rb.R.Ga?rb.R.Ga(xc,Sb,ob,Tb,gb,ib,mc,of):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc,of),SG=this.Ea(null,lv);p(SG)||cm(rb.name,lv);return SG.Ga?SG.Ga(xc,Sb,ob,Tb,gb,ib,mc,of):SG.call(null,xc,Sb,ob,Tb,gb,ib,mc,of)}function H(rb,xc,Sb,ob,Tb,gb,ib,mc){rb=this;var of=rb.R.ib?rb.R.ib(xc,Sb,ob,Tb,gb,ib,mc):rb.R.call(null,xc,Sb,ob,Tb,gb,ib,mc),lv=this.Ea(null,of);p(lv)||cm(rb.name,of);
    return lv.ib?lv.ib(xc,Sb,ob,Tb,gb,ib,mc):lv.call(null,xc,Sb,ob,Tb,gb,ib,mc)}function T(rb,xc,Sb,ob,Tb,gb,ib){rb=this;var mc=rb.R.la?rb.R.la(xc,Sb,ob,Tb,gb,ib):rb.R.call(null,xc,Sb,ob,Tb,gb,ib),of=this.Ea(null,mc);p(of)||cm(rb.name,mc);return of.la?of.la(xc,Sb,ob,Tb,gb,ib):of.call(null,xc,Sb,ob,Tb,gb,ib)}function Y(rb,xc,Sb,ob,Tb,gb){rb=this;var ib=rb.R.K?rb.R.K(xc,Sb,ob,Tb,gb):rb.R.call(null,xc,Sb,ob,Tb,gb),mc=this.Ea(null,ib);p(mc)||cm(rb.name,ib);return mc.K?mc.K(xc,Sb,ob,Tb,gb):mc.call(null,xc,
    Sb,ob,Tb,gb)}function ia(rb,xc,Sb,ob,Tb){rb=this;var gb=rb.R.A?rb.R.A(xc,Sb,ob,Tb):rb.R.call(null,xc,Sb,ob,Tb),ib=this.Ea(null,gb);p(ib)||cm(rb.name,gb);return ib.A?ib.A(xc,Sb,ob,Tb):ib.call(null,xc,Sb,ob,Tb)}function ba(rb,xc,Sb,ob){rb=this;var Tb=rb.R.c?rb.R.c(xc,Sb,ob):rb.R.call(null,xc,Sb,ob),gb=this.Ea(null,Tb);p(gb)||cm(rb.name,Tb);return gb.c?gb.c(xc,Sb,ob):gb.call(null,xc,Sb,ob)}function wa(rb,xc,Sb){rb=this;var ob=rb.R.b?rb.R.b(xc,Sb):rb.R.call(null,xc,Sb),Tb=this.Ea(null,ob);p(Tb)||cm(rb.name,
    ob);return Tb.b?Tb.b(xc,Sb):Tb.call(null,xc,Sb)}function ua(rb,xc){rb=this;var Sb=rb.R.a?rb.R.a(xc):rb.R.call(null,xc),ob=this.Ea(null,Sb);p(ob)||cm(rb.name,Sb);return ob.a?ob.a(xc):ob.call(null,xc)}function pb(rb){rb=this;var xc=rb.R.o?rb.R.o():rb.R.call(null),Sb=this.Ea(null,xc);p(Sb)||cm(rb.name,xc);return Sb.o?Sb.o():Sb.call(null)}var sb=null;sb=function(rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_){switch(arguments.length){case 1:return pb.call(this,rb);case 2:return ua.call(this,
    rb,xc);case 3:return wa.call(this,rb,xc,Sb);case 4:return ba.call(this,rb,xc,Sb,ob);case 5:return ia.call(this,rb,xc,Sb,ob,Tb);case 6:return Y.call(this,rb,xc,Sb,ob,Tb,gb);case 7:return T.call(this,rb,xc,Sb,ob,Tb,gb,ib);case 8:return H.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc);case 9:return E.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of);case 10:return y.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv);case 11:return v.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG);case 12:return u.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,
    SG,TG);case 13:return r.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG);case 14:return m.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_);case 15:return l.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_);case 16:return k.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_);case 17:return f.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_);case 18:return e.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_);case 19:return d.call(this,rb,xc,Sb,ob,Tb,gb,ib,
    mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_);case 20:return c.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_);case 21:return b.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_);case 22:return a.call(this,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_)}throw Error("Invalid arity: "+(arguments.length-1));};sb.a=pb;sb.b=ua;sb.c=wa;sb.A=ba;sb.K=ia;sb.la=Y;sb.ib=T;sb.Ga=H;sb.Xa=E;sb.mb=y;sb.cb=v;sb.nb=u;sb.eb=r;sb.ob=m;sb.fb=l;sb.pb=k;sb.gb=f;sb.qb=
    e;sb.hb=d;sb.rb=c;sb.Sc=b;sb.Be=a;return sb}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.o=function(){var a=this.R.o?this.R.o():this.R.call(null),b=this.Ea(null,a);p(b)||cm(this.name,a);return b.o?b.o():b.call(null)};g.a=function(a){var b=this.R.a?this.R.a(a):this.R.call(null,a),c=this.Ea(null,b);p(c)||cm(this.name,b);return c.a?c.a(a):c.call(null,a)};
    g.b=function(a,b){var c=this.R.b?this.R.b(a,b):this.R.call(null,a,b),d=this.Ea(null,c);p(d)||cm(this.name,c);return d.b?d.b(a,b):d.call(null,a,b)};g.c=function(a,b,c){var d=this.R.c?this.R.c(a,b,c):this.R.call(null,a,b,c),e=this.Ea(null,d);p(e)||cm(this.name,d);return e.c?e.c(a,b,c):e.call(null,a,b,c)};g.A=function(a,b,c,d){var e=this.R.A?this.R.A(a,b,c,d):this.R.call(null,a,b,c,d),f=this.Ea(null,e);p(f)||cm(this.name,e);return f.A?f.A(a,b,c,d):f.call(null,a,b,c,d)};
    g.K=function(a,b,c,d,e){var f=this.R.K?this.R.K(a,b,c,d,e):this.R.call(null,a,b,c,d,e),k=this.Ea(null,f);p(k)||cm(this.name,f);return k.K?k.K(a,b,c,d,e):k.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){var k=this.R.la?this.R.la(a,b,c,d,e,f):this.R.call(null,a,b,c,d,e,f),l=this.Ea(null,k);p(l)||cm(this.name,k);return l.la?l.la(a,b,c,d,e,f):l.call(null,a,b,c,d,e,f)};
    g.ib=function(a,b,c,d,e,f,k){var l=this.R.ib?this.R.ib(a,b,c,d,e,f,k):this.R.call(null,a,b,c,d,e,f,k),m=this.Ea(null,l);p(m)||cm(this.name,l);return m.ib?m.ib(a,b,c,d,e,f,k):m.call(null,a,b,c,d,e,f,k)};g.Ga=function(a,b,c,d,e,f,k,l){var m=this.R.Ga?this.R.Ga(a,b,c,d,e,f,k,l):this.R.call(null,a,b,c,d,e,f,k,l),r=this.Ea(null,m);p(r)||cm(this.name,m);return r.Ga?r.Ga(a,b,c,d,e,f,k,l):r.call(null,a,b,c,d,e,f,k,l)};
    g.Xa=function(a,b,c,d,e,f,k,l,m){var r=this.R.Xa?this.R.Xa(a,b,c,d,e,f,k,l,m):this.R.call(null,a,b,c,d,e,f,k,l,m),u=this.Ea(null,r);p(u)||cm(this.name,r);return u.Xa?u.Xa(a,b,c,d,e,f,k,l,m):u.call(null,a,b,c,d,e,f,k,l,m)};g.mb=function(a,b,c,d,e,f,k,l,m,r){var u=this.R.mb?this.R.mb(a,b,c,d,e,f,k,l,m,r):this.R.call(null,a,b,c,d,e,f,k,l,m,r),v=this.Ea(null,u);p(v)||cm(this.name,u);return v.mb?v.mb(a,b,c,d,e,f,k,l,m,r):v.call(null,a,b,c,d,e,f,k,l,m,r)};
    g.cb=function(a,b,c,d,e,f,k,l,m,r,u){var v=this.R.cb?this.R.cb(a,b,c,d,e,f,k,l,m,r,u):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u),y=this.Ea(null,v);p(y)||cm(this.name,v);return y.cb?y.cb(a,b,c,d,e,f,k,l,m,r,u):y.call(null,a,b,c,d,e,f,k,l,m,r,u)};g.nb=function(a,b,c,d,e,f,k,l,m,r,u,v){var y=this.R.nb?this.R.nb(a,b,c,d,e,f,k,l,m,r,u,v):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v),E=this.Ea(null,y);p(E)||cm(this.name,y);return E.nb?E.nb(a,b,c,d,e,f,k,l,m,r,u,v):E.call(null,a,b,c,d,e,f,k,l,m,r,u,v)};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,u,v,y){var E=this.R.eb?this.R.eb(a,b,c,d,e,f,k,l,m,r,u,v,y):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y),H=this.Ea(null,E);p(H)||cm(this.name,E);return H.eb?H.eb(a,b,c,d,e,f,k,l,m,r,u,v,y):H.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y)};
    g.ob=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E){var H=this.R.ob?this.R.ob(a,b,c,d,e,f,k,l,m,r,u,v,y,E):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E),T=this.Ea(null,H);p(T)||cm(this.name,H);return T.ob?T.ob(a,b,c,d,e,f,k,l,m,r,u,v,y,E):T.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E)};
    g.fb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H){var T=this.R.fb?this.R.fb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H),Y=this.Ea(null,T);p(Y)||cm(this.name,T);return Y.fb?Y.fb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H):Y.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H)};
    g.pb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T){var Y=this.R.pb?this.R.pb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T),ia=this.Ea(null,Y);p(ia)||cm(this.name,Y);return ia.pb?ia.pb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T):ia.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T)};
    g.gb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){var ia=this.R.gb?this.R.gb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y),ba=this.Ea(null,ia);p(ba)||cm(this.name,ia);return ba.gb?ba.gb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y):ba.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y)};
    g.qb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia){var ba=this.R.qb?this.R.qb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia),wa=this.Ea(null,ba);p(wa)||cm(this.name,ba);return wa.qb?wa.qb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia):wa.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia)};
    g.hb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba){var wa=this.R.hb?this.R.hb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba),ua=this.Ea(null,wa);p(ua)||cm(this.name,wa);return ua.hb?ua.hb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba):ua.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba)};
    g.rb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa){var ua=this.R.rb?this.R.rb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):this.R.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa),pb=this.Ea(null,ua);p(pb)||cm(this.name,ua);return pb.rb?pb.rb(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa):pb.call(null,a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa)};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua){var pb=jh(this.R,a,b,c,d,G([e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua])),sb=this.Ea(null,pb);p(sb)||cm(this.name,pb);return jh(sb,a,b,c,d,G([e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua]))};g.ig=function(){return this.R};g.v=function(a,b,c){Rh.A(this.ke,K,b,c);Wl(this.je,this.ke,this.Ud,this.fe);return this};
    g.Ea=function(a,b){A.b(t(this.Ud),t(this.fe))||Wl(this.je,this.ke,this.Ud,this.fe);a=t(this.je);a=a.a?a.a(b):a.call(null,b);return p(a)?a:Zl(this.name,b,this.fe,this.ke,this.xh,this.je,this.Ud,this.vg)};g.yd=function(){return te(this.name)};g.zd=function(){return ue(this.name)};g.Z=function(){return hb(this)};function fm(a){this.dd=a;this.B=null;this.h=2153775104;this.I=2048;}g=fm.prototype;g.toString=function(){return this.dd};g.Y=function(a,b){return b instanceof fm&&this.dd===b.dd};
    g.S=function(a,b){return ce(b,['#uuid "',q.a(this.dd),'"'].join(""))};g.Z=function(){null==this.B&&(this.B=Je(this.dd));return this.B};g.Wb=function(a,b){return Pb(this.dd,b.dd)};
    function gm(){function a(){return Math.floor(16*Math.random()).toString(16)}var b=(8|3&Math.floor(16*Math.random())).toString(16);return new fm([q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),"-",q.a(a()),q.a(a()),q.a(a()),q.a(a()),"-4",q.a(a()),q.a(a()),q.a(a()),"-",q.a(b),q.a(a()),q.a(a()),q.a(a()),"-",q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a()),q.a(a())].join("").toLowerCase())}
    function hm(a,b,c){var d=Error(a);this.message=a;this.data=b;this.lf=c;this.name=d.name;this.description=d.description;this.number=d.number;this.fileName=d.fileName;this.lineNumber=d.lineNumber;this.columnNumber=d.columnNumber;this.stack=d.stack;return this}hm.prototype.__proto__=Error.prototype;hm.prototype.ma=h;
    hm.prototype.S=function(a,b,c){ce(b,"#error {:message ");hl(this.message,b,c);p(this.data)&&(ce(b,", :data "),hl(this.data,b,c));p(this.lf)&&(ce(b,", :cause "),hl(this.lf,b,c));return ce(b,"}")};hm.prototype.toString=function(){return Be(this)};function im(a,b){return jm(a,b,null)}function jm(a,b,c){return new hm(a,b,c)}function km(a){return a instanceof hm?a.data:null}function lm(a){return a instanceof Error?a.message:null}
    function mm(a){return N(new Bk(null,new n(null,24,[nm,"null",om,"null",pm,"null",qm,"null",rm,"null",sm,"null",tm,"null",um,"null",vm,"null",wm,"null",xm,"null",ym,"null",zm,"null",Am,"null",Bm,"null",Cm,"null",Dm,"null",Em,"null",Fm,"null",Gm,"null",Hm,"null",Im,"null",Jm,"null",Km,"null"],null),null),a)}function Lm(a,b){this.tag=a;this.form=b;this.h=2153775360;this.I=0;}g=Lm.prototype;g.toString=function(){return Be(this)};
    g.Y=function(a,b){return b instanceof Lm&&A.b(this.tag,b.tag)&&A.b(this.form,b.form)};g.Z=function(){return 31*Je(this.tag)+Je(this.form)};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "tag":return this.tag;case "form":return this.form;default:return c}};g.S=function(a,b,c){ce(b,["#",q.a(this.tag)," "].join(""));return hl(this.form,b,c)};
    var Mm="arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" "),Nm=null;
    function Om(a){null==Nm&&(Nm=gd.c(function(b,c){b[c]=!0;return b},{},Mm));return Nm.hasOwnProperty(a)}function Pm(){p(dd)||(dd=function(){for(var a=gg(function(e,f){return f.length-e.length}),b="";;)if(B(a)){var c=D(a),d=[function(){var e=b;return ""!==b?[e,"|"].join(""):e}(),q.a(C(a))].join("");a=c;b=d;}else return [b,"|\\$"].join("")}());return dd}
    function Qm(a){var b=q.a(a);if("_DOT__DOT_"===b)var c="..";else a:{c=new RegExp(Pm(),"g");b=p(dc(b,"$"))?b.substring(0,b.length-1):b;for(var d="",e=0;;){var f=c.exec(b);if(p(f))f=J(f,0,null),d=[d,q.a(b.substring(e,c.lastIndex-f.length)),q.a("$"===f?"/":Vb(cd,f))].join(""),e=c.lastIndex;else {c=[d,q.a(b.substring(e,b.length))].join("");break a}}}a=a instanceof w?Me:q;return a.a?a.a(c):a.call(null,c)}function Rm(a){this.name=a;this.h=6291456;this.I=0;}Rm.prototype.toString=function(){return q.a(this.name)};
    Rm.prototype.Y=function(a,b){return b instanceof Rm?A.b(this.name,b.name):!1};Rm.prototype.Z=function(){return Je(this.name)};var Sm=null;"undefined"!==typeof console&&Pc();Pc();var Tm=new z(ta,"type","gateway.common.spec.messages/type",2118883938),jo=new z(ra,"type","gateway.common.context.spec.requests/type",372560587),Vm=new z(Da,"snapshot","gateway.domains.agm.spec.requests/snapshot",476154767),Wm=new w(null,"argm","argm",-181546357,null),Ym=new z(null,"metrics","metrics",394093469),Zm=new w(null,"not-native","not-native",-236392494,null),$m=new z(Ka,"creator_id","gateway.domains.global.spec.messages/creator_id",2015161290),an=new z(null,"local?","local?",-1422786101),
    bn=new z(Ua,"lifetime","gateway.state.spec.context/lifetime",-510268810),cn=new z(null,"level","level",1290497552),dn=new z(null,"?err_","?err_",789480858),en=new z(null,"line","line",212345235),fn=new z(null,"repeat","repeat",832692087),XE=new w(null,"p__11461","p__11461",1947099634,null),gn=new z(null,"client-request","client-request",-1402967032),hn=new z(Da,"stream_id","gateway.domains.agm.spec.requests/stream_id",-1290121066),jn=new z(null,"ALPHA","ALPHA",-1463859144),kn=new z(null,"repository-factories",
    "repository-factories",-545628132),rm=new w(null,"ns*","ns*",1840949383,null),ln=new z(null,"initiator","initiator",217480362),mn=new z(null,"left","left",-399115937),nn=new z(Ta,"activity-id","gateway.state.spec.common/activity-id",245315645),nF=new w(null,"meta12351","meta12351",-1022518466,null),on=new z(null,"context-added","context-added",-639543900),pn=new z(null,"signature-key","signature-key",-1652526996),qn=new z(null,"start-block-t","start-block-t",-373430594),rn=new z(Ta,"type","gateway.state.spec.common/type",
    -877512429),sn=new z(null,"per-line-prefix","per-line-prefix",846941813),tn=new z(null,"local-ip","local-ip",302001740),un=new z(null,"blacklist-ns","blacklist-ns",1200193567),vn=new z(null,"low","low",-1601362409),wn=new z(Ua,"members","gateway.state.spec.context/members",1219498589),xn=new z(null,"string","string",-1989541586),yn=new z(null,"data","data",-232669377),yF=new w(null,"p__12315","p__12315",1435898405,null),zn=new z(null,"factor","factor",-2103172748),An=new z(null,"parsers","parsers",
    -804353827),Bn=new z(Ea,"unregister","gateway.domains.agm.spec.unregister/unregister",388278210),Cn=new z(Qa,"id","gateway.state.spec.activity/id",1251756953),Dn=new z(null,"peers","peers",2005345354),En=new z(da,"amp","cljs.spec.alpha/amp",831147508),Fn=new z(Za,"string-restrictions","gateway.state.spec.restrictions/string-restrictions",-382592371),Hn=new z(null,"done-nl","done-nl",-381024340),In=new z(Ua,"timestamp","gateway.state.spec.context/timestamp",1704984480),Jn=new z(null,"private","private",
    -558947994),Kn=new z(da,"alt","cljs.spec.alpha/alt",523685437),yl=new z(null,"status","status",-1997798413),Ln=new z(null,"version","version",425292698),Mn=new z(null,"trace?","trace?",1730690679),Nn=new z(null,"last-access","last-access",1110221580),On=new z(ta,"peer-message","gateway.common.spec.messages/peer-message",823378764),Pn=new z(null,"days","days",-1394072564),Qn=new w(null,"opt-un","opt-un",-1770993273,null),Rn=new z(null,"description","description",-1428560544),Sn=new z(null,"process-id",
    "process-id",-2118975265),Tn=new z(null,"available_domains","available_domains",-981328192),Un=new w(aa,"deref","cljs.core/deref",1901963335,null),Vn=new z(null,"parser2","parser2",1013754688),Wn=new z(Ba,"meta","gateway.domains.agm.spec.messages/meta",520804499),Xn=new z(null,"parser1","parser1",-439601422),Yn=new z(da,"nil","cljs.spec.alpha/nil",1733813950),Zn=new z(da,"kind-form","cljs.spec.alpha/kind-form",-1047104697),$n=new z(null,"interests","interests",1200294902),ao=new z(null,"contexts",
    "contexts",4351546),bo=new w(null,"conform-into","conform-into",-1039113729,null),co=new z(null,"begin-test-var","begin-test-var",-908571100),eo=new z(Sa,"subscription-id","gateway.state.spec.bus/subscription-id",-1920104157),go=new z(null,"mandatory","mandatory",542802336),ho=new z(null,"end-column","end-column",1425389514),io=new w(da,"multi-spec","cljs.spec.alpha/multi-spec",175821274,null),ko=new z(null,"resolved_identity","resolved_identity",-874947112),NF=new w(null,"meta10588","meta10588",
    -43678257,null),mo=new z(null,"interop","interop",-1183783726),no=new z(null,"end-of-string","end-of-string",1567354241),oo=new z(null,"delta","delta",108939957),po=new z(null,"service?","service?",-2064761863),qo=new z(null,"base-args","base-args",-1268706822),ro=new z(ra,"updated","gateway.common.context.spec.requests/updated",-286888249),so=new w(null,"message-body","message-body",-554118051,null),zk=new z(aa,"not-found","cljs.core/not-found",-1572889185),to=new z(null,"create-token","create-token",
    -1564000484),uo=new z(null,"vargs_","vargs_",552132148),vo=new z(null,"server","server",1499190120),wo=new z(null,"grammar","grammar",1881328267),xo=new z(Xa,"method","gateway.state.spec.mthds/method",1887447044),yo=new z(null,"def","def",-1043430536),zo=new z(null,"destination","destination",-253872483),Ao=new w(null,"max-count","max-count",-1115250464,null),Bo=new w(aa,"string?","cljs.core/string?",-2072921719,null),Co=new z(null,"auto-whitespace","auto-whitespace",741152317),Do=new w(null,"forms",
    "forms",-608443419,null),Eo=new z(null,"right-margin","right-margin",-810413306),Fo=new z($a,"activity-subscribers","gateway.state.spec.state/activity-subscribers",-776389065),Go=new z(null,"ref-counted","ref-counted",-1035328654),Ho=new z(Ra,"subscriber","gateway.state.spec.agm/subscriber",2009954326),sG=new z(null,"destroy_peer_id","destroy_peer_id",388079342),Io=new z(null,"ready?","ready?",-105765697),Jo=new z(La,"write_permissions","gateway.domains.global.spec.requests/write_permissions",774911915),
    Ko=new z(null,"exponentchar","exponentchar",1986664222),No=new z(null,"start-time","start-time",814801386),Oo=new w(null,"pred","pred",-727012372,null),Po=new z(Za,"empty-restrictions","gateway.state.spec.restrictions/empty-restrictions",1011650447),Qo=new z(null,"directive","directive",793559132),Ro=new z(null,"secret","secret",618547054),So=new z(da,"name","cljs.spec.alpha/name",205233570),To=new z(Va,"registered-domains","gateway.state.spec.domain-registry/registered-domains",511803772),Uo=new z(Xa,
    "version","gateway.state.spec.mthds/version",1762403198),Vo=new z(Ra,"calls","gateway.state.spec.agm/calls",16611731),Wo=new z(Da,"remove-interest","gateway.domains.agm.spec.requests/remove-interest",-328528457),Xo=new z(La,"context_id","gateway.domains.global.spec.requests/context_id",-1750912658),Yo=new z(Ta,"node","gateway.state.spec.common/node",-570411717),Zo=new z(null,"topic","topic",-1960480691),$o=new w(ka,"response-type","gateway.auth.spec/response-type",724325508,null),ap=new z(null,"context-id",
    "context-id",1979873501),bp=new z(null,"trailing-white-space","trailing-white-space",1496006996),cp=new z(null,"destroy-peer","destroy-peer",-1747489061),dp=new w(null,"address-type","address-type",-1732576165,null),ep=new w(null,"keyword?","keyword?",1917797069,null),fp=new z(null,"arg-filter-fn","arg-filter-fn",1576945932),gp=new z($a,"signature-key","gateway.state.spec.state/signature-key",1283598087),hp=new z(bb,"end-index","instaparse.gll/end-index",-1851404441),ip=new z(null,"agm-domain","agm-domain",
    1137239322),jp=new z(null,"instance","instance",-2121349050),kp=new z(null,"right-params","right-params",-1790676237),lp=new z(null,"activity_types","activity_types",-1792673047),mp=new z(Xa,"flags","gateway.state.spec.mthds/flags",408816343),Am=new w(null,"let*","let*",1920721458,null),op=new w(null,"config","config",-1659574354,null),pp=new z(null,"option","option",65132272),qp=new z($a,"id","gateway.state.spec.state/id",2050905551),rp=new z(La,"lifetime","gateway.domains.global.spec.requests/lifetime",
    -1145821948),sp=new w(null,"when-first","when-first",821699168,null),tp=new z(null,"ns-blacklist","ns-blacklist",1957763142),up=new z(null,"result_signature","result_signature",-1204398780),vp=new z(null,"input_signature","input_signature",158735218),wp=new z($a,"state","gateway.state.spec.state/state",-1032276972),yp=new w(null,"k-\x3es","k-\x3es",-1685112801,null),zp=new w(null,"g","g",-916345864,null),Ap=new w(null,"f","f",43394975,null),Bp=new z(Ua,"id","gateway.state.spec.context/id",1782620593),
    Cp=new z(null,"allowed","allowed",1436019743),U=new z(null,"type","type",1174270348),Dp=new z(null,"types-added","types-added",1274011029),Ep=new z(null,"none","none",1333468478),Fp=new z(null,"peer-id","peer-id",387144350),Gp=new w(null,"_","_",-1201019570,null),Hp=new w(aa,"seq","cljs.core/seq",-1649497689,null),Ip=new z(null,"reader-error","reader-error",1610253121),Jp=new w(null,"v","v",1661996586,null),Kp=new w(null,"m","m",-1021758608,null),Lp=new w(null,"k","k",-505765866,null),Mp=new z(null,
    "optional","optional",2053951509),Np=new w(null,"opt-specs","opt-specs",1255626077,null),aF=new w(null,"p1__9613#","p1__9613#",-1973599680,null),Op=new w(null,"cpred","cpred",-540353554,null),Pp=new w(null,"re","re",1869207729,null),qG=new w(null,"map__11463","map__11463",842169409,null),Qp=new w(aa,"keyword?","cljs.core/keyword?",713156450,null),Rp=new w(null,"max-columns","max-columns",-912112507,null),OG=new w(null,"map__12316","map__12316",431203874,null),Sp=new z(ra,"context-destroy","gateway.common.context.spec.requests/context-destroy",
    -2019226956),Tp=new z(Ua,"updates","gateway.state.spec.context/updates",-1191134395),Up=new z(Ka,"updater_id","gateway.domains.global.spec.messages/updater_id",-1794190419),Vp=new z(null,"creator_id","creator_id",1398967087),Wp=new z(ta,"request","gateway.common.spec.messages/request",712202569),Xp=new w(aa,"keyword","cljs.core/keyword",-337316415,null),Yp=new z(null,"node","node",581201198),Zp=new z(La,"leave","gateway.domains.global.spec.requests/leave",101292368),$p=new z(null,"token","token",
    -1211463215),aq=new z("instaparse","failure","instaparse/failure",1422918607),bq=new z(Ra,"subscription","gateway.state.spec.agm/subscription",1556334291),cq=new z(null,"high","high",2027297808),dq=new z(ka,"remote_identity","gateway.auth.spec/remote_identity",-1701598746),eq=new z(null,"plus","plus",211540661),fq=new z(Va,"domain","gateway.state.spec.domain-registry/domain",-1376202493),gq=new w(aa,"number?","cljs.core/number?",-811857295,null),hq=new w(da,"coll-of","cljs.spec.alpha/coll-of",1019430407,
    null),iq=new z(null,"auth","auth",1389754926),jq=new z(Da,"call","gateway.domains.agm.spec.requests/call",442214083),kq=new z(null,"arguments","arguments",-1182834456),lq=new z(null,"colinc","colinc",-584873385),mq=new z(null,"auto","auto",-566279492),nq=new z(null,"logical-block","logical-block",-581022564),oq=new z(null,"node-builder","node-builder",-1956562605),pq=new z(Ta,"endpoint","gateway.state.spec.common/endpoint",-2063041997),qq=new z(Ka,"reason","gateway.domains.global.spec.messages/reason",
    -1756219178),rq=new z(null,"your-version","your-version",-351781765),sq=new z(null,"col","col",-1959363084),tq=new z(null,"domain","domain",1847214937),uq=new z(null,"?ns-str","?ns-str",2012733966),vq=new z(null,"reset","reset",-800929946),wq=new z(null,"current","current",-1088038603),xq=new z(null,"writing","writing",-1486865108),yq=new z(Sa,"topic-repattern","gateway.state.spec.bus/topic-repattern",736554526),zq=new z(Ta,"peer-id","gateway.state.spec.common/peer-id",-1398853323),Aq=new z(null,
    "suppress-namespaces","suppress-namespaces",2130686956),Bq=new z(Da,"unsubscribe","gateway.domains.agm.spec.requests/unsubscribe",-1898794870),Cq=new z(Da,"server_id","gateway.domains.agm.spec.requests/server_id",172340651),Dq=new z(null,"parent","parent",-878878779),Eq=new z(Qa,"visibility","gateway.state.spec.activity/visibility",-1264422156),Fq=new w(da,"conform","cljs.spec.alpha/conform",763100824,null),Gq=new z(null,"bus-domain","bus-domain",1136396472),Hq=new w(aa,"map?","cljs.core/map?",-1390345523,
    null),HH=new w(null,"meta11901","meta11901",-854950149,null),nm=new w(null,"\x26","\x26",-2144855648,null),Iq=new z(null,"HTAB","HTAB",11392612),Jq=new z(null,"snapshot","snapshot",-1274785710),Kq=new z(null,"right-bracket","right-bracket",951856080),Lq=new z(null,"req-id","req-id",-471642231),Mq=new z(Qa,"context-id","gateway.state.spec.activity/context-id",341891962),Nq=new z(Wa,"factory","gateway.state.spec.factory/factory",1055781172),Oq=new z(null,"req-in","req-in",960021885),Qq=new z(null,"current-id",
    "current-id",210783650),Rq=new z(null,"ttl","ttl",-1115275118),Sq=new z(Qa,"owner_type","gateway.state.spec.activity/owner_type",-1823895667),Tq=new z(Qa,"initiator","gateway.state.spec.activity/initiator",735796495),em=new z(null,"default","default",-1987822328),Uq=new z(null,"secs","secs",1532330091),Vq=new z(Ra,"interest","gateway.state.spec.agm/interest",1248511583),Wq=new z(null,"initial_context","initial_context",-797433349),Xq=new w("clojure.core","deref","clojure.core/deref",188719157,null),
    Yq=new w(null,"miser-width","miser-width",330482090,null),Zq=new z(null,"system","system",-29381724),$q=new z(null,"partial","partial",241141745),ar=new z(Da,"publish","gateway.domains.agm.spec.requests/publish",-1020033829),br=new z(ka,"login","gateway.auth.spec/login",532129350),cr=new z(ra,"context-update","gateway.common.context.spec.requests/context-update",562123698),dr=new z(Ra,"call","gateway.state.spec.agm/call",399063183),er=new z(null,"handler-ch","handler-ch",2044105199),fr=new z(null,
    "reader-exception","reader-exception",-1938323098),gr=new w(da,"tuple","cljs.spec.alpha/tuple",-415901908,null),hr=new z(Da,"context","gateway.domains.agm.spec.requests/context",-1915055426),ir=new z(null,"req-un","req-un",1074571008),jr=new z(null,"forms","forms",2045992350),kr=new z(null,"cur","cur",1153190599),lr=new z(Xa,"result_signature","gateway.state.spec.mthds/result_signature",-1987803736),mr=new z(Qa,"ready-members","gateway.state.spec.activity/ready-members",-939559218),nr=new z(null,
    "filters","filters",974726919),Km=new w(null,"def","def",597100991,null),or=new z(La,"context-update","gateway.domains.global.spec.requests/context-update",-1728804708),Nl=new z(null,"keywordize-keys","keywordize-keys",1310784252),pr=new z(null,"pos","pos",-864607220),qr=new z(null,"initiated","initiated",2096076574),rr=new z(da,"v","cljs.spec.alpha/v",552625740),sr=new z(null,"message","message",-406056002),tr=new z(Qa,"types","gateway.state.spec.activity/types",-2083568052),ur=new z(da,"k","cljs.spec.alpha/k",
    -1602615178),vr=new z(null,"output-fn","output-fn",1600951539),wr=new z("mem","del","mem/del",574870667),xr=new z(null,"total","total",1916810418),zr=new z(null,"domains","domains",1410387719),Ar=new z(null,"CR","CR",-1654295403),Br=new z(Ta,"source","gateway.state.spec.common/source",1883706108),Cr=new z(null,"typ","typ",-1304536900),Dr=new z(null,"form","form",-1624062471),V=new w(null,"%","%",-950237169,null),Er=new z(null,"pretty-writer","pretty-writer",-1222834267),Fr=new w(null,"..","..",-300507420,
    null),Gr=new z(null,"accepted","accepted",-1953464374),Hr=new z(null,"removed","removed",609626430),Ir=new w(ta,"message-body","gateway.common.spec.messages/message-body",-1647648637,null),Jr=new z(null,"pretty","pretty",-1916372486),Kr=new z(null,"summary","summary",380847952),Lr=new z(null,"peer-requested","peer-requested",1452118887),Mr=new z(null,"application","application",551185447),Nr=new z(da,"invalid","cljs.spec.alpha/invalid",-1220295119),Or=new z(da,"pcat","cljs.spec.alpha/pcat",26406623),
    Pr=new z(ra,"read_permissions","gateway.common.context.spec.requests/read_permissions",-45173714),Qr=new z(null,"caller","caller",-1275362879),Rr=new z(Wa,"id","gateway.state.spec.factory/id",-395012522),Sr=new z(null,"LWSP","LWSP",782998598),Tr=new z(null,"activity","activity",-1179221455),Ur=new z(null,"dec-val","dec-val",-1263870894),Vr=new z(null,"activity-types","activity-types",-397260556),Wr=new z(Qa,"configuration","gateway.state.spec.activity/configuration",1853083827),Xr=new z(null,"arguments_kv",
    "arguments_kv",739148125),Yr=new z(null,"callee","callee",-156445786),Zr=new z(null,"activity_id","activity_id",-240070853),$r=new z(Ya,"activity","gateway.state.spec.pending-requests/activity",1935677687),as=new w(null,"read-string*","read-string*",1046768315,null),bs=new w(null,"unc","unc",-465250751,null),cs=new z($a,"identities","gateway.state.spec.state/identities",-204237049),ds=new z(null,"join","join",-758861890),es=new w(null,"uuid","uuid",-504564192,null),fs=new z(null,"participants","participants",
    673603367),gs=new z(null,"full-results","full-results",-1500225407),hs=new z(null,"own-ident","own-ident",1422237852),is=new z(null,"request_id","request_id",-208950594),js=new w(null,"queue","queue",-1198599890,null),ks=new z(null,"else","else",-1508377146),om=new w(null,"case*","case*",-1938255072,null),ls=new z(null,"hide","hide",-596913169),ms=new w(null,ka,ka,1721169563,null),ns=new z(null,"params","params",710516235),os=new z(null,"restrictions","restrictions",1874752994),LH=new w(null,"p1__13236#",
    "p1__13236#",790017356,null),ps=new z(ra,"join","gateway.common.context.spec.requests/join",94453629),qs=new z(La,"context-destroy","gateway.domains.global.spec.requests/context-destroy",1322892186),rs=new z(ta,"broadcast","gateway.common.spec.messages/broadcast",-1460237246),kI=new w(null,"meta13318","meta13318",1225772791,null),ss=new w(null,"struct-map","struct-map",-1387540878,null),ts=new z(null,"rest","rest",-1241696419),us=new z(null,"commachar","commachar",652859327),vs=new z(null,"activities",
    "activities",1654844313),ws=new z(Ta,"channel","gateway.state.spec.common/channel",426185507),xs=new z(null,"error-level?","error-level?",778415885),ys=new z(La,"reset","gateway.domains.global.spec.requests/reset",-116815601),zs=new z(null,"begin-test-ns","begin-test-ns",-1701237033),As=new z(null,"msg-cache","msg-cache",-733775070),Bs=new z(Da,"post","gateway.domains.agm.spec.requests/post",-1221170496),wl=new z(null,"val","val",128701612),Cs=new w(aa,"zipmap","cljs.core/zipmap",-1902130674,null),
    Ds=new z(null,"buffer-size","buffer-size",1047120420),Es=new z(Ra,"server","gateway.state.spec.agm/server",1918098797),Fs=new z(null,"local","local",-1497766724),Gs=new z(null,"login","login",55217519),Hs=new z(null,"add-peer-factories","add-peer-factories",-1612194889),Is=new z(null,"stream_id","stream_id",-871396659),Im=new w(null,"catch","catch",-1616370245,null),Js=new w(null,"describe-form","describe-form",-1410156588,null),Ks=new z(Ya,"gateway-requests","gateway.state.spec.pending-requests/gateway-requests",
    -1212651271),Ls=new z(da,"kvs-\x3emap","cljs.spec.alpha/kvs-\x3emap",579713455),Ns=new z(Ya,"id","gateway.state.spec.pending-requests/id",-199997554),Os=new z(null,"kind","kind",-717265803),Ps=new z(null,"Epsilon","Epsilon",133418452),Qs=new z(Xa,"methods","gateway.state.spec.mthds/methods",-868139122),Rs=new z(null,"endpoint","endpoint",447890044),Ss=new z(Sa,"subscriptions","gateway.state.spec.bus/subscriptions",359149340),Ts=new z(null,"method","method",55703592),Us=new z(null,"reloading","reloading",
    961158984),Vs=new w(null,"cnt","cnt",1924510325,null),Ws=new w(null,"opt-keys","opt-keys",-1391747508,null),Xs=new z(ka,"user","gateway.auth.spec/user",803364081),Ys=new z(null,"write_permissions","write_permissions",-2075461534),Zs=new z(null,"years","years",-1298579689),MJ=new w(null,"meta12453","meta12453",-1196160356,null),$s=new z(da,"accept","cljs.spec.alpha/accept",370988198),hK=new z(null,"commands","commands",161008658),at=new z(Ca,"methods","gateway.domains.agm.spec.register/methods",-209946928),
    bt=new z(null,"services","services",970478783),ct=new z(null,"context-domain","context-domain",-563887528),dt=new z(null,"user","user",1532431356),et=new z(null,"hostname_","hostname_",-2091647379),ft=new w(aa,"vec","cljs.core/vec",307622519,null),gt=new w(aa,"concat","cljs.core/concat",-1133584918,null),ht=new z(Qa,"context_id","gateway.state.spec.activity/context_id",1100878008),it=new z(null,"features","features",-1146962336),jt=new z(null,"?msg-fmt","?msg-fmt",-852453891),kt=new z(null,"sections",
    "sections",-886710106),lt=new z(null,"lines","lines",-700165781),um=new w(null,"do","do",1686842252,null),mt=new z(null,"colon","colon",-965200945),nt=new z(null,"unregister","unregister",2105339971),ot=new z(null,"keys-pred","keys-pred",858984739),pt=new w(null,"cpred?","cpred?",35589515,null),qt=new z(null,"testing-vars","testing-vars",-2114769150),rt=new z(null,"max-age","max-age",-270129271),tt=new z(null,"minpad","minpad",323570901),ut=new z(null,"remove-interest","remove-interest",-1017752998),
    vt=new w(null,Fa,Fa,-340272132,null),wt=new w(da,"keys","cljs.spec.alpha/keys",1109346032,null),xt=new z(null,"hide-nt","hide-nt",-228813845),yt=new z(qa,"context_id","gateway.common.context.spec.messages/context_id",745790948),zt=new z(null,"formatter","formatter",-483008823),At=new z(null,"skip-validation","skip-validation",-195677600),Bt=new z(null,"measurements","measurements",82224007),Ct=new z(null,"rulename","rulename",948914160),Dt=new z(null,"context_id","context_id",1618636315),Et=new z(null,
    "regexp","regexp",-541372782),Ft=new z(Qa,"helper_types","gateway.state.spec.activity/helper_types",-920321960),Gt=new z(null,"unhide","unhide",-413983695),qm=new w(null,"try","try",-1273693247,null),Ht=new z(null,"location","location",1815599388),It=new w(fa,"read-string*","cljs.tools.reader/read-string*",1492661621,null),Jt=new w(null,"ch","ch",1085813622,null),Kt=new w(null,"cb","cb",-2064487928,null),Lt=new w(null,"specs","specs",-1227865028,null),Mt=new z(null,"composite","composite",-257118970),
    Nt=new z(ta,"peer_id","gateway.common.spec.messages/peer_id",-1253667286),Ot=new z($a,"user-name","gateway.state.spec.state/user-name",-1129365610),Pt=new z(null,"raw","raw",1604651272),Qt=new w(null,"let","let",358118826,null),Kc=new z(null,"flush-on-newline","flush-on-newline",-151457939),Rt=new z($a,"creation-request","gateway.state.spec.state/creation-request",473028997),St=new z(Da,"add-interest","gateway.domains.agm.spec.requests/add-interest",1660124918),Tt=new z(null,"destroy-context","destroy-context",
    -1305625710),Ut=new z(La,"destination","gateway.domains.global.spec.requests/destination",165081940),Wt=new z(null,"pred-exprs","pred-exprs",1792271395),Xt=new w(null,"id","id",252129435,null),wm=new w(null,"if","if",1181717262,null),Yt=new z(null,"concatenation","concatenation",-951369614),Zt=new z(null,"timestamp","timestamp",579478971),$t=new z(Ra,"invocation","gateway.state.spec.agm/invocation",-928333769),au=new z($a,"contexts","gateway.state.spec.state/contexts",-1321025323),bu=new z(null,"leave",
    "leave",1022579443),cu=new z(null,"min-count","min-count",1594709013),du=new z(null,"context-created","context-created",-436520594),eu=new z(null,"messages","messages",345434482),fu=new z(ra,"context-unsubscribe","gateway.common.context.spec.requests/context-unsubscribe",46104946),lK=new w(null,"meta11517","meta11517",-200391237,null),Hm=new w(null,"quote","quote",1377916282,null),gu=new w(null,"gen-into","gen-into",592640985,null),hu=new w(null,"gw","gw",1384842711,null),iu=new z(La,"context-subscribe",
    "gateway.domains.global.spec.requests/context-subscribe",614257563),iK=new z(null,"remove","remove",-131428414),ju=new z(La,"join","gateway.domains.global.spec.requests/join",-837980557),ku=new z(null,"hierarchy","hierarchy",-1053470341),lu=new z(null,"left_id","left_id",730267975),mu=new z(null,"trace","trace",-1082747415),nu=new z("rl","reset","rl/reset",-800926172),ou=new w(null,"fn","fn",465265323,null),pu=new z(null,"context-compatibility-mode?","context-compatibility-mode?",564867301),qu=new z(null,
    "invocation_id","invocation_id",1947784937),ru=new z(null,"strable","strable",1877668047),su=new z(null,"remote_identity","remote_identity",1864550587),tu=new z(Ya,"type","gateway.state.spec.pending-requests/type",-1681171358),uu=new w("s","keys","s/keys",-1586011188,null),vu=new z(null,"identities","identities",-2100677764),wu=new z(Qa,"children","gateway.state.spec.activity/children",651398237),xu=new z(null,"symbol","symbol",-1038572696),yu=new z(null,"iss","iss",1130086696),zu=new w(null,"fields",
    "fields",-291534703,null),Au=new z(null,"char-range","char-range",1443391389),Bu=new z(null,"parsed-restrictions","parsed-restrictions",-1665101931),Cu=new w(null,"lift-ns","lift-ns",602311926,null),Du=new z(null,"leave-activity","leave-activity",-484899731),Eu=new z(null,"middleware","middleware",1462115504),Fu=new z(Ya,"gateway_token","gateway.state.spec.pending-requests/gateway_token",-1747123785),Gu=new z(null,"access_token","access_token",1591156073),Hu=new z(null,"red","red",-969428204),jK=
    new z(null,"value","value",305978217),Iu=new z($a,"no-user","gateway.state.spec.state/no-user",-565346809),Ju=new z(null,"enabled?","enabled?",-1376075057),Ku=new z(null,"rep","rep",-1226820564),ym=new w(null,"ns","ns",2082130287,null),Lu=new z(null,"req","req",-326448303),Mu=new z(null,"ret","ret",-468222814),Nu=new z(null,"subscribe","subscribe",416253756),Ou=new w(null,"partial","partial",1881673272,null),Pu=new z(null,"create-context","create-context",-1362772644),Qu=new z(null,"both","both",
    -393648840),Ru=new z(null,"result","result",1415092211),Su=new w(null,"keys-pred","keys-pred",-1795451030,null),wK=new w(null,"meta11984","meta11984",1741232023,null),Tu=new z(null,"server_id","server_id",-518165566),FO=new z(null,"keep","keep",-2133338530),Uu=new z(null,"vector","vector",1902966158),Vu=new z(null,"peer_name","peer_name",-245526270),Wu=new z(null,"end","end",-268185958),Xu=new z(null,"buffer-blob","buffer-blob",-1830112173),Yu=new z(Da,"accepted","gateway.domains.agm.spec.requests/accepted",
    1383451047),Zu=new w("clojure.core","unquote","clojure.core/unquote",843087510,null),$u=new z(null,"alt-or-ord","alt-or-ord",310249425),av=new z(Ta,"address","gateway.state.spec.common/address",394563279),bv=new w(null,"lb","lb",950310490,null),cv=new z(null,"create","create",-1301499256),dv=new z(Qa,"user","gateway.state.spec.activity/user",-93065379),ev=new z(Da,"result","gateway.domains.agm.spec.requests/result",1027857196),fv=new z(null,"flags","flags",1775418075),gv=new z(null,"eof","eof",-489063237),
    hv=new z(Xa,"description","gateway.state.spec.mthds/description",-129583756),iv=new w(null,"js","js",-886355190,null),jv=new z(null,"relative-to","relative-to",-470100051),kv=new w(null,"doseq","doseq",221164135,null),nv=new z(Ba,"new_peer_id","gateway.domains.agm.spec.messages/new_peer_id",-2026004018),ov=new z(null,"source_type","source_type",-144028049),pv=new z(null,"CHAR","CHAR",-1280338086),qv=new w(aa,"list?","cljs.core/list?",-684796618,null),rv=new z(ta,"outgoing-message","gateway.common.spec.messages/outgoing-message",
    1952031218),sv=new z(null,"joined_id","joined_id",35485948),tv=new z(ta,"response","gateway.common.spec.messages/response",69665082),uv=new z(Ka,"resolved_identity","gateway.domains.global.spec.messages/resolved_identity",-685850501),wv=new z(null,"parser","parser",-1543495310),xv=new w(da,"merge","cljs.spec.alpha/merge",1420080689,null),yv=new z(Qa,"name","gateway.state.spec.activity/name",113237718),zv=new z(Ba,"reason","gateway.domains.agm.spec.messages/reason",-1483891292),Av=new z(null,"users",
    "users",-713552705),Bv=new z(null,"welcome","welcome",-578152123),Cv=new z(null,"char-val","char-val",1408617933),Dv=new z(null,"doc","doc",1913296891),Ev=new z(null,"dump","dump",-356261477),Fv=new z(null,"expr","expr",745722291),Gv=new z(Qa,"activity-peer","gateway.state.spec.activity/activity-peer",-1499406427),Hv=new z(null,"origin","origin",1037372088),Iv=new z(null,"remove-peer-factories","remove-peer-factories",-316522514),Jv=new z(null,"lookahead","lookahead",-400102393),Kv=new z(ab,"token-data",
    "gateway.state.spec.tokens/token-data",-481150767),Lv=new z(null,"hash_","hash_",-827203612),Mv=new z(va,"restrictions","gateway.common.spec.requests/restrictions",-1264539352),Nv=new z(null,"comment","comment",532206069),Ov=new z(null,"add-types","add-types",-711550002),Pv=new z(null,"?file","?file",1533429675),Qv=new z(null,"added","added",2057651688),Rv=new z(null,"segment","segment",-964921196),Sv=new w(null,"gfn","gfn",-1862918295,null),Tv=new z(null,"map","map",1371690461),Uv=new z(null,"display_name",
    "display_name",-1494335013),Vv=new z(null,"rulename-left","rulename-left",-1824251564),Wv=new z(null,"remote-identity","remote-identity",1289489893),Xv=new z(null,"body","body",-2049205669),Yv=new z(bb,"start-index","instaparse.gll/start-index",404653620),Zv=new z(null,"cluster","cluster",535175621),$v=new z(null,"uri","uri",-774711847),aw=new z(null,"mode","mode",654403691),bw=new z(null,"max","max",61366548),cw=new z(Wa,"configuration","gateway.state.spec.factory/configuration",154272470),dw=new z($a,
    "peers","gateway.state.spec.state/peers",75810773),ew=new z(null,"token-ttl","token-ttl",-103977687),fw=new z(null,"register","register",1968522516),gw=new z(null,"count","count",2139924085),hw=new z(null,"clauses","clauses",1454841241),iw=new z(null,"miser-width","miser-width",-1310049437),jw=new w(null,"binding","binding",-2114503176,null),kw=new z(null,"hide-tag-rule","hide-tag-rule",150267589),lw=new w(null,"kps","kps",-1157342767,null),mw=new z(null,"call","call",-519999866),nw=new z($a,"ids",
    "gateway.state.spec.state/ids",259664151),ow=new z(null,"peer_id","peer_id",1920005364),pw=new z(null,"next-stack","next-stack",-481930728),qw=new w(null,"tag","tag",350170304,null),rw=new z(null,"available","available",-1470697127),sw=new z(null,"splice","splice",449588165),tw=new z(null,"dispatch","dispatch",1319337009),uw=new w(null,"inst","inst",-2008473268,null),vw=new z(Da,"invoke","gateway.domains.agm.spec.requests/invoke",1837084336),ww=new z(qa,"reason","gateway.common.context.spec.messages/reason",
    -795974116),xw=new z(null,"?meta","?meta",-793560773),yw=new z(null,"name","name",1843675177),zw=new z(null,"VCHAR","VCHAR",1962437706),Aw=new z(null,"peer-created","peer-created",-1509421151),Bw=new w(null,"loop","loop",1244978678,null),Cw=new z(null,"appender","appender",1267426510),Dw=new z(Ya,"gateway-request","gateway.state.spec.pending-requests/gateway-request",796467142),Ew=new z(null,"parameter-from-args","parameter-from-args",-758446196),Fw=new z(null,"end-test-ns","end-test-ns",1620675645),
    Gw=new w(aa,"pos?","cljs.core/pos?",-652182749,null),Hw=new z(null,"destroyed","destroyed",-427566535),Iw=new z(null,"properties","properties",685819552),Jw=new z(null,"hide-tag","hide-tag",1347642501),Kw=new z(null,"whitelist-ns","whitelist-ns",868974100),Lw=new z($a,"node-id","gateway.state.spec.state/node-id",-982277841),Mw=new z(null,"ownership","ownership",892314581),Nw=new z(null,"CTL","CTL",-9995632),Ow=new z(null,"section","section",-300141526),Pw=new z(null,"bracket-info","bracket-info",
    -1600092774),Qw=new z(null,"subscribe-context","subscribe-context",1009129400),Rw=new w(null,"Inf","Inf",647172781,null),Sw=new z(null,"validation","validation",-2141396518),Tw=new w(aa,"map","cljs.core/map",-338988913,null),Nc=new z(null,"dup","dup",556298533),Uw=new z(null,"subscription-cancelled","subscription-cancelled",1868207049),Vw=new z(Ka,"available_domains","gateway.domains.global.spec.messages/available_domains",-1472037229),Ww=new z(da,"rep","cljs.spec.alpha/rep",1483217317),Xw=new z(null,
    "invocations","invocations",-1981777494),Yw=new z(null,"suffix","suffix",367373057),Zw=new z(null,"methods","methods",453930866),$w=new w(null,"defn-","defn-",1097765044,null),ax=new z(null,"required","required",1807647006),bx=new z(null,"unsubscribe-context","unsubscribe-context",-1695207834),cx=new z(null,"buffer","buffer",617295198),dx=new z(null,"inherit","inherit",-1840815422),ex=new z(null,"factory_ids","factory_ids",1173653523),fx=new z(null,"msg_","msg_",-1925147E3),gx=new z(null,"peer_factory",
    "peer_factory",1685625260),hx=new z(null,"opt-keys","opt-keys",1262688261),ix=new w(null,"when-not","when-not",-1223136340,null),jx=new w(null,Ta,Ta,27478502,null),kx=new w(null,"reader","reader",1810192380,null),lx=new z(null,"end-test-all-vars","end-test-all-vars",548827253),mx=new z(xa,"operation-result","gateway.domain/operation-result",-1509018323),nx=new w(null,"opts","opts",1795607228,null),ox=new z(null,"post","post",269697687),px=new z(null,"iat","iat",-353315170),qx=new z(null,"min","min",
    444991522),rx=new z(null,"types_override","types_override",391099757),sx=new w(aa,"sequence","cljs.core/sequence",1908459032,null),tx=new z(La,"added","gateway.domains.global.spec.requests/added",-1820753011),ux=new z(null,"column","column",2078222095),vx=new z(va,"join","gateway.common.spec.requests/join",-1713603460),wx=new z(ra,"delta","gateway.common.context.spec.requests/delta",-694068490),xx=new w(null,"drop-interest-rq","drop-interest-rq",-842860790,null),yx=new z(null,"up-arrow","up-arrow",
    1705310333),zx=new w(aa,"with-meta","cljs.core/with-meta",749126446,null),Ax=new z(null,"logical-block-callback","logical-block-callback",1612691194),Bx=new w(aa,"nil?","cljs.core/nil?",945071861,null),Cx=new z(Fa,"drop-interest","gateway.domains.agm.subscriptions/drop-interest",-1584375112),Dx=new z(null,"weeks","weeks",1844596125),Ex=new z(Ua,"owner","gateway.state.spec.context/owner",-1445790718),Fx=new z(null,"regex","regex",939488856),Gx=new z(null,"read-cond","read-cond",1056899244),Hx=new z(null,
    "mincol","mincol",1230695445),Ix=new z("promesa.core","default","promesa.core/default",1773193826),Jx=new z(null,"end-run-tests","end-run-tests",267300563),Kx=new z(null,"visibility","visibility",1338380893),Lx=new z(null,"deref","deref",-145586795),Mx=new z(null,"ids","ids",-998535796),Nx=new z(da,"unknown","cljs.spec.alpha/unknown",651034818),Ox=new z(null,"yield","yield",177875009),Px=new z(null,"max-iterations","max-iterations",2021275563),Qx=new z(null,"output_","output_",-36797880),Rx=new z(null,
    "hex-char","hex-char",764443568),Sx=new z(null,"report-counters","report-counters",-1702609242),Tx=new z(null,"joined","joined",-231861661),Ux=new z(null,"inside-comment","inside-comment",1258069708),Vx=new z(null,"runtime-exception","runtime-exception",-1495664514),Wx=new z(Ta,"identity","gateway.state.spec.common/identity",-343306948),Xx=new z(Ba,"oob","gateway.domains.agm.spec.messages/oob",-285361976),Yx=new z(null,"config","config",994861415),Zx=new z(null,"joined_name","joined_name",-1159730335),
    $x=new z(null,"whitespace","whitespace",-1340035483),ay=new z(Va,"info","gateway.state.spec.domain-registry/info",754617108),by=new z(null,"activity-domain","activity-domain",1896268503),cy=new z(null,"machine","machine",-1389886154),zm=new w(null,"deftype*","deftype*",962659890,null),dy=new z(null,"rep+","rep+",-281382396),ey=new z(ka,"message","gateway.auth.spec/message",212934373),fy=new w(null,"pred-exprs","pred-exprs",-862164374,null),gy=new z(Ra,"interests","gateway.state.spec.agm/interests",
    1622331889),hy=new w(null,"spec","spec",1988051928,null),iy=new w(null,"NaN","NaN",666918153,null),jy=new z(null,"unsupported-operation","unsupported-operation",1890540953),ky=new z(null,"msecs","msecs",1711980553),ly=new z(null,"subscribed-context","subscribed-context",-451582146),my=new z(null,"authenticator","authenticator",728866366),ny=new z(null,"reduction-type","reduction-type",-488293450),oy=new w(null,"defmacro","defmacro",2054157304,null),py=new z(Ra,"callee","gateway.state.spec.agm/callee",
    1100257697),qy=new z(null,"subscriptions","subscriptions",1250949776),ry=new z(Ra,"caller","gateway.state.spec.agm/caller",-1898628116),sy=new z(da,"conform-all","cljs.spec.alpha/conform-all",45201917),ty=new z(null,"whitelist","whitelist",-979294437),uy=new w(aa,"hash-map","cljs.core/hash-map",303385767,null),vy=new z(Ra,"invocation_id","gateway.state.spec.agm/invocation_id",-822050570),wy=new z(ta,"outgoing-messages","gateway.common.spec.messages/outgoing-messages",-924999491),xy=new z(null,"full-listeners",
    "full-listeners",50621827),yy=new z(null,"owner?","owner?",-839891990),zy=new z($a,"peer","gateway.state.spec.state/peer",-2119577277),Ay=new z(null,"nt","nt",-835425781),By=new z(null,"ns","ns",441598760),Cy=new z(null,"expected","expected",1583670997),Dy=new z(Da,"invocation_id","gateway.domains.agm.spec.requests/invocation_id",-621605438),Ey=new z(Sa,"routing-key","gateway.state.spec.bus/routing-key",554216520),sS=new w(null,"meta11255","meta11255",-111844645,null),Fy=new z(null,"receiver","receiver",
    1768630781),Gy=new z(Ua,"contexts","gateway.state.spec.context/contexts",-1052863269),Hy=new w(null,aa,aa,770546058,null),Iy=new z(La,"read_permissions","gateway.domains.global.spec.requests/read_permissions",75711320),Jy=new z(Qa,"parent","gateway.state.spec.activity/parent",-359694046),Ky=new z(null,"joined_type","joined_type",973647374),Ly=new z(null,"p2","p2",905500641),pm=new w(null,"defrecord*","defrecord*",-1936366207,null),My=new z(null,"p1","p1",-936759954),Ny=new z(null,"type-tag","type-tag",
    -1873863267),Oy=new z(null,"ms","ms",-1152709733),Py=new z(null,"middleware-fn","middleware-fn",-61585752),tS=new w(null,"meta12119","meta12119",1659150026,null),Qy=new z(null,"no-user","no-user",793713538),Ry=new z(null,"readers","readers",-2118263030),Sy=new z(Qa,"owner","gateway.state.spec.activity/owner",-1983556102),Ty=new z(null,"DIGIT","DIGIT",341251338),Uy=new w(null,"string?","string?",-1129175764,null),Vy=new z(null,"defined-as","defined-as",-474679152),Wy=new z(null,"comma","comma",1699024745),
    Xy=new z(Ua,"name","gateway.state.spec.context/name",-1494107954),Yy=new z(Ya,"client-request","gateway.state.spec.pending-requests/client-request",1663875818),Zy=new z(null,"lo","lo",-931799889),$y=new z(null,"node-id","node-id",779482292),vT=new w(null,"meta13894","meta13894",-1452766245,null),az=new z(ea,"pprint","cljs.test/pprint",1627393641),bz=new z(null,"requestor_id","requestor_id",-1253857801),cz=new w(null,"keys-\x3especnames","keys-\x3especnames",1791294693,null),dz=new w(null,"conform-keys",
    "conform-keys",-159510287,null),ez=new z(La,"hello","gateway.domains.global.spec.requests/hello",-398737422),fz=new z(null,"end-line","end-line",1837326455),gz=new z(null,"read_permissions","read_permissions",766082539),Cm=new w(null,"fn*","fn*",-752876845,null),hz=new z(null,"ks","ks",1900203942),iz=new z(null,"start-production","start-production",687546537),jz=new z(null,"allow","allow",-1857325745),kz=new z(Ka,"remote-identity","gateway.domains.global.spec.messages/remote-identity",1498525882),
    lz=new z(null,"source","source",-433931539),mz=new w("s","coll-of","s/coll-of",-1705285349,null),nz=new z(null,"memory","memory",-1449401430),W=new w(aa,"fn","cljs.core/fn",-1065745098,null),oz=new z(null,"circle","circle",1903212362),pz=new z(null,"registered-domains","registered-domains",-559729182),qz=new z(null,"success","success",1890645906),Sl=new z(null,"descendants","descendants",1824886031),rz=new z(null,"report","report",1394055010),sz=new z(null,"start","start",-355208981),tz=new z(null,
    "ns-whitelist","ns-whitelist",-1717299774),uz=new z(Da,"yield","gateway.domains.agm.spec.requests/yield",1398099968),vz=new z(null,"repos","repos",647483789),wz=new z(null,"num-val","num-val",1497434478),xz=new z(Da,"flags","gateway.domains.agm.spec.requests/flags",989202486),yz=new z(null,"recur","recur",-437573268),zz=new z(null,"caller_id","caller_id",5404558),Az=new z(Sa,"topic","gateway.state.spec.bus/topic",-1241703207),Bz=new z(null,"alternation","alternation",-1162147630),Cz=new z(ra,"lifetime",
    "gateway.common.context.spec.requests/lifetime",-228133926),Dz=new z(null,"subscriber","subscriber",-2064338413),Ez=new z(null,"length","length",588987862),Fz=new z(null,"appender-id","appender-id",-1917983538),Gz=new z(null,"subscribed","subscribed",1012088257),Hz=new w(null,"with-open","with-open",172119667,null),Iz=new z(null,"ps","ps",292358046),Jz=new z(null,"not-delivered","not-delivered",1599158697),Kz=new w(null,"if-not","if-not",-265415609,null),Lz=new z(null,"blacklist","blacklist",1248093170),
    Nz=new z("gateway.common.commands","source-removed","gateway.common.commands/source-removed",701959101),Oz=new z(Da,"method_id","gateway.domains.agm.spec.requests/method_id",926663112),Pz=new z(Ba,"reason_uri","gateway.domains.agm.spec.messages/reason_uri",577151711),Qz=new z(ab,"impersonate-peer","gateway.state.spec.tokens/impersonate-peer",1018065912),Rz=new z(null,"default_context","default_context",-1148569539),Sz=new z(null,"state","state",-1988618099),Tz=new w(aa,"unquote","cljs.core/unquote",
    1013085760,null),Uz=new z(Va,"uri","gateway.state.spec.domain-registry/uri",301088755),Vz=new z(null,"os","os",795021913),Wz=new z(null,"or","or",235744169),Xz=new z(null,"end-test-vars","end-test-vars",-1394419713),Yz=new z(null,"join-activity","join-activity",1683531460),Zz=new z(null,"lifetime","lifetime",-1568939561),$z=new z(Aa,"peer-methods","gateway.domains.agm.core/peer-methods",639951360),aA=new w(null,"dotimes","dotimes",-818708397,null),bA=new z(null,"raw-console?","raw-console?",-2061489061),
    cA=new z(null,"conform-keys","conform-keys",-1800041814),sm=new w(null,"finally","finally",-1065347064,null),dA=new w(null,"/","/",-1371932971,null),eA=new z(null,"buffering","buffering",-876713613),fA=new z(null,"subscription_id","subscription_id",1241304848),gA=new z(null,"illegal-argument","illegal-argument",-1845493170),hA=new z("mem","all","mem/all",892075139),iA=new z(null,"opt-un","opt-un",883442496),jA=new z(null,"calls","calls",-433802344),kA=new z(null,"rule","rule",729973257),wT=new w(null,
    "meta13849","meta13849",-270052681,null),lA=new z(null,"nodes","nodes",-2099585805),mA=new z(null,"owner_id","owner_id",1001956033),nA=new z(null,"values","values",372645556),oA=new z(null,"owner","owner",-392611939),pA=new w(null,"locking","locking",1542862874,null),qA=new z(null,"look","look",-539441433),rA=new w(null,"kfn","kfn",729311001,null),sA=new z(null,"opt-whitespace","opt-whitespace",1115207927),tA=new w(null,"cform","cform",1319506748,null),uA=new z(null,"negative-lookahead","negative-lookahead",
    874382387),vA=new w(null,"kind-form","kind-form",1155997457,null),wA=new z(null,"seq","seq",-1817803783),xA=new z(null,"ident","ident",-742346),yA=new z(null,"set","set",304602554),xT=new w(null,"meta13824","meta13824",34801754,null),zA=new z(null,"epsilon","epsilon",-730158570),AA=new z(Qa,"type","gateway.state.spec.activity/type",-462200009),BA=new z(null,"updated","updated",-1627192056),CA=new w(null,"some?","some?",234752293,null),DA=new z(null,"expecting","expecting",-57706705),EA=new z(null,
    "rule-separator","rule-separator",1539322213),FA=new z(null,"enlive","enlive",1679023921),GA=new z(Va,"domain-uri","gateway.state.spec.domain-registry/domain-uri",636341057),HA=new z(null,"updates","updates",2013983452),IA=new z(null,"error","error",-978969032),JA=new z(Ta,"peer_id","gateway.state.spec.common/peer_id",1217199451),KA=new w(null,"set?","set?",1636014792,null),LA=new z(null,"base","base",185279322),MA=new z(null,"actual","actual",107306363),NA=new z(Qa,"participants","gateway.state.spec.activity/participants",
    -1995832242),OA=new z(null,"event","event",301435442),vm=new w(null,"letfn*","letfn*",-110097810,null),PA=new w(null,"opt","opt",845825158,null),QA=new z(null,"scavenger","scavenger",107984617),RA=new z(Ra,"subscriptions","gateway.state.spec.agm/subscriptions",359122069),SA=new z(null,"prefix","prefix",-265908465),TA=new z(null,"methods-removed","methods-removed",-724408194),VA=new z(null,"start-pos","start-pos",668789086),WA=new z(null,"method-filter-fn","method-filter-fn",-283131748),XA=new w(Ta,
    "address-type","gateway.state.spec.common/address-type",-283204142,null),Il=new z(null,"keyword-fn","keyword-fn",-64566675),YA=new z(null,"first","first",-644103046),ZA=new w(null,"last-was-whitespace?","last-was-whitespace?",-1073928093,null),$A=new w(aa,"partial","cljs.core/partial",1483172485,null),aB=new z(null,"bin-char","bin-char",-1662780697),bB=new z(ta,"local","gateway.common.spec.messages/local",1736687122),cB=new z(null,"ebnf","ebnf",31967825),dB=new z(null,"new_peer_id","new_peer_id",
    1380469887),eB=new z(null,"?err","?err",549653299),fB=new z(null,"fail","fail",1706214930),gB=new z(ka,"access_token","gateway.auth.spec/access_token",-1170576318),hB=new z(null,"preserve","preserve",1276846509),iB=new z(La,"authentication","gateway.domains.global.spec.requests/authentication",2133771245),jB=new z(null,"repo-id","repo-id",-402847325),kB=new z(Xa,"no-methods","gateway.state.spec.mthds/no-methods",658181793),Dm=new w(null,"recur","recur",1202958259,null),lB=new z(Qa,"activity","gateway.state.spec.activity/activity",
    449324238),GO=new z(ra,"command","gateway.common.context.spec.requests/command",-1702281587),mB=new z(ab,"lifetime","gateway.state.spec.tokens/lifetime",887565809),nB=new z(Ua,"read_permissions","gateway.state.spec.context/read_permissions",-559958390),oB=new z(null,"illegal-state","illegal-state",-1519851182),pB=new z(da,"op","cljs.spec.alpha/op",-1269055252),qB=new z(Da,"methods","gateway.domains.agm.spec.requests/methods",-366393681),rB=new z($a,"services","gateway.state.spec.state/services",-925305284),
    sB=new z(Ka,"reason_uri","gateway.domains.global.spec.messages/reason_uri",1393708653),tB=new z(null,"async?","async?",1523057758),uB=new z(Xa,"name","gateway.state.spec.mthds/name",393834509),vB=new z(null,"rulelist","rulelist",-1871218473),wB=new w(null,"count","count",-514511684,null),xB=new z(null,"no-stacktrace?","no-stacktrace?",1701072694),yB=new z(Va,"version","gateway.state.spec.domain-registry/version",-650577592),zB=new z(ra,"restrictions","gateway.common.context.spec.requests/restrictions",
    -1766361),AB=new z(null,"hex-val","hex-val",1267737401),BB=new z(null,"create-peer","create-peer",631977540),CB=new w(null,ta,ta,-1797487288,null),DB=new z(Qa,"activity-subscribers","gateway.state.spec.activity/activity-subscribers",-1579465715),EB=new z(null,"publisher-identity","publisher-identity",1716891391),FB=new w(null,fa,fa,-831293977,null),GB=new z(Qa,"ready?","gateway.state.spec.activity/ready?",-1768127396),HB=new z(null,"fail-index","fail-index",248726923),IB=new z(null,"nbf","nbf",-1785694926),
    JB=new z(ra,"context-create","gateway.common.context.spec.requests/context-create",-947794767),KB=new z(null,"intra-block-nl","intra-block-nl",1808826875),LB=new z(null,"target_id","target_id",-124012080),MB=new z(null,"gen-max","gen-max",-793680445),Mc=new z(null,"meta","meta",1499536964),NB=new w(null,"addcv","addcv",-1552991247,null),OB=new z(null,"drop-subscription","drop-subscription",-1853238873),PB=new z(null,"context-updated","context-updated",744419706),QB=new z(null,"right","right",-452581833),
    RB=new z(Qa,"context","gateway.state.spec.activity/context",798551178),SB=new z(null,"err","err",-2089457205),TB=new w(null,"when","when",1064114221,null),UB=new z(Da,"arguments_kv","gateway.domains.agm.spec.requests/arguments_kv",-220182488),VB=new w(aa,"set?","cljs.core/set?",-1176684971,null),WB=new z(null,"context_snapshot","context_snapshot",-703318056),XB=new z(null,"logical-blocks","logical-blocks",-1466339776),YB=new z(null,"authentication","authentication",1746273042),ZB=new w(da,"or","cljs.spec.alpha/or",
    -831679639,null),$B=new z(null,"fatal","fatal",1874419888),aC=new z(null,"gateway-requests","gateway-requests",2114123587),bC=new w(aa,"list","cljs.core/list",-1331406371,null),cC=new z(ra,"added","gateway.common.context.spec.requests/added",-1410443097),dC=new z(ta,"reason","gateway.common.spec.messages/reason",1129095963),eC=new z(null,"rate-limit","rate-limit",1748082022),fC=new w("clojure.walk","keywordize-keys","clojure.walk/keywordize-keys",-1055520580,null),gC=new z(null,"created_id","created_id",
    -1653142250),hC=new z(null,"repetition","repetition",1938392115),jC=new w(null,"min-count","min-count",-1059726756,null),kC=new z(Ka,"context_id","gateway.domains.global.spec.messages/context_id",-1799893258),lC=new z(null,"failure","failure",720415879),mC=new z(ra,"reset","gateway.common.context.spec.requests/reset",6157861),nC=new z(null,"alg","alg",-830920638),oC=new z(Qa,"properties","gateway.state.spec.activity/properties",-914053381),pC=new z(null,"neq","neq",1883246164),qC=new w(null,"any?",
    "any?",-318999933,null),rC=new z(null,"start-col","start-col",668080143),sC=new z(Ba,"local","gateway.domains.agm.spec.messages/local",63355787),tC=new z(null,"neg","neg",1800032960),uC=new z(null,"into","into",-150836029),Em=new w(null,"set!","set!",250714521,null),vC=new w(null,"response-type","response-type",146761069,null),wC=new z(null,"target_identity","target_identity",-786887198),xC=new z(null,"alt","alt",-3214426),yC=new z(null,"all","all",892129742),zC=new z(null,"string-ci","string-ci",
    374631805),AC=new z(Ja,"authenticated","gateway.domains.global.internal/authenticated",-1621463770),BC=new z(null,"instant","instant",655498374),CC=new z(null,"stack","stack",-793405930),DC=new z(null,"hiccup","hiccup",1218876238),EC=new z(ea,"default","cljs.test/default",-1581405322),FC=new z(null,"ex-kind","ex-kind",1581199296),GC=new w(aa,"int?","cljs.core/int?",50730120,null),HC=new z(null,"histo","histo",-821552278),IC=new z(ra,"context-subscribe","gateway.common.context.spec.requests/context-subscribe",
    -318176635),JC=new z(null,"amp","amp",271690571),KC=new z(Da,"subscribe","gateway.domains.agm.spec.requests/subscribe",1050374291),LC=new z(null,"and","and",-971899817),MC=new w(null,"preds","preds",150921777,null),NC=new z(da,"cpred","cljs.spec.alpha/cpred",-693471218),OC=new w(null,"predx","predx",2063470948,null),PC=new z(null,"authentication-request","authentication-request",-2091151542),QC=new w(null,"-Inf","-Inf",-2123243689,null),RC=new z(ka,"request","gateway.auth.spec/request",-1915554438),
    SC=new z(null,"max-connections-per-user","max-connections-per-user",-1995174555),TC=new z(ta,"incoming-message","gateway.common.spec.messages/incoming-message",-528171747),UC=new z(null,"padchar","padchar",2018584530),VC=new z(ab,"gw-request-id","gateway.state.spec.tokens/gw-request-id",146927020),XC=new z(null,"star","star",279424429),YC=new z(null,"children","children",-940561982),ZC=new z(Ua,"version","gateway.state.spec.context/version",-664315203),Oc=new z(null,"print-length","print-length",
    1931866356),$C=new z(null,"nil","nil",99600501),aD=new z(null,"activity-joined","activity-joined",-1584889318),bD=new z(null,"exp","exp",-261706262),cD=new z($a,"options","gateway.state.spec.state/options",-722288524),dD=new w(aa,"empty?","cljs.core/empty?",1866613644,null),eD=new z(null,"buffer-block","buffer-block",-10937307),fD=new z(null,"remaining","remaining",-138926777),gD=new z(null,"remaining-arg-count","remaining-arg-count",-1216589335),hD=new z(null,"impersonate-peer","impersonate-peer",
    -1409232482),iD=new z(ta,"new_peer_id","gateway.common.spec.messages/new_peer_id",326805829),jD=new z(null,"methods-added","methods-added",2044022595),kD=new w(da,"and","cljs.spec.alpha/and",-2060279705,null),lD=new z(null,"channel","channel",734187692),mD=new z(Ra,"stream-id","gateway.state.spec.agm/stream-id",-1404324586),nD=new z(null,"bin-val","bin-val",1705209105),oD=new z(Ra,"stream","gateway.state.spec.agm/stream",1961075649),pD=new z(null,"identity","identity",1647396035),HO=new z(ra,"commands",
    "gateway.common.context.spec.requests/commands",1656863185),qD=new z(null,"remove-types","remove-types",-1777229898),rD=new w(null,"retag","retag",528972725,null),sD=new z(null,"info","info",-317069002),tD=new z(null,"members","members",159001018),uD=new z(null,"testing-contexts","testing-contexts",-1485646523),vD=new z(null,"commainterval","commainterval",-1980061083),wD=new z(null,"generation","generation",-2132542044),xD=new z(null,"separator","separator",-1628749125),yD=new w(null,"dval","dval",
    835211877,null),zD=new z($a,"users","gateway.state.spec.state/users",-2072351172),AD=new z(null,"streams","streams",1465783789),BD=new w(null,"defonce","defonce",-1681484013,null),DD=new z(Qa,"activity-domain","gateway.state.spec.activity/activity-domain",292185460),ED=new z(null,"basic","basic",1043717368),FD=new z(null,"inactive_seconds","inactive_seconds",-1714688448),GD=new z(null,"buffer-level","buffer-level",928864731),HD=new z(Da,"data-message","gateway.domains.agm.spec.requests/data-message",
    -153411654),ID=new z(null,"dec-char","dec-char",-646625154),JD=new z("rl","all","rl/all",892118056),Al=new z(null,"pending","pending",-220036727),KD=new z(Xa,"input_signature","gateway.state.spec.mthds/input_signature",2082802494),LD=new z(Xa,"method-def","gateway.state.spec.mthds/method-def",858475302),Lc=new z(null,"readably","readably",1129599760),MD=new z(null,"aud","aud",357659490),ND=new z(null,"invoke","invoke",1145927159),OD=new z(null,"file","file",-1269645878),PD=new z(Qa,"default_context",
    "gateway.state.spec.activity/default_context",1517722536),QD=new z(ta,"reason_uri","gateway.common.spec.messages/reason_uri",-14574488),RD=new w("clojure.core","unquote-splicing","clojure.core/unquote-splicing",-552003150,null),SD=new z(null,"fill","fill",883462889),TD=new z(null,"cause","cause",231901252),UD=new z(Ta,"string","gateway.state.spec.common/string",885967163),VD=new z(Qa,"activity-type","gateway.state.spec.activity/activity-type",1221900323),WD=new z(null,"now","now",-1650525531),XD=
    new z(null,"months","months",-45571637),YD=new z(null,"radix","radix",857016463),ZD=new z(null,"text","text",-1790561697),$D=new w(null,"kind","kind",923265724,null),aE=new z(null,"distinct","distinct",-1788879121),bE=new z(qa,"updater_id","gateway.common.context.spec.messages/updater_id",-850230629),cE=new z(null,"sequence","sequence",926807414),dE=new z(ab,"gateway-token","gateway.state.spec.tokens/gateway-token",1169641187),eE=new z(null,"block","block",664686210),fE=new z(ka,"type","gateway.auth.spec/type",
    552402611),gE=new z(ra,"write_permissions","gateway.common.context.spec.requests/write_permissions",-194247007),hE=new z(ta,"meta","gateway.common.spec.messages/meta",-2108831238),iE=new z(Ea,"methods","gateway.domains.agm.spec.unregister/methods",1593198071),Tl=new z(null,"ancestors","ancestors",-776045424),jE=new z(null,"listeners","listeners",394544445),kE=new z(null,"clients","clients",1436018090),lE=new w(aa,"array-map","cljs.core/array-map",-1519210683,null),mE=new z(null,"peer-removed","peer-removed",
    1752359546),nE=new z(null,"metrics-domain","metrics-domain",-1136423917),oE=new z(Ka,"type","gateway.domains.global.spec.messages/type",708595817),pE=new z(null,"min-remaining","min-remaining",962687677),qE=new z(null,"offset","offset",296498311),rE=new z(null,"define","define",-2006590705),sE=new z(null,"content","content",15833224),tE=new z(null,"activity_type","activity_type",-194821832),uE=new z(null,"reason_uri","reason_uri",1062203786),vE=new z(Qa,"activities","gateway.state.spec.activity/activities",
    1132481734),wE=new w(null,"-\x3e","-\x3e",-2139605430,null),xE=new z(Xa,"display_name","gateway.state.spec.mthds/display_name",1469788607),yE=new z(null,"timeout","timeout",-318625318),zE=new z(null,"reload","reload",863702807),AE=new z(null,"arglists","arglists",1661989754),BE=new z(Ra,"invocations","gateway.state.spec.agm/invocations",-1391969355),CE=new z(null,"updater_id","updater_id",-2125909548),DE=new z(Ja,"authentication-request","gateway.domains.global.internal/authentication-request",502904463),
    Bm=new w(null,"js*","js*",-1134233646,null),EE=new z(null,"end-pos","end-pos",-1643883926),FE=new z(null,"min-version","min-version",-1697197126),GE=new z(null,"pred-forms","pred-forms",172611832),HE=new z(null,"hours","hours",58380855),IE=new z(null,"pass","pass",1574159993),JE=new z(La,"updated","gateway.domains.global.spec.requests/updated",-1219870803),KE=new z(null,"context-destroyed","context-destroyed",-1281742589),LE=new z(null,"NUM","NUM",-218662260),ME=new z(null,"LF","LF",1177033158),NE=
    new z(ta,"domain","gateway.common.spec.messages/domain",755510455),OE=new w(null,"defn","defn",-126010802,null),PE=new w(null,"struct","struct",325972931,null),QE=new z(Ja,"authentication-failed","gateway.domains.global.internal/authentication-failed",1518002013),RE=new z(null,"reporter","reporter",-805360621),SE=new z(null,"peer-added","peer-added",322139575),TE=new z(null,"gfn","gfn",791517474),UE=new w(null,"check?","check?",409539557,null),zT=new w(null,"meta12211","meta12211",-2002153449,null),
    VE=new z(null,"namespaced-map","namespaced-map",1235665380),WE=new z(Ua,"context","gateway.state.spec.context/context",-1884667246),YE=new z(null,"rulename-right","rulename-right",1125609193),ZE=new z(null,"mins","mins",467369676),X=new z(null,"tag","tag",-1290361223),$E=new z(null,"types","types",590030639),bF=new z(null,"linear","linear",872268697),xm=new w(null,"new","new",-444906321,null),cF=new z(ta,"removed_id","gateway.common.spec.messages/removed_id",-1304577413),dF=new z(null,"number","number",
    1570378438),eF=new z(Ya,"owner?","gateway.state.spec.pending-requests/owner?",346289860),fF=new z(null,"continue","continue",-207346553),gF=new z(Ra,"stream-peer-info","gateway.state.spec.agm/stream-peer-info",1892226854),hF=new z(Wa,"factories","gateway.state.spec.factory/factories",-1725265010),iF=new z(null,"?line","?line",-631853385),jF=new z(null,"test","test",577538877),kF=new z(null,"owner-changed","owner-changed",-1569176886),lF=new w(null,"\x3d","\x3d",-1501502141,null),mF=new z(null,"topic-repattern",
    "topic-repattern",1187945138),AT=new w(null,"meta11315","meta11315",-2065702453,null),oF=new z(null,"cat","cat",-1457810207),jl=new z(null,"alt-impl","alt-impl",670969595),pF=new z(null,"types-removed","types-removed",-1458332519),qF=new w(null,"pending-forms","pending-forms",-1225172071,null),rF=new z(qa,"reason_uri","gateway.common.context.spec.messages/reason_uri",-1687789209),sF=new z(Ra,"agm-domain","gateway.state.spec.agm/agm-domain",686860067),tF=new z(null,"tags","tags",1771418977),uF=new z(null,
    "given","given",716253602),JO=new z(null,"path","path",-188191168),vF=new w(null,"with-local-vars","with-local-vars",837642072,null),CD=new w(null,"meta7593","meta7593",1831708302,null),wF=new w(null,"form","form",16469056,null),xF=new w(null,"req-un","req-un",-1579864761,null),zF=new z(Va,"description","gateway.state.spec.domain-registry/description",-350920838),AF=new z(Da,"caller_id","gateway.domains.agm.spec.requests/caller_id",-211861801),BF=new w(null,"req-specs","req-specs",-2100473456,null),
    CF=new z(La,"context-create","gateway.domains.global.spec.requests/context-create",-1370416261),tT=new z(ra,"path","gateway.common.context.spec.requests/path",614939647),DF=new z(La,"removed","gateway.domains.global.spec.requests/removed",-1641157465),EF=new z(null,"activity-subscribers","activity-subscribers",12051372),FF=new w(null,"req-keys","req-keys",-2140116548,null),Jm=new w(null,"throw","throw",595905694,null),GF=new z(Ta,"request_id","gateway.state.spec.common/request_id",2099278405),HF=
    new w("s","map-of","s/map-of",-1464752791,null),IF=new z(Da,"data","gateway.domains.agm.spec.requests/data",688691322),JF=new z(null,"opt-specs","opt-specs",-384905450),KF=new w("s","or","s/or",1876282981,null),LF=new z(xa,"leave","gateway.domain/leave",-1366936831),MF=new z(null,"rules","rules",1198912366),eK=new w(null,"meta14812","meta14812",-855915521,null),OF=new w(null,"keys","keys",-1586012071,null),PF=new z(null,"character","character",380652989),QF=new z(da,"kfn","cljs.spec.alpha/kfn",672643897),
    RF=new z(Ba,"removed_id","gateway.domains.agm.spec.messages/removed_id",-1904544764),tm=new w(null,"loop*","loop*",615029416,null),SF=new w(null,"conform-all","conform-all",-980179459,null),TF=new z(null,"publisher","publisher",-153364540),UF=new z(La,"delta","gateway.domains.global.spec.requests/delta",299143136),VF=new z(null,"last","last",1105735132),WF=new z(null,"initial-context","initial-context",-32910095),XF=new w(aa,"vector?","cljs.core/vector?",-1550392028,null),YF=new w(aa,"lift-ns","cljs.core/lift-ns",
    463499081,null),ZF=new z(null,"factories","factories",1443149712),$F=new z(null,"k","k",-2146297393),aG=new z(null,"helper_types","helper_types",1747427755),bG=new z(null,"e","e",1381269198),cG=new z(null,"f","f",-1597136552),dG=new z(null,"d","d",1972142424),eG=new z(null,"w","w",354169001),BT=new w(null,"meta11761","meta11761",830711190,null),fG=new z(null,"p","p",151049309),gG=new z(Ra,"request_id","gateway.state.spec.agm/request_id",-1401687879),hG=new z(null,"n","n",562130025),iG=new z(null,
    "func","func",-238706040),jG=new w(aa,"contains?","cljs.core/contains?",-976526835,null),kG=new z(ta,"message-type","gateway.common.spec.messages/message-type",929650450),lG=new z(null,"SP","SP",124290284),mG=new z(null,"indent-t","indent-t",528318969),nG=new z(null,"char","char",-641587586),oG=new z(null,"optimize","optimize",-1912349448),pG=new z(Da,"sequence","gateway.domains.agm.spec.requests/sequence",1051925549),rG=new z($a,"activity-types","gateway.state.spec.state/activity-types",1532142687),
    kl=new z(null,"fallback-impl","fallback-impl",-1501286995),CT=new w(null,"meta13926","meta13926",-962679467,null),tG=new w(null,"writer","writer",1362963291,null),uG=new w(aa,"apply","cljs.core/apply",1757277831,null),vG=new z(Ca,"register","gateway.domains.agm.spec.register/register",-572048018),wG=new z(null,"publish","publish",-1178026850),xG=new w(null,"cfns","cfns",1335482066,null),yG=new w(null,"gen-max","gen-max",846851082,null),zG=new z(null,"ready-members","ready-members",757058983),AG=new z(null,
    "debug","debug",-1608172596),BG=new z(null,"dispose-peer","dispose-peer",68303444),CG=new z(null,"req-specs","req-specs",553962313),DG=new w(null,"distinct","distinct",-148347594,null),EG=new w(null,"capped","capped",-1650988402,null),FG=new z(null,"allows-separator","allows-separator",-818967742),GG=new z(Ba,"source_type","gateway.domains.agm.spec.messages/source_type",276727970),HG=new z(null,"appenders","appenders",1245583998),IG=new w("clojure.core","list","clojure.core/list",-1119203325,null),
    JG=new z(Da,"subscription_id","gateway.domains.agm.spec.requests/subscription_id",1666574151),KG=new z(null,"group","group",582596132),LG=new z(null,"colon-up-arrow","colon-up-arrow",244853007),MG=new z("rl","peek","rl/peek",-291391771),NG=new z(null,"negative-listeners","negative-listeners",55241092),PG=new z(null,"gateway_token","gateway_token",1638490713),QG=new z(null,"enabled","enabled",1195909756),RG=new z(Xa,"id","gateway.state.spec.mthds/id",2078923376),VG=new z(null,"BIT","BIT",-1854474115),
    WG=new z(null,"request-id","request-id",-985684093),XG=new z(null,"WSP","WSP",-1046948716),YG=new w(da,"conformer","cljs.spec.alpha/conformer",2140085535,null),ZG=new z(Sa,"bus-domain","gateway.state.spec.bus/bus-domain",1755593660),DT=new w(null,"meta16172","meta16172",-171069597,null),$G=new z(Ra,"method_id","gateway.state.spec.agm/method_id",1007252604),al=new z(null,"more-marker","more-marker",-14717935),aH=new w(null,"mmvar","mmvar",-1714325675,null),bH=new z($a,"current-id","gateway.state.spec.state/current-id",
    798109991),cH=new w(null,"val","val",1769233139,null),dH=new z(null,"creation-request","creation-request",1261647120),eH=new z(Ya,"gw-request-id","gateway.state.spec.pending-requests/gw-request-id",-996681140),fH=new z(null,"nl-t","nl-t",-1608382114),Gm=new w(null,"var","var",870848730,null),gH=new z(null,"qualifier","qualifier",125841738),zl=new z(null,"ready","ready",1086465795),hH=new z(null,"unsubscribe","unsubscribe",632650147),iH=new z(null,"leeway","leeway",-355669977),dU=new w(null,"p1__13235#",
    "p1__13235#",-1120814410,null),jH=new w(aa,"boolean?","cljs.core/boolean?",1400713761,null),kH=new z(da,"gfn","cljs.spec.alpha/gfn",-593120375),lH=new z(null,"non-matched","non-matched",-624651186),mH=new z(null,"add-interest","add-interest",-1148631141),nH=new z(Za,"restrictions","gateway.state.spec.restrictions/restrictions",181113171),oH=new w(null,"cond","cond",1606708055,null),pH=new w(aa,"\x3d","cljs.core/\x3d",-1891498332,null),qH=new z(qa,"creator_id","gateway.common.context.spec.messages/creator_id",
    2137586424),rH=new z(null,"element","element",1974019749),sH=new z(null,"char-format","char-format",-1016499218),tH=new z(null,"match","match",1220059550),uH=new z(null,"owner_type","owner_type",846064882),vH=new z(null,"max-columns","max-columns",1742323262),wH=new z(ka,"response","gateway.auth.spec/response",1690727657),xH=new z(xa,"join","gateway.domain/join",1465372684),yH=new w(null,"when-let","when-let",-1383043480,null),zH=new z(null,"routing_key","routing_key",1236069137),AH=new z(null,"gw-request-id",
    "gw-request-id",2114687330),BH=new z(null,"hello","hello",-245025397),CH=new z(null,"publishers","publishers",1474752298),DH=new z(null,"index","index",-1531685915),EH=new z(Wa,"peer_type","gateway.state.spec.factory/peer_type",-885367633),FH=new z(null,"peer-factories-added","peer-factories-added",-2010470480),GH=new z(null,"subscriber_id","subscriber_id",972810975),Fm=new w(null,".",".",1975675962,null),IH=new z(null,"at","at",1476951349),JH=new z(null,"started?","started?",-1301062863),KH=new z(null,
    "peer_type","peer_type",371163309),MH=new z(null,"routing-key","routing-key",238118868),NH=new z(da,"describe","cljs.spec.alpha/describe",1883026911),OH=new z(null,"CRLF","CRLF",11418756),PH=new z(null,"configuration","configuration",1431842520),QH=new z(null,"vargs","vargs",-966597273),RH=new z(null,"full","full",436801220),SH=new z(null,"output-format","output-format",-1826382676),TH=new z(null,"queue","queue",1455835879),UH=new z(null,"stacktrace-fonts","stacktrace-fonts",830799382),VH=new z(null,
    "warn","warn",-436710552),WH=new w(null,"pred-forms","pred-forms",1813143359,null),XH=new z(Xa,"peer-methods","gateway.state.spec.mthds/peer-methods",-639609469),YH=new z(Da,"arguments","gateway.domains.agm.spec.requests/arguments",-1906298417),ZH=new z(null,"selector","selector",762528866),$H=new z(null,"sqn","sqn",2076851999),aI=new z(null,"retained","retained",630238157),bI=new z(null,"created","created",-704993748),cI=new z(null,"miser","miser",-556060186),dI=new z("mem","fresh","mem/fresh",-1179989133),
    eI=new z(null,"options","options",99638489),fI=new z(null,"context","context",-830191113),gI=new z(null,"paren","paren",-294107600),hI=new z(null,"gw-request","gw-request",1009584674),iI=new z(null,"colnum","colnum",2023796854),jI=new z(null,"standard","standard",-1769206695),uT=new z(ra,"value","gateway.common.context.spec.requests/value",1114622378),lI=new w(aa,"some?","cljs.core/some?",-440439360,null),mI=new z(null,"provider","provider",-302056900),nI=new z(null,"DQUOTE","DQUOTE",-571169808),
    oI=new w(aa,"hash-set","cljs.core/hash-set",1130426749,null),pI=new z(null,"timestamp_","timestamp_",-954533417),qI=new z(null,"fn","fn",-1175266204),rI=new z(null,"args","args",1315556576),sI=new z(Qa,"child","gateway.state.spec.activity/child",-942548506),tI=new z(Ua,"write_permissions","gateway.state.spec.context/write_permissions",1195182789),uI=new z(null,"environment","environment",-666037640),HK=new w(null,"meta15331","meta15331",-458586899,null),vI=new w(da,"map-of","cljs.spec.alpha/map-of",
    153715093,null),wI=new z(null,"peer-factories-removed","peer-factories-removed",-1429529592),xI=new z(null,"eq","eq",-618539067),yI=new z(null,"str","str",1089608819),zI=new z(null,"console","console",1228072057),AI=new z(null,"hash","hash",-13781596),BI=new w(aa,"any?","cljs.core/any?",-2068111842,null),CI=new z(null,"rules-or-parser","rules-or-parser",-314380386),DI=new z(ra,"removed","gateway.common.context.spec.requests/removed",-732316803),EI=new z(Ra,"subscription-id","gateway.state.spec.agm/subscription-id",
    -1920105558),FI=new z(null,"arg3","arg3",-1486822496),GI=new z(null,"min-level","min-level",1634684919),HI=new z(null,"arg1","arg1",951899358),II=new z(null,"arg2","arg2",1729550917),JI=new z(null,"list","list",765357683),KI=new z(ka,"authentication","gateway.auth.spec/authentication",-2005184469),LI=new z(Ua,"data","gateway.state.spec.context/data",790358174),MI=new z(null,"method_id","method_id",1349548671),NI=new z(null,"key","key",-1516042587),OI=new z($a,"handler-ch","gateway.state.spec.state/handler-ch",
    -891933338),PI=new z(null,"generator-fn","generator-fn",811851656),QI=new z(null,"req-keys","req-keys",514319221),RI=new z(null,"destroy","destroy",-843660405),SI=new z(null,"overflowchar","overflowchar",-1620088106),TI=new z(null,"splicing?","splicing?",-428596366),UI=new z(null,"oob","oob",707302005),Rl=new z(null,"parents","parents",-2027538891),VI=new z(null,"js","js",1768080579),WI=new z(null,"peer","peer",1319662792),eU=new w(null,"meta12266","meta12266",-345451167,null),XI=new z(Sa,"subscription",
    "gateway.state.spec.bus/subscription",1556343370),YI=new z(ta,"body","gateway.common.spec.messages/body",-1028765771),ZI=new w(null,"if-let","if-let",1803593690,null),$I=new w(null,"req","req",1314083224,null),aJ=new z(Ra,"streams","gateway.state.spec.agm/streams",-460960790),bJ=new w(null,"condp","condp",1054325175,null),cJ=new z(null,"ping","ping",-1670114784),dJ=new z(null,"limits","limits",-2101003399),eJ=new z(null,"member","member",-2012020816),fJ=new z(Wa,"flags","gateway.state.spec.factory/flags",
    -1898127651),gJ=new z(null,"subscription","subscription",1949009182),hJ=new w(null,"blockable","blockable",-28395259,null),iJ=new z(null,"NOT","NOT",-1689245341),jJ=new z(null,"opt","opt",-794706369),kJ=new z(null,"reason","reason",-2070751759),lJ=new z(null,"service","service",-1963054559),mJ=new z(null,"sym","sym",-1444860305),nJ=new w(Fa,"drop-interest-rq","gateway.domains.agm.subscriptions/drop-interest-rq",1736302176,null),oJ=new z(La,"context-unsubscribe","gateway.domains.global.spec.requests/context-unsubscribe",
    -602451908),pJ=new z(null,"update-context","update-context",1410241659),qJ=new z(null,"id","id",-1388402092),rJ=new z(ra,"context_id","gateway.common.context.spec.requests/context_id",1348419676),sJ=new z(null,"stream","stream",1534941648),tJ=new z(null,"end-test-var","end-test-var",984198545),uJ=new z(null,"results","results",-1134170113),vJ=new z(null,"input-format","input-format",-422703481),wJ=new z(Da,"drop-subscription","gateway.domains.agm.spec.requests/drop-subscription",938907886),xJ=new z(null,
    "indent","indent",-148200125),yJ=new z(null,"hi","hi",-1821422114),zJ=new z(null,"HEXDIG","HEXDIG",-200221072),AJ=new z(null,"ord","ord",1142548323),BJ=new z(null,"OCTET","OCTET",-743420682),CJ=new w(da,"nilable","cljs.spec.alpha/nilable",1628308748,null),DJ=new z(ta,"receiver","gateway.common.spec.messages/receiver",679023931),EJ=new z(null,"removed_id","removed_id",1940625745),FJ=new z(null,"keyword","keyword",811389747),GJ=new z(Ta,"keyword","gateway.state.spec.common/keyword",-1409778786),HJ=
    new z(null,"else-params","else-params",-832171646),fU=new w(null,"meta13105","meta13105",1244327015,null),IJ=new z(Za,"parsed-restrictions","gateway.state.spec.restrictions/parsed-restrictions",1374812996),JJ=new z(null,"end-block-t","end-block-t",1544648735),KJ=new z(null,"max-count","max-count",1539185305);var LJ={},gU,NJ={};function OJ(a,b){var c=PK;if(null!=a&&null!=a.Je)a=a.Je(a,b,c);else {var d=OJ[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=OJ._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("WritePort.put!",a);}return a}function PJ(a){if(null!=a&&null!=a.Ed)a=a.Ed(a);else {var b=PJ[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=PJ._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Channel.close!",a);}return a}
    function QJ(a){if(null!=a&&null!=a.sf)a=!0;else {var b=QJ[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=QJ._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Handler.active?",a);}return a}function RJ(a){if(null!=a&&null!=a.tf)a=a.La;else {var b=RJ[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=RJ._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Handler.commit",a);}return a}
    function SJ(a,b){if(null!=a&&null!=a.ae)a=a.ae(a,b);else {var c=SJ[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=SJ._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Buffer.add!*",a);}return a}var TJ=function TJ(a){switch(arguments.length){case 1:return TJ.a(arguments[0]);case 2:return TJ.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};TJ.a=function(a){return a};TJ.b=function(a,b){return SJ(a,b)};TJ.F=2;function UJ(a,b,c,d,e){for(var f=0;;)if(f<e)c[d+f]=a[b+f],f+=1;else break}function VJ(a){this.length=this.ta=this.head=0;this.l=a;}VJ.prototype.pop=function(){if(0===this.length)return null;var a=this.l[this.ta];this.l[this.ta]=null;this.ta=(this.ta+1)%this.l.length;--this.length;return a};VJ.prototype.unshift=function(a){this.l[this.head]=a;this.head=(this.head+1)%this.l.length;this.length+=1;return null};function MK(a,b){a.length+1===a.l.length&&a.resize();a.unshift(b);}
    VJ.prototype.resize=function(){var a=Array(2*this.l.length);return this.ta<this.head?(UJ(this.l,this.ta,a,0,this.length),this.ta=0,this.head=this.length,this.l=a):this.ta>this.head?(UJ(this.l,this.ta,a,0,this.l.length-this.ta),UJ(this.l,0,a,this.l.length-this.ta,this.head),this.ta=0,this.head=this.length,this.l=a):this.ta===this.head?(this.head=this.ta=0,this.l=a):null};function NK(a,b){for(var c=a.length,d=0;;)if(d<c){var e=a.pop();(b.a?b.a(e):b.call(null,e))&&a.unshift(e);d+=1;}else break}
    function WJ(a){return new VJ(Array(a))}function XJ(a,b){this.ca=a;this.n=b;this.h=2;this.I=0;}XJ.prototype.Dd=function(){return this.ca.length>=this.n};XJ.prototype.ae=function(a,b){MK(this.ca,b);return this};XJ.prototype.X=function(){return this.ca.length};function YJ(a,b){this.ca=a;this.n=b;this.h=2;this.I=0;}YJ.prototype.Dd=function(){return !1};YJ.prototype.ae=function(a,b){this.ca.length!==this.n&&this.ca.unshift(b);return this};YJ.prototype.X=function(){return this.ca.length};function ZJ(){return oc("iPhone")&&!oc("iPod")&&!oc("iPad")}var $J=oc("Opera"),aK=oc("Trident")||oc("MSIE"),bK=oc("Edge"),cK=oc("Gecko")&&!(gc("WebKit")&&!oc("Edge"))&&!(oc("Trident")||oc("MSIE"))&&!oc("Edge"),dK=gc("WebKit")&&!oc("Edge");dK&&oc("Mobile");oc("Macintosh");oc("Windows");oc("Linux")||oc("CrOS");var IO=cb.navigator||null;IO&&(IO.appVersion||"").indexOf("X11");oc("Android");ZJ();oc("iPad");oc("iPod");ZJ()||oc("iPad")||oc("iPod");gc("KaiOS");gc("GAFP");function fK(){var a=cb.document;return a?a.documentMode:void 0}var gK;
    a:{var OQ="",pS=function(){var a=hc;if(cK)return /rv:([^\);]+)(\)|;)/.exec(a);if(bK)return /Edge\/([\d\.]+)/.exec(a);if(aK)return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(dK)return /WebKit\/(\S+)/.exec(a);if($J)return /(?:Version)[ \/]?(\S+)/.exec(a)}();pS&&(OQ=pS?pS[1]:"");if(aK){var qS=fK();if(null!=qS&&qS>parseFloat(OQ)){gK=String(qS);break a}}gK=OQ;}var wb={};
    function kK(a){return vb(a,function(){for(var b=0,c=fc(String(gK)).split("."),d=fc(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var k=c[f]||"",l=d[f]||"";do{k=/(\d*)(\D*)(.*)/.exec(k)||["","","",""];l=/(\d*)(\D*)(.*)/.exec(l)||["","","",""];if(0==k[0].length&&0==l[0].length)break;b=0==k[1].length?0:parseInt(k[1],10);var m=0==l[1].length?0:parseInt(l[1],10);b=ic(b,m)||ic(0==k[2].length,0==l[2].length)||ic(k[2],l[2]);k=k[3];l=l[3];}while(0==b)}return 0<=b})}var rS;
    rS=cb.document&&aK?fK():void 0;!cK&&!aK||aK&&9<=Number(rS)||cK&&kK("1.9.1");aK&&kK("9");function mK(a){var b=document;a=String(a);"application/xhtml+xml"===b.contentType&&(a=a.toLowerCase());return b.createElement(a)}var nK;
    function oK(){var a=cb.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!oc("Presto")&&(a=function(){var e=mK(fo);e.style.display="none";vc(e);document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.write(tc());e.close();var k="callImmediate"+Math.random(),l="file:"==f.location.protocol?"*":f.location.protocol+"//"+f.location.host;e=nb(function(m){if(("*"==l||m.origin==l)&&m.data==k)this.port1.onmessage();},this);
    f.addEventListener("message",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(k,l);}};});if("undefined"!==typeof a&&!oc("Trident")&&!oc("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.Wd;c.Wd=null;e();}};return function(e){d.next={Wd:e};d=d.next;b.port2.postMessage(0);}}return "undefined"!==typeof document&&"onreadystatechange"in mK(yr)?function(e){var f=mK(yr);f.onreadystatechange=function(){f.onreadystatechange=null;f.parentNode.removeChild(f);
    f=null;e();e=null;};document.documentElement.appendChild(f);}:function(e){cb.setTimeout(e,0);}}var pK=WJ(32),qK=!1,rK=!1;function sK(){qK=!0;rK=!1;for(var a=0;;){var b=pK.pop();if(null!=b&&(b.o?b.o():b.call(null),1024>a)){a+=1;continue}break}qK=!1;return 0<pK.length?tK.o?tK.o():tK.call(null):null}function tK(){if(rK&&qK)return null;rK=!0;!fb(cb.setImmediate)||cb.Window&&cb.Window.prototype&&!oc("Edge")&&cb.Window.prototype.setImmediate==cb.setImmediate?(nK||(nK=oK()),nK(sK)):cb.setImmediate(sK);}function uK(a){MK(pK,a);tK();}var vK={},hU;
    function xK(a){if("undefined"===typeof Ac||"undefined"===typeof Bc||"undefined"===typeof LJ||"undefined"===typeof NJ||"undefined"===typeof vK||"undefined"===typeof hU)hU=function(b,c){this.m=b;this.Ng=c;this.h=425984;this.I=0;},hU.prototype.O=function(b,c){return new hU(this.m,c)},hU.prototype.N=function(){return this.Ng},hU.prototype.zb=function(){return this.m},hU.Pa=function(){return new Q(null,2,5,R,[cH,AT],null)},hU.Ia=!0,hU.Da="cljs.core.async.impl.channels/t_cljs$core$async$impl$channels11314",hU.Ja=
    function(b){return ce(b,"cljs.core.async.impl.channels/t_cljs$core$async$impl$channels11314")};return new hU(a,S)}function yK(a,b){this.Id=a;this.m=b;}function zK(a){return QJ(a.Id)}function AK(a,b,c,d){this.ud=a;this.ee=0;this.Kc=b;this.de=0;this.ca=c;this.closed=!1;this.Lb=d;}function BK(a){for(;;){var b=a.Kc.pop();if(null!=b){var c=b.Id;uK(function(d){return function(){return d.a?d.a(!0):d.call(null,!0)}}(c.La,c,b.m));}break}NK(a.Kc,Hh(!1));a.Ed(null);}
    AK.prototype.Je=function(a,b,c){var d=this,e=this,f=d.closed;if(f)return xK(!f);if(p(function(){var v=d.ca;return p(v)?Tc(d.ca.Dd()):v}())){var k=cf(d.Lb.b?d.Lb.b(d.ca,b):d.Lb.call(null,d.ca,b));c=function(){for(var v=I;;)if(0<d.ud.length&&0<F(d.ca)){var y=d.ud.pop(),E=y.La,H=d.ca.ca.pop();v=Cf.b(v,function(T,Y,ia){return function(){return Y.a?Y.a(ia):Y.call(null,ia)}}(v,E,H));}else return v}();k&&BK(e);if(B(c)){c=B(c);a=null;for(var l=0,m=0;;)if(m<l){var r=a.W(null,m);uK(r);m+=1;}else if(c=
    B(c))a=c,Wf(a)?(c=re(a),m=se(a),a=c,l=F(c),c=m):(c=C(a),uK(c),c=D(a),a=null,l=0),m=0;else break}return xK(!0)}a=function(){for(;;){var v=d.ud.pop();if(p(v)){if(p(!0))return v}else return null}}();if(p(a)){var u=a.La;uK(function(){return u.a?u.a(b):u.call(null,b)});return xK(!0)}64<d.de?(d.de=0,NK(d.Kc,zK)):d.de+=1;p(c.Ie())&&MK(d.Kc,new yK(c,b));return null};
    function CK(a,b){if(null!=a.ca&&0<F(a.ca)){b=b.La;if(p(b)){var c=a.ca.ca.pop(),d=Tc(a.ca.Dd())&&0<a.Kc.length?function(){for(var H=I;;){var T=a.Kc.pop(),Y=T.m;T=T.Id.La;H=p(T)?Cf.b(H,T):H;Y=p(T)?cf(a.Lb.b?a.Lb.b(a.ca,Y):a.Lb.call(null,a.ca,Y)):null;if(!(Tc(Y)&&Tc(a.ca.Dd())&&0<a.Kc.length))return new Q(null,2,5,R,[Y,H],null)}}():null,e=J(d,0,null),f=J(d,1,null);p(e)&&BK(a);for(var k=B(f),l=null,m=0,r=0;;)if(r<m){var u=l.W(null,r);uK(function(H,T,Y,ia,ba){return function(){return ba.a?ba.a(!0):ba.call(null,
    !0)}}(k,l,m,r,u));r+=1;}else {var v=B(k);if(v){u=v;if(Wf(u))k=re(u),r=se(u),l=k,m=F(k),k=r;else {var y=C(u);uK(function(H,T,Y,ia,ba){return function(){return ba.a?ba.a(!0):ba.call(null,!0)}}(k,l,m,r,y));k=D(u);l=null;m=0;}r=0;}else break}return xK(c)}return null}c=function(){for(;;){var H=a.Kc.pop();if(p(H)){if(QJ(H.Id))return H}else return null}}();if(p(c)){var E=RJ(c.Id);uK(function(){return E.a?E.a(!0):E.call(null,!0)});return xK(c.m)}if(p(a.closed))return p(a.ca)&&(a.Lb.a?
    a.Lb.a(a.ca):a.Lb.call(null,a.ca)),p(p(!0)?b.La:!0)?(b=function(){var H=a.ca;return p(H)?0<F(a.ca):H}(),c=p(b)?a.ca.ca.pop():null,xK(c)):null;64<a.ee?(a.ee=0,NK(a.ud,QJ)):a.ee+=1;p(b.Ie())&&MK(a.ud,b);return null}
    AK.prototype.Ed=function(){var a=this;if(!a.closed)for(a.closed=!0,p(function(){var e=a.ca;return p(e)?0===a.Kc.length:e}())&&(a.Lb.a?a.Lb.a(a.ca):a.Lb.call(null,a.ca));;){var b=a.ud.pop();if(null!=b){var c=b.La,d=p(function(){var e=a.ca;return p(e)?0<F(a.ca):e}())?a.ca.ca.pop():null;uK(function(e,f){return function(){return e.a?e.a(f):e.call(null,f)}}(c,d));}else break}return null};function DK(a){console.log(a);return null}
    function EK(a,b){var c=p(null)?null:DK;b=c.a?c.a(b):c.call(null,b);return null==b?a:TJ.b(a,b)}
    function FK(a){return new AK(WJ(32),WJ(32),a,function(){var b=p(null)?null.a?null.a(TJ):null.call(null,TJ):TJ;return function(){function c(f,k){try{return b.b?b.b(f,k):b.call(null,f,k)}catch(l){return EK(f,l)}}function d(f){try{return b.a?b.a(f):b.call(null,f)}catch(k){return EK(f,k)}}var e=null;e=function(f,k){switch(arguments.length){case 1:return d.call(this,f);case 2:return c.call(this,f,k)}throw Error("Invalid arity: "+arguments.length);};e.a=d;e.b=c;return e}()}())}var GK={},iU;
    function IK(a){if("undefined"===typeof Ac||"undefined"===typeof Bc||"undefined"===typeof LJ||"undefined"===typeof NJ||"undefined"===typeof GK||"undefined"===typeof iU)iU=function(b,c){this.La=b;this.sg=c;this.h=393216;this.I=0;},iU.prototype.O=function(b,c){return new iU(this.La,c)},iU.prototype.N=function(){return this.sg},iU.prototype.sf=function(){return !0},iU.prototype.Ie=function(){return !0},iU.prototype.tf=function(){return this.La},iU.Pa=function(){return new Q(null,2,5,R,[Ap,NF],null)},iU.Ia=
    !0,iU.Da="cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers10587",iU.Ja=function(b){return ce(b,"cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers10587")};return new iU(a,S)}function JK(a){try{var b=a[0];return b.a?b.a(a):b.call(null,a)}catch(c){if(c instanceof Object)throw b=c,a[6].Ed(null),b;throw c;}}function KK(a,b){b=CK(b,IK(function(c){a[2]=c;a[1]=4;return JK(a)}));return p(b)?(a[2]=t(b),a[1]=4,yz):null}
    function LK(a,b){a=a[6];null!=b&&a.Je(null,b,IK(function(){return null}));a.Ed(null);return a}function OK(a){a=A.b(a,0)?null:a;return FK("number"===typeof a?new XJ(WJ(a),a):a)}
    var PK=function(a){if("undefined"===typeof Ac||"undefined"===typeof Bc||"undefined"===typeof LJ||"undefined"===typeof gU)gU=function(b,c,d){this.La=b;this.kf=c;this.eh=d;this.h=393216;this.I=0;},gU.prototype.O=function(b,c){return new gU(this.La,this.kf,c)},gU.prototype.N=function(){return this.eh},gU.prototype.sf=function(){return !0},gU.prototype.Ie=function(){return this.kf},gU.prototype.tf=function(){return this.La},gU.Pa=function(){return new Q(null,3,5,R,[Ap,hJ,DT],null)},gU.Ia=!0,gU.Da="cljs.core.async/t_cljs$core$async16171",
    gU.Ja=function(b){return ce(b,"cljs.core.async/t_cljs$core$async16171")};return new gU(a,!0,S)}(function(){return null});function QK(a,b){a=OJ(a,b);return p(a)?t(a):!0}
    function RK(a,b){var c=I,d=OK(1);uK(function(){var e=function(){function k(l){var m=l[1];if(7===m)return l[2]=l[2],l[1]=3,yz;if(1===m)return m=c,l[7]=m,l[2]=null,l[1]=2,yz;if(4===m)return m=l[2],l[8]=m,l[1]=p(null==m)?5:6,yz;if(6===m){var r=l[8];m=l[7];m=a.b?a.b(m,r):a.call(null,m,r);r=cf(m);l[9]=m;l[1]=r?8:9;return yz}return 3===m?LK(l,l[2]):2===m?KK(l,b):9===m?(m=l[9],l[7]=m,l[2]=null,l[1]=2,yz):5===m?(m=l[7],l[2]=m,l[1]=7,yz):10===m?(l[2]=l[2],l[1]=7,yz):8===m?(m=l[9],m=t(m),l[2]=m,l[1]=10,yz):
    null}return function(){function l(u){for(;;){a:try{for(;;){var v=k(u);if(!P(v,yz)){var y=v;break a}}}catch(E){y=E;u[2]=y;if(B(u[4]))u[1]=C(u[4]);else throw y;y=yz;}if(!P(y,yz))return y}}function m(){var u=[null,null,null,null,null,null,null,null,null,null];u[0]=r;u[1]=1;return u}var r=null;r=function(u){switch(arguments.length){case 0:return m.call(this);case 1:return l.call(this,u)}throw Error("Invalid arity: "+arguments.length);};r.o=m;r.a=l;return r}()}(),f=function(){var k=e();k[6]=d;return k}();
    return JK(f)});return d}var SK={};function TK(){return (new Date).getTime()}var UK=function UK(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return UK.g(arguments[0],arguments[1],2<c.length?new Qe(c.slice(2),0,null):null)};UK.g=function(a,b,c){c=J(c,0,null);if(M(a)&&(b=B(b))){var d=B(b);b=C(d);d=D(d);return B(d)?(d=UK.g(x.b(a,b),d,G([c])),0===F(d)&&Tc(FO.a(c))?Hf.b(a,b):K.c(a,b,d)):Hf.b(a,b)}return a};UK.F=2;UK.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};
    function VK(a,b,c){return ih(oi,a,b,Mh(Cf,Dk),c)}function WK(a,b,c){return oi.A(a,b,ji,c)}var XK=function XK(a,b,c){if(p(b)){var e=B(b);b=C(e);e=D(e);if(Tc(B(e)))c=Of.b(x.b(a,b),c);else {var f=x.b(a,b);c=XK.c?XK.c(f,e,c):XK.call(null,f,e,c);}return 0===F(c)?Hf.b(a,b):K.c(a,b,c)}return a};function YK(a){return p(a)?(PJ(a),RK(function(){return null},a)):null}function ZK(a,b){return gd.c(function(c,d){return A.b(d,a)?c:Cf.b(c,d)},I,b)}
    function $K(a,b){return gd.b(function(c,d){return p(a.a?a.a(d):a.call(null,d))?bf(d):null},b)}function aL(a,b){return Tc(x.b(a,b))?K.c(a,b,S):a}function bL(a){return kg(function(b,c,d){return K.c(b,Kg.a(c),d)},S,a)}function cL(){return fh(q,gi.b(new Bk(null,new n(null,1,["-",null],null),null),q.a(gm())))}function dL(a){return $y.a(a)}function eL(a){var b=Qq.b(a,1),c=["r-",q.a($y.a(a)),"-",q.a(b)].join("");return new Q(null,2,5,R,[K.c(a,Qq,b+1),c],null)}function fL(a){var b=Qq.b(a,1),c=["c-",q.a($y.a(a)),"-",q.a(b)].join("");return new Q(null,2,5,R,[K.c(a,Qq,b+1),c],null)}function gL(a){var b=Qq.b(a,1),c=["p-",q.a($y.a(a)),"-",q.a(b)].join("");return new Q(null,2,5,R,[K.c(a,Qq,b+1),c],null)}function hL(a,b,c,d,e){this.uri=a;this.message=b;this.Mb=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=hL.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "uri":return this.uri;case "message":return this.message;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#gateway.reason.Reason{",", ","}",c,Xg.b(new Q(null,2,5,R,[new Q(null,2,5,R,[$v,this.uri],null),new Q(null,2,5,R,[sr,this.message],null)],null),this.j))};g.ua=function(){return new gj(this,2,new Q(null,2,5,R,[$v,sr],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=57548305^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.uri,b.uri)&&A.b(this.message,b.message)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,2,[$v,null,sr,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new hL(this.uri,this.message,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b($v,b):P.call(null,$v,b))?new hL(c,this.message,this.Mb,this.j,null):p(P.b?P.b(sr,b):P.call(null,sr,b))?new hL(this.uri,c,this.Mb,this.j,null):new hL(this.uri,this.message,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,2,5,R,[new Gi($v,this.uri),new Gi(sr,this.message)],null),this.j))};g.O=function(a,b){return new hL(this.uri,this.message,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    function iL(a,b){return new hL(a,b,null,null,null)}function jL(a,b){var c=km(a);b=$v.b(c,b);c=sr.a(c);return new hL(b,p(c)?c:lm(a),null,null,null)}function kL(a,b){throw im(b,iL(a,b));}function lL(a){return iL(uE.a(a),kJ.a(a))}function mL(a,b){return iL(a,b)}function nL(a){var b=cL();return new n(null,2,[Mx,new n(null,2,[$y,a,Qq,1],null),pn,b],null)}function oL(a,b,c,d){return oi.A(ni(a,new Q(null,3,5,R,[Dn,b,c],null),p(d)?new n(null,1,[os,d],null):S),new Q(null,2,5,R,[zr,c],null),Mh(Cf,Dk),b)}function pL(a,b,c){return XK(oi.A(a,new Q(null,2,5,R,[Dn,b],null),Hf,c),new Q(null,2,5,R,[zr,c],null),b)}function qL(a,b,c){return mi.b(a,new Q(null,3,5,R,[zr,c,b],null))}function rL(a,b,c){return p(b)?ni(a,new Q(null,2,5,R,[aC,b],null),c):a}
    function sL(a,b){return Uk(UK,mi)(a,new Q(null,2,5,R,[aC,b],null))}function tL(a,b){return mi.b(a,new Q(null,3,5,R,[pz,b,tq],null))}function uL(a,b){return new n(null,2,[Fy,a,Xv,b],null)}function vL(a,b){return K.c(uL(new n(null,1,[U,Zv],null),b),lz,a)}function wL(a,b,c){return K.c(uL(b,c),lz,a)}var xL=function xL(a){switch(arguments.length){case 6:return xL.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 5:return xL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    xL.la=function(a,b,c,d,e,f){a=new n(null,6,[tq,a,U,IA,is,c,ow,d,uE,$v.a(e),kJ,sr.a(e)],null);f=p(f)?K.c(a,fI,f):a;return uL(b,f)};xL.K=function(a,b,c,d,e){return xL.la(a,b,c,d,e,null)};xL.F=6;var yL=function yL(a){switch(arguments.length){case 4:return yL.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 3:return yL.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};yL.A=function(a,b,c,d){return uL(b,yL.c(a,c,d))};
    yL.c=function(a,b,c){return new n(null,4,[tq,a,U,qz,is,b,ow,c],null)};yL.F=4;function zL(a){return A.b(U.a(a),Fs)}var AL=function AL(a){switch(arguments.length){case 6:return AL.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 5:return AL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};AL.la=function(a,b,c,d,e,f){return uL(b,AL.K(a,c,d,e,f))};
    AL.K=function(a,b,c,d,e){return new n(null,6,[tq,a,U,SE,ow,b,dB,c,pD,d,Mc,e],null)};AL.F=6;var BL=function BL(a){switch(arguments.length){case 5:return BL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 4:return BL.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};BL.K=function(a,b,c,d,e){return uL(b,BL.A(a,c,d,e))};
    BL.A=function(a,b,c,d){return new n(null,6,[tq,a,U,mE,ow,b,EJ,c,uE,$v.a(d),kJ,sr.a(d)],null)};BL.F=5;function CL(a,b){if(null!=a&&null!=a.Qc)a=a.Qc(a,b);else {var c=CL[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=CL._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ConjFlat.conj-flat",a);}return a}function DL(a,b){for(a=mi.b(a,b);;)if(p(EL.a?EL.a(a):EL.call(null,a)))a=x.b(a,0),b=Cf.b(b,0);else return b}
    function FL(a,b){return new Mg(null,function(){var c=mi.b(a,b);a:{var d=a;for(var e=b;;){if(A.b(F(e),1)){d=Mf(e)<(GL.a?GL.a(d):GL.call(null,d))-1?DL(d,new Q(null,1,5,R,[Mf(e)+1],null)):null;break a}var f=Mf(e);var k=mi.b(d,Nf(e));k=GL.a?GL.a(k):GL.call(null,k);if(f<k-1){d=DL(d,Cf.b(Nf(e),Mf(e)+1));break a}e=Nf(e);}}return vf(c,p(d)?FL(a,d):null)},null,null)}function HL(a,b,c,d,e){this.ka=a;this.pe=b;this.Ic=c;this.C=d;this.md=e;this.Vd=null;this.h=31850958;this.I=0;}g=HL.prototype;g.toString=function(){return Be(B(this))};
    g.ia=function(a,b){return this.ka.ia(null,b)};g.M=function(a,b,c){return this.ka.M(null,b,c)};g.N=function(){return Lf(this.ka)};g.za=function(){return D(B(this))};g.X=function(){return this.C};g.Z=function(){return this.Ic};g.Y=function(a,b){return A.b(this.Ic,Je(b))&&A.b(this.C,F(b))&&(A.b(this.C,0)||A.b(B(this),b))};g.pa=function(){return Kf(IL,Lf(this))};g.Fa=function(){return C(B(this))};g.Ha=function(){return Re(B(this))};
    g.$=function(){if(!p(this.Vd)){if(this.md){var a=this.ka;a=0<F(a)?FL(a,DL(a,new Q(null,1,5,R,[0],null))):null;}else a=B(this.ka);this.Vd=a;}return this.Vd};g.O=function(a,b){return new HL(Kf(this.ka,b),this.pe,this.Ic,this.C,this.md)};g.ga=function(a,b){return vf(b,this)};
    g.Qc=function(a,b){if(null==b)return this;if(p(EL.a?EL.a(b):EL.call(null,b))){if(0===this.C)return b;if(32>=F(b)){a=JL.b?JL.b(this,b):JL.call(null,this,b);var c=this.C+F(b),d=ji.b(this.ka,b),e=this.md;return new HL(d,a,Ve(a,c),c,e?e:b.md)}a=JL.b?JL.b(this,b):JL.call(null,this,b);c=this.C+F(b);return new HL(Cf.b(this.ka,b),a,Ve(a,c),c,!0)}a=Ce(31,this.pe)+Je(b);c=this.C+1;return new HL(Cf.b(this.ka,b),a,Ve(a,c),c,this.md)};
    function JL(a,b){var c=F(b);a:if(0===c)c=1;else {c|=0;for(var d=1,e=31;;){var f=Fh(c);c=tg(c,2);if(f)e=Ce(e,e);else {if(0===c){c=Ce(e,d);break a}d=Ce(e,d);e=Ce(e,e);}}}c|=0;return Ce(c,a.pe)+(b.pe-c)}g.ma=h;g.S=function(a,b,c){return fe(B(this),b,c)};function KL(a){a=Ni(a);a:for(var b=1,c=B(a);;)if(null!=c)b=Ce(31,b)+Je(C(c))|0,c=D(c);else break a;return new HL(a,b,Je(a),F(a),!1)}var IL=KL(I);function EL(a){return a instanceof HL}function GL(a){return EL(a)?F(a.ka):F(a)}
    var LL=function LL(a,b){for(;;)if(B(b)){var d=C(b);EL(d)?(a=LL.b?LL.b(a,d):LL.call(null,a,d),b=D(b)):(a=Yg.b(a,d),b=D(b));}else return a};function ML(a,b,c,d){this.ka=a;this.Ic=b;this.C=c;this.flat=d;this.h=167142175;this.I=2048;}g=ML.prototype;g.toString=function(){return Be(NL(this))};g.ia=function(a,b){return NL(this).ia(null,b)};g.M=function(a,b,c){return NL(this).M(null,b,c)};
    function NL(a){Tc(t(a.flat))&&(Rh.b(a.flat,function(){var b=t(a.ka);b=le(LL(je(I),b));return Kf(b,Lf(t(a.ka)))}),Rh.b(a.ka,function(){return null}));return t(a.flat)}g.Aa=function(a,b,c){return NL(this).Aa(null,b,c)};g.W=function(a,b){return NL(this).W(null,b)};g.wa=function(a,b,c){return NL(this).wa(null,b,c)};g.Ib=function(a,b,c){return NL(this).Ib(null,b,c)};g.N=function(){return p(t(this.flat))?Lf(t(this.flat)):Lf(t(this.ka))};g.X=function(){return this.C};g.Xb=function(){return NL(this).Xb(null)};
    g.Yb=function(){return NL(this).Yb(null)};g.Bc=function(){return 0<this.C?be(NL(this)):null};g.Z=function(){return this.Ic};g.Y=function(a,b){return A.b(this.Ic,Je(b))&&A.b(this.C,F(b))&&A.b(NL(this),b)};g.pa=function(){return Kf(I,Lf(this))};g.fa=function(a,b,c){return K.c(NL(this),b,c)};g.$=function(){return B(NL(this))};g.O=function(a,b){return p(t(this.flat))?new ML(Oh(t(this.ka)),this.Ic,this.C,Oh(Kf(t(this.flat),b))):new ML(Oh(Kf(t(this.ka),b)),this.Ic,this.C,Oh(t(this.flat)))};
    g.ga=function(a,b){return Cf.b(NL(this),b)};g.call=function(){function a(d,e,f){return NL(this).c(null,e,f)}function b(d,e){return NL(this).b(null,e)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+(arguments.length-1));};c.b=b;c.c=a;return c}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return NL(this).b(null,a)};
    g.b=function(a,b){return NL(this).c(null,a,b)};g.Wb=function(a,b){return pe(NL(this),b)};g.ma=h;g.S=function(a,b,c){return fe(NL(this),b,c)};function OL(a){return p(a.md)?p(a.Vd)?Ni(B(a)):new ML(Oh(a.ka),a.Ic,a.C,Oh(null)):a.ka}function PL(a,b,c){var d=p(b.ignoreCase)?"gi":"g";d=p(b.multiline)?[d,"m"].join(""):d;return a.replace(new RegExp(b.source,p(b.Jh)?[d,"u"].join(""):d),c)}
    function QL(a){return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=Zh(2,d);if(A.b(F(d),1))return d=C(d),a.a?a.a(d):a.call(null,d);d=Ni(d);return a.a?a.a(d):a.call(null,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}
    function RL(a,b,c){if("string"===typeof b)return a.replace(new RegExp(String(b).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08"),"g"),c);if(b instanceof RegExp)return "string"===typeof c?PL(a,b,c):PL(a,b,QL(c));throw ["Invalid match arg: ",q.a(b)].join("");}function SL(a,b){var c=new zc;for(b=B(b);;)if(null!=b)c.append(q.a(C(b))),b=D(b),null!=b&&c.append(a);else return c.toString()}
    function TL(a,b){if(0>=b||b>=2+F(a))return Cf.b(Ni(vf("",Wh.b(q,B(a)))),"");if(p(xg?Ud(1,b):wg.call(null,1,b)))return new Q(null,1,5,R,[a],null);if(p(xg?Ud(2,b):wg.call(null,2,b)))return new Q(null,2,5,R,["",a],null);b-=2;return Cf.b(Ni(vf("",Wi(Ni(Wh.b(q,B(a))),0,b))),a.substring(b))}
    function UL(a,b,c){if("/(?:)/"===q.a(b))b=TL(a,c);else if(1>c)b=Ni(q.a(a).split(b));else a:for(var d=c,e=I;;){if(1===d){b=Cf.b(e,a);break a}var f=Xk(b,a);if(null!=f){var k=a.indexOf(f);f=a.substring(k+F(f));--d;e=Cf.b(e,a.substring(0,k));a=f;}else {b=Cf.b(e,a);break a}}if(0===c&&1<F(b))a:for(c=b;;)if(""===Mf(c))c=Nf(c);else break a;else c=b;return c}function VL(a,b,c){Tc(b)?(b=c.a?c.a(X):c.call(null,X),a=a.a?a.a(b):a.call(null,b)):a=!1;return p(a)?["(",q.a(WL?WL(c,!1):XL.call(null,c,!1)),")"].join(""):WL?WL(c,!1):XL.call(null,c,!1)}var YL=Jh(VL,new Bk(null,new n(null,3,[oF,null,AJ,null,xC,null],null),null));function ZL(a){switch(a){case "\n":return "\\n";case "\b":return "\\b";case "\f":return "\\f";case "\r":return "\\r";case "\t":return "\\t";default:return a}}function $L(a){return RL(['#"',a.source.substring(1),'"'].join(""),/[\s]/,ZL)}
    function aM(a){return 4095>=a?["0000",q.a(a.toString(16))].join("").substr(-4):a.toString(16)}function bM(a){var b=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(b,Zy);b=x.b(b,yJ);return A.b(a,b)?["%x",q.a(aM(a))].join(""):["%x",q.a(aM(a)),"-",q.a(aM(b))].join("")}function XL(a){switch(arguments.length){case 1:return WL(arguments[0],!1);case 2:return WL(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}
    function WL(a,b){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var c=x.b(a,wv),d=x.b(a,Xn),e=x.b(a,Vn),f=x.b(a,An),k=x.b(a,X);if(p(Tc(b)?ls.a(a):!1))return ["\x3c",q.a(WL(a,!0)),"\x3e"].join("");k=k instanceof z?k.da:null;switch(k){case "epsilon":return "ε";case "opt":return [q.a(YL(b,c)),"?"].join("");case "plus":return [q.a(YL(b,c)),"+"].join("");case "star":return [q.a(YL(b,c)),"*"].join("");case "rep":return kh.b(qx.a(a),bw.a(a))?[q.a(YL(b,c)),"{",q.a(qx.a(a)),",",q.a(bw.a(a)),"}"].join(""):[q.a(YL(b,c)),
    "{",q.a(qx.a(a)),"}"].join("");case "alt":return SL(" | ",Wh.b(Kh(VL,new Bk(null,new n(null,1,[AJ,null],null),null),b),f));case "ord":return [q.a(VL(new Bk(null,new n(null,1,[xC,null],null),null),b,d))," / ",q.a(VL(new Bk(null,new n(null,1,[xC,null],null),null),b,e))].join("");case "cat":return SL(" ",Wh.b(Kh(VL,new Bk(null,new n(null,2,[AJ,null,xC,null],null),null),b),f));case "string":var l=new zc;b=Fc;c=Ec;Fc=!0;Ec=function(m){return l.append(m)};try{nl(G([xn.a(a)]),Jc());}finally{Ec=c,Fc=b;}return q.a(l);
    case "string-ci":l=new zc;b=Fc;c=Ec;Fc=!0;Ec=function(m){return l.append(m)};try{nl(G([xn.a(a)]),Jc());}finally{Ec=c,Fc=b;}return q.a(l);case "char":return bM(a);case "regexp":return $L(Et.a(a));case "nt":return Ag(q.a(FJ.a(a)),1);case "look":return ["\x26",q.a(YL(b,c))].join("");case "neg":return ["!",q.a(YL(b,c))].join("");default:throw Error(["No matching clause: ",q.a(k)].join(""));}}
    function cM(a,b){return A.b(ny.a(Hu.a(b)),Pt)?["\x3c",Lg(a),"\x3e \x3d ",q.a(WL(b,!1))].join(""):[Lg(a)," \x3d ",q.a(WL(b,!1))].join("")}
    function dM(a){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var b=x.b(a,wo),c=x.b(a,iz);return SL("\n",vf(cM(c,b.a?b.a(c):b.call(null,c)),function(){return function f(e){return new Mg(null,function(){for(var k=e;;)if(k=B(k)){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u),y=J(v,0,null);v=J(v,1,null);kh.b(y,c)&&(y=cM(y,v),r.add(y));u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);if(kh.b(r,c))return vf(cM(r,l),f(Re(k)));k=Re(k);}else return null},
    null,null)}(b)}()))}function eM(a,b){for(b=B(RL(b,"\r\n","\n"));;){if(Pf(b))return "";if(A.b(a,1))return fh(q,Mk(Gh(new Bk(null,new n(null,1,["\n",null],null),null)),b));A.b("\n",C(b))?(b=D(b),--a):b=D(b);}}function fM(a){p(iJ.a(a))?(pl.g(G(["NOT "])),pl.g(G([iJ.a(a)]))):p(Au.a(a))?pl.g(G([bM(a)])):a instanceof RegExp?pl.g(G([$L(a)])):nl(G([a]),Jc());}
    function gM(a){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var b=x.b(a,en),c=x.b(a,ux),d=x.b(a,ZD);a=x.b(a,kJ);sl(G([["Parse error at line ",q.a(b),", column ",q.a(c),":"].join("")]));sl(G([d]));b=bg(c)?1>=c?"^":fh(q,Xg.b(ai(c-1," "),new Q(null,1,5,R,["^"],null))):null;sl(G([b]));b=Gk(Wh.b(DA,fi.b(RH,a)));a=Gk(Wh.b(DA,fi.b(Gh(RH),a)));c=F(b)+F(a);0!==c&&(A.b(1,c)?sl(G(["Expected:"])):sl(G(["Expected one of:"])));b=B(b);c=null;for(var e=d=0;;)if(e<d){var f=c.W(null,e);fM(f);sl(G([" (followed by end-of-string)"]));
    e+=1;}else if(b=B(b))c=b,Wf(c)?(b=re(c),e=se(c),c=b,d=F(b),b=e):(b=C(c),fM(b),sl(G([" (followed by end-of-string)"])),b=D(c),c=null,d=0),e=0;else break;a=B(a);b=null;for(e=d=0;;)if(e<d)c=b.W(null,e),fM(c),rl(),e+=1;else if(a=B(a))b=a,Wf(b)?(a=re(b),d=se(b),b=a,c=F(a),a=d,d=c):(c=C(b),fM(c),rl(),a=D(b),b=null,d=0),e=0;else break}function hM(a){throw fh(q,a);}function iM(a){throw fh(q,a);}function jM(a){var b=p(a.ignoreCase)?"i":"";b=p(a.multiline)?[b,"m"].join(""):b;return p(a.Jh)?[b,"u"].join(""):b}function kM(a){return B(a)&&Tc(D(a))}function lM(a){return K.c(a,Hu,mM)}var mM=new n(null,1,[ny,Pt],null),nM=new n(null,2,[DC,function(a){return new n(null,2,[ny,DC,NI,a],null)},FA,function(a){return new n(null,2,[ny,FA,NI,a],null)}],null),oM=new n(null,2,[FA,function(a,b){return new n(null,2,[X,a,sE,new Df(null,b,null,1,null)],null)},DC,function(a,b){return new Q(null,2,5,R,[a,b],null)}],null);
    function pM(a,b){var c=ny.a(a);switch(c instanceof z?c.da:null){case "raw":return IL.Qc(null,b);case "hiccup":return OL(KL(new Q(null,1,5,R,[NI.a(a)],null)).Qc(null,b));case "enlive":return b=IL.Qc(null,b),new n(null,2,[X,NI.a(a),sE,0===F(b)?null:b],null);default:return a.a?a.a(b):a.call(null,b)}}
    function qM(a,b){var c=nM.a?nM.a(a):nM.call(null,a);return p(c)?ji.b(S,function(){return function f(e){return new Mg(null,function(){for(;;){var k=B(e);if(k){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u),y=J(v,0,null);v=J(v,1,null);y=p(Hu.a(v))?new Q(null,2,5,R,[y,v],null):new Q(null,2,5,R,[y,K.c(v,Hu,c.a?c.a(y):c.call(null,y))],null);r.add(y);u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return vf(p(Hu.a(l))?new Q(null,
    2,5,R,[r,l],null):new Q(null,2,5,R,[r,K.c(l,Hu,c.a?c.a(r):c.call(null,r))],null),f(Re(k)))}return null}},null,null)}(b)}()):iM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}var rM=new n(null,1,[X,zA],null);function sM(a){return A.b(a,rM)?rM:new n(null,2,[X,jJ,wv,a],null)}function tM(a){return A.b(a,rM)?rM:new n(null,2,[X,eq,wv,a],null)}function uM(a){return A.b(a,rM)?rM:new n(null,2,[X,XC,wv,a],null)}function vM(a,b,c){return A.b(c,rM)?rM:new n(null,4,[X,Ku,wv,c,qx,a,bw,b],null)}var wM=function wM(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return wM.g(0<c.length?new Qe(c.slice(0),0,null):null)};
    wM.g=function(a){return Dh(Jh(A,rM),a)?rM:kM(a)?C(a):new n(null,2,[X,xC,An,a],null)};wM.F=0;wM.G=function(a){return this.g(B(a))};var xM=function xM(a){switch(arguments.length){case 0:return xM.o();default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return xM.g(arguments[0],new Qe(c.slice(1),0,null))}};xM.o=function(){return rM};xM.g=function(a,b){b=A.b(a,rM)?gi.b(Ek([rM]),b):b;B(b)&&(b=fh(xM,b),a=new n(null,3,[X,AJ,Xn,a,Vn,b],null));return a};
    xM.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};xM.F=1;var yM=function yM(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return yM.g(0<c.length?new Qe(c.slice(0),0,null):null)};yM.g=function(a){if(Dh(Jh(A,rM),a))return rM;a=gi.b(Ek([rM]),a);return kM(a)?C(a):new n(null,2,[X,oF,An,a],null)};yM.F=0;yM.G=function(a){return this.g(B(a))};function zM(a){return A.b(a,"")?rM:new n(null,2,[X,xn,xn,a],null)}
    function AM(a){return A.b(a,"")?rM:new n(null,2,[X,zC,xn,a],null)}function BM(a,b){return new n(null,3,[X,nG,Zy,a,yJ,b],null)}function CM(a){A.b(a,"")?a=rM:(a=Zk(a),a=a instanceof RegExp?new RegExp(["^",q.a(a.source)].join(""),jM(a)):a,a=new n(null,2,[X,Et,Et,a],null));return a}function DM(a){return new n(null,2,[X,Ay,FJ,a],null)}function EM(a){return new n(null,2,[X,qA,wv,a],null)}function FM(a){return new n(null,2,[X,tC,wv,a],null)}function GM(a){return K.c(a,ls,!0)}
    var HM=function HM(a){var c=p(ls.a(a))?Hf.b(a,ls):a;return p(wv.a(c))?K.c(c,wv,function(){var d=wv.a(c);return HM.a?HM.a(d):HM.call(null,d)}()):p(An.a(c))?K.c(c,An,Wh.b(HM,An.a(c))):A.b(X.a(c),AJ)?K.g(c,Xn,function(){var d=Xn.a(c);return HM.a?HM.a(d):HM.call(null,d)}(),G([Vn,function(){var d=Vn.a(c);return HM.a?HM.a(d):HM.call(null,d)}()])):c};
    function IM(a){return ji.b(S,function(){return function d(c){return new Mg(null,function(){for(;;){var e=B(c);if(e){if(Wf(e)){var f=re(e),k=F(f),l=Qg(k);a:for(var m=0;;)if(m<k){var r=qd(f,m),u=J(r,0,null);r=J(r,1,null);u=new Q(null,2,5,R,[u,HM(r)],null);l.add(u);m+=1;}else {f=!0;break a}return f?Sg(Ug(l),d(se(e))):Sg(Ug(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);return vf(new Q(null,2,5,R,[l,HM(f)],null),d(Re(e)))}return null}},null,null)}(a)}())}
    function JM(a,b){var c=nM.a?nM.a(a):nM.call(null,a);return p(c)?ji.b(S,function(){return function f(e){return new Mg(null,function(){for(;;){var k=B(e);if(k){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u),y=J(v,0,null);v=J(v,1,null);y=new Q(null,2,5,R,[y,K.c(v,Hu,c.a?c.a(y):c.call(null,y))],null);r.add(y);u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return vf(new Q(null,2,5,R,[r,K.c(l,Hu,c.a?c.a(r):c.call(null,r))],
    null),f(Re(k)))}return null}},null,null)}(b)}()):iM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}
    function KM(a,b){var c=nM.a?nM.a(a):nM.call(null,a);return p(c)?ji.b(S,function(){return function f(e){return new Mg(null,function(){for(;;){var k=B(e);if(k){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u),y=J(v,0,null);v=J(v,1,null);y=new Q(null,2,5,R,[y,K.c(HM(v),Hu,c.a?c.a(y):c.call(null,y))],null);r.add(y);u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return vf(new Q(null,2,5,R,[r,K.c(HM(l),Hu,c.a?c.a(r):c.call(null,
    r))],null),f(Re(k)))}return null}},null,null)}(b)}()):iM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}
    var LM=function LM(a,b){var d=X.a(a);d=d instanceof z?d.da:null;switch(d){case "nt":case "epsilon":return a;case "opt":case "plus":case "star":case "rep":case "look":case "neg":return oi.A(a,new Q(null,1,5,R,[wv],null),LM,b);case "alt":case "cat":return K.c(a,An,Wh.b(function(e){return LM.b?LM.b(e,b):LM.call(null,e,b)},An.a(a)));case "ord":return K.g(a,Xn,function(){var e=Xn.a(a);return LM.b?LM.b(e,b):LM.call(null,e,b)}(),G([Vn,function(){var e=Vn.a(a);return LM.b?LM.b(e,b):LM.call(null,e,b)}()]));
    case "string":case "string-ci":case "regexp":return p(Hu.a(a))?K.c(yM.g(G([b,Hf.b(a,Hu)])),Hu,Hu.a(a)):yM.g(G([b,a]));default:throw Error(["No matching clause: ",q.a(d)].join(""));}};
    function MM(a,b,c,d){var e=GM(sM(DM(d)));c=K.c(c,d,lM(c.a?c.a(d):c.call(null,d)));d=ji.b(S,function(){return function l(k){return new Mg(null,function(){for(;;){var m=B(k);if(m){if(Wf(m)){var r=re(m),u=F(r),v=Qg(u);a:for(var y=0;;)if(y<u){var E=qd(r,y),H=J(E,0,null);E=J(E,1,null);H=new Q(null,2,5,R,[H,LM(E,e)],null);v.add(H);y+=1;}else {r=!0;break a}return r?Sg(Ug(v),l(se(m))):Sg(Ug(v),null)}r=C(m);v=J(r,0,null);r=J(r,1,null);return vf(new Q(null,2,5,R,[v,LM(r,e)],null),l(Re(m)))}return null}},null,
    null)}(a)}());b=K.c(d,b,K.c(yM.g(G([Hf.b(d.a?d.a(b):d.call(null,b),Hu),e])),Hu,Hu.a(d.a?d.a(b):d.call(null,b))));return wk.g(G([b,c]))}function NM(a){if(null==a||!(0<=a&&1114111>=a))return null;if(65536<=a&&1114111>=a){var b=(a&1023)+56320;return String.fromCharCode((a>>10)+55232)+String.fromCharCode(b)}return String.fromCharCode(a)}
    function OM(a,b){var c=a.charCodeAt(b);if(55296<=c&&56319>=c&&b+1<a.length){if(a=a.charCodeAt(b+1),56320<=a&&57343>=a)return 55296<=c&&56319>=c&&56320<=a&&57343>=a?(c<<10)-56623104+(a-56320+65536):null}else if(56320<=c&&57343>=c&&0<b&&(a=a.charCodeAt(b-1),55296<=a&&56319>=a))return -(55296<=a&&56319>=a&&56320<=c&&57343>=c?(a<<10)-56623104+(c-56320+65536):0);return c}function PM(a,b,c){var d=X.a(a);d=d instanceof z?d.da:null;switch(d){case "nt":return QM.c?QM.c(a,b,c):QM.call(null,a,b,c);case "alt":return RM.c?RM.c(a,b,c):RM.call(null,a,b,c);case "cat":return SM.c?SM.c(a,b,c):SM.call(null,a,b,c);case "string":return TM.c?TM.c(a,b,c):TM.call(null,a,b,c);case "string-ci":return UM.c?UM.c(a,b,c):UM.call(null,a,b,c);case "char":return VM.c?VM.c(a,b,c):VM.call(null,a,b,c);case "epsilon":return WM.c?WM.c(a,b,c):WM.call(null,a,b,c);case "opt":return XM.c?XM.c(a,b,c):
    XM.call(null,a,b,c);case "plus":return YM.c?YM.c(a,b,c):YM.call(null,a,b,c);case "rep":return ZM.c?ZM.c(a,b,c):ZM.call(null,a,b,c);case "star":return $M.c?$M.c(a,b,c):$M.call(null,a,b,c);case "regexp":return aN.c?aN.c(a,b,c):aN.call(null,a,b,c);case "look":return bN.c?bN.c(a,b,c):bN.call(null,a,b,c);case "neg":return cN.c?cN.c(a,b,c):cN.call(null,a,b,c);case "ord":return dN.c?dN.c(a,b,c):dN.call(null,a,b,c);default:throw Error(["No matching clause: ",q.a(d)].join(""));}}
    function eN(a,b,c){var d=X.a(a);d=d instanceof z?d.da:null;switch(d){case "nt":return fN.c?fN.c(a,b,c):fN.call(null,a,b,c);case "alt":return gN.c?gN.c(a,b,c):gN.call(null,a,b,c);case "cat":return hN.c?hN.c(a,b,c):hN.call(null,a,b,c);case "string":return iN.c?iN.c(a,b,c):iN.call(null,a,b,c);case "string-ci":return jN.c?jN.c(a,b,c):jN.call(null,a,b,c);case "char":return kN.c?kN.c(a,b,c):kN.call(null,a,b,c);case "epsilon":return lN.c?lN.c(a,b,c):lN.call(null,a,b,c);case "opt":return mN.c?mN.c(a,b,c):
    mN.call(null,a,b,c);case "plus":return nN.c?nN.c(a,b,c):nN.call(null,a,b,c);case "rep":return oN.c?oN.c(a,b,c):oN.call(null,a,b,c);case "star":return pN.c?pN.c(a,b,c):pN.call(null,a,b,c);case "regexp":return qN.c?qN.c(a,b,c):qN.call(null,a,b,c);case "look":return rN.c?rN.c(a,b,c):rN.call(null,a,b,c);case "neg":return cN.c?cN.c(a,b,c):cN.call(null,a,b,c);case "ord":return sN.c?sN.c(a,b,c):sN.call(null,a,b,c);default:throw Error(["No matching clause: ",q.a(d)].join(""));}}
    function tN(a,b,c,d,e){this.index=a;this.reason=b;this.Mb=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=tN.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "index":return this.index;case "reason":return this.reason;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#instaparse.gll.Failure{",", ","}",c,Xg.b(new Q(null,2,5,R,[new Q(null,2,5,R,[DH,this.index],null),new Q(null,2,5,R,[kJ,this.reason],null)],null),this.j))};g.ua=function(){return new gj(this,2,new Q(null,2,5,R,[DH,kJ],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1140991288^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.index,b.index)&&A.b(this.reason,b.reason)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,2,[DH,null,kJ,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new tN(this.index,this.reason,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(DH,b):P.call(null,DH,b))?new tN(c,this.reason,this.Mb,this.j,null):p(P.b?P.b(kJ,b):P.call(null,kJ,b))?new tN(this.index,c,this.Mb,this.j,null):new tN(this.index,this.reason,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,2,5,R,[new Gi(DH,this.index),new Gi(kJ,this.reason)],null),this.j))};g.O=function(a,b){return new tN(this.index,this.reason,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    g.ma=h;g.S=function(a,b){var c=this;return ce(b,function(){var d=new zc,e=Fc,f=Ec;Fc=!0;Ec=function(k){return d.append(k)};try{gM(c);}finally{Ec=f,Fc=e;}return q.a(d)}())};var uN=Yc(new tN(null,null,null,null,null));function vN(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){this.qa=a;this.text=b;this.Ua=c;this.Ma=d;this.Ta=e;this.stack=f;this.Sa=k;this.Oa=l;this.Ra=m;this.Qa=r;this.sa=u;this.Va=v;this.Na=y;this.Wa=E;this.Mb=H;this.j=T;this.B=Y;this.h=2230716170;this.I=139264;}g=vN.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "grammar":return this.qa;case "text":return this.text;case "segment":return this.Ua;case "fail-index":return this.Ma;case "node-builder":return this.Ta;case "stack":return this.stack;case "next-stack":return this.Sa;case "generation":return this.Oa;case "negative-listeners":return this.Ra;case "msg-cache":return this.Qa;case "nodes":return this.sa;case "success":return this.Va;case "failure":return this.Na;case "trace?":return this.Wa;default:return x.c(this.j,
    b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#instaparse.gll.Tramp{",", ","}",c,Xg.b(new Q(null,14,5,R,[new Q(null,2,5,R,[wo,this.qa],null),new Q(null,2,5,R,[ZD,this.text],null),new Q(null,2,5,R,[Rv,this.Ua],null),new Q(null,2,5,R,[HB,this.Ma],null),new Q(null,2,5,R,[oq,this.Ta],null),new Q(null,2,5,R,[CC,this.stack],null),new Q(null,2,5,R,[pw,this.Sa],null),new Q(null,2,5,R,[wD,this.Oa],null),new Q(null,2,5,R,[NG,this.Ra],null),new Q(null,2,5,R,[As,this.Qa],null),new Q(null,
    2,5,R,[lA,this.sa],null),new Q(null,2,5,R,[qz,this.Va],null),new Q(null,2,5,R,[lC,this.Na],null),new Q(null,2,5,R,[Mn,this.Wa],null)],null),this.j))};g.ua=function(){return new gj(this,14,new Q(null,14,5,R,[wo,ZD,Rv,HB,oq,CC,pw,wD,NG,As,lA,qz,lC,Mn],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 14+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=166878148^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.qa,b.qa)&&A.b(this.text,b.text)&&A.b(this.Ua,b.Ua)&&A.b(this.Ma,b.Ma)&&A.b(this.Ta,b.Ta)&&A.b(this.stack,b.stack)&&A.b(this.Sa,b.Sa)&&A.b(this.Oa,b.Oa)&&A.b(this.Ra,b.Ra)&&A.b(this.Qa,b.Qa)&&A.b(this.sa,b.sa)&&A.b(this.Va,b.Va)&&A.b(this.Na,b.Na)&&A.b(this.Wa,b.Wa)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,14,[As,null,NG,null,wD,null,lC,null,HB,null,wo,null,qz,null,lA,null,oq,null,Rv,null,CC,null,Mn,null,pw,null,ZD,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(wo,b):P.call(null,wo,b))?new vN(c,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(ZD,b):P.call(null,ZD,b))?new vN(this.qa,c,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(Rv,b):P.call(null,Rv,b))?new vN(this.qa,this.text,c,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,
    this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(HB,b):P.call(null,HB,b))?new vN(this.qa,this.text,this.Ua,c,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(oq,b):P.call(null,oq,b))?new vN(this.qa,this.text,this.Ua,this.Ma,c,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(CC,b):P.call(null,CC,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,c,this.Sa,this.Oa,this.Ra,
    this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(pw,b):P.call(null,pw,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,c,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(wD,b):P.call(null,wD,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,c,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(NG,b):P.call(null,NG,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,
    this.Sa,this.Oa,c,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(As,b):P.call(null,As,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,c,this.sa,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(lA,b):P.call(null,lA,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,c,this.Va,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(qz,b):P.call(null,qz,b))?new vN(this.qa,this.text,this.Ua,this.Ma,
    this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,c,this.Na,this.Wa,this.Mb,this.j,null):p(P.b?P.b(lC,b):P.call(null,lC,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,c,this.Wa,this.Mb,this.j,null):p(P.b?P.b(Mn,b):P.call(null,Mn,b))?new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,c,this.Mb,this.j,null):new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,
    this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,14,5,R,[new Gi(wo,this.qa),new Gi(ZD,this.text),new Gi(Rv,this.Ua),new Gi(HB,this.Ma),new Gi(oq,this.Ta),new Gi(CC,this.stack),new Gi(pw,this.Sa),new Gi(wD,this.Oa),new Gi(NG,this.Ra),new Gi(As,this.Qa),new Gi(lA,this.sa),new Gi(qz,this.Va),new Gi(lC,this.Na),new Gi(Mn,this.Wa)],null),this.j))};
    g.O=function(a,b){return new vN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function wN(a,b,c,d,e){return new vN(a,b,c,d,e,Oh(I),Oh(I),Oh(0),Oh(tk(qg)),Oh(S),Oh(S),Oh(null),Oh(new tN(0,I,null,null,null)),!1,null,null,null)}function xN(a,b){return new n(null,2,[Ru,a,DH,b],null)}function yN(a,b){return A.b(F(ZD.a(a)),DH.a(b))}
    function zN(a,b,c,d,e,f,k){this.kc=a;this.cc=b;this.results=c;this.dc=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=zN.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "listeners":return this.kc;case "full-listeners":return this.cc;case "results":return this.results;case "full-results":return this.dc;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#instaparse.gll.Node{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[jE,this.kc],null),new Q(null,2,5,R,[xy,this.cc],null),new Q(null,2,5,R,[uJ,this.results],null),new Q(null,2,5,R,[gs,this.dc],null)],null),this.j))};
    g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[jE,xy,uJ,gs],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1610074144^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.kc,b.kc)&&A.b(this.cc,b.cc)&&A.b(this.results,b.results)&&A.b(this.dc,b.dc)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[gs,null,xy,null,jE,null,uJ,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new zN(this.kc,this.cc,this.results,this.dc,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(jE,b):P.call(null,jE,b))?new zN(c,this.cc,this.results,this.dc,this.Mb,this.j,null):p(P.b?P.b(xy,b):P.call(null,xy,b))?new zN(this.kc,c,this.results,this.dc,this.Mb,this.j,null):p(P.b?P.b(uJ,b):P.call(null,uJ,b))?new zN(this.kc,this.cc,c,this.dc,this.Mb,this.j,null):p(P.b?P.b(gs,b):P.call(null,gs,b))?new zN(this.kc,this.cc,this.results,c,this.Mb,this.j,null):new zN(this.kc,this.cc,this.results,this.dc,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(jE,this.kc),new Gi(xy,this.cc),new Gi(uJ,this.results),new Gi(gs,this.dc)],null),this.j))};g.O=function(a,b){return new zN(this.kc,this.cc,this.results,this.dc,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function AN(a,b){return Rh.c(CC.a(a),Cf,b)}
    function BN(a,b,c){function d(){return b.a?b.a(c):b.call(null,c)}var e=As.a(a),f=DH.a(c);f=new Q(null,2,5,R,[b,f],null);var k=x.c(t(e),f,0);k>t(wD.a(a))?Rh.c(pw.a(a),Cf,d):Rh.c(CC.a(a),Cf,d);Rh.A(e,K,f,k+1);}function CN(a,b){a=lA.a(a);a=t(a);b=a.a?a.a(b):a.call(null,b);return p(b)?0<F(t(jE.a(b))):null}function DN(a,b){a=lA.a(a);a=t(a);b=a.a?a.a(b):a.call(null,b);return p(b)?0<F(t(xy.a(b)))||0<F(t(jE.a(b))):null}
    function EN(a,b){a=lA.a(a);a=t(a);b=a.a?a.a(b):a.call(null,b);return p(b)?0<F(t(gs.a(b)))||0<F(t(uJ.a(b))):null}function FN(a,b){a=lA.a(a);var c=t(a);c=c.a?c.a(b):c.call(null,b);p(c)||(c=new zN(Oh(I),Oh(I),Oh(Dk),Oh(Dk),null,null,null),Rh.A(a,K,b,c));return c}function GN(a,b){return (null!=a?a.h&262144||h===a.He||(a.h?0:Xc(Od,a)):Xc(Od,a))?Kf(a,b):a}
    function HN(a,b,c){var d=FN(a,b),e=b.a?b.a(1):b.call(null,1),f=p(ls.a(e))?K.c(c,Ru,null):c,k=function(){var E=Hu.a(e);return p(E)?xN(GN(pM(E,Ru.a(f)),new n(null,2,[Yv,b.a?b.a(0):b.call(null,0),hp,DH.a(f)],null)),DH.a(f)):f}(),l=(c=yN(a,k))?gs.a(d):uJ.a(d);if(Tc(function(){var E=t(l);return E.a?E.a(k):E.call(null,k)}())){Rh.c(l,Cf,k);for(var m=B(t(jE.a(d))),r=null,u=0,v=0;;)if(v<u){var y=r.W(null,v);BN(a,y,k);v+=1;}else if(m=B(m))r=m,Wf(r)?(m=re(r),v=se(r),r=m,u=F(m),m=v):(m=C(r),BN(a,m,k),m=D(r),r=
    null,u=0),v=0;else break;if(c)for(d=B(t(xy.a(d))),c=null,u=r=0;;)if(u<r)m=c.W(null,u),BN(a,m,k),u+=1;else if(d=B(d))c=d,Wf(c)?(d=re(c),r=se(c),c=d,m=F(d),d=r,r=m):(m=C(c),BN(a,m,k),d=D(c),c=null,r=0),u=0;else return null;else return null}else return null}
    function IN(a,b,c){var d=CN(a,b),e=FN(a,b),f=jE.a(e);Rh.c(f,Cf,c);f=B(t(uJ.a(e)));for(var k=null,l=0,m=0;;)if(m<l){var r=k.W(null,m);BN(a,c,r);m+=1;}else if(f=B(f))k=f,Wf(k)?(f=re(k),m=se(k),k=f,l=F(f),f=m):(f=C(k),BN(a,c,f),f=D(k),k=null,l=0),m=0;else break;e=B(t(gs.a(e)));f=null;for(l=k=0;;)if(l<k)m=f.W(null,l),BN(a,c,m),l+=1;else if(e=B(e))f=e,Wf(f)?(e=re(f),l=se(f),f=e,k=F(e),e=l):(e=C(f),BN(a,c,e),e=D(f),f=null,k=0),l=0;else break;return Tc(d)?AN(a,function(){return PM(b.a?b.a(1):b.call(null,
    1),b.a?b.a(0):b.call(null,0),a)}):null}function JN(a,b,c){var d=DN(a,b),e=FN(a,b),f=xy.a(e);Rh.c(f,Cf,c);e=B(t(gs.a(e)));f=null;for(var k=0,l=0;;)if(l<k){var m=f.W(null,l);BN(a,c,m);l+=1;}else if(e=B(e))f=e,Wf(f)?(e=re(f),l=se(f),f=e,k=F(e),e=l):(e=C(f),BN(a,c,e),e=D(f),f=null,k=0),l=0;else break;return Tc(d)?AN(a,function(){return eN(b.a?b.a(1):b.call(null,1),b.a?b.a(0):b.call(null,0),a)}):null}var KN=Jh(xk,ji);
    function LN(a,b,c){return Rh.c(NG.a(a),KN,Gf([b.a?b.a(0):b.call(null,0),new Q(null,1,5,R,[c],null)]))}
    function MN(a,b,c,d){Rh.b(lC.a(a),function(e){var f=DH.a(e);f=dg(c,f);switch(f){case 1:return new tN(c,new Q(null,1,5,R,[d],null),null,null,null);case 0:return new tN(c,Cf.b(kJ.a(e),d),null,null,null);case -1:return e;default:throw Error(["No matching clause: ",q.a(f)].join(""));}});return A.b(c,HB.a(a))?HN(a,b,xN(function(){var e=oq.a(a);var f=ZD.a(a);f=Ag?f.substring(c):zg.call(null,f,c);var k=F(ZD.a(a));return NN.K?NN.K(e,aq,f,c,k):NN.call(null,e,aq,f,c,k)}(),F(ZD.a(a)))):null}
    function ON(a){var b=Mf(t(a));Rh.b(a,Nf);b.o?b.o():b.call(null);}
    function PN(a,b){for(;;){var c=CC.a(a);if(p(t(qz.a(a))))return vf(Ru.a(t(qz.a(a))),new Mg(null,function(f){return function(){Ph(qz.a(f),null);return PN(f,!0)}}(a),null,null));if(0<F(t(c)))ON(c);else if(0<F(t(NG.a(a)))){var d=C(t(NG.a(a)));c=J(d,0,null);d=J(d,1,null);var e=Mf(d);e.o?e.o():e.call(null);A.b(F(d),1)?Rh.c(NG.a(a),Hf,c):Rh.A(NG.a(a),oi,new Q(null,1,5,R,[c],null),Nf);}else if(p(b))b=pw.a(a),Ph(c,t(b)),Ph(b,I),Rh.b(wD.a(a),$e),b=null;else return null}}
    function QN(a,b){return function(c){return HN(b,a,c)}}function RN(a,b){return function(){return HN(b,a,xN(null,a.a?a.a(0):a.call(null,0)))}}
    var SN=function SN(a,b,c,d){return function(f){var k=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;f=x.b(k,Ru);k=x.b(k,DH);f=CL(a,f);if(B(b)){k=new Q(null,2,5,R,[k,C(b)],null);var l=D(b);f=SN.A?SN.A(f,l,c,d):SN.call(null,f,l,c,d);f=IN(d,k,f);}else f=HN(d,c,xN(f,k));return f}},TN=function TN(a,b,c,d){return function(f){var k=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;f=x.b(k,Ru);k=x.b(k,DH);var l=CL(a,f);return kM(b)?JN(d,new Q(null,2,5,R,[k,C(b)],null),function(){var m=D(b);return TN.A?TN.A(l,m,c,d):TN.call(null,
    l,m,c,d)}()):B(b)?IN(d,new Q(null,2,5,R,[k,C(b)],null),function(){var m=D(b);return TN.A?TN.A(l,m,c,d):TN.call(null,l,m,c,d)}()):HN(d,c,xN(l,k))}},UN=function UN(a,b,c,d,e){return function(k){var l=null!=k&&(k.h&64||h===k.D)?fh(qk,k):k;k=x.b(l,Ru);l=x.b(l,DH);if(A.b(l,c))return 0===F(a)?HN(e,d,xN(null,l)):null;k=CL(a,k);IN(e,new Q(null,2,5,R,[l,b],null),UN.K?UN.K(k,b,l,d,e):UN.call(null,k,b,l,d,e));return HN(e,d,xN(k,l))}},VN=function VN(a,b,c,d,e){return function(k){var l=null!=k&&(k.h&64||h===k.D)?
    fh(qk,k):k;k=x.b(l,Ru);l=x.b(l,DH);if(A.b(l,c))return 0===F(a)?HN(e,d,xN(null,l)):null;k=CL(a,k);return A.b(l,F(ZD.a(e)))?HN(e,d,xN(k,l)):IN(e,new Q(null,2,5,R,[l,b],null),VN.K?VN.K(k,b,l,d,e):VN.call(null,k,b,l,d,e))}},WN=function WN(a,b,c,d,e,f,k,l){return function(r){r=null!=r&&(r.h&64||h===r.D)?fh(qk,r):r;var u=x.b(r,Ru);r=x.b(r,DH);u=CL(a,u);var v=b+1;d<=v&&v<=e&&HN(l,k,xN(u,r));return v<e?IN(l,new Q(null,2,5,R,[r,c],null),WN.Ga?WN.Ga(u,v,c,d,e,r,k,l):WN.call(null,u,v,c,d,e,r,k,l)):null}},XN=
    function XN(a,b,c,d,e,f,k,l){return function(r){r=null!=r&&(r.h&64||h===r.D)?fh(qk,r):r;var u=x.b(r,Ru);r=x.b(r,DH);u=CL(a,u);var v=b+1;return A.b(r,F(ZD.a(l)))?d<=v&&v<=e?HN(l,k,xN(u,r)):null:v<e?IN(l,new Q(null,2,5,R,[r,c],null),XN.Ga?XN.Ga(u,v,c,d,e,r,k,l):XN.call(null,u,v,c,d,e,r,k,l)):null}};function YN(a){return function(b){return Ph(qz.a(a),b)}}
    function TM(a,b,c){var d=xn.a(a),e=ZD.a(c);var f=F(e);var k=b+F(d);f=f<k?f:k;e=Bg?e.substring(b,f):zg.call(null,e,b,f);return A.b(d,e)?HN(c,new Q(null,2,5,R,[b,a],null),xN(d,f)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,xn,DA,d],null))}
    function iN(a,b,c){var d=xn.a(a),e=ZD.a(c);var f=F(e);var k=b+F(d);f=f<k?f:k;k=Bg?e.substring(b,f):zg.call(null,e,b,f);return A.b(f,F(e))&&A.b(d,k)?HN(c,new Q(null,2,5,R,[b,a],null),xN(d,f)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,xn,DA,d,RH,!0],null))}
    function UM(a,b,c){var d=xn.a(a),e=ZD.a(c);var f=F(e);var k=b+F(d);f=f<k?f:k;e=Bg?e.substring(b,f):zg.call(null,e,b,f);return A.b(d.toUpperCase(),e.toUpperCase())?HN(c,new Q(null,2,5,R,[b,a],null),xN(d,f)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,xn,DA,d],null))}
    function jN(a,b,c){var d=xn.a(a),e=ZD.a(c);var f=F(e);var k=b+F(d);f=f<k?f:k;k=Bg?e.substring(b,f):zg.call(null,e,b,f);return A.b(f,F(e))&&A.b(d.toUpperCase(),k.toUpperCase())?HN(c,new Q(null,2,5,R,[b,a],null),xN(d,f)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,xn,DA,d,RH,!0],null))}
    function VM(a,b,c){var d=Zy.a(a),e=yJ.a(a),f=ZD.a(c);if(b>=F(f))return MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null)],null));if(65535>=e)return f=f.charCodeAt(b),d<=f&&f<=e?HN(c,new Q(null,2,5,R,[b,a],null),xN(q.a(rg(f)),b+1)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null)],null));f=OM(f,b|0);var k=NM(f);return d<=f&&f<=e?HN(c,new Q(null,2,5,R,[b,a],null),xN(k,b+F(k))):MN(c,new Q(null,2,5,R,[b,a],null),
    b,new n(null,2,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null)],null))}
    function kN(a,b,c){var d=Zy.a(a),e=yJ.a(a),f=ZD.a(c),k=F(f);if(b>=F(f))return MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null)],null));if(65535>=e)return f=f.charCodeAt(b),A.b(b+1,k)&&d<=f&&f<=e?HN(c,new Q(null,2,5,R,[b,a],null),xN(q.a(rg(f)),k)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null)],null));f=OM(f,b|0);var l=NM(f);return A.b(b+F(l),k)&&d<=f&&f<=e?HN(c,new Q(null,2,5,R,[b,a],null),xN(l,k)):MN(c,
    new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,nG,DA,new n(null,3,[Au,!0,Zy,d,yJ,e],null),RH,!0],null))}function ZN(a,b){a=(new RegExp(a.source,["g",jM(a)].join(""))).exec(b);return p(p(a)?0===a.index:a)?C(a):null}function aN(a,b,c){var d=Et.a(a),e=Rv.a(c);e=Ag?e.substring(b):zg.call(null,e,b);e=ZN(d,e);return p(e)?HN(c,new Q(null,2,5,R,[b,a],null),xN(e,b+F(e))):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Et,DA,d],null))}
    function qN(a,b,c){var d=Et.a(a),e=Rv.a(c),f=Ag?e.substring(b):zg.call(null,e,b);f=ZN(d,f);var k=F(e)-b;return p(p(f)?A.b(F(f),k):f)?HN(c,new Q(null,2,5,R,[b,a],null),xN(f,F(e))):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,Et,DA,d,RH,!0],null))}function SM(a,b,c){var d=An.a(a);return IN(c,new Q(null,2,5,R,[b,C(d)],null),SN(IL,D(d),new Q(null,2,5,R,[b,a],null),c))}function hN(a,b,c){var d=An.a(a);return IN(c,new Q(null,2,5,R,[b,C(d)],null),TN(IL,D(d),new Q(null,2,5,R,[b,a],null),c))}
    function YM(a,b,c){var d=wv.a(a);return IN(c,new Q(null,2,5,R,[b,d],null),UN(IL,d,b,new Q(null,2,5,R,[b,a],null),c))}function nN(a,b,c){var d=wv.a(a);return IN(c,new Q(null,2,5,R,[b,d],null),VN(IL,d,b,new Q(null,2,5,R,[b,a],null),c))}
    function ZM(a,b,c){var d=wv.a(a),e=qx.a(a),f=bw.a(a);return 0===e?(HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)),1<=f?IN(c,new Q(null,2,5,R,[b,d],null),WN(IL,0,d,1,f,b,new Q(null,2,5,R,[b,a],null),c)):null):IN(c,new Q(null,2,5,R,[b,d],null),WN(IL,0,d,e,f,b,new Q(null,2,5,R,[b,a],null),c))}
    function oN(a,b,c){var d=wv.a(a),e=qx.a(a),f=bw.a(a);return 0===e?(HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)),1<=f?IN(c,new Q(null,2,5,R,[b,d],null),XN(IL,0,d,1,f,b,new Q(null,2,5,R,[b,a],null),c)):null):IN(c,new Q(null,2,5,R,[b,d],null),XN(IL,0,d,e,f,b,new Q(null,2,5,R,[b,a],null),c))}function $M(a,b,c){var d=wv.a(a);IN(c,new Q(null,2,5,R,[b,d],null),UN(IL,d,b,new Q(null,2,5,R,[b,a],null),c));return HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b))}
    function pN(a,b,c){var d=wv.a(a);return A.b(b,F(ZD.a(c)))?HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)):IN(c,new Q(null,2,5,R,[b,d],null),VN(IL,d,b,new Q(null,2,5,R,[b,a],null),c))}
    function RM(a,b,c){var d=An.a(a);d=B(d);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k);IN(c,new Q(null,2,5,R,[b,l],null),QN(new Q(null,2,5,R,[b,a],null),c));k+=1;}else if(d=B(d))e=d,Wf(e)?(d=re(e),f=se(e),e=d,l=F(d),d=f,f=l):(l=C(e),IN(c,new Q(null,2,5,R,[b,l],null),QN(new Q(null,2,5,R,[b,a],null),c)),d=D(e),e=null,f=0),k=0;else return null}
    function gN(a,b,c){var d=An.a(a);d=B(d);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k);JN(c,new Q(null,2,5,R,[b,l],null),QN(new Q(null,2,5,R,[b,a],null),c));k+=1;}else if(d=B(d))e=d,Wf(e)?(d=re(e),f=se(e),e=d,l=F(d),d=f,f=l):(l=C(e),JN(c,new Q(null,2,5,R,[b,l],null),QN(new Q(null,2,5,R,[b,a],null),c)),d=D(e),e=null,f=0),k=0;else return null}
    function dN(a,b,c){var d=Xn.a(a),e=Vn.a(a);d=new Q(null,2,5,R,[b,d],null);var f=new Q(null,2,5,R,[b,e],null),k=QN(new Q(null,2,5,R,[b,a],null),c);IN(c,d,k);return LN(c,d,function(){return IN(c,f,k)})}function sN(a,b,c){var d=Xn.a(a),e=Vn.a(a);d=new Q(null,2,5,R,[b,d],null);var f=new Q(null,2,5,R,[b,e],null),k=QN(new Q(null,2,5,R,[b,a],null),c);JN(c,d,k);return LN(c,d,function(){return JN(c,f,k)})}
    function XM(a,b,c){var d=wv.a(a);IN(c,new Q(null,2,5,R,[b,d],null),QN(new Q(null,2,5,R,[b,a],null),c));return HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b))}function mN(a,b,c){var d=wv.a(a);JN(c,new Q(null,2,5,R,[b,d],null),QN(new Q(null,2,5,R,[b,a],null),c));return A.b(b,F(ZD.a(c)))?HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Mp,DA,no],null))}
    function QM(a,b,c){var d=wo.a(c);var e=FJ.a(a);d=x.c(d,e,e);return IN(c,new Q(null,2,5,R,[b,d],null),QN(new Q(null,2,5,R,[b,a],null),c))}function fN(a,b,c){var d=wo.a(c);var e=FJ.a(a);d=x.c(d,e,e);return JN(c,new Q(null,2,5,R,[b,d],null),QN(new Q(null,2,5,R,[b,a],null),c))}function bN(a,b,c){var d=wv.a(a);return IN(c,new Q(null,2,5,R,[b,d],null),RN(new Q(null,2,5,R,[b,a],null),c))}
    function rN(a,b,c){return A.b(b,F(ZD.a(c)))?bN(a,b,c):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Jv,DA,no],null))}
    function cN(a,b,c){var d=wv.a(a),e=new Q(null,2,5,R,[b,d],null);if(p(EN(c,e)))return MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,1,[X,uA],null));IN(c,e,function(){var f=new xl(function(){return MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,uA,DA,new n(null,1,[iJ,WL(d,!1)],null)],null))});return function(){return Bl(f)}}());return LN(c,e,function(){return Tc(EN(c,e))?HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)):null})}
    function WM(a,b,c){return HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b))}function lN(a,b,c){return A.b(b,F(ZD.a(c)))?HN(c,new Q(null,2,5,R,[b,a],null),xN(null,b)):MN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Ps,DA,no],null))}function $N(a,b,c){p(c)?IN(a,new Q(null,2,5,R,[0,b],null),YN(a)):JN(a,new Q(null,2,5,R,[0,b],null),YN(a));}
    function aO(a,b,c,d){a=wN(a,c,c,-1,null);$N(a,DM(b),d);b=PN(a,null);if(p(b))c=C(b);else {b=t(lC.a(a));a:{d=DH.a(b);for(var e=a=1,f=0;;){if(A.b(d,f)){d=new n(null,2,[en,a,ux,e],null);break a}A.b("\n",x.b(c,f))?(f+=1,a+=1,e=1):(f+=1,e+=1);}}c=wk.g(G([b,d,new n(null,1,[ZD,eM(en.a(d),c)],null)]));}return c}function NN(a,b,c,d,e){return Kf(a.b?a.b(b,c):a.call(null,b,c),new n(null,2,[Yv,d,hp,e],null))}function bO(a,b){return (null!=a?a.h&262144||h===a.He||(a.h?0:Xc(Od,a)):Xc(Od,a))?Kf(a,wk.g(G([b,Lf(a)]))):a}
    var cO=function cO(a,b){var d=X.a(b);d=a.a?a.a(d):a.call(null,d);return p(d)?bO(fh(d,Wh.b(Jh(cO,a),sE.a(b))),Lf(b)):p(X.a(b))?K.c(b,sE,Wh.b(Jh(cO,a),sE.a(b))):b},dO=function dO(a,b){if(Tf(b)&&B(b)){var d=C(b);d=a.a?a.a(d):a.call(null,d);return p(d)?bO(fh(d,Wh.b(Jh(dO,a),D(b))),Lf(b)):Kf(ji.b(new Q(null,1,5,R,[C(b)],null),Wh.b(Jh(dO,a),D(b))),Lf(b))}return b},eO=function eO(a,b){return "string"===typeof b?b:p(M(b)?X.a(b):!1)?cO(a,b):Vf(b)&&C(b)instanceof z?dO(a,b):Tf(b)?Kf(Wh.b(Jh(eO,a),b),Lf(b)):b instanceof
    tN?b:iM(G(["Invalid parse-tree, not recognized as either enlive or hiccup format."]))};function fO(a,b,c){if(Cg(c)){var d=fh(O,Wh.b(a,c));return b.a?b.a(d):b.call(null,d)}return Oi(c)?(d=new Gi(function(){var e=Dd(c);return a.a?a.a(e):a.call(null,e)}(),function(){var e=Ed(c);return a.a?a.a(e):a.call(null,e)}()),b.a?b.a(d):b.call(null,d)):$f(c)?(d=Vk(Wh.b(a,c)),b.a?b.a(d):b.call(null,d)):Uf(c)?(d=gd.c(function(e,f){return Cf.b(e,a.a?a.a(f):a.call(null,f))},c,c),b.a?b.a(d):b.call(null,d)):Qf(c)?(d=ji.b(Ef(c),Wh.b(a,c)),b.a?b.a(d):b.call(null,d)):b.a?b.a(c):b.call(null,c)}
    var gO=function gO(a,b){return fO(Jh(gO,a),a,b)};function hO(a){function b(c){var d=J(c,0,null);c=J(c,1,null);return "string"===typeof d?new Q(null,2,5,R,[Kg.a(d),c],null):new Q(null,2,5,R,[d,c],null)}return gO(function(c){return M(c)?ji.b(S,Wh.b(b,c)):c},a)}function iO(a){return null==a?null:rg(a)}function jO(a,b,c,d,e){this.vc=a;this.form=b;this.Mb=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=jO.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "splicing?":return this.vc;case "form":return this.form;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.tools.reader.impl.utils.ReaderConditional{",", ","}",c,Xg.b(new Q(null,2,5,R,[new Q(null,2,5,R,[TI,this.vc],null),new Q(null,2,5,R,[Dr,this.form],null)],null),this.j))};g.ua=function(){return new gj(this,2,new Q(null,2,5,R,[TI,Dr],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-209062840^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.vc,b.vc)&&A.b(this.form,b.form)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,2,[TI,null,Dr,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new jO(this.vc,this.form,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(TI,b):P.call(null,TI,b))?new jO(c,this.form,this.Mb,this.j,null):p(P.b?P.b(Dr,b):P.call(null,Dr,b))?new jO(this.vc,c,this.Mb,this.j,null):new jO(this.vc,this.form,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,2,5,R,[new Gi(TI,this.vc),new Gi(Dr,this.form)],null),this.j))};g.O=function(a,b){return new jO(this.vc,this.form,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    function kO(a,b){return new jO(b,a,null,null,null)}g.ma=h;g.S=function(a,b,c){ce(b,["#?",p(this.vc)?"@":null].join(""));return hl(this.form,b,c)};var lO=/[\s]/;function mO(a){return null==a?null:","===a?!0:lO.test(a)}function nO(a){return null==a?null:!/[^0-9]/.test(a)}function oO(a){return a instanceof z?Gf([a,!0]):a instanceof w?new n(null,1,[X,a],null):"string"===typeof a?new n(null,1,[X,a],null):a}var pO=Oh(0);
    function qO(a,b){return function e(d){return new Mg(null,function(){for(;;){var f=B(d);if(f){if(Wf(f)){var k=re(f),l=F(k),m=Qg(l);return function(){for(var u=0;;)if(u<l){var v=qd(k,u),y=m;if(v instanceof w||v instanceof z){var E=Uk(Ig,Lg)(v),H=J(E,0,null);E=J(E,1,null);var T=v instanceof w?Me:Kg;v=null==H?T.b?T.b(a,E):T.call(null,a,E):A.b("_",H)?T.a?T.a(E):T.call(null,E):v;}y.add(v);u+=1;}else return !0}()?Sg(Ug(m),e(se(f))):Sg(Ug(m),null)}var r=C(f);return vf(r instanceof w||r instanceof z?function(){var u=
    Uk(Ig,Lg)(r),v=J(u,0,null);u=J(u,1,null);var y=r instanceof w?Me:Kg;return null==v?y.b?y.b(a,u):y.call(null,a,u):A.b("_",v)?y.a?y.a(u):y.call(null,u):r}():r,e(Re(f)))}return null}},null,null)}(b)}function rO(a){var b=J(a,0,null);a=J(a,1,null);return p(b)?null:a}function sO(a,b){a=parseInt(a,b);return p(isNaN(a))?-1:a}function tO(a){if(null!=a&&null!=a.xa)a=a.xa(a);else {var b=tO[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=tO._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Reader.read-char",a);}return a}function uO(a){if(null!=a&&null!=a.Dc)a=a.Dc(a);else {var b=uO[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=uO._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Reader.peek-char",a);}return a}
    function vO(a,b){if(null!=a&&null!=a.Fd)a.Fd(a,b);else {var c=vO[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=vO._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("IPushbackReader.unread",a);}}function wO(a){if(null!=a&&null!=a.Hd)a=a.Hd(a);else {var b=wO[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=wO._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IndexingReader.get-line-number",a);}return a}
    function xO(a){if(null!=a&&null!=a.Gd)a=a.Gd(a);else {var b=xO[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=xO._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IndexingReader.get-column-number",a);}return a}function yO(a){if(null!=a&&null!=a.Me)a=a.Me(a);else {var b=yO[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=yO._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IndexingReader.get-file-name",a);}return a}
    function zO(a,b){this.ha=a;this.Qf=b;this.sd=0;}zO.prototype.xa=function(){if(this.Qf>this.sd){var a=this.ha.charAt(this.sd);this.sd+=1;return a}return null};zO.prototype.Dc=function(){return this.Qf>this.sd?this.ha.charAt(this.sd):null};function AO(a,b){this.Nf=a;this.ca=b;this.Vb=this.xe=1;}AO.prototype.xa=function(){var a=this.Vb<this.xe?this.ca[this.Vb]:this.Nf.xa(null);this.Vb<this.xe&&(this.Vb+=1);return iO(a)};
    AO.prototype.Dc=function(){var a=this.Vb<this.xe?this.ca[this.Vb]:this.Nf.Dc(null);return iO(a)};AO.prototype.Fd=function(a,b){if(p(b)){if(0===this.Vb)throw Error("Pushback buffer is full");--this.Vb;return this.ca[this.Vb]=b}return null};function BO(a){return null!=a?h===a.Yh?!0:!1:!1}function CO(a){a=new zO(a,F(a));a:{var b=Array(1);if($f(null))for(var c=0,d=B(null);;)if(d&&1>c)b[c]=C(d),c+=1,d=D(d);else break a;else for(c=0;;)if(1>c)b[c]=null,c+=1;else break}return new AO(a,b)}function DO(a,b,c,d){var e=F(b);a=p(a)?0:10<e?10:e;b=Wh.b(Jh(EO,!0),Xh.b(a,b));b=fh(q,di(" ",b));e=a<e?"...":null;return [q.a(c),q.a(b),e,q.a(d)].join("")}var EO,uS=Oh(S),vS=Oh(S),wS=Oh(S),xS=Oh(S),yS=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));EO=new dm(Me.b("cljs.tools.reader.impl.inspect","inspect*"),function(a,b){return null==b?$C:"string"===typeof b?xn:b instanceof z?ru:"number"===typeof b?ru:b instanceof w?ru:Vf(b)?Uu:Cg(b)?JI:M(b)?Tv:Rf(b)?yA:A.b(b,!0)?ru:A.b(b,!1)?ru:Yc(b)},yS,uS,vS,wS,xS);
    EO.v(null,xn,function(a,b){a=p(a)?5:20;var c=b.length>a?'..."':'"',d=b.length;return ['"',q.a(b.substring(0,a<d?a:d)),c].join("")});EO.v(null,ru,function(a,b){return q.a(b)});EO.v(null,Qe,function(){return "\x3cindexed seq\x3e"});EO.v(null,kj,function(){return "\x3cmap seq\x3e"});EO.v(null,Pj,function(){return "\x3cmap seq\x3e"});EO.v(null,Fg,function(){return "\x3ccons\x3e"});EO.v(null,Mg,function(){return "\x3clazy seq\x3e"});EO.v(null,$C,function(){return "nil"});
    EO.v(null,JI,function(a,b){return DO(a,b,"(",")")});EO.v(null,Tv,function(a,b){var c=F(b),d=p(a)?0:c;b=fh(Xg,Xh.b(d,b));return DO(a,b,"{",c>d?"...}":"}")});EO.v(null,yA,function(a,b){return DO(a,b,"#{","}")});EO.v(null,Uu,function(a,b){return DO(a,b,"[","]")});EO.v(null,em,function(a,b){return ol.g(G([Yc(b)]))});function KO(a,b,c){b=new n(null,2,[U,fr,FC,b],null);a=BO(a)?K.g(b,OD,yO(a),G([en,wO(a),sq,xO(a)])):b;var d=OD.a(a);b=en.a(a);var e=sq.a(a);d=p(d)?[q.a(d)," "].join(""):null;b=p(b)?["[line ",q.a(b),", col ",q.a(e),"]"].join(""):null;c=ih(q,d,b,p(p(d)?d:b)?" ":null,c);throw im(c,a);}function LO(a,b){return KO(a,Ip,G([fh(q,b)]))}function MO(a,b){return KO(a,gA,G([fh(q,b)]))}function NO(a,b){return KO(a,gv,G([fh(q,b)]))}
    function OO(a,b,c,d,e){return NO(a,G(["Unexpected EOF while reading ",p(e)?["item ",q.a(e)," of "].join(""):null,Lg(b),p(c)?[", starting at line ",q.a(c)," and column ",q.a(d)].join(""):null,"."]))}function PO(a,b,c,d){LO(a,G(["The map literal starting with ",EO.b(!1,C(d)),p(b)?[" on line ",q.a(b)," column ",q.a(c)].join(""):null," contains ",F(d)," form(s). Map literals must contain an even number of forms."]));}function QO(a){throw MO(null,G(["Invalid unicode literal: \\",a,"."]));}
    function RO(a,b){return LO(a,G(["Invalid unicode escape: \\u",b,"."]))}function SO(a,b,c){return LO(a,G(["Invalid ",Lg(b),": ",c,"."]))}function TO(a,b){return NO(a,G(["Unexpected EOF while reading start of ",Lg(b),"."]))}function UO(a,b,c){return LO(a,G(["Invalid character: ",c," found while reading ",Lg(b),"."]))}function VO(a){return NO(a,G(["Unexpected EOF while reading dispatch character."]))}
    function WO(a,b,c){a:{var d=b instanceof z?b.da:null;switch(d){case "regex":d='#"';break a;case "string":d='"';break a;default:throw Error(["No matching clause: ",q.a(d)].join(""));}}return NO(a,G(["Unexpected EOF reading ",Lg(b)," starting ",gh(q,d,c),"."]))}function XO(a,b){return MO(null,G(["Invalid digit ",a," in unicode character \\",b,"."]))}function YO(a,b){return MO(a,G(["Invalid digit ",b," in unicode character."]))}
    function ZO(a,b,c){return MO(a,G(["Invalid unicode literal. Unicode literals should be ",c,"characters long.  ","value suppled is ",b,"characters long."]))}function $O(a,b){return LO(a,G(["Invalid character literal \\u",b,"."]))}function aP(a,b){return LO(a,G(["Invalid octal escape sequence in a character literal:",b,". Octal escape sequences must be 3 or fewer digits."]))}function bP(a){return LO(a,G(["Octal escape sequence must be in range [0, 377]."]))}
    function cP(a){return NO(a,G(["Unexpected EOF while reading character."]))}function dP(a,b){return LO(a,G(["Unsupported escape character: \\",b,"."]))}function eP(a){return LO(a,G(["A single colon is not a valid keyword."]))}function fP(a,b){LO(a,G(["Metadata cannot be ",EO.b(!1,b),". Metadata must be a Symbol, Keyword, String or Map."]));}function gP(a,b){return LO(a,G(["Metadata can not be applied to ",EO.b(!1,b),". ","Metadata can only be applied to IMetas."]))}
    function hP(a,b){return LO(a,G(["Namespaced map with namespace ",b," does not specify a map."]))}function iP(a,b){return LO(a,G(["Invalid value used as namespace in namespaced map: ",b,"."]))}function jP(a,b){LO(a,G(["Invalid reader tag: ",EO.b(!1,b),". Reader tags must be symbols."]));}function kP(a,b){return LO(a,G(["No reader function for tag ",EO.b(!1,b),"."]))}
    function lP(a,b){b=function(c){return function f(e){return new Mg(null,function(){for(var k=e;;)if(k=B(k)){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u),y=J(v,0,null);1<J(v,1,null)&&r.add(y);u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}r=C(k);l=J(r,0,null);if(1<J(r,1,null))return vf(l,f(Re(k)));k=Re(k);}else return null},null,null)}(Tk(c))}(b);return ih(q,a,1<F(b)?"s":null,": ",di(", ",b))}
    function mP(a,b,c){b=Lg(b);return LO(a,G([lP([String(b.charAt(0)).toUpperCase()+String(b.substr(1)).toLowerCase()," literal contains duplicate key"].join(""),c)]))}function nP(a,b){return p(b)?NO(a,G(["EOF while reading, starting at line ",b,"."])):NO(a,G(["EOF while reading."]))}function oP(a){for(var b=a.xa(null);;)if(mO.a?mO.a(b):mO.call(null,b))b=a.xa(null);else return b}var pP=/^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/,qP=/([-+]?[0-9]+)\/([0-9]+)/,rP=/([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;function sP(a,b){a=Xk(a,b);return J(a,0,null)===b}
    function tP(a){if(sP(pP,a)){var b=Ni(Xk(pP,a));if(null!=(b.a?b.a(2):b.call(null,2)))a=0;else {a="-"===(b.a?b.a(1):b.call(null,1));b=null!=(b.a?b.a(3):b.call(null,3))?new Q(null,2,5,R,[b.a?b.a(3):b.call(null,3),10],null):null!=(b.a?b.a(4):b.call(null,4))?new Q(null,2,5,R,[b.a?b.a(4):b.call(null,4),16],null):null!=(b.a?b.a(5):b.call(null,5))?new Q(null,2,5,R,[b.a?b.a(5):b.call(null,5),8],null):null!=(b.a?b.a(7):b.call(null,7))?new Q(null,2,5,R,[b.a?b.a(7):b.call(null,7),parseInt(b.a?b.a(6):b.call(null,
    6))],null):new Q(null,2,5,R,[null,null],null);var c=b.a?b.a(0):b.call(null,0);null==c?a=null:(b=parseInt(c,b.a?b.a(1):b.call(null,1)),a=a?-1*b:b,a=p(isNaN(a))?null:a);}}else sP(rP,a)?(b=Ni(Xk(rP,a)),a=null!=(b.a?b.a(4):b.call(null,4))?parseFloat(b.a?b.a(1):b.call(null,1)):parseFloat(a)):sP(qP,a)?(b=Ni(Xk(qP,a)),a=b.a?b.a(1):b.call(null,1),b=b.a?b.a(2):b.call(null,2),a=p(Xk(/^\+/,a))?a.substring(1):a,a=parseInt(a)/parseInt(b)):a=null;return a}
    function uP(a){if(""===a||!0===/:$/.test(a)||!0===/^::/.test(a))return null;var b=a.indexOf("/"),c=0<b?a.substring(0,b):null;if(null!=c){b+=1;if(b===F(a))return null;a=a.substring(b);return nO(pf(a,0))||""===a||!1!==/:$/.test(c)||"/"!==a&&-1!==a.indexOf("/")?null:new Q(null,2,5,R,[c,a],null)}return "/"===a||-1===a.indexOf("/")?new Q(null,2,5,R,[null,a],null):null}
    var vP=function vP(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return vP.g(arguments[0],1<c.length?new Qe(c.slice(1),0,null):null)};vP.g=function(a){for(;;){var b=a.xa(null);if("\n"===b||"\n"===b||null==b)break}return a};vP.F=1;vP.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    function wP(a){return function(){function b(d,e){var f=null;if(1<arguments.length){f=0;for(var k=Array(arguments.length-1);f<k.length;)k[f]=arguments[f+1],++f;f=new Qe(k,0,null);}return c.call(this,d,f)}function c(d){return LO(d,G([a]))}b.F=1;b.G=function(d){var e=C(d);d=Re(d);return c(e)};b.g=c;return b}()}function xP(a){switch(a){case '"':case ";":case "@":case "^":case "`":case "~":case "(":case ")":case "[":case "]":case "{":case "}":case "\\":return !0;default:return !1}}var yP=new zc;function zP(a,b,c){if(null==c)return TO(a,b);yP.clear();for(b=c;;){if(mO(b)||xP(b)||null==b)return null!=b&&a.Fd(null,b),yP.toString();yP.append(b);b=a.xa(null);}}
    function AP(a,b,c,d){b=a.xa(null);if(p(b)){var e=BP.a?BP.a(b):BP.call(null,b);if(p(e))return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d);a.Fd(null,b);return CP.A?CP.A(a,b,c,d):CP.call(null,a,b,c,d)}return VO(a)}function DP(a,b){return LO(a,G(["Unmatched delimiter ",b,"."]))}function EP(a){for(var b=new zc,c=a.xa(null);;){if('"'===c)return Zk(q.a(b));if(null==c)return WO(a,Fx,G([b]));b.append(c);"\\"===c&&(c=a.xa(null),null==c&&WO(a,Fx,G([b])),b.append(c));c=a.xa(null);}}
    function FP(a,b,c){b=1+b;F(a)!==b&&QO(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=sO(pf(a,d),c);if(-1===f)return XO(pf(a,d),a);e=f+e*c;d+=1;}}function GP(a,b,c,d,e){for(var f=1,k=sO(b,c);;){if(-1===k)return YO(a,b);if(f!==d){var l=a.Dc(null);var m=mO(l);m||(m=HP.a?HP.a(l):HP.call(null,l),m=p(m)?m:null==l);if(p(m))return p(e)?ZO(a,f,d):String.fromCharCode(k);m=sO(l,c);a.xa(null);if(-1===m)return YO(a,l);k=m+k*c;f+=1;}else return String.fromCharCode(k)}}
    function IP(a){var b=a.xa(null);if(null!=b){b=xP(b)||mO(b)?q.a(b):zP(a,PF,b);var c=b.length;if(1===c)return b.charAt(0);if(A.b(b,"newline"))return "\n";if(A.b(b,"space"))return " ";if(A.b(b,"tab"))return "\t";if(A.b(b,"backspace"))return "\b";if(A.b(b,"formfeed"))return "\f";if(A.b(b,"return"))return "\r";if(p(0==b.lastIndexOf("u",0)))return b=FP(b,4,16),c=b.charCodeAt(0),55295<c&&57344>c?$O(a,c.toString(16)):b;if(p(0==b.lastIndexOf("o",0))){--c;if(3<c)return aP(a,b);c=FP(b,c,8);return 255>=parseInt(b.substring(1),
    8)?c:bP(a)}return LO(a,G(["Unsupported character: ",b,"."]))}return cP(a)}function JP(a){return BO(a)?new Q(null,2,5,R,[a.Hd(null),a.Gd(null)-1|0],null):null}function KP(a){return BO(a)?new Q(null,2,5,R,[a.Hd(null),a.Gd(null)],null):null}var LP={},MP={},NP=!1;
    function OP(a,b,c,d,e){var f=NP;NP=!0;try{a:for(var k=JP(c),l=J(k,0,null),m=J(k,1,null),r=iO(b),u=je(I);;){var v=PP?PP(c,!1,LP,r,d,e):QP.call(null,c,!1,LP,r,d,e);if(v===MP){var y=le(u);break a}if(v===LP){y=OO(c,a,l,m,F(u));break a}u=Yg.b(u,v);}return y}finally{NP=f;}}
    function RP(a,b,c,d){var e=JP(a);b=J(e,0,null);e=J(e,1,null);c=OP(JI,")",a,c,d);var f=KP(a);d=J(f,0,null);f=J(f,1,null);return Kf(Pf(c)?Se:fh(O,c),p(b)?wk.g(G([function(){var k=yO(a);return p(k)?new n(null,1,[OD,k],null):null}(),new n(null,4,[en,b,ux,e,fz,d,ho,f],null)])):null)}
    function SP(a,b,c,d){var e=JP(a);b=J(e,0,null);e=J(e,1,null);c=OP(Uu,"]",a,c,d);var f=KP(a);d=J(f,0,null);f=J(f,1,null);return Kf(c,p(b)?wk.g(G([function(){var k=yO(a);return p(k)?new n(null,1,[OD,k],null):null}(),new n(null,4,[en,b,ux,e,fz,d,ho,f],null)])):null)}
    function TP(a,b,c,d){var e=JP(a);b=J(e,0,null);e=J(e,1,null);c=OP(Tv,"}",a,c,d);d=F(c);var f=Sk(2,c),k=Fk(f),l=KP(a),m=J(l,0,null);l=J(l,1,null);!Fh(d)&&PO(a,b,e,c);A.b(F(k),F(f))||mP(a,Tv,f);return Kf(d<=2*pj?rj(hg(c)):Wj(hg(c)),p(b)?wk.g(G([function(){var r=yO(a);return p(r)?new n(null,1,[OD,r],null):null}(),new n(null,4,[en,b,ux,e,fz,m,ho,l],null)])):null)}
    function UP(a,b){for(var c=function(){var k=new zc;k.append(b);return k}(),d=a.xa(null);;){if(p(function(){var k=mO(d);if(k)return k;k=HP.a?HP.a(d):HP.call(null,d);return p(k)?k:null==d}())){var e=q.a(c);a.Fd(null,d);var f=tP(e);return p(f)?f:LO(a,G(["Invalid number: ",e,"."]))}e=function(){var k=c;k.append(d);return k}();f=a.xa(null);c=e;d=f;}}
    function VP(a){var b=a.xa(null);switch(b){case "t":return "\t";case "r":return "\r";case "n":return "\n";case "\\":return "\\";case '"':return '"';case "b":return "\b";case "f":return "\f";case "u":return b=a.xa(null),-1===parseInt(b|0,16)?RO(a,b):GP(a,b,16,4,!0);default:return nO(b)?(b=GP(a,b,8,3,!1),255<(b|0)?bP(a):b):dP(a,b)}}
    function WP(a){for(var b=new zc,c=a.xa(null);;){if(null==c)return WO(a,xn,G(['"',b]));switch(c){case "\\":var d=function(){var f=b;f.append(VP(a));return f}(),e=a.xa(null);b=d;c=e;continue;case '"':return q.a(b);default:d=function(){var f=b;f.append(c);return f}(),e=a.xa(null),b=d,c=e;}}}function XP(a,b,c){if(null==b)return null;var d=yO(a);d=null==d?null:new n(null,1,[OD,d],null);var e=KP(a);a=J(e,0,null);e=J(e,1,null);return wk.g(G([d,new n(null,4,[en,b,ux,c,fz,a,ho,e],null)]))}
    function YP(a,b){var c=JP(a),d=J(c,0,null);c=J(c,1,null);b=zP(a,xu,b);if(null==b)return null;switch(b){case "nil":return null;case "true":return !0;case "false":return !1;case "/":return dA;default:var e=uP(b);return null!=e?Me.b(e.W(null,0),e.W(null,1)).O(null,XP(a,d,c)):SO(a,xu,b)}}
    function ZP(a){var b=a.xa(null);if(mO(b))return eP(a);b=zP(a,FJ,b);var c=uP(b);if(null!=c){var d=c.W(null,0);c=c.W(null,1);if(":"===b.charAt(0)){if(null!=d)return d=x.b(null,Me.a(d.substring(1))),p(d)?Kg.b(q.a(d),c):SO(a,FJ,[":",q.a(b)].join(""));d=null;return p(d)?Kg.b(q.a(d),c.substring(1)):LO(a,G(["Invalid token: :",b]))}return Kg.b(d,c)}return SO(a,FJ,[":",q.a(b)].join(""))}
    function $P(a){return function(b,c,d,e){return new Df(null,a,new Df(null,aQ?aQ(b,!0,null,d,e):QP.call(null,b,!0,null,d,e),null,1,null),2,null)}}function bQ(a,b,c,d){var e=JP(a);b=J(e,0,null);e=J(e,1,null);var f=oO(aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d));M(f)||fP(a,f);c=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);return null!=c&&(c.h&131072||h===c.xd)?(a=p(p(b)?$f(c):b)?K.g(f,en,b,G([ux,e])):f,null!=c&&(c.h&262144||h===c.He)?Kf(c,wk.g(G([Lf(c),a]))):c.H=a):gP(a,c)}
    function cQ(a,b,c,d){var e=JP(a);b=J(e,0,null);e=J(e,1,null);e=p(e)?e-1|0:null;c=OP(yA,"}",a,c,d);d=Fk(c);var f=KP(a),k=J(f,0,null);f=J(f,1,null);A.b(F(c),F(d))||LO(a,G([mP(a,yA,c)]));return Kf(d,p(b)?wk.g(G([function(){var l=yO(a);return p(l)?new n(null,1,[OD,l],null):null}(),new n(null,4,[en,b,ux,e,fz,k,ho,f],null)])):null)}function dQ(a,b,c,d){aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);return a}
    function eQ(a,b,c,d){b=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);return A.b(iy,b)?Number.NaN:A.b(QC,b)?Number.NEGATIVE_INFINITY:A.b(Rw,b)?Number.POSITIVE_INFINITY:LO(a,G([["Invalid token: ##",q.a(b)].join("")]))}var fQ=new Bk(null,new n(null,2,[ks,null,Ep,null],null),null);function gQ(a,b,c,d){var e=hQ;hQ=!0;try{var f=PP?PP(b,!1,LP,")",c,d):QP.call(null,b,!1,LP,")",c,d);f===LP&&nP(b,0>a?a:!1);return f===MP?MP:null}finally{hQ=e;}}var iQ={};
    function jQ(a,b,c,d){var e=BO(a)?wO(a):-1;a:for(var f=iQ,k=null;;)if(f===iQ){f=e;k=a;var l=c,m=d,r=PP?PP(k,!1,LP,")",l,m):QP.call(null,k,!1,LP,")",l,m);r===LP&&nP(k,0>f?f:!1);if(A.b(r,MP))f=MP;else {var u=k,v=r;p(x.b(fQ,v))&&LO(u,G(["Feature name ",v," is reserved"]));u=k;v=l;(r instanceof z?A.b(em,r)||N(x.b(v,it),r):LO(u,G(["Feature should be a keyword: ",r])))?(l=PP?PP(k,!1,LP,")",l,m):QP.call(null,k,!1,LP,")",l,m),l===LP&&nP(k,0>f?f:!1),l===MP&&(0>f?LO(k,G(["read-cond requires an even number of forms"])):
    LO(k,G(["read-cond starting on line ",f," requires an even number of forms"]))),f=l):(f=gQ(f,k,l,m),f=p(f)?f:iQ);}if(f===MP){c=MP;break a}k=null;}else if(k!==MP)k=gQ(e,a,c,d);else {c=f;break a}return c===MP?a:p(b)?null!=c&&(c.h&16777216||h===c.Ee)?(b=hg(c),qb(Mb,d,0,0).apply(null,b),a):LO(a,G(["Spliced form list in read-cond-splicing must implement ISequential"])):c}
    function kQ(a,b,c,d){if(Tc(function(){if(p(c)){var k=Gx.a(c),l=new Bk(null,new n(null,2,[hB,null,jz,null],null),null);return l.a?l.a(k):l.call(null,k)}return c}()))throw im("Conditional read not allowed",new n(null,1,[U,Vx],null));var e=a.xa(null);if(p(e))if(e=(b=A.b(e,"@"))?a.xa(null):e,b&&(p(NP)||LO(a,G(["cond-splice not in list"]))),e=mO(e)?oP(a):e,p(e)){if(kh.b(e,"("))throw im("read-cond body must be a list",new n(null,1,[U,Vx],null));var f=hQ;hQ=function(){var k=hQ;return p(k)?k:A.b(hB,Gx.a(c))}();
    try{return p(hQ)?kO(RP(a,e,c,d),b):jQ(a,b,c,d)}finally{hQ=f;}}else return cP(a);else return cP(a)}var lQ=null;function mQ(a){return Me.a([-1===a?"rest":["p",q.a(a)].join(""),"__",q.a(Rh.b(pO,$e)),"#"].join(""))}
    function nQ(a,b,c,d){if(p(lQ))throw im("Nested #()s are not allowed",new n(null,1,[U,oB],null));b=lQ;lQ=sk();try{vO(a,"(");var e=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);var f=be(lQ),k=f?function(){var l=Dd(C(f)),m=function(){for(var r=1,u=je(I);;){if(r>l)return le(u);var v=r+1;u=Yg.b(u,function(){var y=x.b(lQ,r);return p(y)?y:mQ(r)}());r=v;}}();return p(lQ.call(null,-1))?Cf.g(m,nm,G([lQ.call(null,-1)])):m}():I;return new Df(null,Cm,new Df(null,k,new Df(null,e,null,1,null),2,null),3,null)}finally{lQ=
    b;}}function oQ(a){if(p(lQ)){var b=lQ.call(null,a);if(p(b))return b;b=mQ(a);lQ=K.c(lQ,a,b);return b}throw im("Arg literal not in #()",new n(null,1,[U,oB],null));}function pQ(a,b,c,d){if(null==lQ)return YP(a,b);b=a.Dc(null);if(mO(b)||xP(b)||null==b)return oQ(1);if(A.b(b,"\x26"))return a.xa(null),oQ(-1);a=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);if(bg(a))return oQ(a);throw im("Arg literal must be %, %\x26 or %integer",new n(null,1,[U,oB],null));}var qQ=null;
    function rQ(a,b,c,d){b=a.Dc(null);p(b)?A.b("@",b)?(b=$P(RD),a.xa(null),a=b(a,"@",c,d)):a=$P(Zu)(a,"~",c,d):a=null;return a}function sQ(a){return $f(a)&&A.b(C(a),RD)}function tQ(a){return $f(a)&&A.b(C(a),Zu)}function uQ(a){a=B(a);for(var b=je(I);;)if(a){var c=C(a);a=D(a);b=Yg.b(Yg.b(b,Dd(c)),Ed(c));}else return B(le(b))}
    function vQ(a){if(Tc(qQ))throw im("Gensym literal not in syntax-quote",new n(null,1,[U,oB],null));var b=x.b(qQ,a);if(p(b))return b;b=Me.a([Bg(Lg(a),0,Lg(a).length-1),"__",q.a(Rh.b(pO,$e)),"__auto__"].join(""));qQ=K.c(qQ,a,b);return b}function wQ(a,b){null!=a&&(a.h&262144||h===a.He)&&B(Hf.g(Lf(a),en,G([ux,fz,ho,OD,lz])))&&(a=Lf(a),a=xQ.a?xQ.a(a):xQ.call(null,a),b=new Df(null,zx,new Df(null,b,new Df(null,a,null,1,null),2,null),3,null));return b}
    function yQ(a,b){a:{b=B(b);for(var c=je(I);;)if(b){var d=C(b);c=Yg.b(c,tQ(d)?new Df(null,IG,new Df(null,zf(d),null,1,null),2,null):sQ(d)?zf(d):new Df(null,IG,new Df(null,xQ.a?xQ.a(d):xQ.call(null,d),null,1,null),2,null));b=D(b);}else {b=B(le(c));break a}}b=new Df(null,sx,new Df(null,vf(gt,b),null,1,null),2,null);return p(a)?new Df(null,uG,new Df(null,a,new Df(null,b,null,1,null),2,null),3,null):b}function zQ(a){throw im("resolve-symbol is not implemented",new n(null,1,[mJ,a],null));}
    function xQ(a){if(mm(a))var b=new Df(null,Hm,new Df(null,a,null,1,null),2,null);else if(a instanceof w)b=new Df(null,Hm,new Df(null,p(Tc(Ig(a))?dc(Lg(a),"#"):!1)?vQ(a):function(){var c=q.a(a);return p(dc(c,"."))?(c=Me.a(c.substring(0,c.length-1)),Me.a([q.a(zQ.call(null,c)),"."].join(""))):zQ.call(null,a)}(),null,1,null),2,null);else if(tQ(a))b=zf(a);else {if(sQ(a))throw im("unquote-splice not in list",new n(null,1,[U,oB],null));if(Qf(a))if(null!=a&&(a.h&67108864||h===a.kg))b=a;else if(M(a))b=yQ(16<=
    F(a)?uy:lE,uQ(a));else if(Vf(a))b=new Df(null,ft,new Df(null,yQ(null,a),null,1,null),2,null);else if(Rf(a))b=yQ(oI,a);else if($f(a)||Cg(a))b=function(){var c=B(a);return c?yQ(null,c):O(bC)}();else throw im("Unknown Collection type",new n(null,1,[U,jy],null));else b=a instanceof z||"number"===typeof a||"string"===typeof a||null==a||a instanceof Boolean||!0===a||!1===a||a instanceof RegExp?a:new Df(null,Hm,new Df(null,a,null,1,null),2,null);}return wQ(a,b)}
    function AQ(a,b,c,d){b=qQ;qQ=S;try{return xQ(aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d))}finally{qQ=b;}}
    function BQ(a,b,c,d){var e=zP(a,VE,tO(a));b=A.b(e,":")?null.name:A.b(":",C(e))?function(){var f=null==e?null:e.substring(1);f=null==f?null:uP(f);f=null==f?null:rO(f);f=null==f?null:Me.a(f);if(null==f)f=null;else {var k=x.b(null,f);if(p(k))f=k;else {null==Sm&&(Sm=Oh(S));k=x.b(t(Sm),f);if(null!=k)f=k;else {k=q.a(f);var l=q.a(k);for(var m=new zc,r=0;;)if(r<l.length){var u=l.charAt(r),v=Vb(bd,u);null!=v?m.append(v):m.append(u);r+=1;}else break;l=m.toString();l=".."===l?"_DOT__DOT_":p(Om(l))?[l,"$"].join(""):
    l;c:for(k=(k instanceof w?Me.a(l):l).split("."),l=cb;;){if(null==l){k=null;break c}if(null==k){k=l;break c}l=Vb(l,C(k));k=D(k);}null==k?f=null:(k=new Rm(f),Rh.A(Sm,K,f,k),f=k);}f=p(f)?Me.a(f.name):null;}}return f}():function(){var f=null==e?null:uP(e);return null==f?null:rO(f)}();return p(b)?"{"===oP(a)?(c=OP(VE,"}",a,c,d),!Fh(F(c))&&PO(a,null,null,c),d=qO(q.a(b),Sk(2,c)),c=Sk(2,Re(c)),A.b(F(Fk(d)),F(d))||mP(a,VE,d),Ik(d,c)):hP(a,e):iP(a,e)}
    function HP(a){switch(a){case '"':return WP;case ":":return ZP;case ";":return vP;case "'":return $P(Hm);case "@":return $P(Xq);case "^":return bQ;case "`":return AQ;case "~":return rQ;case "(":return RP;case ")":return DP;case "[":return SP;case "]":return DP;case "{":return TP;case "}":return DP;case "\\":return IP;case "%":return pQ;case "#":return AP;default:return null}}
    function BP(a){switch(a){case "^":return bQ;case "'":return $P(Gm);case "(":return nQ;case "{":return cQ;case "\x3c":return wP("Unreadable form");case "\x3d":return wP("read-eval not supported");case '"':return EP;case "!":return vP;case "_":return dQ;case "?":return kQ;case ":":return BQ;case "#":return eQ;default:return null}}
    function CP(a,b,c,d){b=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d);b instanceof w||jP(a,b);if(p(hQ))return a=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d),new Lm(b,a);var e=S.call(null,b);e=p(e)?e:S.a?S.a(b):S.call(null,b);return p(e)?(b=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d),e.a?e.a(b):e.call(null,b)):p(CQ)?(e=CQ,a=aQ?aQ(a,!0,null,c,d):QP.call(null,a,!0,null,c,d),e.b?e.b(b,a):e.call(null,b,a)):kP(a,b)}var CQ=null,hQ=!1;
    function QP(a){switch(arguments.length){case 5:return aQ(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return PP(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function aQ(a,b,c,d,e){return PP(a,b,c,null,d,e)}
    function PP(a,b,c,d,e,f){try{a:for(;;)if(0==f.length){var k=a.xa(null);if(!mO(k)){if(null==k){var l=b?nP(a,null):c;break a}if(k===d){l=MP;break a}if(nO(k)||("+"===k||"-"===k)&&nO(a.Dc(null))){l=UP(a,k);break a}var m=HP(k);if(null!=m){var r=m.A?m.A(a,k,e,f):m.call(null,a,k,e,f);if(r!==a){l=r;break a}}else {l=YP(a,k);break a}}}else {var u=f[0];Array.prototype.splice.call(f,0,1);l=u;break a}return l}catch(v){if(v instanceof Error){b=v;if(b instanceof hm){c=km(b);if(A.b(fr,U.a(c)))throw b;throw jm(b.message,
    wk.g(G([new n(null,1,[U,fr],null),c,BO(a)?new n(null,3,[en,a.Hd(null),ux,a.Gd(null),OD,a.Me(null)],null):null])),b);}throw jm(b.message,wk.g(G([new n(null,1,[U,fr],null),BO(a)?new n(null,3,[en,a.Hd(null),ux,a.Gd(null),OD,a.Me(null)],null):null])),b);}throw v;}}var DQ=em;function EQ(a,b){var c=DQ;if(A.b(!0,c))return AM(a);if(A.b(!1,c))return zM(a);if(A.b(em,c))return p(b)?AM(a):zM(a);throw Error(["No matching clause: ",q.a(c)].join(""));}
    var FQ=Zk(/'[^'\\]*(?:\\.[^'\\]*)*'/),GQ=Zk(/#'[^'\\]*(?:\\.[^'\\]*)*'/),HQ=Zk(/"[^"\\]*(?:\\.[^"\\]*)*"/),IQ=Zk(/#"[^"\\]*(?:\\.[^"\\]*)*"/),JQ=/(?:(?!(?:\(\*|\*\)))[\s\S])*/,KQ=Zk("[,\\s]*"),LQ=GM(DM(sA)),MQ=qM(DC,Xj([tC,oF,AJ,EA,xC,qA,kA,Ay,xt,Ux,XC,xn,MF,ls,gI,$u,Et,zn,Nv,eq,zA,sA,CI,jJ],[yM.g(G([GM(zM("!")),LQ,DM(zn)])),tM(yM.g(G([LQ,wM.g(G([DM(zn),DM(qA),DM(tC)])),LQ]))),yM.g(G([DM(oF),tM(yM.g(G([LQ,GM(zM("/")),LQ,DM(oF)])))])),wM.g(G([zM(":"),zM(":\x3d"),zM("::\x3d"),zM("\x3d")])),yM.g(G([DM(oF),
    uM(yM.g(G([LQ,GM(zM("|")),LQ,DM(oF)])))])),yM.g(G([GM(zM("\x26")),LQ,DM(zn)])),yM.g(G([wM.g(G([DM(Ay),DM(xt)])),LQ,GM(DM(EA)),LQ,DM($u),GM(wM.g(G([DM(sA),yM.g(G([DM(sA),wM.g(G([zM(";"),zM(".")])),DM(sA)]))])))])),yM.g(G([FM(DM(zA)),CM(Zk("[^, \\r\\t\\n\x3c\x3e(){}\\[\\]+*?:\x3d|'\"#\x26!;./]+"))])),yM.g(G([GM(zM("\x3c")),LQ,DM(Ay),LQ,GM(zM("\x3e"))])),yM.g(G([CM(JQ),uM(yM.g(G([DM(Nv),CM(JQ)])))])),wM.g(G([yM.g(G([GM(zM("{")),LQ,DM($u),LQ,GM(zM("}"))])),yM.g(G([DM(zn),LQ,GM(zM("*"))]))])),wM.g(G([CM(FQ),
    CM(HQ)])),lM(yM.g(G([LQ,tM(DM(kA))]))),yM.g(G([GM(zM("\x3c")),LQ,DM($u),LQ,GM(zM("\x3e"))])),yM.g(G([GM(zM("(")),LQ,DM($u),LQ,GM(zM(")"))])),lM(wM.g(G([DM(xC),DM(AJ)]))),wM.g(G([CM(GQ),CM(IQ)])),lM(wM.g(G([DM(Ay),DM(xn),DM(Et),DM(jJ),DM(XC),DM(eq),DM(gI),DM(ls),DM(zA)]))),yM.g(G([zM("(*"),DM(Ux),zM("*)")])),yM.g(G([DM(zn),LQ,GM(zM("+"))])),wM.g(G([zM("Epsilon"),zM("epsilon"),zM("EPSILON"),zM("eps"),zM("ε")])),yM.g(G([CM(KQ),uM(yM.g(G([DM(Nv),CM(KQ)])))])),lM(wM.g(G([DM(MF),DM($u)]))),wM.g(G([yM.g(G([GM(zM("[")),
    LQ,DM($u),LQ,GM(zM("]"))])),yM.g(G([DM(zn),LQ,GM(zM("?"))]))]))]));function NQ(a){for(var b=B(a),c=I;;){var d=C(b);if(p(d))switch(d){case "\\":var e=zf(b);if(p(e)){A.b(e,"'")?(b=Yh(2,b),c=Cf.b(c,e)):(b=Yh(2,b),c=Cf.g(c,d,G([e])));continue}else return hM(G(["Encountered backslash character at end of string: ",a]));case '"':b=D(b);c=Cf.g(c,"\\",G(['"']));continue;default:b=D(b),c=Cf.b(c,d);}else return fh(q,c)}}
    var $W=t(new Ne(function(){return WP},It,Xj([Jn,By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[!0,FB,as,"cljs/tools/reader.cljs",20,1,305,305,O(new Q(null,4,5,R,[Kf(kx,new n(null,1,[X,Zm],null)),Gp,nx,qF],null)),null,p(WP)?WP.ld:null])));function PQ(a){a=Bg(a,1,F(a)-1);a=NQ(a);a=[q.a(a),'"'].join("");a=CO(a);return $W.A?$W.A(a,null,null,null):$W.call(null,a,null,null,null)}function QQ(a){a=Bg(a,2,F(a)-1);a=NQ(a);return Zk(a)}
    var RQ=function RQ(a){for(;;){var c=C.a?C.a(a):C.call(null,a);c=c instanceof z?c.da:null;switch(c){case "rule":c=D.a?D.a(a):D.call(null,a);var d=J(c,0,null);c=J(c,1,null);return A.b(C.a?C.a(d):C.call(null,d),xt)?new Q(null,2,5,R,[Kg.a(function(){var e=Af.a?Af.a(d):Af.call(null,d);return Af.a?Af.a(e):Af.call(null,e)}()),lM(RQ.a?RQ.a(c):RQ.call(null,c))],null):new Q(null,2,5,R,[Kg.a(Af.a?Af.a(d):Af.call(null,d)),RQ.a?RQ.a(c):RQ.call(null,c)],null);case "nt":return DM(Kg.a(Af.a?Af.a(a):Af.call(null,
    a)));case "alt":return fh(wM,Wh.b(RQ,D.a?D.a(a):D.call(null,a)));case "ord":return fh(xM,Wh.b(RQ,D.a?D.a(a):D.call(null,a)));case "paren":a=Af.a?Af.a(a):Af.call(null,a);continue;case "hide":return GM(function(){var e=Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "cat":return fh(yM,Wh.b(RQ,D.a?D.a(a):D.call(null,a)));case "string":return EQ(PQ(Af.a?Af.a(a):Af.call(null,a)),!1);case "regexp":return CM(QQ(Af.a?Af.a(a):Af.call(null,a)));case "opt":return sM(function(){var e=
    Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "star":return uM(function(){var e=Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "plus":return tM(function(){var e=Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "look":return EM(function(){var e=Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "neg":return FM(function(){var e=Af.a?Af.a(a):Af.call(null,a);return RQ.a?RQ.a(e):RQ.call(null,e)}());case "epsilon":return rM;
    default:throw Error(["No matching clause: ",q.a(c)].join(""));}}},SQ=function SQ(a){for(;;){var c=X.a(a);c=c instanceof z?c.da:null;switch(c){case "nt":return new Q(null,1,5,R,[FJ.a(a)],null);case "string":case "string-ci":case "char":case "regexp":case "epsilon":return I;case "opt":case "plus":case "star":case "look":case "neg":case "rep":a=wv.a(a);continue;case "alt":case "cat":return ei(SQ,G([An.a(a)]));case "ord":return ei(SQ,G([new Q(null,2,5,R,[Xn.a(a),Vn.a(a)],null)]));default:throw Error(["No matching clause: ",
    q.a(c)].join(""));}}};function TQ(a){for(var b=Fk(mj(a)),c=B(Gk(ei(SQ,G([nj(a)])))),d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);p(b.a?b.a(k):b.call(null,k))||hM(G([Ag(q.a(k),1)," occurs on the right-hand side of your grammar, but not on the left"]));f+=1;}else if(c=B(c))d=c,Wf(d)?(c=re(d),f=se(d),d=c,e=F(c),c=f):(c=C(d),p(b.a?b.a(c):b.call(null,c))||hM(G([Ag(q.a(c),1)," occurs on the right-hand side of your grammar, but not on the left"])),c=D(d),d=null,e=0),f=0;else break;return a}
    function UQ(a,b){var c=aO(MQ,MF,a,!1);if(c instanceof tN)return hM(G(["Error parsing grammar specification:\n",function(){var e=new zc,f=Fc,k=Ec;Fc=!0;Ec=function(l){return e.append(l)};try{sl(G([c]));}finally{Ec=k,Fc=f;}return q.a(e)}()]));a=Wh.b(RQ,c);var d=C(C(a));return new n(null,3,[wo,TQ(qM(b,ji.b(S,a))),iz,d,SH,b],null)}
    function VQ(a,b,c){return null==c?iM(G(["When you build a parser from a map of parser combinators, you must provide a start production using the :start keyword argument."])):new n(null,3,[wo,TQ(qM(b,a)),iz,c,SH,b],null)}function WQ(a,b){var c=Array.prototype.slice.call(arguments),d=c.shift();if("undefined"==typeof d)throw Error("[goog.string.format] Template required");return d.replace(/%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g,function(e,f,k,l,m,r,u,v){if("%"==r)return "%";var y=c.shift();if("undefined"==typeof y)throw Error("[goog.string.format] Not enough arguments");arguments[0]=y;return WQ.Fc[r].apply(null,arguments)})}WQ.Fc={};
    WQ.Fc.s=function(a,b,c){return isNaN(c)||""==c||a.length>=Number(c)?a:a=-1<b.indexOf("-",0)?a+yc(" ",Number(c)-a.length):yc(" ",Number(c)-a.length)+a};
    WQ.Fc.f=function(a,b,c,d,e){d=a.toString();isNaN(e)||""==e||(d=parseFloat(a).toFixed(e));var f=0>Number(a)?"-":0<=b.indexOf("+")?"+":0<=b.indexOf(" ")?" ":"";0<=Number(a)&&(d=f+d);if(isNaN(c)||d.length>=Number(c))return d;d=isNaN(e)?Math.abs(Number(a)).toString():Math.abs(Number(a)).toFixed(e);a=Number(c)-d.length-f.length;0<=b.indexOf("-",0)?d=f+d+yc(" ",a):(b=0<=b.indexOf("0",0)?"0":" ",d=f+yc(b,a)+d);return d};WQ.Fc.d=function(a,b,c,d,e,f,k,l){return WQ.Fc.f(parseInt(a,10),b,c,d,0,f,k,l)};
    WQ.Fc.i=WQ.Fc.d;WQ.Fc.u=WQ.Fc.d;var XQ=Xj([OH,Iq,Sr,ME,zw,Ty,lG,zJ,Nw,nI,XG,Ar,BJ,jn,pv,VG],[zM("\r\n"),zM("\t"),wM.g(G([wM.g(G([zM(" "),zM("\t")])),uM(yM.g(G([zM("\r\n"),wM.g(G([zM(" "),zM("\t")]))])))])),zM("\n"),CM("[\\u0021-\\u007E]"),CM("[0-9]"),zM(" "),CM("[0-9a-fA-F]"),CM("[\\u0000-\\u001F|\\u007F]"),zM('"'),wM.g(G([zM(" "),zM("\t")])),zM("\r"),CM("[\\u0000-\\u00FF]"),CM("[a-zA-Z]"),CM("[\\u0001-\\u007F]"),CM("[01]")]),YQ=Xj([tC,KG,Jw,$x,rH,kw,qA,aB,kA,YE,Ty,LE,Cv,wz,ls,Vy,zJ,pp,Rx,Ct,nD,Ur,Yt,Bz,Et,hC,Vv,vB,sA,fn,AB,ID,
    CI],[new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"!"],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,rH],null),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,tC],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"("],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,
    FJ,Bz],null),new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,sA],null),new Df(null,new n(null,2,[X,xn,xn,")"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Hu,new n(null,1,[ny,Pt],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"\x3c"],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Vv],null),new Df(null,new n(null,3,[X,oF,An,new Df(null,
    new n(null,2,[X,Ay,FJ,sA],null),new Df(null,new n(null,2,[X,xn,xn,"\x3e"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Hu,new n(null,1,[ny,Pt],null)],null),wk.g(G([CM("\\s+(?:;.*?\\u000D?\\u000A\\s*)*"),new n(null,1,[Hu,new n(null,2,[ny,DC,NI,$x],null)],null)])),new n(null,3,[X,xC,An,new Df(null,new n(null,2,[X,Ay,FJ,YE],null),new Df(null,new n(null,2,[X,Ay,FJ,KG],null),new Df(null,new n(null,2,[X,Ay,FJ,ls],null),new Df(null,new n(null,2,[X,Ay,FJ,pp],null),new Df(null,new n(null,
    2,[X,Ay,FJ,Cv],null),new Df(null,new n(null,2,[X,Ay,FJ,wz],null),new Df(null,new n(null,2,[X,Ay,FJ,qA],null),new Df(null,new n(null,2,[X,Ay,FJ,tC],null),new Df(null,new n(null,2,[X,Ay,FJ,Et],null),null,1,null),2,null),3,null),4,null),5,null),6,null),7,null),8,null),9,null),Hu,new n(null,1,[ny,Pt],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,Jw],null),new Df(null,new n(null,3,[X,Ay,FJ,Vy,ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Bz],null),new Df(null,new n(null,3,[X,Ay,
    FJ,sA,ls,!0],null),null,1,null),2,null),3,null),4,null),Hu,new n(null,2,[ny,DC,NI,kw],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"\x26"],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,rH],null),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,qA],null)],null),new n(null,3,[X,eq,wv,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,xn,xn,"0"],null),new Df(null,new n(null,
    2,[X,xn,xn,"1"],null),null,1,null),2,null)],null),Hu,new n(null,2,[ny,DC,NI,aB],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,Vv],null),new Df(null,new n(null,3,[X,Ay,FJ,Vy,ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Bz],null),new Df(null,new n(null,3,[X,Ay,FJ,sA,ls,!0],null),null,1,null),2,null),3,null),4,null),Hu,new n(null,2,[ny,DC,NI,kA],null)],null),new n(null,3,[X,Ay,FJ,Ct,Hu,new n(null,2,[ny,DC,NI,YE],null)],null),wk.g(G([CM("[0-9]"),new n(null,1,[Hu,new n(null,1,
    [ny,Pt],null)],null)])),new n(null,3,[X,eq,wv,new n(null,2,[X,Ay,FJ,Ty],null),Hu,new n(null,2,[ny,DC,NI,LE],null)],null),new n(null,3,[X,xC,An,new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,'"',ls,!0],null),new Df(null,new n(null,2,[X,XC,wv,wk.g(G([CM("[\\u0020-\\u0021\\u0023-\\u007E]"),S]))],null),new Df(null,new n(null,3,[X,xn,xn,'"',ls,!0],null),null,1,null),2,null),3,null)],null),new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,"'",ls,!0],null),new Df(null,
    new n(null,2,[X,XC,wv,wk.g(G([CM("[\\u0020-\\u0026(-~]"),S]))],null),new Df(null,new n(null,3,[X,xn,xn,"'",ls,!0],null),null,1,null),2,null),3,null)],null),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,Cv],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,"%",ls,!0],null),new Df(null,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,Ay,FJ,nD],null),new Df(null,new n(null,2,[X,Ay,FJ,Ur],null),new Df(null,new n(null,2,[X,Ay,FJ,AB],null),null,1,null),2,null),3,null)],null),null,1,
    null),2,null),Hu,new n(null,1,[ny,Pt],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"\x3c"],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Bz],null),new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,sA],null),new Df(null,new n(null,2,[X,xn,xn,"\x3e"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Hu,new n(null,2,[ny,DC,NI,ls],null)],
    null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,Ay,FJ,sA,ls,!0],null),new Df(null,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,xn,xn,"\x3d"],null),new Df(null,new n(null,2,[X,xn,xn,"\x3d/"],null),null,1,null),2,null)],null),new Df(null,new n(null,3,[X,Ay,FJ,sA,ls,!0],null),null,1,null),2,null),3,null),Hu,new n(null,2,[ny,DC,NI,Vy],null)],null),wk.g(G([CM("[0-9a-fA-F]"),new n(null,1,[Hu,new n(null,1,[ny,Pt],null)],null)])),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,
    new n(null,2,[X,xn,xn,"["],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Bz],null),new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,sA],null),new Df(null,new n(null,2,[X,xn,xn,"]"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Hu,new n(null,2,[ny,DC,NI,pp],null)],null),new n(null,3,[X,eq,wv,new n(null,2,[X,Ay,FJ,zJ],null),Hu,new n(null,2,[ny,DC,NI,Rx],null)],null),wk.g(G([CM("[a-zA-Z][-a-zA-Z0-9]*"),
    new n(null,1,[Hu,new n(null,1,[ny,Pt],null)],null)])),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,"b",ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,aB],null),new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,eq,wv,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,".",ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,aB],null),null,1,null),2,null)],null)],null),new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"-"],null),new Df(null,
    new n(null,2,[X,Ay,FJ,aB],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Hu,new n(null,2,[ny,DC,NI,nD],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,"d",ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,ID],null),new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,eq,wv,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,".",ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,ID],null),null,1,null),
    2,null)],null)],null),new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"-"],null),new Df(null,new n(null,2,[X,Ay,FJ,ID],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Hu,new n(null,2,[ny,DC,NI,Ur],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,hC],null),new Df(null,new n(null,2,[X,XC,wv,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,Ay,FJ,$x,ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,hC],null),null,
    1,null),2,null)],null)],null),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,Yt],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,Yt],null),new Df(null,new n(null,2,[X,XC,wv,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,Ay,FJ,sA],null),new Df(null,new n(null,2,[X,xn,xn,"/"],null),new Df(null,new n(null,2,[X,Ay,FJ,sA],null),null,1,null),2,null),3,null),ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Yt],null),null,1,null),2,null)],null)],null),
    null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,Bz],null)],null),new n(null,3,[X,xC,An,new Df(null,wk.g(G([CM("#'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"),S])),new Df(null,wk.g(G([CM('#\\"[^\\"\\\\]*(?:\\\\.[^\\"\\\\]*)*\\"'),S])),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,Et],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,Ay,FJ,fn],null)],null),new Df(null,new n(null,3,[X,Ay,FJ,sA,ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,rH],null),null,1,null),2,null),3,null),
    Hu,new n(null,2,[ny,DC,NI,hC],null)],null),new n(null,3,[X,Ay,FJ,Ct,Hu,new n(null,2,[ny,DC,NI,Vv],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,Ay,FJ,sA,ls,!0],null),new Df(null,new n(null,2,[X,eq,wv,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,Ay,FJ,kA],null),new Df(null,new n(null,2,[X,Ay,FJ,kw],null),null,1,null),2,null)],null)],null),null,1,null),2,null),Hu,new n(null,1,[ny,Pt],null)],null),wk.g(G([CM("\\s*(?:;.*?(?:\\u000D?\\u000A\\s*|$))*"),new n(null,1,[Hu,new n(null,
    2,[ny,DC,NI,sA],null)],null)])),new n(null,3,[X,xC,An,new Df(null,new n(null,2,[X,Ay,FJ,LE],null),new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,Ay,FJ,LE],null)],null),new Df(null,new n(null,2,[X,xn,xn,"*"],null),new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,Ay,FJ,LE],null)],null),null,1,null),2,null),3,null)],null),null,1,null),2,null),Hu,new n(null,2,[ny,DC,NI,fn],null)],null),new n(null,3,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,"x",ls,!0],null),new Df(null,
    new n(null,2,[X,Ay,FJ,Rx],null),new Df(null,new n(null,2,[X,jJ,wv,new n(null,2,[X,xC,An,new Df(null,new n(null,2,[X,eq,wv,new n(null,2,[X,oF,An,new Df(null,new n(null,3,[X,xn,xn,".",ls,!0],null),new Df(null,new n(null,2,[X,Ay,FJ,Rx],null),null,1,null),2,null)],null)],null),new Df(null,new n(null,2,[X,oF,An,new Df(null,new n(null,2,[X,xn,xn,"-"],null),new Df(null,new n(null,2,[X,Ay,FJ,Rx],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Hu,new n(null,
    2,[ny,DC,NI,AB],null)],null),new n(null,3,[X,eq,wv,new n(null,2,[X,Ay,FJ,Ty],null),Hu,new n(null,2,[ny,DC,NI,ID],null)],null),new n(null,3,[X,xC,An,new Df(null,new n(null,2,[X,Ay,FJ,vB],null),new Df(null,new n(null,2,[X,Ay,FJ,Bz],null),null,1,null),2,null),Hu,new n(null,1,[ny,Pt],null)],null)]),ZQ=function ZQ(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ZQ.g(0<c.length?new Qe(c.slice(0),0,null):null)};
    ZQ.g=function(a){if(A.b("-",zf(a))){var b=J(a,0,null);J(a,1,null);var c=J(a,2,null);return BM(b,c)}return fh(yM,function(){return function f(e){return new Mg(null,function(){for(;;){var k=B(e);if(k){if(Wf(k)){var l=re(k),m=F(l),r=Qg(m);a:for(var u=0;;)if(u<m){var v=qd(l,u);r.add(BM(v,v));u+=1;}else {l=!0;break a}return l?Sg(Ug(r),f(se(k))):Sg(Ug(r),null)}r=C(k);return vf(BM(r,r),f(Re(k)))}return null}},null,null)}(a)}())};ZQ.F=0;ZQ.G=function(a){return this.g(B(a))};
    function $Q(a,b){return ji.b(S,function(){return function e(d){return new Mg(null,function(){for(var f=d;;)if(f=B(f)){if(Wf(f)){var k=re(f),l=F(k),m=Qg(l);a:for(var r=0;;)if(r<l){var u=qd(k,r);N(a,u)&&(u=new Q(null,2,5,R,[u,a.a?a.a(u):a.call(null,u)],null),m.add(u));r+=1;}else {k=!0;break a}return k?Sg(Ug(m),e(se(f))):Sg(Ug(m),null)}m=C(f);if(N(a,m))return vf(new Q(null,2,5,R,[m,a.a?a.a(m):a.call(null,m)],null),e(Re(f)));f=Re(f);}else return null},null,null)}(b)}())}
    function aR(a){return wk.g(G([$Q(XQ,Gk(ei(SQ,G([nj(a)])))),a]))}function bR(a,b){var c=A.b(Hu.a(a),mM),d=A.b(Hu.a(b),mM);return c&&d?lM(wM.g(G([Hf.b(a,Hu),Hf.b(b,Hu)]))):c?lM(wM.g(G([Hf.b(a,Hu),b]))):d?lM(wM.g(G([a,Hf.b(b,Hu)]))):wM.g(G([a,b]))}
    var cR=parseInt,dR=Xj([tC,kw,qA,aB,kA,YE,LE,Cv,ls,pp,Rx,nD,Ur,Yt,Bz,Et,hC,Vv,fn,AB,ID],[FM,function(a,b){return Gf([a,lM(b)])},EM,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return cR(fh(q,c),2)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),qk,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<
    e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return p(!1)?DM(Kg.a(fh(q,c).toUpperCase())):DM(Kg.a(fh(q,c)))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return cR(fh(q,c))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),function(){function a(c){var d=
    null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return EQ(fh(q,c),!0)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),GM,sM,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return cR(fh(q,c),16)}a.F=0;a.G=function(c){c=B(c);return b(c)};
    a.g=b;return a}(),ZQ,ZQ,yM,wM,Ih.b(CM,QQ),function(){function a(c,d){return Pf(c)?uM(d):A.b(F(c),2)?vM(vn.a(c),cq.a(c),d):A.b(vn.a(c),1)?tM(d):A.b(cq.a(c),1)?sM(d):vM(function(){var e=vn.a(c);return p(e)?e:0}(),function(){var e=cq.a(c);return p(e)?e:Infinity}(),d)}var b=null;b=function(c,d){switch(arguments.length){case 1:return c;case 2:return a.call(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.a=function(c){return c};b.b=a;return b}(),function(){function a(c){var d=null;if(0<arguments.length){d=
    0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return p(!1)?Kg.a(fh(q,c).toUpperCase()):Kg.a(fh(q,c))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){var d=F(c);switch(d){case 1:return A.b(C(c),"*")?S:new n(null,2,[vn,
    C(c),cq,C(c)],null);case 2:return A.b(C(c),"*")?new n(null,1,[cq,zf(c)],null):new n(null,1,[vn,C(c)],null);case 3:return new n(null,2,[vn,C(c),cq,pf(c,2)],null);default:throw Error(["No matching clause: ",q.a(d)].join(""));}}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),ZQ,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Qe(e,0,null);}return b.call(this,d)}function b(c){return cR(fh(q,c))}a.F=
    0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}()]);function eR(a,b){var c=aO(YQ,vB,a,!1);if(c instanceof tN)return hM(G(["Error parsing grammar specification:\n",function(){var e=new zc,f=Fc,k=Ec;Fc=!0;Ec=function(l){return e.append(l)};try{sl(G([c]));}finally{Ec=k,Fc=f;}return q.a(e)}()]));var d=eO(dR,c);a=aR(gh(xk,bR,d));d=C(C(C(d)));return new n(null,3,[wo,TQ(qM(b,a)),iz,d,SH,b],null)}function fR(a){var b=Lf(a);a=Yv.a(b);b=hp.a(b);return p(p(a)?b:a)?new Q(null,2,5,R,[a,b],null):null}function gR(a){return Vf(a)&&A.b(F(a),1)||M(a)&&N(a,X)&&Pf(x.b(a,sE))||Pf(a)}var hR=new tN(null,null,null,null,null),iR=function iR(a){switch(arguments.length){case 1:return iR.a(arguments[0]);case 2:return iR.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};iR.a=function(a){var b=fR(a);J(b,0,null);b=J(b,1,null);return p(b)?sg(b):F(a)};iR.b=function(a,b){var c=fR(a);J(c,0,null);c=J(c,1,null);return p(c)?sg(c):b+F(a)};iR.F=2;
    function jR(a,b,c,d,e){a=wN(a,c,d,-1,null);IN(a,new Q(null,2,5,R,[e,b],null),YN(a));return PN(a,null)}function kR(a,b,c,d,e,f){var k=F(c);for(f=B(f);;)if(f){var l=C(f),m=fR(l);J(m,0,null);m=J(m,1,null);m=p(m)?m:e+F(l);if(A.b(m,k))return new Q(null,3,5,R,[l,m,null],null);var r=B(jR(a,b,c,d,m));if(r)return new Q(null,3,5,R,[l,m,r],null);f=D(f);}else return null}
    function lR(a,b,c,d,e){var f=F(c),k=jR(a,b,c,d,e);e=sg(e);var l=kR(a,b,c,d,e,k);J(l,0,null);J(l,1,null);J(l,2,null);k=e;for(e=IL;;){var m=l,r=J(m,0,null);l=J(m,1,null);var u=J(m,2,null);if(null==m||A.b(k,l))return hR;if(null==u)return GN(CL(e,r),new n(null,3,[oG,nz,Yv,0,hp,f],null));k=sg(l);e=CL(e,r);l=kR(a,b,c,d,l,u);}}
    function mR(a,b,c,d,e){if(A.b(c,DC))a:{c=F(e);var f=jR(a,b,e,e,0),k=sg(0),l=KL(new Q(null,1,5,R,[d],null));f=kR(a,b,e,e,k,f);J(f,0,null);J(f,1,null);J(f,2,null);d=k;k=l;for(l=f;;){var m=l,r=J(m,0,null);l=J(m,1,null);f=J(m,2,null);if(null==m||A.b(d,l)){a=hR;break a}if(null==f){a=GN(OL(CL(k,r)),new n(null,3,[oG,nz,Yv,0,hp,c],null));break a}d=sg(l);k=CL(k,r);l=kR(a,b,e,e,l,f);}}else if(A.b(c,FA))a:for(c=F(e),l=jR(a,b,e,e,0),k=sg(0),f=kR(a,b,e,e,k,l),J(f,0,null),J(f,1,null),J(f,2,null),l=IL;;){var u=f;
    m=J(u,0,null);f=J(u,1,null);r=J(u,2,null);if(null==u||A.b(k,f)){a=hR;break a}if(null==r){a=GN(new n(null,2,[X,d,sE,B(CL(l,m))],null),new n(null,3,[oG,nz,Yv,0,hp,c],null));break a}k=sg(f);l=CL(l,m);f=kR(a,b,e,e,f,r);}else a=null;return a}
    function nR(a,b,c,d,e,f){var k=F(f),l=jR(a,b,f,f,0),m=Pf(l);b=m?m:ls.a(b);if(p(b))return hR;l=gh(Jk,iR,l);b=iR.a(l);a=lR(a,wv.a(c),f,f,b);k=new n(null,3,[oG,nz,Yv,0,hp,k],null);if(a instanceof tN||A.b(X.a(c),XC)&&gR(a))return hR;switch(d instanceof z?d.da:null){case "enlive":return GN(new n(null,2,[X,e,sE,CL(IL.Qc(null,l),a)],null),k);case "hiccup":return GN(OL(CL(KL(new Q(null,1,5,R,[e],null)).Qc(null,l),a)),k);default:return GN(CL(IL.Qc(null,l),a),k)}}
    function oR(a,b,c,d,e){var f=An.a(d),k=Bf(f);if(A.b(X.a(d),oF)){var l=X.a(k);var m=new Bk(null,new n(null,2,[XC,null,eq,null],null),null);l=m.a?m.a(l):m.call(null,l);l=p(l)?Tc(ls.a(k))&&Tc(ls.a(wv.a(k))):l;}else l=!1;if(Tc(l))return hR;f=fh(yM,Hk(f));return A.b(Hu.a(d),mM)?nR(a,f,k,null,c,b):nR(a,f,k,e,c,b)}
    function pR(a,b,c){var d=wo.a(a);a=SH.a(a);var e=x.b(d,c);return A.b(ls.a(e),!0)?hR:A.b(Hu.a(e),mM)?A.b(X.a(e),XC)?(c=wv.a(e),lR(d,c,b,b,0)):A.b(X.a(e),eq)?(c=wv.a(e),b=lR(d,c,b,b,0),gR(b)?hR:b):oR(d,b,c,e,a):A.b(X.a(e),XC)?mR(d,wv.a(e),a,c,b):A.b(X.a(e),eq)?(b=mR(d,wv.a(e),a,c,b),gR(b)?hR:b):oR(d,b,c,e,a)}function qR(a,b){if(A.b(null,b))return a;if(A.b(sE,b))return K.c(a,wo,IM(wo.a(a)));if(A.b(tF,b))return K.c(a,wo,JM(SH.a(a),wo.a(a)));if(A.b(yC,b))return K.c(a,wo,KM(SH.a(a),wo.a(a)));throw Error(["No matching clause: ",q.a(b)].join(""));}var rR=function rR(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return rR.g(arguments[0],arguments[1],2<c.length?new Qe(c.slice(2),0,null):null)};
    rR.g=function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.c(d,sz,iz.a(a));var e=x.c(d,$q,!1),f=x.c(d,oG,!1),k=x.b(d,Gt);x.c(d,mu,!1);a=qR(a,k);return p(xr.a(d))?(f=wo.a(a),a=SH.a(a),d=oM.a?oM.a(a):oM.call(null,a),a=aO(f,c,b,e),a instanceof tN?(k=DH.a(a),f=wN(f,b,b,k,d),$N(f,DM(c),e),e=PN(f,null),p(e)?b=C(e):(e=NN(d,aq,b,0,F(b)),b=NN(d,c,e,0,F(b))),b=Kf(b,wk.g(G([a,Lf(b)])))):b=a,b):p(p(f)?Tc(e):f)?(d=pR(a,b,c),p(sR.a?sR.a(d):sR.call(null,d))?aO(wo.a(a),c,b,e):d):aO(wo.a(a),c,b,e)};
    rR.F=2;rR.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};function tR(a,b,c,d,e,f){this.qa=a;this.oc=b;this.sc=c;this.Mb=d;this.j=e;this.B=f;this.h=2230716171;this.I=139264;}g=tR.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "grammar":return this.qa;case "start-production":return this.oc;case "output-format":return this.sc;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#instaparse.core.Parser{",", ","}",c,Xg.b(new Q(null,3,5,R,[new Q(null,2,5,R,[wo,this.qa],null),new Q(null,2,5,R,[iz,this.oc],null),new Q(null,2,5,R,[SH,this.sc],null)],null),this.j))};g.ua=function(){return new gj(this,3,new Q(null,3,5,R,[wo,iz,SH],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};
    g.X=function(){return 3+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-360509877^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.qa,b.qa)&&A.b(this.oc,b.oc)&&A.b(this.sc,b.sc)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,3,[iz,null,wo,null,SH,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new tR(this.qa,this.oc,this.sc,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(wo,b):P.call(null,wo,b))?new tR(c,this.oc,this.sc,this.Mb,this.j,null):p(P.b?P.b(iz,b):P.call(null,iz,b))?new tR(this.qa,c,this.sc,this.Mb,this.j,null):p(P.b?P.b(SH,b):P.call(null,SH,b))?new tR(this.qa,this.oc,c,this.Mb,this.j,null):new tR(this.qa,this.oc,this.sc,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,3,5,R,[new Gi(wo,this.qa),new Gi(iz,this.oc),new Gi(SH,this.sc)],null),this.j))};
    g.O=function(a,b){return new tR(this.qa,this.oc,this.sc,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    g.call=function(){function a(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv){return jh(rR,this,y,E,H,G([T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv]))}function b(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb){return rR.g(this,y,G([E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb]))}function c(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb){return rR.g(this,y,G([E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb]))}function d(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob){return rR.g(this,
    y,G([E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob]))}function e(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc){return rR.g(this,y,G([E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc]))}function f(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb){return rR.g(this,y,G([E,H,T,Y,ia,ba,wa,ua,pb,sb]))}function k(v,y,E,H,T,Y,ia,ba,wa,ua){return rR.g(this,y,G([E,H,T,Y,ia,ba,wa,ua]))}function l(v,y,E,H,T,Y,ia,ba){return rR.g(this,y,G([E,H,T,Y,ia,ba]))}function m(v,y,E,H,T,Y){return rR.g(this,y,G([E,H,T,Y]))}function r(v,y,E,H){return rR.g(this,y,G([E,H]))}var u=
    null;u=function(v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv){switch(arguments.length){case 2:return rR(this,y);case 4:return r.call(this,v,y,E,H);case 6:return m.call(this,v,y,E,H,T,Y);case 8:return l.call(this,v,y,E,H,T,Y,ia,ba);case 10:return k.call(this,v,y,E,H,T,Y,ia,ba,wa,ua);case 12:return f.call(this,v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb);case 14:return e.call(this,v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc);case 16:return d.call(this,v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob);case 18:return c.call(this,
    v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb);case 20:return b.call(this,v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc);case 22:return a.call(this,v,y,E,H,T,Y,ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv)}throw Error("Invalid arity: "+(arguments.length-1));};u.b=function(v,y){return rR(this,y)};u.A=r;u.la=m;u.Ga=l;u.mb=k;u.nb=f;u.ob=e;u.pb=d;u.qb=c;u.rb=b;u.Be=a;return u}();g.apply=function(a,b){return this.call.apply(this,[this].concat(ed(b)))};g.a=function(a){return rR(this,a)};
    g.c=function(a,b,c){return rR.g(this,a,G([b,c]))};g.K=function(a,b,c,d,e){return rR.g(this,a,G([b,c,d,e]))};g.ib=function(a,b,c,d,e,f,k){return rR.g(this,a,G([b,c,d,e,f,k]))};g.Xa=function(a,b,c,d,e,f,k,l,m){return rR.g(this,a,G([b,c,d,e,f,k,l,m]))};g.cb=function(a,b,c,d,e,f,k,l,m,r,u){return rR.g(this,a,G([b,c,d,e,f,k,l,m,r,u]))};g.eb=function(a,b,c,d,e,f,k,l,m,r,u,v,y){return rR.g(this,a,G([b,c,d,e,f,k,l,m,r,u,v,y]))};
    g.fb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H){return rR.g(this,a,G([b,c,d,e,f,k,l,m,r,u,v,y,E,H]))};g.gb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){return rR.g(this,a,G([b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y]))};g.hb=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y){return rR.g(this,a,G([b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y]))};g.Sc=function(a,b,c,d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua){return jh(rR,this,a,b,c,G([d,e,f,k,l,m,r,u,v,y,E,H,T,Y,ia,ba,wa,ua]))};
    function uR(a){var b=Hf.g(a,wo,G([iz,SH]));b=Uf(a)?ji.b(S,b):b;return new tR(wo.a(a),iz.a(a),SH.a(a),null,lh(b),null)}g.ma=h;g.S=function(a,b){return ce(b,dM(this))};function vR(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return wR(arguments[0],1<b.length?new Qe(b.slice(1),0,null):null)}
    function wR(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,d=x.c(c,vJ,cB),e=x.c(c,SH,DC),f=x.c(c,sz,null);b="string"===typeof a?function(){a:{var m=DQ;DQ=zC.b(c,em);try{var r=d instanceof z?d.da:null;switch(r){case "abnf":var u=eR(a,e);break a;case "ebnf":u=UQ(a,e);break a;default:throw Error(["No matching clause: ",q.a(r)].join(""));}}finally{DQ=m;}u=void 0;}return p(f)?uR(K.c(u,iz,f)):uR(u)}():M(a)?function(){var m=VQ(a,e,f);return uR(m)}():Vf(a)?function(){var m=p(f)?f:a.a?a.a(0):a.call(null,0);
    m=VQ(fh(qk,a),e,m);return uR(m)}():iM(G(["Expected string, map, or vector as grammar specification, got ",ol.g(G([a]))]));var k=x.b(c,Co);k=k instanceof z?x.b(xR,k):k;if(p(k)){var l=null!=k&&(k.h&64||h===k.D)?fh(qk,k):k;k=x.b(l,wo);l=x.b(l,iz);return K.c(b,wo,MM(b.qa,b.oc,k,l))}return b}function sR(a){return a instanceof uN||Lf(a)instanceof uN}var xR=new n(null,2,[jI,vR("whitespace \x3d #'\\s+'"),Wy,vR("whitespace \x3d #'[,\\s]+'")],null);function yR(a){return "#"!==a?"'"!==a?":"!==a?zR.a?zR.a(a):zR.call(null,a):!1:!1:!1}function AR(a){return "@"===a||"`"===a||"~"===a}function BR(a,b,c,d){if(Tc(c))return TO(a,b);if(p(p(d)?AR(c):d))return UO(a,b,c);d=new zc;for(vO(a,c);;){if(mO(c)||yR(c)||null==c)return q.a(d);if(AR(c))return UO(a,b,c);d.append(tO(a));c=uO(a);}}
    function CR(a,b,c){b=tO(a);if(p(b)){var d=DR.a?DR.a(b):DR.call(null,b);if(p(d))return d.c?d.c(a,b,c):d.call(null,a,b,c);vO(a,b);return ER.c?ER.c(a,b,c):ER.call(null,a,b,c)}return VO(a)}function FR(a,b){return LO(a,G(["Unmatched delimiter ",b,"."]))}function GR(a,b,c){b=1+b;F(a)!==b&&QO(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=sO(pf(a,d),c);if(-1===f)return XO(pf(a,d),a);e=f+e*c;d+=1;}}
    function HR(a,b,c,d,e){for(var f=1,k=sO(b,c);;){if(-1===k)return YO(a,b);if(f!==d){var l=uO(a);var m=mO(l);m||(m=zR.a?zR.a(l):zR.call(null,l),m=p(m)?m:null==l);if(p(m))return p(e)?ZO(a,f,d):String.fromCharCode(k);m=sO(l,c);tO(a);if(-1===m)return YO(a,l);k=m+k*c;f+=1;}else return String.fromCharCode(k)}}
    function IR(a){var b=tO(a);if(null!=b){b=yR(b)||AR(b)||mO(b)?q.a(b):BR(a,PF,b,!1);var c=b.length;if(1===c)return pf(b,0);if("newline"===b)return "\n";if("space"===b)return " ";if("tab"===b)return "\t";if("backspace"===b)return "\b";if("formfeed"===b)return "\f";if("return"===b)return "\r";if(p(0==b.lastIndexOf("u",0)))return b=GR(b,4,16),c=b.charCodeAt(),55295<c&&57344>c?$O(a,c.toString(16)):b;if(p(0==b.lastIndexOf("o",0))){--c;if(3<c)return aP(a,b);b=GR(b,c,8);return 255<(b|0)?bP(a):b}return LO(a,G(["Unsupported character: ",
    b,"."]))}return cP(a)}function JR(a){return BO(a)?new Q(null,2,5,R,[wO(a),(xO(a)|0)-1|0],null):null}function KR(a,b,c,d){var e=JR(c),f=J(e,0,null);e=J(e,1,null);b=iO(b);for(var k=je(I);;){var l=oP(c);p(l)||OO(c,a,f,e,F(k));if(A.b(b,iO(l)))return le(k);var m=zR.a?zR.a(l):zR.call(null,l);p(m)?(l=m.c?m.c(c,l,d):m.call(null,c,l,d),k=l!==c?Yg.b(k,l):k):(vO(c,l),l=LR?LR(c,!0,null,d):MR.call(null,c,!0,null,d),k=l!==c?Yg.b(k,l):k);}}function NR(a,b,c){a=KR(JI,")",a,c);return Pf(a)?Se:fh(O,a)}
    function OR(a,b,c){return KR(Uu,"]",a,c)}function PR(a,b,c){var d=JR(a);b=J(d,0,null);d=J(d,1,null);c=KR(Tv,"}",a,c);var e=F(c),f=Sk(2,c),k=Fk(f);!Fh(e)&&PO(a,b,d,c);A.b(F(k),F(f))||mP(a,Tv,f);return e<=2*pj?rj(hg(c)):Wj(hg(c))}
    function QR(a,b){for(var c=function(){var k=new zc;k.append(b);return k}(),d=tO(a);;){if(p(function(){var k=mO(d);if(k)return k;k=zR.a?zR.a(d):zR.call(null,d);return p(k)?k:null==d}())){var e=q.a(c);vO(a,d);var f=tP(e);return p(f)?f:LO(a,G(["Invalid number: ",e,"."]))}e=function(){var k=c;k.append(d);return k}();f=tO(a);c=e;d=f;}}
    function RR(a){var b=tO(a);switch(b){case "t":return "\t";case "r":return "\r";case "n":return "\n";case "\\":return "\\";case '"':return '"';case "b":return "\b";case "f":return "\f";case "u":return b=tO(a),-1===parseInt(b|0,16)?RO(a,b):HR(a,b,16,4,!0);default:return nO(b)?(b=HR(a,b,8,3,!1),255<(b|0)?bP(a):b):dP(a,b)}}
    function SR(a){for(var b=new zc,c=tO(a);;){var d=c;if(A.b(null,d))return WO(a,xn,G(['"',b]));if(A.b("\\",d)){d=function(){var f=b;f.append(RR(a));return f}();var e=tO(a);b=d;c=e;}else {if(A.b('"',d))return q.a(b);d=function(){var f=b;f.append(c);return f}();e=tO(a);b=d;c=e;}}}
    function TR(a,b){b=BR(a,xu,b,!0);if(p(b))switch(b){case "nil":return null;case "true":return !0;case "false":return !1;case "/":return dA;default:var c=uP(b);c=p(c)?Me.b(c.a?c.a(0):c.call(null,0),c.a?c.a(1):c.call(null,1)):null;return p(c)?c:SO(a,xu,b)}else return null}function UR(a){var b=tO(a);if(mO(b))return eP(a);b=BR(a,FJ,b,!0);var c=uP(b);if(p(p(c)?-1===b.indexOf("::"):c)){var d=c.a?c.a(0):c.call(null,0);c=c.a?c.a(1):c.call(null,1);return ":"===pf(b,0)?SO(a,FJ,b):Kg.b(d,c)}return SO(a,FJ,b)}
    function VR(a,b,c){b=oO(LR?LR(a,!0,null,c):MR.call(null,a,!0,null,c));M(b)||fP(a,b);c=LR?LR(a,!0,null,c):MR.call(null,a,!0,null,c);return null!=c&&(c.h&131072||h===c.xd)?Kf(c,wk.g(G([Lf(c),b]))):gP(a,c)}function WR(a,b,c){b=KR(yA,"}",a,c);c=Fk(b);A.b(F(b),F(c))||mP(a,yA,b);return c}function YR(a){LR?LR(a,!0,null,!0):MR.call(null,a,!0,null,!0);return a}
    function ZR(a,b,c){b=tO(a);b=BR(a,VE,b,!0);var d=null==b?null:uP(b);d=null==d?null:rO(d);return p(d)?"{"===oP(a)?(c=KR(VE,"}",a,c),!Fh(F(c))&&PO(a,null,null,c),b=qO(q.a(d),Sk(2,c)),c=Sk(2,Re(c)),A.b(F(Fk(b)),F(b))||mP(a,VE,b),Ik(b,c)):hP(a,b):iP(a,b)}function $R(a,b,c){b=LR?LR(a,!0,null,c):MR.call(null,a,!0,null,c);return A.b(iy,b)?Number.NaN:A.b(QC,b)?Number.NEGATIVE_INFINITY:A.b(Rw,b)?Number.POSITIVE_INFINITY:LO(a,G([["Invalid token: ##",q.a(b)].join("")]))}
    function zR(a){switch(a){case '"':return SR;case ":":return UR;case ";":return vP;case "^":return VR;case "(":return NR;case ")":return FR;case "[":return OR;case "]":return FR;case "{":return PR;case "}":return FR;case "\\":return IR;case "#":return CR;default:return null}}function DR(a){switch(a){case "^":return VR;case "{":return WR;case "\x3c":return wP("Unreadable form");case "!":return vP;case "_":return YR;case ":":return ZR;case "#":return $R;default:return null}}
    function ER(a,b,c){b=LR?LR(a,!0,null,c):MR.call(null,a,!0,null,c);var d=LR?LR(a,!0,null,c):MR.call(null,a,!0,null,c);b instanceof w||jP(a,"Reader tag must be a symbol");var e=x.b(Ry.a(c),b);e=p(e)?e:S.a?S.a(b):S.call(null,b);if(p(e))return e.a?e.a(d):e.call(null,d);c=em.a(c);return p(c)?c.b?c.b(b,d):c.call(null,b,d):kP(a,b)}
    function MR(a){switch(arguments.length){case 1:return aS(S,arguments[0]);case 2:return aS(arguments[0],arguments[1]);case 4:return LR(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}function aS(a,b){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var c=x.b(a,gv),d=!N(a,gv);return LR(b,d,c,a)}
    function LR(a,b,c,d){try{for(;;){var e=tO(a);if(!mO(e)){if(null==e)return p(b)?nP(a,null):c;if(nO(e)||("+"===e||"-"===e)&&nO(a.Dc(null)))return QR(a,e);var f=zR(e);if(p(f)){var k=f.c?f.c(a,e,d):f.call(null,a,e,d);if(k!==a)return k}else return TR(a,e)}}}catch(l){if(l instanceof Error){b=l;if(b instanceof hm){c=km(b);if(A.b(fr,U.a(c)))throw b;throw jm(b.message,wk.g(G([new n(null,1,[U,fr],null),c,BO(a)?new n(null,3,[en,wO(a),ux,xO(a),OD,yO(a)],null):null])),b);}throw jm(b.message,wk.g(G([new n(null,
    1,[U,fr],null),BO(a)?new n(null,3,[en,wO(a),ux,xO(a),OD,yO(a)],null):null])),b);}throw l;}}function bS(a,b){return p(p(b)?kh.b(b,""):b)?aS(a,CO(b)):null}var cS=function(){var a=new Q(null,13,5,R,[null,31,28,31,30,31,30,31,31,30,31,30,31],null),b=new Q(null,13,5,R,[null,31,29,31,30,31,30,31,31,30,31,30,31],null);return function(c,d){return x.b(p(d)?b:a,c)}}(),dS=/(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;function eS(a){a=parseInt(a,10);return Tc(isNaN(a))?a:null}
    function fS(a,b,c,d){if(!(a<=b&&b<=c))throw Error([q.a(d)," Failed:  ",q.a(a),"\x3c\x3d",q.a(b),"\x3c\x3d",q.a(c)].join(""));return b}
    function gS(a){var b=Wk(dS,a);J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),k=J(b,5,null),l=J(b,6,null),m=J(b,7,null),r=J(b,8,null),u=J(b,9,null),v=J(b,10,null);if(Tc(b))throw Error(["Unrecognized date/time syntax: ",q.a(a)].join(""));a=eS(c);b=function(){var ba=eS(d);return p(ba)?ba:1}();c=function(){var ba=eS(e);return p(ba)?ba:1}();var y=function(){var ba=eS(f);return p(ba)?ba:0}(),E=function(){var ba=eS(k);return p(ba)?ba:0}(),H=function(){var ba=eS(l);return p(ba)?ba:
    0}(),T=function(){a:if(A.b(3,F(m)))var ba=m;else if(3<F(m))ba=m.substring(0,3);else for(ba=new zc(m);;)if(3>ba.getLength())ba=ba.append("0");else {ba=ba.toString();break a}ba=eS(ba);return p(ba)?ba:0}();r=A.b(r,"-")?-1:1;var Y=function(){var ba=eS(u);return p(ba)?ba:0}(),ia=function(){var ba=eS(v);return p(ba)?ba:0}();r*=60*Y+ia;return new Q(null,8,5,R,[a,fS(1,b,12,"timestamp month field must be in range 1..12"),fS(1,c,cS(b,0===(a%4+4)%4&&(0!==(a%100+100)%100||0===(a%400+400)%400)),"timestamp day field must be in range 1..last day in month"),
    fS(0,y,23,"timestamp hour field must be in range 0..23"),fS(0,E,59,"timestamp minute field must be in range 0..59"),fS(0,H,A.b(E,59)?60:59,"timestamp second field must be in range 0..60"),fS(0,T,999,"timestamp millisecond field must be in range 0..999"),r],null)}
    var hS=Oh(null),iS=Oh(wk.g(G([new n(null,4,[uw,function(a){if("string"===typeof a){var b=gS(a);if(p(b)){a=J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),k=J(b,5,null),l=J(b,6,null);b=J(b,7,null);b=new Date(Date.UTC(a,c-1,d,e,f,k,l)-6E4*b);}else throw Error(["Unrecognized date/time syntax: ",q.a(a)].join(""));return b}throw Error("Instance literal expects a string for its timestamp.");},es,function(a){if("string"===typeof a)return new fm(a.toLowerCase());throw Error("UUID literal expects a string as its representation.");
    },js,function(a){if(Vf(a))return ji.b(cj,a);throw Error("Queue literal expects a vector for its elements.");},iv,function(a){if(Vf(a)){var b=[];a=B(a);for(var c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e);b.push(f);e+=1;}else if(a=B(a))c=a,Wf(c)?(a=re(c),e=se(c),c=a,d=F(a),a=e):(a=C(c),b.push(a),a=D(c),c=null,d=0),e=0;else break;return b}if(M(a)){b={};a=B(a);c=null;for(e=d=0;;)if(e<d){var k=c.W(null,e);f=J(k,0,null);k=J(k,1,null);f=Lg(f);b[f]=k;e+=1;}else if(a=B(a))Wf(a)?(d=re(a),a=se(a),c=d,d=F(d)):(d=
    C(a),c=J(d,0,null),d=J(d,1,null),c=Lg(c),b[c]=d,a=D(a),c=null,d=0),e=0;else break;return b}throw Error("JS literal expects a vector or map containing only string or unqualified keyword keys");}],null),S]))),jS=function jS(a){switch(arguments.length){case 1:return jS.a(arguments[0]);case 2:return jS.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};jS.a=function(a){return bS(new n(null,3,[Ry,t(iS),em,t(hS),gv,null],null),a)};
    jS.b=function(a,b){return bS(pi(wk.g(G([new n(null,1,[em,t(hS)],null),a])),Ry,function(c){return wk.g(G([t(iS),c]))}),b)};jS.F=2;var kS=vR("\n    expr\x3dand-or\n    \x3cand-or\x3e\x3d\x3cws*\x3e (eq-neq | and | or)\n    \x3ceq-neq\x3e\x3d\x3cws*\x3e (term | eq | neq | match)\n    and\x3dand-or \x3cws*\x3e \x3c'\x26\x26'\x3e eq-neq\n    or\x3dand-or \x3cws*\x3e \x3c'||'\x3e eq-neq\n    eq\x3deq-neq \x3cws*\x3e \x3c'\x3d\x3d'\x3e term\n    neq\x3deq-neq \x3cws*\x3e \x3c'!\x3d'\x3e term\n    match\x3deq-neq \x3cws*\x3e \x3c'?'\x3e term\n    \x3cterm\x3e\x3d\x3cws*\x3e (ident | own-ident | number | str | lparen and-or rparen)\n    \x3clparen\x3e \x3d \x3cws*'('ws*\x3e\n    \x3crparen\x3e \x3d \x3cws*')'ws*\x3e\n    ident\x3d\x3c'$'\x3e word\n    own-ident\x3d\x3c'#'\x3e word\n    str\x3d\x3c'\\''\x3e #'[^\\']+' \x3c'\\''\x3e\n    word\x3d#'[a-zA-Z]+'\n    number\x3d#'[-+]?[0-9]*\\.?[0-9]+'\n    ws\x3d#'[\\s\\t]+'\n    ");
    function lS(a){if(B(a)){a=rR(kS,a);if(null==a)var b=null;else b=a instanceof uN?a:Lf(a)instanceof uN?Lf(a):null,b=p(b)?q.a(b):null;if(p(b))throw im(["Error parsing restrictions ",b].join(""),new n(null,1,[sr,b],null));return a}return null}
    function mS(a,b,c){return B(a)?eO(Xj([xI,dF,Wz,yI,Fv,pC,xA,LC,hs,tH],[A,jS,function(d,e){return p(d)?d:e},lg,lg,kh,function(d){J(d,0,null);d=J(d,1,null);var e=x.b(c,d);return p(e)?e:x.b(c,Kg.a(d))},function(d,e){return A.b(d,e)},function(d){J(d,0,null);d=J(d,1,null);var e=x.b(b,d);return p(e)?e:x.b(b,Kg.a(d))},function(d,e){return p(p(e)?d:e)?Wk(Zk(e),d):null}]),a):!0}var nS={};var oS={},aX,bX,cX,dX,rX,sX,tX,uX,vX,SY;function zS(a,b){if(null!=a&&null!=a.Zb)a=a.Zb(a,b);else {var c=zS[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=zS._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Spec.conform*",a);}return a}function AS(a,b){if(null!=a&&null!=a.$b)a=a.$b(a,b);else {var c=AS[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=AS._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Spec.with-gen*",a);}return a}
    var BS=Oh(S);function CS(a){if(Jg(a)){var b=t(BS);a=x.b(b,a);if(Jg(a))a:for(;;)if(Jg(a))a=x.b(b,a);else {b=a;break a}else b=a;return b}return a}function DS(a){if(Jg(a)){var b=CS(a);if(p(b))return b;throw Error(["Unable to resolve spec: ",q.a(a)].join(""));}return a}function ES(a){return null!=a&&h===a.rc?a:null}function FS(a){var b=pB.a(a);return p(b)?a:b}function GS(a,b){return Jg(a)?a:p(FS(a))?K.c(a,So,b):null!=a&&(a.h&131072||h===a.xd)?Kf(a,K.c(Lf(a),So,b)):null}
    function HS(a){return Jg(a)?a:p(FS(a))?So.a(a):null!=a&&(a.h&131072||h===a.xd)?So.a(Lf(a)):null}function IS(a){var b=function(){var c=Jg(a)?CS(a):!1;if(p(c))return c;c=ES(a);if(p(c))return c;c=FS(a);return p(c)?c:null}();return p(FS(b))?GS(JS(b,null),HS(b)):b}function KS(a){var b=IS(a);if(p(b))return b;if(Jg(a))throw Error(["Unable to resolve spec: ",q.a(a)].join(""));return null}
    function LS(a){if(ec(null==a?"":String(a)))return null;a=Wh.b(Qm,UL(a,"$",0));if(2<=F(a)&&Dh(function(c){return !ec(null==c?"":String(c))},a)){var b=Uk(Hk,Bf)(a);a=J(b,0,null);b=J(b,1,null);return Me.a([SL(".",a),"/",q.a(b)].join(""))}return null}
    var wZ=function(){function a(d,e){var f=MS[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=MS._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("Specize.specize*",d);}function b(d){var e=MS[db(null==d?null:d)];if(null!=e)return e.a?e.a(d):e.call(null,d);e=MS._;if(null!=e)return e.a?e.a(d):e.call(null,d);throw Zc("Specize.specize*",d);}var c=null;c=function(d,e){switch(arguments.length){case 1:return b.call(this,d);case 2:return a.call(this,d,e)}throw Error("Invalid arity: "+
    arguments.length);};c.a=b;c.b=a;return c}(),MS=function MS(a){switch(arguments.length){case 1:return MS.a(arguments[0]);case 2:return MS.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};MS.a=function(a){return null!=a&&null!=a.Db?a.Db(a):wZ(a)};MS.b=function(a,b){return null!=a&&null!=a.Eb?a.Eb(a,b):wZ(a,b)};MS.F=2;z.prototype.Db=function(){return MS(DS(this))};z.prototype.Eb=function(){return MS(DS(this))};w.prototype.Db=function(){return MS(DS(this))};
    w.prototype.Eb=function(){return MS(DS(this))};Bk.prototype.Db=function(){return NS(this,this,null,null,null)};Bk.prototype.Eb=function(a,b){return NS(b,this,null,null,null)};
    MS._=function(){function a(c){var d=If(c)?LS(c.name):!1;return p(d)?NS(d,c,null,null,null):NS(Nx,c,null,null,null)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return NS(d,c,null,null,null)}throw Error("Invalid arity: "+arguments.length);};b.a=a;b.b=function(c,d){return NS(d,c,null,null,null)};return b}();
    var OS=function OS(a){switch(arguments.length){case 1:return OS.a(arguments[0]);case 2:return OS.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};OS.a=function(a){var b=ES(a);return p(b)?b:MS(a)};OS.b=function(a,b){var c=ES(a);return p(c)?c:MS(a,b)};OS.F=2;function PS(a){return P(Nr,a)}function QS(a,b){return zS(OS.a(a),b)}function RS(a,b){a=CS(a);return p(FS(a))?K.c(a,kH,b):AS(OS.a(a),b)}
    function Z(a,b,c){if(null==c)Rh.c(BS,Hf,a);else {var d=ES(c);p(d)||(d=FS(c),d=p(d)?d:x.b(t(BS),c));b=p(d)?c:NS(b,c,null,null,null);Rh.A(BS,K,a,GS(b,a));}}function SS(a,b,c){if(p(a)){var d=KS(a);if(p(d))return QS(d,b);if(If(a)||(null!=a?a.h&1||h===a.Nh||(a.h?0:Xc(id,a)):Xc(id,a)))return p(null)?a.a?a.a(b):a.call(null,b):p(a.a?a.a(b):a.call(null,b))?b:Nr;throw Error([ol.g(G([c]))," is not a fn, expected predicate fn"].join(""));}return b}function TS(a,b){a=OS.a(a);return !PS(zS(a,b))}
    var US=function US(a){var c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,d=x.b(c,jJ),e=x.b(c,ir),f=x.b(c,iA),k=x.b(c,TE),l=x.b(c,Wt),m=x.b(c,ot),r=x.b(c,hx),u=x.b(c,CG),v=x.b(c,Lu),y=x.b(c,QI),E=x.b(c,JF),H=x.b(c,GE),T=Ik(Xg.b(y,r),Xg.b(u,E)),Y=gm();if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof aX)aX=function(ia,ba,wa,ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG){this.Qb=ia;this.he=ba;this.ph=wa;this.Eh=ua;this.sh=pb;this.jb=sb;this.vh=rb;this.ie=xc;
    this.ff=Sb;this.qh=ob;this.Dh=Tb;this.ih=gb;this.Bh=ib;this.id=mc;this.Ch=of;this.rh=lv;this.Ig=SG;this.wh=TG;this.Og=UG;this.h=393216;this.I=0;},aX.prototype.O=function(ia,ba){return new aX(this.Qb,this.he,this.ph,this.Eh,this.sh,this.jb,this.vh,this.ie,this.ff,this.qh,this.Dh,this.ih,this.Bh,this.id,this.Ch,this.rh,this.Ig,this.wh,ba)},aX.prototype.N=function(){return this.Og},aX.prototype.Db=function(){return this},aX.prototype.Eb=function(){return this},aX.prototype.rc=h,aX.prototype.Zb=function(ia,
    ba){if(p(this.ie.a?this.ie.a(ba):this.ie.call(null,ba))){ia=t(BS);var wa=B(ba),ua=C(wa);D(wa);J(ua,0,null);J(ua,1,null);for(ua=wa=ba;;){ba=wa;var pb=B(ua);wa=C(pb);var sb=D(pb);pb=wa;wa=J(pb,0,null);pb=J(pb,1,null);if(p(ua))if(ua=this.he.a?this.he.a(wa):this.he.call(null,wa),ua=x.b(ia,ua),p(ua)){ua=QS(ua,pb);if(PS(ua))return Nr;ba=ua===pb?ba:K.c(ba,wa,ua);ua=sb;wa=ba;}else ua=sb,wa=ba;else return ba}}else return Nr},aX.prototype.$b=function(ia,ba){ia=K.c(this.ff,TE,ba);return US.a?US.a(ia):US.call(null,
    ia)},aX.Pa=function(){return new Q(null,19,5,R,[qG,cz,PA,xF,Qn,Sv,fy,Su,Wm,Ws,BF,XE,$I,Xt,FF,Np,yp,WH,lK],null)},aX.Ia=!0,aX.Da="cljs.spec.alpha/t_cljs$spec$alpha11516",aX.Ja=function(ia){return ce(ia,"cljs.spec.alpha/t_cljs$spec$alpha11516")};return new aX(c,function(ia){var ba=T.a?T.a(ia):T.call(null,ia);return p(ba)?ba:ia},d,e,f,k,l,m,c,r,u,a,v,Y,y,E,T,H,S)};
    function NS(a,b,c,d,e){if(p(ES(b)))return p(c)?RS(b,c):b;if(p(FS(b)))return JS(b,c);if(Jg(b))return a=KS(b),p(c)?RS(a,c):a;if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof bX)bX=function(f,k,l,m,r,u){this.form=f;this.Sb=k;this.jb=l;this.Oe=m;this.Sf=r;this.Qg=u;this.h=393216;this.I=0;},bX.prototype.O=function(f,k){return new bX(this.form,this.Sb,this.jb,this.Oe,this.Sf,k)},bX.prototype.N=function(){return this.Qg},bX.prototype.Db=function(){return this},
    bX.prototype.Eb=function(){return this},bX.prototype.rc=h,bX.prototype.Zb=function(f,k){f=this.Sb.a?this.Sb.a(k):this.Sb.call(null,k);return p(this.Oe)?f:p(f)?k:Nr},bX.prototype.$b=function(f,k){return NS(this.form,this.Sb,k,this.Oe,this.Sf)},bX.Pa=function(){return new Q(null,6,5,R,[wF,Oo,Sv,pt,bs,BT],null)},bX.Ia=!0,bX.Da="cljs.spec.alpha/t_cljs$spec$alpha11760",bX.Ja=function(f){return ce(f,"cljs.spec.alpha/t_cljs$spec$alpha11760")};return new bX(a,b,c,d,e,S)}
    function VS(a,b){return WS(a,b,U,null)}
    function WS(a,b,c,d){var e=gm(),f=c instanceof z?function(k,l){return K.c(k,c,l)}:c;if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof cX)cX=function(k,l,m,r,u,v,y,E,H){this.form=k;this.Cf=l;this.Of=m;this.jb=r;this.id=u;this.oe=v;this.yg=y;this.tag=E;this.Rg=H;this.h=393216;this.I=0;},cX.prototype.O=function(k,l){return new cX(this.form,this.Cf,this.Of,this.jb,this.id,this.oe,this.yg,this.tag,l)},cX.prototype.N=function(){return this.Rg},cX.prototype.Db=
    function(){return this},cX.prototype.Eb=function(){return this},cX.prototype.rc=h,cX.prototype.Zb=function(k,l){k=this.oe.a?this.oe.a(l):this.oe.call(null,l);return p(k)?SS(k,l,this.form):Nr},cX.prototype.$b=function(k,l){return WS(this.form,this.Cf,this.Of,l)},cX.Pa=function(){return new Q(null,9,5,R,[wF,aH,rD,Sv,Xt,OC,yD,qw,HH],null)},cX.Ia=!0,cX.Da="cljs.spec.alpha/t_cljs$spec$alpha11900",cX.Ja=function(k){return ce(k,"cljs.spec.alpha/t_cljs$spec$alpha11900")};return new cX(a,b,c,d,e,function(k){var l=
    t(b);var m=bm(l);m=m.a?m.a(k):m.call(null,k);m=am(l,m);return p(m)?l.a?l.a(k):l.call(null,k):m},function(k){var l=bm(t(b));return l.a?l.a(k):l.call(null,k)},f,S)}function XS(a,b){return YS(a,b,null)}
    function YS(a,b,c){var d=new xl(function(){return ki.c(OS,b,a)}),e=F(b);if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof dX)dX=function(f,k,l,m,r,u){this.forms=f;this.Cb=k;this.jb=l;this.td=m;this.C=r;this.Sg=u;this.h=393216;this.I=0;},dX.prototype.O=function(f,k){return new dX(this.forms,this.Cb,this.jb,this.td,this.C,k)},dX.prototype.N=function(){return this.Sg},dX.prototype.Db=function(){return this},dX.prototype.Eb=function(){return this},dX.prototype.rc=
    h,dX.prototype.Zb=function(f,k){f=t(this.td);if(Vf(k)&&A.b(F(k),this.C))for(var l=k,m=0;;){if(A.b(m,this.C))return l;var r=k.a?k.a(m):k.call(null,m),u=zS(f.a?f.a(m):f.call(null,m),r);if(PS(u))return Nr;l=u===r?l:K.c(l,m,u);m+=1;}else return Nr},dX.prototype.$b=function(f,k){return YS(this.forms,this.Cb,k)},dX.Pa=function(){return new Q(null,6,5,R,[Do,MC,Sv,Lt,Vs,wK],null)},dX.Ia=!0,dX.Da="cljs.spec.alpha/t_cljs$spec$alpha11983",dX.Ja=function(f){return ce(f,"cljs.spec.alpha/t_cljs$spec$alpha11983")};
    return new dX(a,b,c,d,e,S)}function ZS(a,b){return new Gi(a,b)}
    var $S=function $S(a,b,c,d){var f=gm(),k=Ik(a,c),l=new xl(function(){return ki.c(OS,c,b)}),m=function(){switch(F(c)){case 2:return function(r){var u=t(l),v=zS(u.a?u.a(0):u.call(null,0),r);return PS(v)?(r=zS(u.a?u.a(1):u.call(null,1),r),PS(r)?Nr:ZS(a.a?a.a(1):a.call(null,1),r)):ZS(a.a?a.a(0):a.call(null,0),v)};case 3:return function(r){var u=t(l),v=zS(u.a?u.a(0):u.call(null,0),r);return PS(v)?(v=zS(u.a?u.a(1):u.call(null,1),r),PS(v)?(r=zS(u.a?u.a(2):u.call(null,2),r),PS(r)?Nr:ZS(a.a?a.a(2):a.call(null,
    2),r)):ZS(a.a?a.a(1):a.call(null,1),v)):ZS(a.a?a.a(0):a.call(null,0),v)};default:return function(r){for(var u=t(l),v=0;;)if(v<F(u)){var y=u.a?u.a(v):u.call(null,v);y=zS(y,r);if(PS(y))v+=1;else return ZS(a.a?a.a(v):a.call(null,v),y)}else return Nr}}}();if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof rX)rX=function(r,u,v,y,E,H,T,Y,ia){this.keys=r;this.forms=u;this.Cb=v;this.jb=y;this.id=E;this.Lg=H;this.td=T;this.yc=Y;this.Tg=ia;this.h=393216;this.I=
    0;},rX.prototype.O=function(r,u){return new rX(this.keys,this.forms,this.Cb,this.jb,this.id,this.Lg,this.td,this.yc,u)},rX.prototype.N=function(){return this.Tg},rX.prototype.Db=function(){return this},rX.prototype.Eb=function(){return this},rX.prototype.rc=h,rX.prototype.Zb=function(r,u){return this.yc.a?this.yc.a(u):this.yc.call(null,u)},rX.prototype.$b=function(r,u){return $S.A?$S.A(this.keys,this.forms,this.Cb,u):$S.call(null,this.keys,this.forms,this.Cb,u)},rX.Pa=function(){return new Q(null,
    9,5,R,[OF,Do,MC,Sv,Xt,lw,Lt,tA,tS],null)},rX.Ia=!0,rX.Da="cljs.spec.alpha/t_cljs$spec$alpha12118",rX.Ja=function(r){return ce(r,"cljs.spec.alpha/t_cljs$spec$alpha12118")};return new rX(a,b,c,d,f,k,l,m,S)};function aT(a,b,c){var d=B(b);C(d);D(d);d=B(c);C(d);D(d);for(d=c;;){c=a;b=B(b);a=C(b);b=D(b);var e=B(d);d=C(e);e=D(e);var f=d;d=e;if(p(a)){c=SS(a,c,f);if(PS(c))return Nr;a=c;}else return c}}
    var bT=function bT(a,b,c){var e=new xl(function(){return ki.c(OS,b,a)}),f=function(){switch(F(b)){case 2:return function(k){var l=t(e);k=zS(l.a?l.a(0):l.call(null,0),k);return PS(k)?Nr:zS(l.a?l.a(1):l.call(null,1),k)};case 3:return function(k){var l=t(e);k=zS(l.a?l.a(0):l.call(null,0),k);if(PS(k))return Nr;k=zS(l.a?l.a(1):l.call(null,1),k);return PS(k)?Nr:zS(l.a?l.a(2):l.call(null,2),k)};default:return function(k){for(var l=t(e),m=0;;)if(m<F(l)){k=zS(l.a?l.a(m):l.call(null,m),k);if(PS(k))return Nr;
    m+=1;}else return k}}}();if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof sX)sX=function(k,l,m,r,u,v){this.forms=k;this.Cb=l;this.jb=m;this.td=r;this.yc=u;this.Ug=v;this.h=393216;this.I=0;},sX.prototype.O=function(k,l){return new sX(this.forms,this.Cb,this.jb,this.td,this.yc,l)},sX.prototype.N=function(){return this.Ug},sX.prototype.Db=function(){return this},sX.prototype.Eb=function(){return this},sX.prototype.rc=h,sX.prototype.Zb=function(k,l){return this.yc.a?
    this.yc.a(l):this.yc.call(null,l)},sX.prototype.$b=function(k,l){return bT.c?bT.c(this.forms,this.Cb,l):bT.call(null,this.forms,this.Cb,l)},sX.Pa=function(){return new Q(null,6,5,R,[Do,MC,Sv,Lt,tA,zT],null)},sX.Ia=!0,sX.Da="cljs.spec.alpha/t_cljs$spec$alpha12210",sX.Ja=function(k){return ce(k,"cljs.spec.alpha/t_cljs$spec$alpha12210")};return new sX(a,b,c,e,f,S)},cT=function cT(a,b,c){if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof tX)tX=function(e,
    f,k,l){this.forms=e;this.Cb=f;this.jb=k;this.Vg=l;this.h=393216;this.I=0;},tX.prototype.O=function(e,f){return new tX(this.forms,this.Cb,this.jb,f)},tX.prototype.N=function(){return this.Vg},tX.prototype.Db=function(){return this},tX.prototype.Eb=function(){return this},tX.prototype.rc=h,tX.prototype.Zb=function(e,f){e=Wh.c(function(k,l){return SS(k,f,l)},this.Cb,this.forms);return p(Eh(PS,e))?Nr:fh(wk,e)},tX.prototype.$b=function(e,f){return cT.c?cT.c(this.forms,this.Cb,f):cT.call(null,this.forms,
    this.Cb,f)},tX.Pa=function(){return new Q(null,4,5,R,[Do,MC,Sv,eU],null)},tX.Ia=!0,tX.Da="cljs.spec.alpha/t_cljs$spec$alpha12265",tX.Ja=function(e){return ce(e,"cljs.spec.alpha/t_cljs$spec$alpha12265")};return new tX(a,b,c,S)},dT=new n(null,4,[XF,I,VB,Dk,qv,Se,Hq,S],null);
    function eT(a,b,c,d){function e(sb,rb,xc,Sb){return Cf.b(sb,Sb)}var f=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,k=x.b(f,KJ),l=x.b(f,Zn),m=x.c(f,MB,20),r=x.b(f,NC),u=x.b(f,cA),v=x.b(f,NH),y=x.b(f,aE),E=x.b(f,QF),H=x.b(f,gw),T=x.b(f,cu),Y=x.b(f,Os),ia=x.b(f,sy),ba=x.b(f,uC),wa=p(ba)?Ef(ba):x.b(dT,l),ua=new xl(function(){return OS.a(b)}),pb=function(){return p(E)?E:function(sb){return sb}}();if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof uX)uX=function(sb,
    rb,xc,Sb,ob,Tb,gb,ib,mc,of,lv,SG,TG,UG,x_,y_,z_,A_,B_,C_,D_,E_,F_,G_,H_){this.form=sb;this.Pg=rb;this.Tb=xc;this.jh=Sb;this.$f=ob;this.jb=Tb;this.Hg=gb;this.Sb=ib;this.ce=mc;this.ug=of;this.Kg=lv;this.Yf=SG;this.Xd=TG;this.wg=UG;this.xg=x_;this.Sd=y_;this.Jg=z_;this.Gg=A_;this.count=B_;this.mh=C_;this.Df=D_;this.kind=E_;this.uf=F_;this.tg=G_;this.Wg=H_;this.h=393216;this.I=0;},uX.prototype.O=function(sb,rb){return new uX(this.form,this.Pg,this.Tb,this.jh,this.$f,this.jb,this.Hg,this.Sb,this.ce,this.ug,
    this.Kg,this.Yf,this.Xd,this.wg,this.xg,this.Sd,this.Jg,this.Gg,this.count,this.mh,this.Df,this.kind,this.uf,this.tg,rb)},uX.prototype.N=function(){return this.Wg},uX.prototype.Db=function(){return this},uX.prototype.Eb=function(){return this},uX.prototype.rc=h,uX.prototype.Zb=function(sb,rb){sb=t(this.Sd);if(Tc(this.ce.a?this.ce.a(rb):this.ce.call(null,rb)))return Nr;if(p(this.uf)){var xc=this.Xd.a?this.Xd.a(rb):this.Xd.call(null,rb),Sb=J(xc,0,null),ob=J(xc,1,null);xc=J(xc,2,null);var Tb=Sb.a?Sb.a(rb):
    Sb.call(null,rb);Sb=0;var gb=B(rb);rb=B(gb);C(rb);D(rb);for(rb=Tb;;){var ib=gb;Tb=B(ib);gb=C(Tb);Tb=D(Tb);if(ib){ib=zS(sb,gb);if(PS(ib))return Nr;rb=ob.A?ob.A(rb,Sb,gb,ib):ob.call(null,rb,Sb,gb,ib);Sb+=1;gb=Tb;}else return xc.a?xc.a(rb):xc.call(null,rb)}}else if(mf(rb))for(ob=sg(F(rb)/101),ob=1>ob?1:ob,Sb=0;;){if(Sb>=F(rb))return rb;if(TS(sb,pf(rb,Sb)))Sb+=ob;else return Nr}else for(Sb=0,ob=B(rb),xc=B(ob),C(xc),D(xc);;){gb=B(ob);xc=C(gb);Tb=D(gb);gb=xc;ib=ob;if(null==ib||A.b(Sb,101))return rb;if(TS(sb,
    gb))ob=Tb,Sb+=1;else return Nr}},uX.prototype.$b=function(sb,rb){return eT(this.form,this.Sb,this.Df,rb)},uX.Pa=function(){return new Q(null,25,5,R,[wF,Ao,OG,yF,UE,Sv,yG,Oo,Op,dz,vA,NB,xG,Js,DG,hy,rA,gu,wB,jC,nx,$D,SF,bo,nF],null)},uX.Ia=!0,uX.Da="cljs.spec.alpha/t_cljs$spec$alpha12350",uX.Ja=function(sb){return ce(sb,"cljs.spec.alpha/t_cljs$spec$alpha12350")};return new uX(a,k,f,c,function(sb){return TS(t(ua),sb)},d,m,b,r,u,l,e,function(sb){return Vf(sb)&&(Tc(ba)||Vf(ba))?new Q(null,3,5,R,[lg,function(rb,
    xc,Sb,ob){return Sb===ob?rb:K.c(rb,xc,ob)},lg],null):p(M(sb)?function(){var rb=p(Y)?Tc(ba):Y;return p(rb)?rb:M(ba)}():!1)?new Q(null,3,5,R,[p(u)?Ef:lg,function(rb,xc,Sb,ob){return Sb===ob&&Tc(u)?rb:K.c(rb,pf(p(u)?ob:Sb,0),pf(ob,1))},lg],null):Cg(ba)||$f(ba)||Tc(ba)&&(Cg(sb)||$f(sb))?new Q(null,3,5,R,[Ef,e,Eg],null):new Q(null,3,5,R,[function(rb){return Ef(p(ba)?ba:rb)},e,lg],null)},v,y,ua,pb,wa,H,T,f,Y,ia,ba,S)}function fT(a){return new n(null,2,[pB,$s,Mu,a],null)}
    function gT(a){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(a,pB);return A.b($s,a)}var hT=function hT(a){var c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,d=x.b(c,Iz);a=B(d);var e=C(a);a=D(a);var f=x.b(c,hz),k=B(f),l=C(k);k=D(k);var m=x.b(c,jr),r=B(m);C(r);r=D(r);var u=x.b(c,Mu);c=x.b(c,dy);return Dh(lg,d)?gT(e)?(d=Mu.a(e),d=Cf.b(u,p(f)?Gf([l,d]):d),a?(a=new n(null,4,[Iz,a,hz,k,jr,r,Mu,d],null),hT.a?hT.a(a):hT.call(null,a)):fT(d)):new n(null,6,[pB,Or,Iz,d,Mu,u,hz,f,jr,m,dy,c],null):null};
    function iT(a,b,c,d,e){return p(a)?(d=new n(null,5,[pB,Ww,Ly,b,sw,d,jr,e,qJ,gm()],null),gT(a)?K.g(d,My,b,G([Mu,Cf.b(c,Mu.a(a))])):K.g(d,My,a,G([Mu,c]))):null}
    function jT(a,b,c,d){return p(p(b)?b:c)?(a=fi.b(function(e){e=C(e);return d.a?d.a(e):d.call(null,e)},Wh.A(Ri,a,function(){var e=B(b);return e?e:new $h(null,-1,null,null)}(),function(){var e=B(c);return e?e:new $h(null,-1,null,null)}())),new Q(null,3,5,R,[B(Wh.b(C,a)),p(b)?B(Wh.b(zf,a)):null,p(c)?B(Wh.b(function(e){return pf(e,2)},a)):null],null)):new Q(null,3,5,R,[B(fi.b(d,a)),b,c],null)}
    function kT(a,b,c){var d=jT(a,b,c,lg);b=J(d,0,null);c=B(b);a=C(c);c=D(c);var e=J(d,1,null),f=J(e,0,null);d=J(d,2,null);return p(b)?(b=new n(null,4,[pB,Kn,Iz,b,hz,e,jr,d],null),null==c?p(f)?gT(a)?fT(ZS(f,Mu.a(a))):b:a:b):null}function lT(a,b){return p(p(a)?b:a)?kT(G([a,b]),null,null):p(a)?a:b}
    var mT=function mT(a){a=DS(a);var c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,d=x.b(c,pB),e=x.b(c,Iz);a=x.b(c,My);var f=x.b(c,Ly);c=x.b(c,jr);if(A.b($s,d))return !0;if(A.b(null,d))return null;if(A.b(En,d))return d=mT.a?mT.a(a):mT.call(null,a),p(d)?(a=aT(nT(a),e,D(c)),!PS(a)):d;if(A.b(Ww,d))return (e=a===f)?e:mT.a?mT.a(a):mT.call(null,a);if(A.b(Or,d))return Dh(mT,e);if(A.b(Kn,d))return Eh(mT,e);throw Error(["No matching clause: ",q.a(d)].join(""));},nT=function nT(a){a=DS(a);var c=null!=a&&(a.h&64||h===
    a.D)?fh(qk,a):a;a=x.b(c,Iz);var d=B(a),e=C(d);D(d);var f=x.b(c,hz),k=J(f,0,null),l=x.b(c,pB);d=x.b(c,My);var m=x.b(c,Mu);c=x.b(c,jr);if(A.b($s,l))return m;if(A.b(null,l))return null;if(A.b(En,l))return e=nT.a?nT.a(d):nT.call(null,d),(f=A.b(e,Yn))?d=f:(d=pB.a(DS(d)),f=new Bk(null,new n(null,2,[Ww,null,Or,null],null),null),d=f.a?f.a(d):f.call(null,d),d=p(d)?Pf(e):d,d=p(d)?d:null),p(d)?Yn:aT(e,a,c);if(A.b(Ww,l))return oT(d,m,k);if(A.b(Or,l))return oT(e,m,k);if(A.b(Kn,l))return c=jT(a,f,c,mT),a=J(c,0,
    null),a=J(a,0,null),c=J(c,1,null),c=J(c,0,null),a=null==a?Yn:nT.a?nT.a(a):nT.call(null,a),p(c)?ZS(c,a):a;throw Error(["No matching clause: ",q.a(l)].join(""));};
    function oT(a,b,c){a=DS(a);var d=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,e=x.b(d,pB);x.b(d,Iz);a=x.b(d,sw);if(A.b(null,e))return b;if(A.b(Kn,e)||A.b($s,e)||A.b(En,e))return a=nT(d),A.b(a,Yn)?b:Cf.b(b,p(c)?Gf([c,a]):a);if(A.b(Ww,e)||A.b(Or,e))return d=nT(d),Pf(d)||(c=p(c)?Gf([c,d]):d,a=p(a)?ji:Cf,b=a.b?a.b(b,c):a.call(null,b,c)),b;throw Error(["No matching clause: ",q.a(e)].join(""));}
    var pT=function pT(a,b){a=DS(a);var d=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,e=x.b(d,jr),f=x.b(d,Ly);a=x.b(d,Iz);var k=B(a),l=C(k),m=D(k),r=x.b(d,Mu);k=x.b(d,pB);var u=x.b(d,sw),v=x.b(d,hz),y=B(v),E=C(y),H=D(y);y=x.b(d,JC);var T=x.b(d,My);if(p(d)){if(A.b($s,k))return null;if(A.b(null,k))return a=SS(d,b,d),PS(a)?null:fT(a);if(A.b(En,k))return d=pT.b?pT.b(T,b):pT.call(null,T,b),p(d)?A.b($s,pB.a(d))?(a=aT(nT(d),a,D(e)),PS(a)?null:fT(a)):new n(null,5,[pB,En,My,d,JC,y,Iz,a,jr,e],null):null;if(A.b(Or,k))return lT(hT(new n(null,
    4,[Iz,vf(pT.b?pT.b(l,b):pT.call(null,l,b),m),hz,v,jr,e,Mu,r],null)),p(mT(l))?function(){var Y=hT(new n(null,4,[Iz,m,hz,H,jr,D(e),Mu,oT(l,r,E)],null));return pT.b?pT.b(Y,b):pT.call(null,Y,b)}():null);if(A.b(Kn,k))return kT(Wh.b(function(Y){return pT.b?pT.b(Y,b):pT.call(null,Y,b)},a),v,e);if(A.b(Ww,k))return lT(iT(pT.b?pT.b(T,b):pT.call(null,T,b),f,r,u,e),p(mT(T))?function(){var Y=iT(f,f,oT(T,r,null),u,e);return pT.b?pT.b(Y,b):pT.call(null,Y,b)}():null);throw Error(["No matching clause: ",q.a(k)].join(""));
    }return null};function qT(a,b){for(;;){var c=B(b),d=C(c);c=D(c);if(Pf(b))return p(mT(a))?(a=nT(a),A.b(a,Yn)?null:a):Nr;a=pT(a,d);if(p(a))b=c;else return Nr}}
    var JS=function JS(a,b){if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof vX)vX=function(d,e,f){this.qe=d;this.jb=e;this.Yg=f;this.h=393216;this.I=0;},vX.prototype.O=function(d,e){return new vX(this.qe,this.jb,e)},vX.prototype.N=function(){return this.Yg},vX.prototype.Db=function(){return this},vX.prototype.Eb=function(){return this},vX.prototype.rc=h,vX.prototype.Zb=function(d,e){return null==e||Tf(e)?qT(this.qe,B(e)):Nr},vX.prototype.$b=function(d,
    e){return JS.b?JS.b(this.qe,e):JS.call(null,this.qe,e)},vX.Pa=function(){return new Q(null,3,5,R,[Pp,Sv,fU],null)},vX.Ia=!0,vX.Da="cljs.spec.alpha/t_cljs$spec$alpha13104",vX.Ja=function(d){return ce(d,"cljs.spec.alpha/t_cljs$spec$alpha13104")};return new vX(a,b,S)};
    Z(Ls,O(YG,O(Cm,new Q(null,1,5,R,[dU],null),O(Cs,O(Tw,ur,dU),O(Tw,rr,dU))),O(Cm,new Q(null,1,5,R,[LH],null),O(Tw,O(W,new Q(null,1,5,R,[new Q(null,2,5,R,[Lp,Jp],null)],null),new n(null,2,[ur,Lp,rr,Jp],null)),LH))),NS(O(YG,O(W,new Q(null,1,5,R,[V],null),O(Cs,O(Tw,ur,V),O(Tw,rr,V))),O(W,new Q(null,1,5,R,[V],null),O(Tw,O(W,new Q(null,1,5,R,[new Q(null,2,5,R,[Lp,Jp],null)],null),new n(null,2,[ur,Lp,rr,Jp],null)),V))),function(a){return Ik(Wh.b(ur,a),Wh.b(rr,a))},null,!0,function(a){return Wh.b(function(b){var c=
    J(b,0,null);b=J(b,1,null);return new n(null,2,[ur,c,rr,b],null)},a)}));
    var rT=function rT(a,b,c){var e=new xl(function(){return OS.b(b,a)});if("undefined"===typeof Ac||"undefined"===typeof nS||"undefined"===typeof oS||"undefined"===typeof SY)SY=function(f,k,l,m,r){this.form=f;this.Sb=k;this.jb=l;this.Sd=m;this.Zg=r;this.h=393216;this.I=0;},SY.prototype.O=function(f,k){return new SY(this.form,this.Sb,this.jb,this.Sd,k)},SY.prototype.N=function(){return this.Zg},SY.prototype.Db=function(){return this},SY.prototype.Eb=function(){return this},SY.prototype.rc=h,SY.prototype.Zb=
    function(f,k){return null==k?null:zS(t(this.Sd),k)},SY.prototype.$b=function(f,k){return rT.c?rT.c(this.form,this.Sb,k):rT.call(null,this.form,this.Sb,k)},SY.Pa=function(){return new Q(null,5,5,R,[wF,Oo,Sv,hy,kI],null)},SY.Ia=!0,SY.Da="cljs.spec.alpha/t_cljs$spec$alpha13317",SY.Ja=function(f){return ce(f,"cljs.spec.alpha/t_cljs$spec$alpha13317")};return new SY(a,b,c,e,S)};Z(Uz,Bo,Vc);Z(zF,Bo,Vc);Z(yB,Gw,yg);Z(fq,lI,Uc);
    Z(ay,O(wt,ir,new Q(null,3,5,R,[Uz,zF,yB],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Uz,zF,yB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,$v)},function(a){return N(a,Rn)},function(a){return N(a,Ln)}],null),function(a){return M(a)&&N(a,$v)&&N(a,Rn)&&N(a,Ln)},I,new Q(null,3,5,R,[Uz,zF,yB],null),null,new Q(null,3,5,R,[$v,Rn,Ln],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,$v)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,Rn)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Ln))],null),null])));Z(GA,Bo,Vc);
    Z(To,O(vI,GA,O(wt,ir,new Q(null,2,5,R,[fq,ay],null))),eT(O(gr,GA,O(uu,ir,new Q(null,2,5,R,[fq,ay],null))),XS(new Q(null,2,5,R,[GA,O(wt,ir,new Q(null,2,5,R,[fq,ay],null))],null),new Q(null,2,5,R,[GA,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[fq,ay],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,tq)},function(a){return N(a,sD)}],null),function(a){return M(a)&&N(a,tq)&&N(a,sD)},I,new Q(null,2,5,R,[fq,ay],null),null,new Q(null,2,5,R,[tq,sD],null),
    I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,tq)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,sD))],null),null]))],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,GA,O(wt,ir,new Q(null,2,5,R,[fq,ay],null)))],null),null));Z(JA,Bo,Vc);Z(GF,O(CJ,Bo),rT(Bo,Vc,null));Z(nn,GC,cg);Z(pq,Bo,Vc);var sT,xZ=Oh(S),yZ=Oh(S),zZ=Oh(S),AZ=Oh(S),F0=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));sT=new dm(Me.b(Ta,"address-type"),U,F0,xZ,yZ,zZ,AZ);Z(ws,BI,Wc);
    sT.v(null,Fs,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[rn,ws],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,lD)}],null),function(a){return M(a)&&N(a,U)&&N(a,lD)},I,new Q(null,2,5,R,[rn,ws],null),null,new Q(null,2,5,R,[U,lD],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,lD))],null),null]))});
    Z(Yo,Bo,Vc);
    sT.v(null,WI,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[rn,zq,Yo],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Fp)},function(a){return N(a,Yp)}],null),function(a){return M(a)&&N(a,U)&&N(a,Fp)&&N(a,Yp)},I,new Q(null,3,5,R,[rn,zq,Yo],null),null,new Q(null,3,5,R,[U,Fp,Yp],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,
    [V],null),O(jG,V,Fp)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Yp))],null),null]))});sT.v(null,Zv,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[rn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},I,new Q(null,1,5,R,[rn],null),null,new Q(null,1,5,R,[U],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U))],null),null]))});
    sT.v(null,Yp,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[rn,Yo],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Yp)}],null),function(a){return M(a)&&N(a,U)&&N(a,Yp)},I,new Q(null,2,5,R,[rn,Yo],null),null,new Q(null,2,5,R,[U,Yp],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Yp))],null),null]))});
    sT.v(null,em,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[rn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},I,new Q(null,1,5,R,[rn],null),null,new Q(null,1,5,R,[U],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U))],null),null]))});
    Z(av,O(io,XA,U),VS(XA,new Ne(function(){return sT},XA,Xj([By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[jx,dp,"gateway/state/spec/common.cljc",23,1,10,10,Se,null,p(sT)?sT.ld:null]))));Z(Br,O(io,XA,U),VS(XA,new Ne(function(){return sT},XA,Xj([By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[jx,dp,"gateway/state/spec/common.cljc",23,1,10,10,Se,null,p(sT)?sT.ld:null]))));
    Z(Wx,O(vI,O(ZB,UD,Bo,GJ,Qp),BI),eT(O(gr,O(KF,UD,Uy,GJ,ep),qC),XS(new Q(null,2,5,R,[O(ZB,UD,Bo,GJ,Qp),BI],null),new Q(null,2,5,R,[$S(new Q(null,2,5,R,[UD,GJ],null),new Q(null,2,5,R,[Bo,Qp],null),new Q(null,2,5,R,[Vc,Hg],null),null),Wc],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,O(ZB,UD,Bo,GJ,Qp),BI)],null),null));Z(nH,O(ZB,Po,Bx,Fn,Bo,IJ,XF),$S(new Q(null,3,5,R,[Po,Fn,IJ],null),new Q(null,3,5,R,[Bx,Bo,XF],null),new Q(null,3,5,R,[Qc,Vc,Vf],null),null));Z(Bp,O(kD,Bo,Hp),bT(new Q(null,2,5,R,[Bo,Hp],null),new Q(null,2,5,R,[Vc,B],null),null));Z(Xy,Bo,Vc);Z(LI,O(CJ,Hq),rT(Hq,M,null));Z(nB,nH,nH);Z(tI,nH,nH);
    Z(bn,O(kD,Qp,O(Cm,new Q(null,1,5,R,[aF],null),O(jG,new Bk(null,new n(null,4,[aI,"null",Tr,"null",Go,"null",Mw,"null"],null),null),aF))),bT(new Q(null,2,5,R,[Qp,O(W,new Q(null,1,5,R,[V],null),O(jG,new Bk(null,new n(null,4,[aI,"null",Tr,"null",Go,"null",Mw,"null"],null),null),V))],null),new Q(null,2,5,R,[Hg,function(a){return N(new Bk(null,new n(null,4,[aI,null,Tr,null,Go,null,Mw,null],null),null),a)}],null),null));
    Z(wn,O(hq,JA,Os,VB),eT(JA,JA,new n(null,5,[Zn,VB,NC,function(a){return Rf(a)},Os,Rf,sy,!0,NH,O(hq,JA,Os,VB)],null),null));Z(Ex,JA,JA);Z(Tp,gq,Sc);Z(In,gq,Sc);
    Z(ZC,O(wt,ir,new Q(null,2,5,R,[Tp,In],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Tp,In],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,HA)},function(a){return N(a,Zt)}],null),function(a){return M(a)&&N(a,HA)&&N(a,Zt)},I,new Q(null,2,5,R,[Tp,In],null),null,new Q(null,2,5,R,[HA,Zt],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,HA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zt))],null),
    null])));
    Z(WE,O(wt,ir,new Q(null,3,5,R,[Bp,bn,wn],null),iA,new Q(null,6,5,R,[Xy,nB,tI,LI,Ex,ZC],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Bp,bn,wn],null),new Q(null,6,5,R,[Xy,nB,tI,LI,Ex,ZC],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,qJ)},function(a){return N(a,Zz)},function(a){return N(a,tD)}],null),function(a){return M(a)&&N(a,qJ)&&N(a,Zz)&&N(a,tD)},new Q(null,6,5,R,[yw,gz,Ys,yn,oA,Ln],null),new Q(null,3,5,R,[Bp,bn,wn],null),null,new Q(null,3,
    5,R,[qJ,Zz,tD],null),new Q(null,6,5,R,[Xy,nB,tI,LI,Ex,ZC],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,tD))],null),null])));Z(Gy,O(vI,Bp,WE),eT(O(gr,Bp,WE),XS(new Q(null,2,5,R,[Bp,WE],null),new Q(null,2,5,R,[Bp,WE],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,Bp,WE)],null),null));Z(Rr,GC,cg);Z(EH,Bo,Vc);Z(cw,O(vI,lI,BI),eT(O(gr,CA,qC),XS(new Q(null,2,5,R,[lI,BI],null),new Q(null,2,5,R,[Uc,Wc],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,lI,BI)],null),null));Z(fJ,O(vI,lI,BI),eT(O(gr,CA,qC),XS(new Q(null,2,5,R,[lI,BI],null),new Q(null,2,5,R,[Uc,Wc],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,lI,BI)],null),null));
    Z(Nq,O(wt,ir,new Q(null,2,5,R,[Rr,EH],null),iA,new Q(null,2,5,R,[cw,fJ],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Rr,EH],null),new Q(null,2,5,R,[cw,fJ],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,qJ)},function(a){return N(a,KH)}],null),function(a){return M(a)&&N(a,qJ)&&N(a,KH)},new Q(null,2,5,R,[PH,fv],null),new Q(null,2,5,R,[Rr,EH],null),null,new Q(null,2,5,R,[qJ,KH],null),new Q(null,2,5,R,[cw,fJ],null),new Q(null,3,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,KH))],null),null])));Z(hF,O(vI,EH,Nq),eT(O(gr,EH,Nq),XS(new Q(null,2,5,R,[EH,Nq],null),new Q(null,2,5,R,[EH,Nq],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,EH,Nq)],null),null));Z(AA,Bo,Vc);Z(yv,AA,AA);Z(Wr,O(vI,lI,lI),eT(O(gr,CA,CA),XS(new Q(null,2,5,R,[lI,lI],null),new Q(null,2,5,R,[Uc,Uc],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,lI,lI)],null),null));
    Z(Gv,O(wt,ir,new Q(null,1,5,R,[AA],null),iA,new Q(null,2,5,R,[yv,Wr],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[AA],null),new Q(null,2,5,R,[yv,Wr],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},new Q(null,2,5,R,[yw,PH],null),new Q(null,1,5,R,[AA],null),null,new Q(null,1,5,R,[U],null),new Q(null,2,5,R,[yv,Wr],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),
    O(jG,V,U))],null),null])));Z(Sq,Gv,Gv);Z(Ft,O(hq,Gv,Os,XF),eT(Gv,Gv,new n(null,5,[Zn,XF,NC,function(a){return Vf(a)},Os,Vf,sy,!0,NH,O(hq,Gv,Os,XF)],null),null));Z(PD,O(vI,lI,lI),eT(O(gr,CA,CA),XS(new Q(null,2,5,R,[lI,lI],null),new Q(null,2,5,R,[Uc,Uc],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,lI,lI)],null),null));Z(Eq,nH,nH);
    Z(VD,O(wt,ir,new Q(null,2,5,R,[yv,Sq],null),iA,new Q(null,3,5,R,[Ft,PD,Eq],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[yv,Sq],null),new Q(null,3,5,R,[Ft,PD,Eq],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,yw)},function(a){return N(a,uH)}],null),function(a){return M(a)&&N(a,yw)&&N(a,uH)},new Q(null,3,5,R,[aG,Rz,Kx],null),new Q(null,2,5,R,[yv,Sq],null),null,new Q(null,2,5,R,[yw,uH],null),new Q(null,3,5,R,[Ft,PD,Eq],null),new Q(null,3,5,R,[O(W,
    new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uH))],null),null])));Z(dv,Bo,Vc);
    Z(tr,O(vI,dv,O(vI,AA,VD)),eT(O(gr,dv,O(HF,AA,VD)),XS(new Q(null,2,5,R,[dv,O(vI,AA,VD)],null),new Q(null,2,5,R,[dv,eT(O(gr,AA,VD),XS(new Q(null,2,5,R,[AA,VD],null),new Q(null,2,5,R,[AA,VD],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,AA,VD)],null),null)],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,dv,O(vI,AA,VD))],null),null));Z(Cn,Bo,Vc);Z(ht,Bp,Bp);Z(Tq,JA,JA);
    Z(Sy,JA,JA);Z(mr,O(hq,JA,Os,VB),eT(JA,JA,new n(null,5,[Zn,VB,NC,function(a){return Rf(a)},Os,Rf,sy,!0,NH,O(hq,JA,Os,VB)],null),null));Z(NA,O(hq,JA,Os,VB),eT(JA,JA,new n(null,5,[Zn,VB,NC,function(a){return Rf(a)},Os,Rf,sy,!0,NH,O(hq,JA,Os,VB)],null),null));Z(RB,WE,WE);
    Z(sI,O(wt,ir,new Q(null,3,5,R,[AA,RB,Sy],null),iA,new Q(null,3,5,R,[NA,oC,wu],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[AA,RB,Sy],null),new Q(null,3,5,R,[NA,oC,wu],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,fI)},function(a){return N(a,oA)}],null),function(a){return M(a)&&N(a,U)&&N(a,fI)&&N(a,oA)},new Q(null,3,5,R,[fs,Iw,YC],null),new Q(null,3,5,R,[AA,RB,Sy],null),null,new Q(null,3,5,R,[U,fI,oA],null),new Q(null,
    3,5,R,[NA,oC,wu],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,oA))],null),null])));Z(wu,O(vI,Cn,sI),eT(O(gr,Cn,sI),XS(new Q(null,2,5,R,[Cn,sI],null),new Q(null,2,5,R,[Cn,sI],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,Cn,sI)],null),null));Z(Jy,Cn,Cn);Z(GB,jH,Zf);
    Z(lB,O(wt,ir,new Q(null,4,5,R,[Cn,AA,Mq,Tq],null),iA,new Q(null,5,5,R,[GB,Sy,NA,mr,wu],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,4,5,R,[Cn,AA,Mq,Tq],null),new Q(null,5,5,R,[GB,Sy,NA,mr,wu],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,qJ)},function(a){return N(a,U)},function(a){return N(a,ap)},function(a){return N(a,ln)}],null),function(a){return M(a)&&N(a,qJ)&&N(a,U)&&N(a,ap)&&N(a,ln)},new Q(null,5,5,R,[Io,oA,fs,zG,YC],null),new Q(null,4,5,R,[Cn,
    AA,Mq,Tq],null),null,new Q(null,4,5,R,[qJ,U,ap,ln],null),new Q(null,5,5,R,[GB,Sy,NA,mr,wu],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ap)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ln))],null),null])));
    Z(vE,O(vI,Cn,lB),eT(O(gr,Cn,lB),XS(new Q(null,2,5,R,[Cn,lB],null),new Q(null,2,5,R,[Cn,lB],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,Cn,lB)],null),null));
    Z(DD,O(wt,iA,new Q(null,1,5,R,[hF],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,1,5,R,[hF],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[ZF],null),I,null,I,new Q(null,1,5,R,[hF],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));
    Z(DB,O(vI,O(ZB,U,AA,yC,O($A,pH,yC)),O(hq,JA,Os,VB)),eT(O(gr,O(KF,U,AA,yC,O(Ou,lF,yC)),O(mz,JA,Os,KA)),XS(new Q(null,2,5,R,[O(ZB,U,AA,yC,O($A,pH,yC)),O(hq,JA,Os,VB)],null),new Q(null,2,5,R,[$S(new Q(null,2,5,R,[U,yC],null),new Q(null,2,5,R,[AA,O($A,pH,yC)],null),new Q(null,2,5,R,[AA,Jh(A,yC)],null),null),eT(JA,JA,new n(null,5,[Zn,VB,NC,function(a){return Rf(a)},Os,Rf,sy,!0,NH,O(hq,JA,Os,VB)],null),null)],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,
    0)},sy,!0,NH,O(vI,O(ZB,U,AA,yC,O($A,pH,yC)),O(hq,JA,Os,VB))],null),null));Z(RG,GC,cg);Z(uB,Bo,Vc);Z(Uo,GC,cg);Z(KD,Bo,Vc);Z(lr,Bo,Vc);Z(xE,Bo,Vc);Z(hv,Bo,Vc);
    Z(LD,O(wt,ir,new Q(null,6,5,R,[RG,uB,Uo,mp,KD,lr],null),iA,new Q(null,3,5,R,[xE,hv,nH],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,6,5,R,[RG,uB,Uo,mp,KD,lr],null),new Q(null,3,5,R,[xE,hv,nH],null),null,new Q(null,7,5,R,[function(a){return M(a)},function(a){return N(a,qJ)},function(a){return N(a,yw)},function(a){return N(a,Ln)},function(a){return N(a,fv)},function(a){return N(a,vp)},function(a){return N(a,up)}],null),function(a){return M(a)&&N(a,qJ)&&N(a,yw)&&N(a,Ln)&&N(a,fv)&&N(a,
    vp)&&N(a,up)},new Q(null,3,5,R,[Uv,Rn,os],null),new Q(null,6,5,R,[RG,uB,Uo,mp,KD,lr],null),null,new Q(null,6,5,R,[qJ,yw,Ln,fv,vp,up],null),new Q(null,3,5,R,[xE,hv,nH],null),new Q(null,7,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Ln)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fv)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,vp)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,up))],null),null])));
    Z(XH,O(ZB,kB,dD,xo,O(vI,RG,LD)),$S(new Q(null,2,5,R,[kB,xo],null),new Q(null,2,5,R,[dD,O(vI,RG,LD)],null),new Q(null,2,5,R,[Pf,eT(O(gr,RG,LD),XS(new Q(null,2,5,R,[RG,LD],null),new Q(null,2,5,R,[RG,LD],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,RG,LD)],null),null)],null),null));
    Z(Qs,O(vI,JA,XH),eT(O(gr,JA,XH),XS(new Q(null,2,5,R,[JA,XH],null),new Q(null,2,5,R,[JA,XH],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,JA,XH)],null),null));Z($G,RG,RG);Z(vy,GF,GF);Z(EI,GF,GF);Z(gG,GF,GF);Z(py,JA,JA);
    Z(dr,O(wt,ir,new Q(null,3,5,R,[py,$G,vy],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[py,$G,vy],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Yr)},function(a){return N(a,MI)},function(a){return N(a,qu)}],null),function(a){return M(a)&&N(a,Yr)&&N(a,MI)&&N(a,qu)},I,new Q(null,3,5,R,[py,$G,vy],null),null,new Q(null,3,5,R,[Yr,MI,qu],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Yr)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qu))],null),null])));Z(Vo,O(vI,gG,dr),eT(O(gr,gG,dr),XS(new Q(null,2,5,R,[gG,dr],null),new Q(null,2,5,R,[gG,dr],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,gG,dr)],null),null));Z(ry,JA,JA);
    Z($t,O(wt,ir,new Q(null,3,5,R,[ry,$G,gG],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[ry,$G,gG],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Qr)},function(a){return N(a,MI)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,Qr)&&N(a,MI)&&N(a,is)},I,new Q(null,3,5,R,[ry,$G,gG],null),null,new Q(null,3,5,R,[Qr,MI,is],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Qr)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,is))],null),null])));Z(BE,O(vI,vy,$t),eT(O(gr,vy,$t),XS(new Q(null,2,5,R,[vy,$t],null),new Q(null,2,5,R,[vy,$t],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,vy,$t)],null),null));Z(mD,Bo,Vc);Z(oD,mD,mD);Z(Es,JA,JA);
    Z(bq,O(wt,ir,new Q(null,3,5,R,[Es,$G,gG],null),iA,new Q(null,1,5,R,[oD],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Es,$G,gG],null),new Q(null,1,5,R,[oD],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,vo)},function(a){return N(a,MI)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,vo)&&N(a,MI)&&N(a,is)},new Q(null,1,5,R,[sJ],null),new Q(null,3,5,R,[Es,$G,gG],null),null,new Q(null,3,5,R,[vo,MI,is],null),new Q(null,1,5,R,[oD],null),
    new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,vo)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,is))],null),null])));Z(RA,O(vI,EI,bq),eT(O(gr,EI,bq),XS(new Q(null,2,5,R,[EI,bq],null),new Q(null,2,5,R,[EI,bq],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,EI,bq)],null),null));Z(Ho,JA,JA);
    Z(Vq,O(wt,Oq,new Q(null,2,5,R,[Ho,RG],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,null,null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},I,I,null,I,I,new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));Z(gy,O(vI,EI,Vq),eT(O(gr,EI,Vq),XS(new Q(null,2,5,R,[EI,Vq],null),new Q(null,2,5,R,[EI,Vq],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,EI,Vq)],null),null));
    Z(gF,O(vI,JA,O(hq,EI,Os,VB)),eT(O(gr,JA,O(mz,EI,Os,KA)),XS(new Q(null,2,5,R,[JA,O(hq,EI,Os,VB)],null),new Q(null,2,5,R,[JA,eT(EI,EI,new n(null,5,[Zn,VB,NC,function(a){return Rf(a)},Os,Rf,sy,!0,NH,O(hq,EI,Os,VB)],null),null)],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,JA,O(hq,EI,Os,VB))],null),null));
    Z(aJ,O(vI,mD,gF),eT(O(gr,mD,gF),XS(new Q(null,2,5,R,[mD,gF],null),new Q(null,2,5,R,[mD,gF],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,mD,gF)],null),null));
    Z(sF,O(wt,iA,new Q(null,7,5,R,[nH,Qs,Vo,BE,RA,gy,aJ],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,7,5,R,[nH,Qs,Vo,BE,RA,gy,aJ],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,7,5,R,[os,Zw,jA,Xw,qy,$n,AD],null),I,null,I,new Q(null,7,5,R,[nH,Qs,Vo,BE,RA,gy,aJ],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));Z(eo,GF,GF);Z(Az,Bo,Vc);Z(yq,BI,Wc);
    Z(XI,O(wt,ir,new Q(null,1,5,R,[Az],null),iA,new Q(null,2,5,R,[yq,Ey],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Az],null),new Q(null,2,5,R,[yq,Ey],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Zo)}],null),function(a){return M(a)&&N(a,Zo)},new Q(null,2,5,R,[mF,MH],null),new Q(null,1,5,R,[Az],null),null,new Q(null,1,5,R,[Zo],null),new Q(null,2,5,R,[yq,Ey],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],
    null),O(jG,V,Zo))],null),null])));Z(Ss,O(vI,eo,XI),eT(O(gr,eo,XI),XS(new Q(null,2,5,R,[eo,XI],null),new Q(null,2,5,R,[eo,XI],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,eo,XI)],null),null));
    Z(ZG,O(wt,iA,new Q(null,1,5,R,[Ss],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,1,5,R,[Ss],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[qy],null),I,null,I,new Q(null,1,5,R,[Ss],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));Z(dE,Bo,Vc);Z(mB,GC,cg);Z(Qz,JA,JA);Z(VC,GF,GF);
    Z(Kv,O(wt,ir,new Q(null,2,5,R,[Qz,VC],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Qz,VC],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,hD)},function(a){return N(a,AH)}],null),function(a){return M(a)&&N(a,hD)&&N(a,AH)},I,new Q(null,2,5,R,[Qz,VC],null),null,new Q(null,2,5,R,[hD,AH],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,hD)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,AH))],null),
    null])));Z(eH,GF,GF);Z(Ns,Bo,Vc);Z(eF,jH,Zf);Z($r,O(wt,Oq,new Q(null,2,5,R,[Ns,eF],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,null,null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},I,I,null,I,I,new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));Z(Fu,dE,dE);Z(tu,new Bk(null,new n(null,2,[BB,"null",Tr,"null"],null),null),new Bk(null,new n(null,2,[BB,null,Tr,null],null),null));
    Z(Dw,O(wt,ir,new Q(null,2,5,R,[Ns,tu],null),iA,new Q(null,3,5,R,[Yy,$r,EH],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Ns,tu],null),new Q(null,3,5,R,[Yy,$r,EH],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,qJ)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,qJ)&&N(a,U)},new Q(null,3,5,R,[gn,Tr,KH],null),new Q(null,2,5,R,[Ns,tu],null),null,new Q(null,2,5,R,[qJ,U],null),new Q(null,3,5,R,[Yy,$r,EH],null),new Q(null,3,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U))],null),null])));Z(Ks,O(vI,eH,Dw),eT(O(gr,eH,Dw),XS(new Q(null,2,5,R,[eH,Dw],null),new Q(null,2,5,R,[eH,Dw],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,eH,Dw)],null),null));Z(qp,GC,cg);Z(Rt,Dw,Dw);
    Z(zy,O(wt,ir,new Q(null,2,5,R,[Br,Wx],null),iA,new Q(null,6,5,R,[cD,sF,DD,ZG,Rt,EH],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Br,Wx],null),new Q(null,6,5,R,[cD,sF,DD,ZG,Rt,EH],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,lz)},function(a){return N(a,pD)}],null),function(a){return M(a)&&N(a,lz)&&N(a,pD)},new Q(null,6,5,R,[eI,ip,by,Gq,dH,KH],null),new Q(null,2,5,R,[Br,Wx],null),null,new Q(null,2,5,R,[lz,pD],null),new Q(null,6,5,R,[cD,sF,DD,
    ZG,Rt,EH],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,lz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD))],null),null])));Z(dw,O(vI,JA,zy),eT(O(gr,JA,zy),XS(new Q(null,2,5,R,[JA,zy],null),new Q(null,2,5,R,[JA,zy],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,JA,zy)],null),null));
    Z(zD,O(vI,O(ZB,Ot,Bo,Iu,new Bk(null,new n(null,1,[Qy,"null"],null),null)),O(hq,JA)),eT(O(gr,O(KF,Ot,Uy,Iu,new Bk(null,new n(null,1,[Qy,"null"],null),null)),O(mz,JA)),XS(new Q(null,2,5,R,[O(ZB,Ot,Bo,Iu,new Bk(null,new n(null,1,[Qy,"null"],null),null)),O(hq,JA)],null),new Q(null,2,5,R,[$S(new Q(null,2,5,R,[Ot,Iu],null),new Q(null,2,5,R,[Bo,new Bk(null,new n(null,1,[Qy,"null"],null),null)],null),new Q(null,2,5,R,[Vc,new Bk(null,new n(null,1,[Qy,null],null),null)],null),null),eT(JA,JA,new n(null,4,[Zn,
    null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,JA)],null),null)],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,O(ZB,Ot,Bo,Iu,new Bk(null,new n(null,1,[Qy,"null"],null),null)),O(hq,JA))],null),null));Z(rB,O(hq,JA),eT(JA,JA,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,JA)],null),null));Z(au,Gy,Gy);Z(rG,tr,tr);Z(Fo,DB,DB);
    Z(cs,O(vI,Wx,JA),eT(O(gr,Wx,JA),XS(new Q(null,2,5,R,[Wx,JA],null),new Q(null,2,5,R,[Wx,JA],null)),new n(null,7,[uC,S,Zn,Hq,NC,function(a){return M(a)},Os,M,QF,function(a,b){return pf(b,0)},sy,!0,NH,O(vI,Wx,JA)],null),null));Z(OI,BI,Wc);Z(Lw,Bo,Vc);Z(bH,Gw,yg);
    Z(nw,O(wt,ir,new Q(null,2,5,R,[Lw,bH],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Lw,bH],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,$y)},function(a){return N(a,Qq)}],null),function(a){return M(a)&&N(a,$y)&&N(a,Qq)},I,new Q(null,2,5,R,[Lw,bH],null),null,new Q(null,2,5,R,[$y,Qq],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,$y)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Qq))],null),
    null])));Z(gp,Bo,Vc);
    Z(wp,O(wt,ir,new Q(null,2,5,R,[nw,gp],null),iA,new Q(null,11,5,R,[OI,To,dw,zD,rB,cs,au,Ks,vE,rG,Fo],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[nw,gp],null),new Q(null,11,5,R,[OI,To,dw,zD,rB,cs,au,Ks,vE,rG,Fo],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Mx)},function(a){return N(a,pn)}],null),function(a){return M(a)&&N(a,Mx)&&N(a,pn)},new Q(null,11,5,R,[er,pz,Dn,Av,bt,vu,ao,aC,vs,Vr,EF],null),new Q(null,2,5,R,[nw,gp],null),null,new Q(null,
    2,5,R,[Mx,pn],null),new Q(null,11,5,R,[OI,To,dw,zD,rB,cs,au,Ks,vE,rG,Fo],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Mx)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pn))],null),null])));Z(NE,Bo,Vc);Z(Tm,Qp,Hg);var yT,G0=Oh(S),H0=Oh(S),I0=Oh(S),J0=Oh(S),e2=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));yT=new dm(Me.b(ta,"message-body"),U,e2,G0,H0,I0,J0);Z(QD,Bo,Vc);Z(dC,Bo,Vc);Z(Nt,O(CJ,JA),rT(JA,JA,null));
    Z(kG,O(wt,ir,new Q(null,2,5,R,[NE,Tm],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[NE,Tm],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,tq)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,tq)&&N(a,U)},I,new Q(null,2,5,R,[NE,Tm],null),null,new Q(null,2,5,R,[tq,U],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,tq)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U))],null),null])));
    Z(Wp,O(wt,ir,new Q(null,2,5,R,[GF,JA],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[GF,JA],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,is)},function(a){return N(a,ow)}],null),function(a){return M(a)&&N(a,is)&&N(a,ow)},I,new Q(null,2,5,R,[GF,JA],null),null,new Q(null,2,5,R,[is,ow],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,is)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow))],null),
    null])));Z(On,O(wt,ir,new Q(null,1,5,R,[JA],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[JA],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,ow)}],null),function(a){return M(a)&&N(a,ow)},I,new Q(null,1,5,R,[JA],null),null,new Q(null,1,5,R,[ow],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow))],null),null])));
    Z(rs,O(xv,kG,On),cT(new Q(null,2,5,R,[kG,On],null),new Q(null,2,5,R,[kG,On],null),null));
    Z(tv,O(xv,kG,On,O(wt,ir,new Q(null,1,5,R,[GF],null))),cT(new Q(null,3,5,R,[kG,On,O(wt,ir,new Q(null,1,5,R,[GF],null))],null),new Q(null,3,5,R,[kG,On,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[GF],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,is)},I,new Q(null,1,5,R,[GF],null),null,new Q(null,1,5,R,[is],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,
    V,is))],null),null]))],null),null));
    yT.v(null,IA,function(){return cT(new Q(null,2,5,R,[kG,O(wt,ir,new Q(null,2,5,R,[QD,dC],null),iA,new Q(null,1,5,R,[Nt],null))],null),new Q(null,2,5,R,[kG,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[QD,dC],null),new Q(null,1,5,R,[Nt],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,uE)&&N(a,kJ)},new Q(null,1,5,R,[ow],null),new Q(null,2,5,R,[QD,dC],null),null,new Q(null,2,5,R,[uE,kJ],
    null),new Q(null,1,5,R,[Nt],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});
    yT.v(null,qz,function(){return cT(new Q(null,2,5,R,[kG,O(wt,iA,new Q(null,1,5,R,[Nt],null))],null),new Q(null,2,5,R,[kG,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,1,5,R,[Nt],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[ow],null),I,null,I,new Q(null,1,5,R,[Nt],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null]))],null),null)});
    Z(YI,O(io,Ir,U),VS(Ir,new Ne(function(){return yT},Ir,Xj([By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[CB,so,"gateway/common/spec/messages.cljc",23,1,8,8,Se,null,p(yT)?yT.ld:null]))));Z(DJ,av,av);
    Z(TC,O(wt,ir,new Q(null,2,5,R,[Br,YI],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Br,YI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,lz)},function(a){return N(a,Xv)}],null),function(a){return M(a)&&N(a,lz)&&N(a,Xv)},I,new Q(null,2,5,R,[Br,YI],null),null,new Q(null,2,5,R,[lz,Xv],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,lz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Xv))],null),
    null])));
    Z(rv,O(wt,ir,new Q(null,2,5,R,[DJ,YI],null),iA,new Q(null,1,5,R,[Br],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[DJ,YI],null),new Q(null,1,5,R,[Br],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Fy)},function(a){return N(a,Xv)}],null),function(a){return M(a)&&N(a,Fy)&&N(a,Xv)},new Q(null,1,5,R,[lz],null),new Q(null,2,5,R,[DJ,YI],null),null,new Q(null,2,5,R,[Fy,Xv],null),new Q(null,1,5,R,[Br],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Fy)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Xv))],null),null])));Z(wy,O(CJ,O(hq,rv)),rT(O(hq,rv),eT(rv,rv,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,rv)],null),null),null));Z(bB,jH,Zf);
    Z(hE,O(wt,ir,new Q(null,1,5,R,[bB],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[bB],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Fs)}],null),function(a){return M(a)&&N(a,Fs)},I,new Q(null,1,5,R,[bB],null),null,new Q(null,1,5,R,[Fs],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Fs))],null),null])));
    yT.v(null,SE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[iD,Wx,hE],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[iD,Wx,hE],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,dB)},function(a){return N(a,pD)},function(a){return N(a,Mc)}],null),function(a){return M(a)&&N(a,dB)&&N(a,pD)&&N(a,Mc)},I,new Q(null,3,5,R,[iD,Wx,hE],null),null,new Q(null,3,5,R,[dB,pD,Mc],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,dB)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Mc))],null),null]))],null),null)});Z(cF,JA,JA);
    yT.v(null,mE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[cF,QD,dC],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[cF,QD,dC],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,EJ)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,EJ)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[cF,QD,dC],null),null,new Q(null,3,5,R,[EJ,uE,kJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,EJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});Z(mx,O(CJ,O(gr,O(CJ,wp),O(CJ,O(hq,rv)))),rT(O(gr,O(CJ,wp),O(CJ,O(hq,rv))),XS(new Q(null,2,5,R,[O(CJ,wp),O(CJ,O(hq,rv))],null),new Q(null,2,5,R,[rT(wp,wp,null),rT(O(hq,rv),eT(rv,rv,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,rv)],null),null),null)],null)),null));function ET(a){if(null!=a&&null!=a.Yc)a=a.Yc(a);else {var b=ET[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=ET._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Domain.info",a);}return a}
    function FT(a,b){if(null!=a&&null!=a.Zc)a=a.Zc(a,b);else {var c=FT[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=FT._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Domain.init",a);}return a}function GT(a,b){if(null!=a&&null!=a.Wc)a=a.Wc(a,b);else {var c=GT[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=GT._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Domain.destroy",a);}return a}
    function HT(a,b,c){if(null!=a&&null!=a.Xc)a=a.Xc(a,b,c);else {var d=HT[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=HT._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("Domain.handle-message",a);}return a}function IT(a,b,c,d,e,f,k){this.id=a;this.fc=b;this.source=c;this.options=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=IT.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "id":return this.id;case "identity":return this.fc;case "source":return this.source;case "options":return this.options;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#gateway.state.peers.Peer{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[qJ,this.id],null),new Q(null,2,5,R,[pD,this.fc],null),new Q(null,2,5,R,[lz,this.source],null),new Q(null,2,5,R,[eI,this.options],null)],null),this.j))};
    g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[qJ,pD,lz,eI],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=802532213^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.id,b.id)&&A.b(this.fc,b.fc)&&A.b(this.source,b.source)&&A.b(this.options,b.options)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[pD,null,lz,null,qJ,null,eI,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new IT(this.id,this.fc,this.source,this.options,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(qJ,b):P.call(null,qJ,b))?new IT(c,this.fc,this.source,this.options,this.Mb,this.j,null):p(P.b?P.b(pD,b):P.call(null,pD,b))?new IT(this.id,c,this.source,this.options,this.Mb,this.j,null):p(P.b?P.b(lz,b):P.call(null,lz,b))?new IT(this.id,this.fc,c,this.options,this.Mb,this.j,null):p(P.b?P.b(eI,b):P.call(null,eI,b))?new IT(this.id,this.fc,this.source,c,this.Mb,this.j,null):new IT(this.id,this.fc,this.source,this.options,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(qJ,this.id),new Gi(pD,this.fc),new Gi(lz,this.source),new Gi(eI,this.options)],null),this.j))};g.O=function(a,b){return new IT(this.id,this.fc,this.source,this.options,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    var JT=function JT(a){switch(arguments.length){case 2:return JT.b(arguments[0],arguments[1]);case 3:return JT.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};JT.b=function(a,b){return p(b)?mi.b(a,new Q(null,2,5,R,[Dn,b],null)):null};JT.c=function(a,b,c){a=JT.b(a,b);return p(x.b(a,c))?a:null};JT.F=3;
    function KT(a,b){if(null==b)throw im("Peer id is missing",S);a=JT.b(a,b);if(p(a))return a;throw im(["Unable to find peer with id ",q.a(b)].join(""),S);}function LT(a,b,c){if(null==b)throw im("Peer id is missing",S);a=JT.c(a,b,c);if(p(a))return a;throw im(["Unable to find peer with id ",q.a(b)," in domain ",q.a(c)].join(""),S);}function MT(a){return A.b(Fs,mi.b(a,new Q(null,2,5,R,[lz,U],null)))}function NT(a,b){return Dl(G([Wh.a(Jh(JT,a)),mi.b(a,new Q(null,2,5,R,[zr,b],null))]))}
    function OT(a,b){var c=U.a(b);switch(c instanceof z?c.da:null){case "node":return A.b(Yp.a(b),Yp.a(a));case "peer":return A.b(Yp.a(b),Yp.a(a))&&A.b(Fp.a(b),Fp.a(a));case "local":return A.b(lD.a(b),lD.a(a));default:return !1}}function PT(a,b){return Dl(G([Ih.b(Wh.a(Qi),fi.a(function(c){return OT(lz.a(c),b)})),Dn.a(a)]))}function QT(a,b,c){return Dl(G([fi.a(function(d){return OT(lz.a(d),b)}),NT(a,c)]))}
    function RT(a,b,c,d,e,f){var k=JT.b(a,c);if(p(k)){var l=k;return new Q(null,2,5,R,[a,l],null)}l=function(){var r=new IT(c,d,b,f,null,null,null);return p(e)?K.c(r,dH,e):r}();var m=dt.b(d,Qy);k=function(){var r=ni(oi.A(ni(a,new Q(null,2,5,R,[vu,d],null),c),new Q(null,2,5,R,[Av,m],null),Mh(Cf,Dk),c),new Q(null,2,5,R,[Dn,c],null),l);return p(po.a(f))?qi(r,bt,Mh(Cf,Dk),c):r}();return new Q(null,2,5,R,[k,l],null)}
    function ST(a,b){var c=pD.a(b),d=qJ.a(b),e=dt.b(c,Qy);return qi(qi(pi(qi(a,vu,Hf,c),Av,function(f){var k=Of.b(x.b(f,e),d);return B(k)?K.c(f,e,k):Hf.b(f,e)}),Dn,Hf,d),bt,Mh(Of,Dk),d)}function TT(a,b,c){return ni(a,new Q(null,2,5,R,[Dn,b],null),c)}function UT(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return ih(oi,arguments[0],new Q(null,2,5,R,[Dn,arguments[1]],null),arguments[2],3<b.length?new Qe(b.slice(3),0,null):null)}
    var VT=function VT(a){switch(arguments.length){case 6:return VT.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 3:return VT.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};VT.la=function(a,b,c,d,e,f){if(null==b&&null==e)return d=dt.a(d),a=dt.a(a),p(f)?f:p(c)?c:A.b(d,a);c=mS(b,a,d);return p(c)?mS(e,d,a):c};
    VT.c=function(a,b,c){var d=pD.a(b),e=mi.b(b,new Q(null,2,5,R,[a,os],null)),f=mi.b(b,new Q(null,2,5,R,[eI,po],null)),k=pD.a(c);a=mi.b(c,new Q(null,2,5,R,[a,os],null));var l=mi.b(c,new Q(null,2,5,R,[eI,po],null));return kh.b(qJ.a(c),qJ.a(b))?VT.la(d,e,f,k,a,l):!1};VT.F=6;function WT(a,b,c,d){return Dl(G([fi.a(function(e){var f=VT.c(b,c,e);return p(f)?f:p(d)?A.b(qJ.a(e),qJ.a(c)):d}),Xg.b(NT(a,b),Wh.b(Jh(JT,a),bt.a(a)))]))}
    function XT(a,b,c,d){if(p(mi.b(c,new Q(null,2,5,R,[eI,po],null))))return WT(a,b,c,d);var e=mi.b(c,new Q(null,2,5,R,[pD,dt],null));return p(e)?Dl(G([Ih.b(Wh.a(Jh(JT,a)),fi.a(function(f){var k=x.b(f,b);k=p(k)?VT.c(b,c,f):k;return p(k)?k:p(d)?A.b(qJ.a(f),qJ.a(c)):d})),Xg.b(mi.b(a,new Q(null,2,5,R,[Av,e],null)),bt.a(a))])):WT(a,b,c,d)}
    function YT(a,b,c,d,e){return gd.c(function(f,k){var l=pD.a(k),m=qJ.a(k),r=qJ.a(e),u=MT(e);f=u?Cf.b(f,AL.la(a,d,r,m,l,new n(null,1,[Fs,u],null))):f;return MT(k)?Cf.b(f,AL.la(a,lz.a(k),m,r,pD.a(e),new n(null,1,[Fs,u],null))):f},I,XT(c,b,e,!1))}function ZT(a,b,c,d,e,f){var k=qJ.a(d);return new Q(null,2,5,R,[pL(c,k,b),gd.c(function(l,m){l=Cf.b(l,BL.K(a,lz.a(m),qJ.a(m),k,e));return Tc(f)?Cf.b(l,BL.K(a,lz.a(d),k,qJ.a(m),e)):l},I,XT(c,b,d,!1))],null)}function $T(a,b){var c=gh(Jk,a,b);return vf(c,gi.b(function(d){return c===d},b))}function aU(a,b){return F(a)<F(b)?gd.c(Cf,b,a):gd.c(Cf,a,b)}function bU(a,b,c){a=$T(F,Cf.g(c,b,G([a])));return gd.c(ji,C(a),Re(a))}var cU={},Z2,F3,R4,X4,Y4,$4,jU=function jU(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return jU.g(0<c.length?new Qe(c.slice(0),0,null):null)};jU.g=function(a){return ce(Dc,fh(ql,a))};jU.F=0;jU.G=function(a){return this.g(B(a))};var kU=function kU(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return kU.g(0<c.length?new Qe(c.slice(0),0,null):null)};kU.g=function(a){return ce(Dc,fh(ol,a))};kU.F=0;kU.G=function(a){return this.g(B(a))};
    function lU(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;fh(kU,0<b.length?new Qe(b.slice(0),0,null):null);ce(Dc,"\n");}function mU(a){if("number"===typeof a)return a;if("string"===typeof a&&1===a.length)return a.charCodeAt(0);throw Error("Argument to char must be a character or number");}
    function nU(a,b,c){var d=c;for(c=I;;){if(Pf(d))return new Q(null,2,5,R,[c,b],null);var e=C(d);d=D(d);e=fh(a,new Q(null,2,5,R,[e,b],null));b=J(e,0,null);e=J(e,1,null);c=Cf.b(c,b);b=e;}}function oU(a,b){var c=b;for(b=I;;){var d=fh(a,new Q(null,1,5,R,[c],null));c=J(d,0,null);d=J(d,1,null);if(Tc(c))return new Q(null,2,5,R,[b,d],null);b=Cf.b(b,c);c=d;}}
    function pU(a){return new Q(null,2,5,R,[ji.b(S,function(){return function d(c){return new Mg(null,function(){for(;;){var e=B(c);if(e){if(Wf(e)){var f=re(e),k=F(f),l=Qg(k);a:for(var m=0;;)if(m<k){var r=qd(f,m),u=J(r,0,null);r=J(r,1,null);var v=J(r,0,null);J(r,1,null);l.add(new Q(null,2,5,R,[u,v],null));m+=1;}else {f=!0;break a}return f?Sg(Ug(l),d(se(e))):Sg(Ug(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);k=J(f,0,null);J(f,1,null);return vf(new Q(null,2,5,R,[l,k],null),d(Re(e)))}return null}},null,null)}(a)}()),
    ji.b(S,function(){return function d(c){return new Mg(null,function(){for(;;){var e=B(c);if(e){if(Wf(e)){var f=re(e),k=F(f),l=Qg(k);a:for(var m=0;;)if(m<k){var r=qd(f,m),u=J(r,0,null);r=J(r,1,null);J(r,0,null);r=J(r,1,null);l.add(new Q(null,2,5,R,[u,r],null));m+=1;}else {f=!0;break a}return f?Sg(Ug(l),d(se(e))):Sg(Ug(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);J(f,0,null);f=J(f,1,null);return vf(new Q(null,2,5,R,[l,f],null),d(Re(e)))}return null}},null,null)}(a)}())],null)}
    function qU(a,b){return ji.b(S,function(){return function e(d){return new Mg(null,function(){for(;;){var f=B(d);if(f){if(Wf(f)){var k=re(f),l=F(k),m=Qg(l);a:for(var r=0;;)if(r<l){var u=qd(k,r),v=J(u,0,null);u=J(u,1,null);m.add(new Q(null,2,5,R,[v,new Q(null,2,5,R,[u,b],null)],null));r+=1;}else {k=!0;break a}return k?Sg(Ug(m),e(se(f))):Sg(Ug(m),null)}k=C(f);m=J(k,0,null);k=J(k,1,null);return vf(new Q(null,2,5,R,[m,new Q(null,2,5,R,[k,b],null)],null),e(Re(f)))}return null}},null,null)}(a)}())}
    function rU(){var a=Dc;if(null!=a&&null!=a.Le)a=a.Le(a);else {var b=rU[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=rU._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IPrettyFlush.-ppflush",a);}return a}function sU(a,b){a=t(t(a));return b.a?b.a(a):b.call(null,a)}function tU(a,b,c){Rh.A(t(a),K,b,c);}function uU(a,b){A.b(b,"\n")?(tU(a,kr,0),tU(a,en,sU(a,en)+1)):tU(a,kr,sU(a,kr)+1);return ce(sU(a,LA),b)}
    function vU(a,b){var c=Oh(new n(null,4,[bw,b,kr,0,en,0,LA,a],null));if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof Z2)Z2=function(d,e,f,k){this.ya=d;this.Ve=e;this.Vc=f;this.zg=k;this.h=1074167808;this.I=0;},Z2.prototype.O=function(d,e){return new Z2(this.ya,this.Ve,this.Vc,e)},Z2.prototype.N=function(){return this.zg},Z2.prototype.zb=function(){return this.Vc},Z2.prototype.qc=function(){return de(this.ya)},Z2.prototype.Pc=function(d,e){d=Yc(e);if(p(A.b?A.b(String,d):A.call(null,
    String,d)))return d=e.lastIndexOf("\n"),0>d?tU(this,kr,sU(this,kr)+F(e)):(tU(this,kr,F(e)-d-1),tU(this,en,sU(this,en)+F(fi.b(function(f){return A.b(f,"\n")},e)))),ce(sU(this,LA),e);if(p(A.b?A.b(Number,d):A.call(null,Number,d)))return uU(this,e);throw Error(["No matching clause: ",q.a(d)].join(""));},Z2.Pa=function(){return new Q(null,4,5,R,[tG,Rp,zu,sS],null)},Z2.Ia=!0,Z2.Da="cljs.pprint/t_cljs$pprint11254",Z2.Ja=function(d){return ce(d,"cljs.pprint/t_cljs$pprint11254")};return new Z2(a,b,c,S)}
    function wU(a,b,c,d,e,f,k,l,m,r,u,v,y){this.parent=a;this.xb=b;this.lb=c;this.kb=d;this.sb=e;this.tb=f;this.prefix=k;this.wb=l;this.yb=m;this.ub=r;this.Mb=u;this.j=v;this.B=y;this.h=2230716170;this.I=139264;}g=wU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "parent":return this.parent;case "section":return this.xb;case "start-col":return this.lb;case "indent":return this.kb;case "done-nl":return this.sb;case "intra-block-nl":return this.tb;case "prefix":return this.prefix;case "per-line-prefix":return this.wb;case "suffix":return this.yb;case "logical-block-callback":return this.ub;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.logical-block{",", ","}",c,Xg.b(new Q(null,10,5,R,[new Q(null,2,5,R,[Dq,this.parent],null),new Q(null,2,5,R,[Ow,this.xb],null),new Q(null,2,5,R,[rC,this.lb],null),new Q(null,2,5,R,[xJ,this.kb],null),new Q(null,2,5,R,[Hn,this.sb],null),new Q(null,2,5,R,[KB,this.tb],null),new Q(null,2,5,R,[SA,this.prefix],null),new Q(null,2,5,R,[sn,this.wb],null),new Q(null,2,5,R,[Yw,this.yb],null),new Q(null,2,5,R,[Ax,this.ub],
    null)],null),this.j))};g.ua=function(){return new gj(this,10,new Q(null,10,5,R,[Dq,Ow,rC,xJ,Hn,KB,SA,sn,Yw,Ax],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 10+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1977012399^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.parent,b.parent)&&A.b(this.xb,b.xb)&&A.b(this.lb,b.lb)&&A.b(this.kb,b.kb)&&A.b(this.sb,b.sb)&&A.b(this.tb,b.tb)&&A.b(this.prefix,b.prefix)&&A.b(this.wb,b.wb)&&A.b(this.yb,b.yb)&&A.b(this.ub,b.ub)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,10,[Yw,null,xJ,null,Dq,null,Ow,null,Hn,null,rC,null,SA,null,sn,null,Ax,null,KB,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Dq,b):P.call(null,Dq,b))?new wU(c,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(Ow,b):P.call(null,Ow,b))?new wU(this.parent,c,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(rC,b):P.call(null,rC,b))?new wU(this.parent,this.xb,c,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(xJ,b):P.call(null,xJ,b))?new wU(this.parent,
    this.xb,this.lb,c,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(Hn,b):P.call(null,Hn,b))?new wU(this.parent,this.xb,this.lb,this.kb,c,this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(KB,b):P.call(null,KB,b))?new wU(this.parent,this.xb,this.lb,this.kb,this.sb,c,this.prefix,this.wb,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(SA,b):P.call(null,SA,b))?new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,c,this.wb,this.yb,this.ub,
    this.Mb,this.j,null):p(P.b?P.b(sn,b):P.call(null,sn,b))?new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,c,this.yb,this.ub,this.Mb,this.j,null):p(P.b?P.b(Yw,b):P.call(null,Yw,b))?new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,c,this.ub,this.Mb,this.j,null):p(P.b?P.b(Ax,b):P.call(null,Ax,b))?new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,c,this.Mb,this.j,null):new wU(this.parent,this.xb,this.lb,this.kb,this.sb,
    this.tb,this.prefix,this.wb,this.yb,this.ub,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,10,5,R,[new Gi(Dq,this.parent),new Gi(Ow,this.xb),new Gi(rC,this.lb),new Gi(xJ,this.kb),new Gi(Hn,this.sb),new Gi(KB,this.tb),new Gi(SA,this.prefix),new Gi(sn,this.wb),new Gi(Yw,this.yb),new Gi(Ax,this.ub)],null),this.j))};g.O=function(a,b){return new wU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,b,this.j,this.B)};
    g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function xU(a,b){for(b=Dq.a(b);;){if(null==b)return !1;if(a===b)return !0;b=Dq.a(b);}}function yU(a,b,c,d,e,f,k,l){this.V=a;this.data=b;this.Ub=c;this.U=d;this.T=e;this.Mb=f;this.j=k;this.B=l;this.h=2230716170;this.I=139264;}g=yU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "data":return this.data;case "trailing-white-space":return this.Ub;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.buffer-blob{",", ","}",c,Xg.b(new Q(null,5,5,R,[new Q(null,2,5,R,[Ny,this.V],null),new Q(null,2,5,R,[yn,this.data],null),new Q(null,2,5,R,[bp,this.Ub],null),new Q(null,2,5,R,[VA,this.U],null),new Q(null,2,5,R,[EE,this.T],null)],null),this.j))};g.ua=function(){return new gj(this,5,new Q(null,5,5,R,[Ny,yn,bp,VA,EE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 5+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1809113693^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.V,b.V)&&A.b(this.data,b.data)&&A.b(this.Ub,b.Ub)&&A.b(this.U,b.U)&&A.b(this.T,b.T)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,5,[EE,null,bp,null,Ny,null,VA,null,yn,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new yU(this.V,this.data,this.Ub,this.U,this.T,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Ny,b):P.call(null,Ny,b))?new yU(c,this.data,this.Ub,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(yn,b):P.call(null,yn,b))?new yU(this.V,c,this.Ub,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(bp,b):P.call(null,bp,b))?new yU(this.V,this.data,c,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(VA,b):P.call(null,VA,b))?new yU(this.V,this.data,this.Ub,c,this.T,this.Mb,this.j,null):p(P.b?P.b(EE,b):P.call(null,EE,b))?new yU(this.V,this.data,this.Ub,this.U,c,this.Mb,this.j,
    null):new yU(this.V,this.data,this.Ub,this.U,this.T,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,5,5,R,[new Gi(Ny,this.V),new Gi(yn,this.data),new Gi(bp,this.Ub),new Gi(VA,this.U),new Gi(EE,this.T)],null),this.j))};g.O=function(a,b){return new yU(this.V,this.data,this.Ub,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    function zU(a,b,c,d,e,f,k,l){this.V=a;this.type=b;this.ba=c;this.U=d;this.T=e;this.Mb=f;this.j=k;this.B=l;this.h=2230716170;this.I=139264;}g=zU.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "type":return this.type;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.nl-t{",", ","}",c,Xg.b(new Q(null,5,5,R,[new Q(null,2,5,R,[Ny,this.V],null),new Q(null,2,5,R,[U,this.type],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[VA,this.U],null),new Q(null,2,5,R,[EE,this.T],null)],null),this.j))};
    g.ua=function(){return new gj(this,5,new Q(null,5,5,R,[Ny,U,nq,VA,EE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 5+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1640656800^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.V,b.V)&&A.b(this.type,b.type)&&A.b(this.ba,b.ba)&&A.b(this.U,b.U)&&A.b(this.T,b.T)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,5,[EE,null,U,null,nq,null,Ny,null,VA,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new zU(this.V,this.type,this.ba,this.U,this.T,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Ny,b):P.call(null,Ny,b))?new zU(c,this.type,this.ba,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(U,b):P.call(null,U,b))?new zU(this.V,c,this.ba,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(nq,b):P.call(null,nq,b))?new zU(this.V,this.type,c,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(VA,b):P.call(null,VA,b))?new zU(this.V,this.type,this.ba,c,this.T,this.Mb,this.j,null):p(P.b?P.b(EE,b):P.call(null,EE,b))?new zU(this.V,this.type,this.ba,this.U,c,this.Mb,this.j,
    null):new zU(this.V,this.type,this.ba,this.U,this.T,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,5,5,R,[new Gi(Ny,this.V),new Gi(U,this.type),new Gi(nq,this.ba),new Gi(VA,this.U),new Gi(EE,this.T)],null),this.j))};g.O=function(a,b){return new zU(this.V,this.type,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    function AU(a,b,c,d,e,f,k){this.V=a;this.ba=b;this.U=c;this.T=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=AU.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.start-block-t{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[Ny,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[VA,this.U],null),new Q(null,2,5,R,[EE,this.T],null)],null),this.j))};
    g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[Ny,nq,VA,EE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-414877272^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.V,b.V)&&A.b(this.ba,b.ba)&&A.b(this.U,b.U)&&A.b(this.T,b.T)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[EE,null,nq,null,Ny,null,VA,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new AU(this.V,this.ba,this.U,this.T,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Ny,b):P.call(null,Ny,b))?new AU(c,this.ba,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(nq,b):P.call(null,nq,b))?new AU(this.V,c,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(VA,b):P.call(null,VA,b))?new AU(this.V,this.ba,c,this.T,this.Mb,this.j,null):p(P.b?P.b(EE,b):P.call(null,EE,b))?new AU(this.V,this.ba,this.U,c,this.Mb,this.j,null):new AU(this.V,this.ba,this.U,this.T,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(Ny,this.V),new Gi(nq,this.ba),new Gi(VA,this.U),new Gi(EE,this.T)],null),this.j))};g.O=function(a,b){return new AU(this.V,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function BU(a,b,c,d,e,f,k){this.V=a;this.ba=b;this.U=c;this.T=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=BU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.end-block-t{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[Ny,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[VA,this.U],null),new Q(null,2,5,R,[EE,this.T],null)],null),this.j))};g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[Ny,nq,VA,EE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1365867980^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.V,b.V)&&A.b(this.ba,b.ba)&&A.b(this.U,b.U)&&A.b(this.T,b.T)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[EE,null,nq,null,Ny,null,VA,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new BU(this.V,this.ba,this.U,this.T,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Ny,b):P.call(null,Ny,b))?new BU(c,this.ba,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(nq,b):P.call(null,nq,b))?new BU(this.V,c,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(VA,b):P.call(null,VA,b))?new BU(this.V,this.ba,c,this.T,this.Mb,this.j,null):p(P.b?P.b(EE,b):P.call(null,EE,b))?new BU(this.V,this.ba,this.U,c,this.Mb,this.j,null):new BU(this.V,this.ba,this.U,this.T,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(Ny,this.V),new Gi(nq,this.ba),new Gi(VA,this.U),new Gi(EE,this.T)],null),this.j))};g.O=function(a,b){return new BU(this.V,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function CU(a,b,c,d,e,f,k,l,m){this.V=a;this.ba=b;this.Jb=c;this.offset=d;this.U=e;this.T=f;this.Mb=k;this.j=l;this.B=m;this.h=2230716170;this.I=139264;}g=CU.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "relative-to":return this.Jb;case "offset":return this.offset;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.indent-t{",", ","}",c,Xg.b(new Q(null,6,5,R,[new Q(null,2,5,R,[Ny,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[jv,this.Jb],null),new Q(null,2,5,R,[qE,this.offset],null),new Q(null,2,5,R,[VA,this.U],null),new Q(null,2,5,R,[EE,this.T],null)],null),this.j))};g.ua=function(){return new gj(this,6,new Q(null,6,5,R,[Ny,nq,jv,qE,VA,EE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};
    g.X=function(){return 6+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1602780238^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.V,b.V)&&A.b(this.ba,b.ba)&&A.b(this.Jb,b.Jb)&&A.b(this.offset,b.offset)&&A.b(this.U,b.U)&&A.b(this.T,b.T)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,6,[qE,null,EE,null,jv,null,nq,null,Ny,null,VA,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new CU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(Ny,b):P.call(null,Ny,b))?new CU(c,this.ba,this.Jb,this.offset,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(nq,b):P.call(null,nq,b))?new CU(this.V,c,this.Jb,this.offset,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(jv,b):P.call(null,jv,b))?new CU(this.V,this.ba,c,this.offset,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(qE,b):P.call(null,qE,b))?new CU(this.V,this.ba,this.Jb,c,this.U,this.T,this.Mb,this.j,null):p(P.b?P.b(VA,b):P.call(null,VA,b))?new CU(this.V,this.ba,
    this.Jb,this.offset,c,this.T,this.Mb,this.j,null):p(P.b?P.b(EE,b):P.call(null,EE,b))?new CU(this.V,this.ba,this.Jb,this.offset,this.U,c,this.Mb,this.j,null):new CU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,6,5,R,[new Gi(Ny,this.V),new Gi(nq,this.ba),new Gi(jv,this.Jb),new Gi(qE,this.offset),new Gi(VA,this.U),new Gi(EE,this.T)],null),this.j))};
    g.O=function(a,b){return new CU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};var DU=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(ca,"write-token"),function(f,k){return Ny.a(k)},e,a,b,c,d)}();
    DU.v(null,qn,function(a,b){var c=Ax.a(t(t(a)));p(c)&&(c.a?c.a(sz):c.call(null,sz));b=nq.a(b);c=SA.a(b);p(c)&&ce(LA.a(t(t(a))),c);a=sU(LA.a(t(t(a))),kr);Ph(rC.a(b),a);return Ph(xJ.a(b),a)});DU.v(null,JJ,function(a,b){var c=Ax.a(t(t(a)));p(c)&&(c.a?c.a(Wu):c.call(null,Wu));b=Yw.a(nq.a(b));return p(b)?ce(LA.a(t(t(a))),b):null});
    DU.v(null,mG,function(a,b){var c=nq.a(b),d=xJ.a(c),e=qE.a(b);b=jv.a(b);if(p(A.b?A.b(eE,b):A.call(null,eE,b)))a=t(rC.a(c));else if(p(A.b?A.b(wq,b):A.call(null,wq,b)))a=sU(LA.a(t(t(a))),kr);else throw Error(["No matching clause: ",q.a(b)].join(""));return Ph(d,e+a)});DU.v(null,Xu,function(a,b){return ce(LA.a(t(t(a))),yn.a(b))});
    DU.v(null,fH,function(a,b){var c=(c=A.b(U.a(b),go))?c:A.b(U.a(b),SD)?!1:t(Hn.a(nq.a(b)));p(c)?EU.b?EU.b(a,b):EU.call(null,a,b):(b=bp.a(t(t(a))),p(b)&&ce(LA.a(t(t(a))),b));return Rh.A(t(a),K,bp,null)});
    function FU(a,b,c){b=B(b);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);if(!A.b(Ny.a(k),fH)){var l=bp.a(t(t(a)));p(l)&&ce(LA.a(t(t(a))),l);}DU.b(a,k);Rh.A(t(a),K,bp,bp.a(k));k=bp.a(t(t(a)));p(p(c)?k:c)&&(ce(LA.a(t(t(a))),k),Rh.A(t(a),K,bp,null));f+=1;}else if(b=B(b))Wf(b)?(d=re(b),b=se(b),k=d,e=F(d),d=k):(k=C(b),A.b(Ny.a(k),fH)||(d=bp.a(t(t(a))),p(d)&&ce(LA.a(t(t(a))),d)),DU.b(a,k),Rh.A(t(a),K,bp,bp.a(k)),k=bp.a(t(t(a))),p(p(c)?k:c)&&(ce(LA.a(t(t(a))),k),Rh.A(t(a),K,bp,null)),b=D(b),d=null,e=0),
    f=0;else break}function GU(a,b){var c=sU(LA.a(t(t(a))),bw),d;(d=null==c)||(a=sU(LA.a(t(t(a))),kr),b=(b=B(b))?EE.a(Bf(b))-VA.a(C(b)):0,d=a+b<c);return d}function HU(a,b,c){b=t(Hn.a(b));return p(b)?b:!GU(a,c)}function IU(a,b,c){var d=iw.a(t(t(a))),e=sU(LA.a(t(t(a))),bw);return p(d)?p(e)?t(rC.a(b))>=e-d?HU(a,b,c):!1:e:d}var JU=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(ca,"emit-nl?"),function(f){return U.a(f)},e,a,b,c,d)}();
    JU.v(null,bF,function(a,b,c){a=nq.a(a);return HU(b,a,c)});JU.v(null,cI,function(a,b,c){a=nq.a(a);return IU(b,a,c)});JU.v(null,SD,function(a,b,c,d){a=nq.a(a);var e=t(KB.a(a));return p(e)?e:(d=!GU(b,d))?d:IU(b,a,c)});JU.v(null,go,function(){return !0});function KU(a){var b=C(a),c=nq.a(b);b=B(Mk(function(d){return !(A.b(Ny.a(d),fH)&&xU(nq.a(d),c))},D(a)));return new Q(null,2,5,R,[b,B(Yh(F(b)+1,a))],null)}
    function LU(a){var b=C(a),c=nq.a(b);return B(Mk(function(d){var e=nq.a(d);return !(A.b(Ny.a(d),fH)&&(A.b(e,c)||xU(e,c)))},D(a)))}function EU(a,b){ce(LA.a(t(t(a))),"\n");Rh.A(t(a),K,bp,null);b=nq.a(b);var c=sn.a(b);p(c)&&ce(LA.a(t(t(a))),c);c=fh(q,ai(t(xJ.a(b))-F(c)," "));ce(LA.a(t(t(a))),c);a:for(Ph(KB.a(b),!0),Ph(Hn.a(b),!0),a=Dq.a(b);;)if(p(a))Ph(Hn.a(a),!0),Ph(KB.a(a),!0),a=Dq.a(a);else break a;return null}
    function MU(a){var b=B(Mk(function(c){return !A.b(Ny.a(c),fH)},a));return new Q(null,2,5,R,[b,B(Yh(F(b),a))],null)}var NU=function NU(a,b){var d=MU(b);b=J(d,0,null);var e=J(d,1,null);p(b)&&FU(a,b,!1);if(p(e)){d=KU(e);b=J(d,0,null);d=J(d,1,null);var f=C(e),k=JU.A(f,a,b,LU(e));p(k)&&(EU(a,f),e=D(e));GU(a,e)?a=e:(e=NU.b?NU.b(a,b):NU.call(null,a,b),A.b(e,b)?(FU(a,b,!1),a=d):a=ji.b(I,Xg.b(e,d)));return a}return null};
    function OU(a){for(var b=cx.a(t(t(a)));;){Rh.A(t(a),K,cx,ji.b(I,b));if(GU(a,b))return null;var c=NU(a,b);if(b!==c)b=c;else return null}}function PU(a,b){Rh.A(t(a),K,cx,Cf.b(cx.a(t(t(a))),b));return GU(a,cx.a(t(t(a))))?null:OU(a)}function QU(a){var b=bp.a(t(t(a)));return p(b)?(ce(LA.a(t(t(a))),b),Rh.A(t(a),K,bp,null)):null}
    function RU(a,b){var c=UL(b,"\n",-1);if(A.b(F(c),1))return b;b=sn.a(C(XB.a(t(t(a)))));var d=C(c);if(A.b(eA,aw.a(t(t(a))))){var e=pr.a(t(t(a))),f=e+F(d);Rh.A(t(a),K,pr,f);PU(a,new yU(Xu,d,null,e,f,null,null,null));OU(a);d=cx.a(t(t(a)));p(d)&&(FU(a,d,!0),Rh.A(t(a),K,cx,I));}else QU(a),ce(LA.a(t(t(a))),d);ce(LA.a(t(t(a))),"\n");d=B(D(Hk(c)));e=null;for(var k=f=0;;)if(k<f){var l=e.W(null,k);ce(LA.a(t(t(a))),l);ce(LA.a(t(t(a))),"\n");p(b)&&ce(LA.a(t(t(a))),b);k+=1;}else if(d=B(d))e=d,Wf(e)?(d=re(e),k=se(e),
    e=d,f=F(d),d=k):(d=C(e),ce(LA.a(t(t(a))),d),ce(LA.a(t(t(a))),"\n"),p(b)&&ce(LA.a(t(t(a))),b),d=D(e),e=null,f=0),k=0;else break;Rh.A(t(a),K,eA,xq);return Bf(c)}
    function SU(a){var b=TU,c=UU,d=new wU(null,null,Oh(0),Oh(0),Oh(!1),Oh(!1),null,null,null,null,null,null,null),e=Oh(Xj([XB,iw,eD,Er,kt,aw,pr,bp,LA,GD,cx],[d,c,d,!0,null,xq,0,null,vU(a,b),1,I]));if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof F3)F3=function(f,k,l,m,r,u){this.ya=f;this.Ve=k;this.nh=l;this.Mg=m;this.Vc=r;this.Xg=u;this.h=1074167808;this.I=0;},F3.prototype.O=function(f,k){return new F3(this.ya,this.Ve,this.nh,this.Mg,this.Vc,k)},F3.prototype.N=function(){return this.Xg},
    F3.prototype.zb=function(){return this.Vc},F3.prototype.Pc=function(f,k){f=Yc(k);if(p(A.b?A.b(String,f):A.call(null,String,f))){var l=RU(this,k);k=l.replace(/\s+$/,"");f=l.substring(k.length);var m=aw.a(t(t(this)));if(A.b(m,xq))return QU(this),ce(LA.a(t(t(this))),k),Rh.A(t(this),K,bp,f);m=pr.a(t(t(this)));l=m+F(l);Rh.A(t(this),K,pr,l);return PU(this,new yU(Xu,k,f,m,l,null,null,null))}if(p(A.b?A.b(Number,f):A.call(null,Number,f)))return A.b(aw.a(t(t(this))),xq)?(QU(this),k=ce(LA.a(t(t(this))),k)):
    A.b(k,"\n")?k=RU(this,"\n"):(f=pr.a(t(t(this))),l=f+1,Rh.A(t(this),K,pr,l),k=rg(k),k=PU(this,new yU(Xu,k,null,f,l,null,null,null))),k;throw Error(["No matching clause: ",q.a(f)].join(""));},F3.prototype.qc=function(){this.Le(null);return de(LA.a(t(t(this))))},F3.prototype.Le=function(){return A.b(aw.a(t(t(this))),eA)?(FU(this,cx.a(t(t(this))),!0),Rh.A(t(this),K,cx,I)):QU(this)},F3.Pa=function(){return new Q(null,6,5,R,[tG,Rp,Yq,bv,zu,MJ],null)},F3.Ia=!0,F3.Da="cljs.pprint/t_cljs$pprint12452",F3.Ja=
    function(f){return ce(f,"cljs.pprint/t_cljs$pprint12452")};return new F3(a,b,c,d,e,S)}function VU(a,b){var c=Dc;b=new wU(XB.a(t(t(c))),null,Oh(0),Oh(0),Oh(!1),Oh(!1),a,null,b,null,null,null,null);Rh.A(t(c),K,XB,b);if(A.b(aw.a(t(t(c))),xq)){QU(c);var d=Ax.a(t(t(c)));p(d)&&(d.a?d.a(sz):d.call(null,sz));p(a)&&ce(LA.a(t(t(c))),a);c=sU(LA.a(t(t(c))),kr);Ph(b.lb,c);Ph(b.kb,c);}else d=pr.a(t(t(c))),a=d+(p(a)?F(a):0),Rh.A(t(c),K,pr,a),PU(c,new AU(qn,b,d,a,null,null,null));}
    function WU(){var a=Dc,b=XB.a(t(t(a))),c=Yw.a(b);if(A.b(aw.a(t(t(a))),xq)){QU(a);p(c)&&ce(LA.a(t(t(a))),c);var d=Ax.a(t(t(a)));p(d)&&(d.a?d.a(Wu):d.call(null,Wu));}else d=pr.a(t(t(a))),c=d+(p(c)?F(c):0),Rh.A(t(a),K,pr,c),PU(a,new BU(JJ,b,d,c,null,null,null));Rh.A(t(a),K,XB,Dq.a(b));}var XU=!0,YU=null,TU=72,UU=40,ZU=null,$U=null,aV=null,bV=null,cV=10,dV=0,eV=null;function fV(a){return (null!=a?a.h&32768||h===a.nf||(a.h?0:Xc(Ld,a)):Xc(Ld,a))?Er.a(t(t(a))):!1}
    function gV(a){var b=eV;p(b)&&(b=Hc,b=p(b)?eV>=Hc:b);Tc(XU)?kU.call(null,a):p(b)?ce(Dc,"..."):(p(eV)&&(eV+=1),YU.call(null,a));return b}var hV=function hV(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return hV.g(arguments[0],1<c.length?new Qe(c.slice(1),0,null):null)};
    hV.g=function(a,b){var c=wk.g(G([new n(null,1,[sJ,!0],null),fh(qk,b)]));b=cV;var d=$U,e=Hc,f=Ic,k=ZU,l=UU,m=YU,r=XU,u=bV,v=Gc,y=TU,E=aV,H=LA.b(c,cV),T=oz.b(c,$U),Y=Ez.b(c,Hc),ia=cn.b(c,Ic),ba=lt.b(c,ZU),wa=iw.b(c,UU),ua=tw.b(c,YU),pb=Jr.b(c,XU),sb=YD.b(c,bV),rb=Lc.b(c,Gc),xc=Eo.b(c,TU),Sb=Aq.b(c,aV);cV=H;$U=T;Hc=Y;Ic=ia;ZU=ba;UU=wa;YU=ua;XU=pb;bV=sb;Gc=rb;TU=xc;aV=Sb;try{var ob=new zc,Tb=N(c,sJ)?sJ.a(c):!0,gb=!0===Tb||null==Tb?new Ae(ob):Tb;if(p(XU)){var ib=Tc(fV(gb));c=Dc;Dc=ib?SU(gb):gb;try{gV(a),
    rU();}finally{Dc=c;}}else {ib=Dc;Dc=gb;try{kU.call(null,a);}finally{Dc=ib;}}!0===Tb&&cl(q.a(ob));return null==Tb?q.a(ob):null}finally{aV=E,TU=y,Gc=v,bV=u,XU=r,YU=m,UU=l,ZU=k,Ic=f,Hc=e,$U=d,cV=b;}};hV.F=1;hV.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};var iV=function iV(a){switch(arguments.length){case 1:return iV.a(arguments[0]);case 2:return iV.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    iV.a=function(a){var b=new zc,c=Dc;Dc=new Ae(b);try{return iV.b(a,Dc),cl(q.a(b))}finally{Dc=c;}};iV.b=function(a,b){var c=Tc(fV(b)),d=Dc;Dc=c?SU(b):b;try{b=XU;XU=!0;try{gV(a);}finally{XU=b;}A.b(0,sU(Dc,kr))||ce(Dc,"\n");return rU()}finally{Dc=d;}};iV.F=2;function jV(a,b){if(Tc(b.a?b.a(a):b.call(null,a)))throw Error(["Bad argument: ",q.a(a),". It must be one of ",q.a(b)].join(""));}function kV(){var a=Ic;return p(a)?dV>=Ic:a}
    function lV(a){jV(a,new Bk(null,new n(null,4,[go,null,cI,null,SD,null,bF,null],null),null));var b=Dc;Rh.A(t(b),K,aw,eA);var c=pr.a(t(t(b))),d=XB.a(t(t(b)));PU(b,new zU(fH,a,d,c,c,null,null,null));}
    function mV(a,b){jV(a,new Bk(null,new n(null,2,[eE,null,wq,null],null),null));var c=Dc,d=XB.a(t(t(c)));if(A.b(aw.a(t(t(c))),xq)){QU(c);var e=xJ.a(d);if(p(A.b?A.b(eE,a):A.call(null,eE,a)))a=t(rC.a(d));else if(p(A.b?A.b(wq,a):A.call(null,wq,a)))a=sU(LA.a(t(t(c))),kr);else throw Error(["No matching clause: ",q.a(a)].join(""));Ph(e,b+a);}else e=pr.a(t(t(c))),PU(c,new CU(mG,d,a,b,e,e,null,null,null));}
    function nV(a,b,c){b="string"===typeof b?oV(b):b;c=pV(c);a:{var d=new zc,e=Tc(a)||!0===a?new Ae(d):a,f=qV(b)&&Tc(fV(e))?p(fV(e))?e:SU(e):e,k=Dc;Dc=f;try{try{rV(b,c);}finally{e!==f&&de(f);}var l=Tc(a)?q.a(d):!0===a?cl(q.a(d)):null;break a}finally{Dc=k;}l=void 0;}return l}var sV=null;function tV(a,b){a=[q.a(a),"\n",q.a(sV),"\n",q.a(fh(q,ai(b," "))),"^\n"].join("");throw Error(a);}function uV(a,b,c,d,e,f){this.uc=a;this.ab=b;this.tc=c;this.Mb=d;this.j=e;this.B=f;this.h=2230716170;this.I=139264;}g=uV.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "seq":return this.uc;case "rest":return this.ab;case "pos":return this.tc;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.arg-navigator{",", ","}",c,Xg.b(new Q(null,3,5,R,[new Q(null,2,5,R,[wA,this.uc],null),new Q(null,2,5,R,[ts,this.ab],null),new Q(null,2,5,R,[pr,this.tc],null)],null),this.j))};g.ua=function(){return new gj(this,3,new Q(null,3,5,R,[wA,ts,pr],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 3+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-402038447^Ye(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.uc,b.uc)&&A.b(this.ab,b.ab)&&A.b(this.tc,b.tc)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,3,[pr,null,wA,null,ts,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new uV(this.uc,this.ab,this.tc,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(wA,b):P.call(null,wA,b))?new uV(c,this.ab,this.tc,this.Mb,this.j,null):p(P.b?P.b(ts,b):P.call(null,ts,b))?new uV(this.uc,c,this.tc,this.Mb,this.j,null):p(P.b?P.b(pr,b):P.call(null,pr,b))?new uV(this.uc,this.ab,c,this.Mb,this.j,null):new uV(this.uc,this.ab,this.tc,this.Mb,K.c(this.j,b,c),null)};g.$=function(){return B(Xg.b(new Q(null,3,5,R,[new Gi(wA,this.uc),new Gi(ts,this.ab),new Gi(pr,this.tc)],null),this.j))};
    g.O=function(a,b){return new uV(this.uc,this.ab,this.tc,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function pV(a){a=B(a);return new uV(a,a,0,null,null,null)}function vV(a){var b=ts.a(a);if(p(b))return new Q(null,2,5,R,[C(b),new uV(wA.a(a),D(b),pr.a(a)+1,null,null,null)],null);throw Error("Not enough arguments for format definition");}
    function wV(a){var b=vV(a);a=J(b,0,null);b=J(b,1,null);a="string"===typeof a?oV(a):a;return new Q(null,2,5,R,[a,b],null)}function xV(a,b){return b>=pr.a(a)?(b=pr.a(a)-b,yV.b?yV.b(a,b):yV.call(null,a,b)):new uV(wA.a(a),Yh(b,wA.a(a)),b,null,null,null)}function yV(a,b){var c=pr.a(a)+b;return 0>b?xV(a,c):new uV(wA.a(a),Yh(b,ts.a(a)),c,null,null,null)}function zV(a,b,c,d,e,f,k){this.ec=a;this.bc=b;this.nc=c;this.offset=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=zV.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "func":return this.ec;case "def":return this.bc;case "params":return this.nc;case "offset":return this.offset;default:return x.c(this.j,b,c)}};g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#cljs.pprint.compiled-directive{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[iG,this.ec],null),new Q(null,2,5,R,[yo,this.bc],null),new Q(null,2,5,R,[ns,this.nc],null),new Q(null,2,5,R,[qE,this.offset],null)],null),this.j))};g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[iG,yo,ns,qE],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-829256337^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.ec,b.ec)&&A.b(this.bc,b.bc)&&A.b(this.nc,b.nc)&&A.b(this.offset,b.offset)&&A.b(this.j,b.j)};g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[qE,null,iG,null,ns,null,yo,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new zV(this.ec,this.bc,this.nc,this.offset,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(iG,b):P.call(null,iG,b))?new zV(c,this.bc,this.nc,this.offset,this.Mb,this.j,null):p(P.b?P.b(yo,b):P.call(null,yo,b))?new zV(this.ec,c,this.nc,this.offset,this.Mb,this.j,null):p(P.b?P.b(ns,b):P.call(null,ns,b))?new zV(this.ec,this.bc,c,this.offset,this.Mb,this.j,null):p(P.b?P.b(qE,b):P.call(null,qE,b))?new zV(this.ec,this.bc,this.nc,c,this.Mb,this.j,null):new zV(this.ec,this.bc,this.nc,this.offset,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(iG,this.ec),new Gi(yo,this.bc),new Gi(ns,this.nc),new Gi(qE,this.offset)],null),this.j))};g.O=function(a,b){return new zV(this.ec,this.bc,this.nc,this.offset,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};
    function AV(a,b){var c=J(a,0,null);a=J(a,1,null);var d=J(a,0,null);a=J(a,1,null);d=N(new Bk(null,new n(null,2,[mt,null,IH,null],null),null),c)?new Q(null,2,5,R,[d,b],null):A.b(d,Ew)?vV(b):A.b(d,gD)?new Q(null,2,5,R,[F(ts.a(b)),b],null):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);return new Q(null,2,5,R,[new Q(null,2,5,R,[c,new Q(null,2,5,R,[b,a],null)],null),d],null)}function BV(a,b){b=nU(AV,b,a);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[ji.b(S,a),b],null)}
    var CV=new n(null,3,[2,"#b",8,"#o",16,"#x"],null);function DV(a){return bg(a)?A.b(cV,10)?[q.a(a),p(bV)?".":null].join(""):[q.a(p(bV)?function(){var b=x.b(CV,cV);return p(b)?b:["#",q.a(cV),"r"].join("")}():null),q.a(EV(cV,a))].join(""):null}
    function FV(a,b,c){c=vV(c);var d=J(c,0,null);c=J(c,1,null);var e=DV(d);a=p(e)?e:a.a?a.a(d):a.call(null,d);d=a.length;e=d+tt.a(b);e=e>=Hx.a(b)?e:e+(tg(Hx.a(b)-e-1,lq.a(b))+1)*lq.a(b);d=fh(q,ai(e-d,UC.a(b)));p(IH.a(b))?jU.g(G([[q.a(d),q.a(a)].join("")])):jU.g(G([[q.a(a),q.a(d)].join("")]));return c}function GV(a){return bg(a)?!0:"number"!==typeof a||isNaN(a)||Infinity===a||parseFloat(a)===parseInt(a,10)?!1:A.b(a,Math.floor(a))}
    function HV(a,b){return Eg(C(oU(function(c){return 0<c?new Q(null,2,5,R,[ug(c,a),tg(c,a)],null):new Q(null,2,5,R,[null,null],null)},b)))}function EV(a,b){return 0===b?"0":fh(q,Wh.b(function(c){return 10>c?rg(mU("0")+c):rg(mU("a")+(c-10))},HV(a,b)))}function IV(a,b){return Eg(C(oU(function(c){return new Q(null,2,5,R,[B(Eg(Xh.b(a,c))),B(Yh(a,c))],null)},Eg(b))))}
    function JV(a,b,c){c=vV(c);var d=J(c,0,null);c=J(c,1,null);if(GV(d)){var e=0>d,f=EV(a,e?-d:d);a=p(mt.a(b))?function(){var k=Wh.b(function(m){return fh(q,m)},IV(vD.a(b),f)),l=ai(F(k),us.a(b));return fh(q,D(bi.b(l,k)))}():f;a=e?["-",q.a(a)].join(""):p(IH.a(b))?["+",q.a(a)].join(""):a;a=a.length<Hx.a(b)?[q.a(fh(q,ai(Hx.a(b)-a.length,UC.a(b)))),q.a(a)].join(""):a;jU.g(G([a]));}else FV(ql,new n(null,5,[Hx,Hx.a(b),lq,1,tt,0,UC,UC.a(b),IH,!0],null),pV(new Q(null,1,5,R,[d],null)));return c}
    var KV=new Q(null,20,5,R,"zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),null),LV=new Q(null,20,5,R,"zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "),null),MV=new Q(null,10,5,R,"  twenty thirty forty fifty sixty seventy eighty ninety".split(" "),null),NV=new Q(null,10,5,R,"  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "),
    null),OV=new Q(null,22,5,R," thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "),null);
    function PV(a){var b=tg(a,100),c=ug(a,100);return [0<b?[q.a(pf(KV,b))," hundred"].join(""):null,0<b&&0<c?" ":null,q.a(0<c?20>c?pf(KV,c):function(){var d=tg(c,10),e=ug(c,10);return [q.a(0<d?pf(MV,d):null),0<d&&0<e?"-":null,q.a(0<e?pf(KV,e):null)].join("")}():null)].join("")}
    function QV(a,b){var c=F(a),d=I;--c;var e=C(a);for(a=D(a);;){if(null==a)return [q.a(fh(q,di(", ",d))),Pf(e)||Pf(d)?null:", ",q.a(e),!Pf(e)&&0<c+b?[" ",q.a(pf(OV,c+b))].join(""):null].join("");d=Pf(e)?d:Cf.b(d,[q.a(e)," ",q.a(pf(OV,c+b))].join(""));--c;e=C(a);a=D(a);}}
    function RV(a){var b=tg(a,100),c=ug(a,100);return [0<b?[q.a(pf(KV,b))," hundred"].join(""):null,0<b&&0<c?" ":null,q.a(0<c?20>c?pf(LV,c):function(){var d=tg(c,10),e=ug(c,10);return 0<d&&!(0<e)?pf(NV,d):[q.a(0<d?pf(MV,d):null),0<d&&0<e?"-":null,q.a(0<e?pf(LV,e):null)].join("")}():0<b?"th":null)].join("")}
    var SV=new Q(null,4,5,R,[new Q(null,9,5,R,"I II III IIII V VI VII VIII VIIII".split(" "),null),new Q(null,9,5,R,"X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "),null),new Q(null,9,5,R,"C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "),null),new Q(null,3,5,R,["M","MM","MMM"],null)],null),TV=new Q(null,4,5,R,[new Q(null,9,5,R,"I II III IV V VI VII VIII IX".split(" "),null),new Q(null,9,5,R,"X XX XXX XL L LX LXX LXXX XC".split(" "),null),new Q(null,9,5,R,"C CC CCC CD D DC DCC DCCC CM".split(" "),null),new Q(null,
    3,5,R,["M","MM","MMM"],null)],null);function UV(a,b){b=vV(b);var c=J(b,0,null);b=J(b,1,null);if("number"===typeof c&&0<c&&4E3>c){var d=HV(10,c);c=I;for(var e=F(d)-1;;)if(Pf(d)){jU.g(G([fh(q,c)]));break}else {var f=C(d);c=A.b(0,f)?c:Cf.b(c,pf(pf(a,e),f-1));--e;d=D(d);}}else JV(10,new n(null,5,[Hx,0,UC," ",us,",",vD,3,mt,!0],null),pV(new Q(null,1,5,R,[c],null)));return b}var VV=new n(null,5,[8,"Backspace",9,"Tab",10,"Newline",13,"Return",32,"Space"],null);
    function WV(a,b){a=vV(b);b=J(a,0,null);a=J(a,1,null);var c=mU(b);b=c&127;c&=128;var d=x.b(VV,b);0<c&&jU.g(G(["Meta-"]));jU.g(G([p(d)?d:32>b?["Control-",q.a(rg(b+64))].join(""):A.b(b,127)?"Control-?":rg(b)]));return a}
    function XV(a,b){var c=vV(b);b=J(c,0,null);c=J(c,1,null);a=sH.a(a);if(p(A.b?A.b("o",a):A.call(null,"o",a)))nV(!0,"\\o~3, '0o",G([mU(b)]));else if(p(A.b?A.b("u",a):A.call(null,"u",a)))nV(!0,"\\u~4, '0x",G([mU(b)]));else if(p(A.b?A.b(null,a):A.call(null,null,a)))ce(Dc,p(A.b?A.b("\b",b):A.call(null,"\b",b))?"\\backspace":p(A.b?A.b(" ",b):A.call(null," ",b))?"\\space":p(A.b?A.b("\t",b):A.call(null,"\t",b))?"\\tab":p(A.b?A.b("\n",b):A.call(null,"\n",b))?"\\newline":p(A.b?A.b("\f",b):A.call(null,"\f",b))?
    "\\formfeed":p(A.b?A.b("\r",b):A.call(null,"\r",b))?"\\return":p(A.b?A.b('"',b):A.call(null,'"',b))?'\\"':p(A.b?A.b("\\",b):A.call(null,"\\",b))?"\\\\":["\\",q.a(b)].join(""));else throw Error(["No matching clause: ",q.a(a)].join(""));return c}function YV(a,b){b=vV(b);a=J(b,0,null);b=J(b,1,null);jU.g(G([a]));return b}function ZV(a){a=C(a);return A.b(yx,a)||A.b(LG,a)}
    function $V(a,b,c){return zf(nU(function(d,e){if(ZV(e))return new Q(null,2,5,R,[null,e],null);e=BV(ns.a(d),e);var f=J(e,0,null);e=J(e,1,null);var k=pU(f);f=J(k,0,null);k=J(k,1,null);f=K.c(f,qo,c);return new Q(null,2,5,R,[null,fh(iG.a(d),new Q(null,3,5,R,[f,e,k],null))],null)},b,a))}
    function aW(a){a=q.a(a).toLowerCase();var b=a.indexOf("e"),c=a.indexOf(".");a=0>b?0>c?new Q(null,2,5,R,[a,q.a(a.length-1)],null):new Q(null,2,5,R,[[a.substring(0,c),a.substring(c+1)].join(""),q.a(c-1)],null):0>c?new Q(null,2,5,R,[a.substring(0,b),a.substring(b+1)],null):new Q(null,2,5,R,[[a.substring(0,1),a.substring(2,b)].join(""),a.substring(b+1)],null);b=J(a,0,null);a=J(a,1,null);a:if(c=F(b),0<c&&A.b(pf(b,F(b)-1),"0"))for(--c;;){if(0>c){b="";break a}if(A.b(pf(b,c),"0"))--c;else {b=b.substring(0,
    c+1);break a}}a:{c=b;var d=F(c);if(0<d&&A.b(pf(c,0),"0"))for(var e=0;;){if(A.b(e,d)||!A.b(pf(c,e),"0")){c=c.substring(e);break a}e+=1;}}b=F(b)-F(c);a=0<F(a)&&A.b(pf(a,0),"+")?a.substring(1):a;return Pf(c)?new Q(null,2,5,R,["0",0],null):new Q(null,2,5,R,[c,parseInt(a,10)-b],null)}
    function bW(a,b,c,d){if(p(p(c)?c:d)){var e=F(a);d=p(d)?2>d?2:d:0;p(c)?c=b+c+1:0<=b?(c=b+1,--d,c=c>d?c:d):c=d+b;var f=A.b(c,0)?new Q(null,4,5,R,[["0",q.a(a)].join(""),b+1,1,e+1],null):new Q(null,4,5,R,[a,b,c,e],null);c=J(f,0,null);e=J(f,1,null);d=J(f,2,null);f=J(f,3,null);if(p(d)){if(0>d)return new Q(null,3,5,R,["0",0,!1],null);if(f>d){b=pf(c,d);a=c.substring(0,d);if(mU(b)>=mU("5")){a:for(b=F(a)-1,c=b|0;;){if(0>c){b=gh(q,"1",ai(b+1,"0"));break a}if(A.b("9",a.charAt(c)))--c;else {b=hh(q,a.substring(0,
    c),rg(mU(a.charAt(c))+1),ai(b-c,"0"));break a}}a=F(b)>a.length;return new Q(null,3,5,R,[a?Bg(b,0,F(b)-1):b,e,a],null)}return new Q(null,3,5,R,[a,e,!1],null)}}}return new Q(null,3,5,R,[a,b,!1],null)}
    function cW(a,b,c){var d=0>b?new Q(null,2,5,R,[[q.a(fh(q,ai(-b-1,"0"))),q.a(a)].join(""),-1],null):new Q(null,2,5,R,[a,b],null);a=J(d,0,null);var e=J(d,1,null);d=F(a);c=p(c)?e+c+1:e+1;c=d<c?[q.a(a),q.a(fh(q,ai(c-d,"0")))].join(""):a;0>b?b=[".",q.a(c)].join(""):(b+=1,b=[c.substring(0,b),".",c.substring(b)].join(""));return b}function dW(a,b){return 0>b?[".",q.a(a)].join(""):[a.substring(0,b),".",a.substring(b)].join("")}
    function eW(a,b){var c=eG.a(a),d=dG.a(a);b=vV(b);var e=J(b,0,null);b=J(b,1,null);var f=0>e?new Q(null,2,5,R,["-",-e],null):new Q(null,2,5,R,["+",e],null),k=J(f,0,null);f=J(f,1,null);f=aW(f);var l=J(f,0,null),m=J(f,1,null)+$F.a(a);f=IH.a(a);e=p(f)?f:0>e;f=Tc(d)&&F(l)-1<=m;var r=bW(l,m,d,p(c)?c-(p(e)?1:0):null);l=J(r,0,null);m=J(r,1,null);r=J(r,2,null);l=cW(l,p(r)?m+1:m,d);d=p(p(c)?p(d)?1<=d&&A.b(l.charAt(0),"0")&&A.b(l.charAt(1),".")&&l.length>c-(p(e)?1:0):d:c)?l.substring(1):l;m=A.b(C(d),".");p(c)?
    (l=d.length,l=p(e)?l+1:l,m=m&&!(l>=c),f=f&&!(l>=c),l=m||f?l+1:l,p(l>c?SI.a(a):!1)?jU.g(G([fh(q,ai(c,SI.a(a)))])):jU.g(G([[q.a(fh(q,ai(c-l,UC.a(a)))),q.a(p(e)?k:null),m?"0":null,d,f?"0":null].join("")]))):jU.g(G([[q.a(p(e)?k:null),m?"0":null,d,f?"0":null].join("")]));return b}
    function fW(a,b){b=vV(b);var c=J(b,0,null);b=J(b,1,null);var d=aW(0>c?-c:c);J(d,0,null);for(J(d,1,null);;){var e=J(d,0,null),f=J(d,1,null),k=eG.a(a),l=dG.a(a),m=bG.a(a),r=$F.a(a),u=function(){var Y=Ko.a(a);return p(Y)?Y:"E"}();d=function(){var Y=IH.a(a);return p(Y)?Y:0>c}();var v=0>=r,y=f-(r-1),E=q.a(Math.abs(y));u=[q.a(u),0>y?"-":"+",q.a(p(m)?fh(q,ai(m-E.length,"0")):null),E].join("");var H=u.length;y=F(e);e=[q.a(fh(q,ai(-r,"0"))),q.a(e),q.a(p(l)?fh(q,ai(l-(y-1)-(0>r?-r:0),"0")):null)].join("");
    y=p(k)?k-H:null;e=bW(e,0,A.b(r,0)?l-1:0<r?l:0>r?l-1:null,p(y)?y-(p(d)?1:0):null);y=J(e,0,null);J(e,1,null);E=J(e,2,null);e=dW(y,r);l=A.b(r,F(y))&&null==l;if(Tc(E)){if(p(k)){f=e.length+H;f=p(d)?f+1:f;var T=(v=v&&!A.b(f,k))?f+1:f;f=l&&T<k;p(function(){var Y=T>k;Y||(Y=m,Y=p(Y)?H-2>m:Y);return p(Y)?SI.a(a):Y}())?jU.g(G([fh(q,ai(k,SI.a(a)))])):jU.g(G([[q.a(fh(q,ai(k-T-(f?1:0),UC.a(a)))),p(d)?0>c?"-":"+":null,v?"0":null,e,f?"0":null,u].join("")]));}else jU.g(G([[p(d)?0>c?"-":"+":null,v?"0":null,e,l?"0":
    null,u].join("")]));break}else d=new Q(null,2,5,R,[y,f+1],null);}return b}function gW(a,b,c){var d=vV(b),e=J(d,0,null);J(d,1,null);d=aW(0>e?-e:e);var f=J(d,0,null);d=J(d,1,null);var k=eG.a(a),l=dG.a(a),m=bG.a(a);d=A.b(e,0)?0:d+1;e=p(m)?m+2:4;k=p(k)?k-e:null;p(l)?f=l:(f=F(f),l=7>d?d:7,f=f>l?f:l);d=f-d;return 0<=d&&d<=f?(a=eW(new n(null,6,[eG,k,dG,d,$F,0,SI,SI.a(a),UC,UC.a(a),IH,IH.a(a)],null),b),jU.g(G([fh(q,ai(e," "))])),a):fW(a,b)}
    function hW(a,b){b=vV(b);var c=J(b,0,null);b=J(b,1,null);var d=aW(Math.abs(c)),e=J(d,0,null),f=J(d,1,null),k=dG.a(a),l=hG.a(a);d=eG.a(a);var m=function(){var u=IH.a(a);return p(u)?u:0>c}(),r=bW(e,f,k,null);e=J(r,0,null);f=J(r,1,null);r=J(r,2,null);k=cW(e,p(r)?f+1:f,k);l=[q.a(fh(q,ai(l-k.indexOf("."),"0"))),k].join("");k=l.length+(p(m)?1:0);jU.g(G([[p(function(){var u=mt.a(a);return p(u)?m:u}())?0>c?"-":"+":null,q.a(fh(q,ai(d-k,UC.a(a)))),p(Tc(mt.a(a))?m:!1)?0>c?"-":"+":null,l].join("")]));return b}
    function iW(a,b){var c=ZH.a(a);c=p(c)?new Q(null,2,5,R,[c,b],null):vV(b);b=J(c,0,null);c=J(c,1,null);var d=hw.a(a);b=0>b||b>=F(d)?C(ks.a(a)):pf(d,b);return p(b)?$V(b,c,qo.a(a)):c}function jW(a,b){var c=vV(b);b=J(c,0,null);c=J(c,1,null);var d=hw.a(a);b=p(b)?zf(d):C(d);return p(b)?$V(b,c,qo.a(a)):c}function kW(a,b){var c=vV(b),d=J(c,0,null);c=J(c,1,null);var e=hw.a(a);e=p(d)?C(e):null;return p(d)?p(e)?$V(e,b,qo.a(a)):b:c}
    function lW(a,b){var c=Px.a(a),d=C(hw.a(a));d=Pf(d)?wV(b):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);d=vV(d);var e=J(d,0,null);d=J(d,1,null);var f=0;e=pV(e);for(var k=-1;;){if(Tc(c)&&A.b(pr.a(e),k)&&1<f)throw Error("%{ construct not consuming any arguments: Infinite loop!");k=Pf(ts.a(e))&&(Tc(mt.a(kp.a(a)))||0<f);if(p(k?k:p(c)?f>=c:c))return d;k=$V(b,e,qo.a(a));if(A.b(yx,C(k)))return d;f+=1;var l=pr.a(e);e=k;k=l;}}
    function mW(a,b){var c=Px.a(a),d=C(hw.a(a));d=Pf(d)?wV(b):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);d=vV(d);var e=J(d,0,null);d=J(d,1,null);for(var f=0;;){var k=Pf(e)&&(Tc(mt.a(kp.a(a)))||0<f);if(p(k?k:p(c)?f>=c:c))return d;k=$V(b,pV(C(e)),pV(D(e)));if(A.b(LG,C(k)))return d;f+=1;e=D(e);}}
    function nW(a,b){var c=Px.a(a),d=C(hw.a(a)),e=Pf(d)?wV(b):new Q(null,2,5,R,[d,b],null);b=J(e,0,null);d=0;e=J(e,1,null);for(var f=-1;;){if(Tc(c)&&A.b(pr.a(e),f)&&1<d)throw Error("%@{ construct not consuming any arguments: Infinite loop!");f=Pf(ts.a(e))&&(Tc(mt.a(kp.a(a)))||0<d);if(p(f?f:p(c)?d>=c:c))return e;f=$V(b,e,qo.a(a));if(A.b(yx,C(f)))return zf(f);d+=1;var k=pr.a(e);e=f;f=k;}}
    function oW(a,b){var c=Px.a(a),d=C(hw.a(a)),e=Pf(d)?wV(b):new Q(null,2,5,R,[d,b],null);b=J(e,0,null);d=0;for(e=J(e,1,null);;){var f=Pf(ts.a(e))&&(Tc(mt.a(kp.a(a)))||0<d);if(p(f?f:p(c)?d>=c:c))return e;f=ts.a(e);f=p(f)?new Q(null,2,5,R,[C(f),new uV(wA.a(e),D(f),pr.a(e)+1,null,null,null)],null):new Q(null,2,5,R,[null,e],null);e=J(f,0,null);f=J(f,1,null);e=$V(b,pV(e),f);if(A.b(LG,C(e)))return f;e=f;d+=1;}}
    function pW(a,b){if(p(mt.a(kp.a(a)))){var c=hw.a(a),d=F(c),e=1<d?xn.a(ns.a(C(C(c)))):p(mt.a(a))?"(":null,f=pf(c,1<d?1:0);c=2<d?xn.a(ns.a(C(pf(c,2)))):p(mt.a(a))?")":null;d=vV(b);b=J(d,0,null);d=J(d,1,null);if(p(kV()))ce(Dc,"#");else {var k=dV,l=eV;dV+=1;eV=0;try{VU(e,c),$V(f,pV(b),qo.a(a)),WU();}finally{eV=l,dV=k;}}a=d;}else a=qW(a,b);return a}
    function rW(a,b,c){for(var d=I;;){if(Pf(a))return new Q(null,2,5,R,[d,b],null);var e=C(a);a:{var f=new zc,k=Dc;Dc=new Ae(f);try{var l=new Q(null,2,5,R,[$V(e,b,c),q.a(f)],null);break a}finally{Dc=k;}l=void 0;}b=J(l,0,null);e=J(l,1,null);if(A.b(yx,C(b)))return new Q(null,2,5,R,[d,zf(b)],null);a=D(a);d=Cf.b(d,e);}}
    function qW(a,b){var c=function(){var ba=ks.a(a);return p(ba)?rW(ba,b,qo.a(a)):null}(),d=J(c,0,null);d=J(d,0,null);c=J(c,1,null);var e=p(c)?c:b;c=function(){var ba=HJ.a(a);return p(ba)?BV(ba,e):null}();var f=J(c,0,null);c=J(c,1,null);var k=p(c)?c:e;c=function(){var ba=C(pE.a(f));return p(ba)?ba:0}();var l=function(){var ba=C(vH.a(f));return p(ba)?ba:sU(Dc,bw)}(),m=hw.a(a);k=rW(m,k,qo.a(a));var r=J(k,0,null);k=J(k,1,null);var u=function(){var ba=F(r)-1+(p(mt.a(a))?1:0)+(p(IH.a(a))?1:0);return 1>ba?
    1:ba}();m=gd.b(pg,Wh.b(F,r));var v=Hx.a(a),y=tt.a(a),E=lq.a(a),H=m+u*y;v=H<=v?v:v+E*(1+tg(H-v-1,E));var T=v-m;m=function(){var ba=tg(T,u);return y>ba?y:ba}();E=T-m*u;m=fh(q,ai(m,UC.a(a)));p(p(d)?sU(LA.a(t(t(Dc))),kr)+c+v>l:d)&&jU.g(G([d]));c=E;for(var Y=r,ia=function(){var ba=mt.a(a);return p(ba)?ba:A.b(F(Y),1)&&Tc(IH.a(a))}();;)if(B(Y))jU.g(G([[q.a(Tc(ia)?C(Y):null),q.a(p(function(){var ba=ia;return p(ba)?ba:(ba=D(Y))?ba:IH.a(a)}())?m:null),q.a(0<c?UC.a(a):null)].join("")])),--c,Y=d=p(ia)?Y:D(Y),
    ia=!1;else break;return k}
    function sW(a){if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof R4)R4=function(b,c){this.ya=b;this.$g=c;this.h=1074135040;this.I=0;},R4.prototype.O=function(b,c){return new R4(this.ya,c)},R4.prototype.N=function(){return this.$g},R4.prototype.qc=function(){return de(this.ya)},R4.prototype.Pc=function(b,c){b=Yc(c);if(p(A.b?A.b(String,b):A.call(null,String,b)))return ce(this.ya,c.toLowerCase());if(p(A.b?A.b(Number,b):A.call(null,Number,b)))return ce(this.ya,rg(c).toLowerCase());
    throw Error(["No matching clause: ",q.a(b)].join(""));},R4.Pa=function(){return new Q(null,2,5,R,[tG,xT],null)},R4.Ia=!0,R4.Da="cljs.pprint/t_cljs$pprint13823",R4.Ja=function(b){return ce(b,"cljs.pprint/t_cljs$pprint13823")};return new R4(a,S)}
    function tW(a){if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof X4)X4=function(b,c){this.ya=b;this.ah=c;this.h=1074135040;this.I=0;},X4.prototype.O=function(b,c){return new X4(this.ya,c)},X4.prototype.N=function(){return this.ah},X4.prototype.qc=function(){return de(this.ya)},X4.prototype.Pc=function(b,c){b=Yc(c);if(p(A.b?A.b(String,b):A.call(null,String,b)))return ce(this.ya,c.toUpperCase());if(p(A.b?A.b(Number,b):A.call(null,Number,b)))return ce(this.ya,rg(c).toUpperCase());
    throw Error(["No matching clause: ",q.a(b)].join(""));},X4.Pa=function(){return new Q(null,2,5,R,[tG,wT],null)},X4.Ia=!0,X4.Da="cljs.pprint/t_cljs$pprint13848",X4.Ja=function(b){return ce(b,"cljs.pprint/t_cljs$pprint13848")};return new X4(a,S)}
    function uW(a,b){var c=C(a);return fh(q,C(oU(function(d){if(Pf(d))return new Q(null,2,5,R,[null,null],null);var e=/\W\w/g.exec(d);e=p(e)?e.index+1:e;return p(e)?new Q(null,2,5,R,[[d.substring(0,e),pf(d,e).toUpperCase()].join(""),d.substring(e+1)],null):new Q(null,2,5,R,[d,null],null)},p(p(b)?p(c)?wc(c):c:b)?[c.toUpperCase(),a.substring(1)].join(""):a)))}
    function vW(a){var b=Oh(!0);if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof Y4)Y4=function(c,d,e){this.ya=c;this.Od=d;this.bh=e;this.h=1074135040;this.I=0;},Y4.prototype.O=function(c,d){return new Y4(this.ya,this.Od,d)},Y4.prototype.N=function(){return this.bh},Y4.prototype.qc=function(){return de(this.ya)},Y4.prototype.Pc=function(c,d){c=Yc(d);if(p(A.b?A.b(String,c):A.call(null,String,c)))return ce(this.ya,uW(d.toLowerCase(),t(this.Od))),0<d.length?Ph(this.Od,ec(pf(d,F(d)-
    1))):null;if(p(A.b?A.b(Number,c):A.call(null,Number,c)))return d=rg(d),c=p(t(this.Od))?d.toUpperCase():d,ce(this.ya,c),Ph(this.Od,ec(d));throw Error(["No matching clause: ",q.a(c)].join(""));},Y4.Pa=function(){return new Q(null,3,5,R,[tG,ZA,vT],null)},Y4.Ia=!0,Y4.Da="cljs.pprint/t_cljs$pprint13893",Y4.Ja=function(c){return ce(c,"cljs.pprint/t_cljs$pprint13893")};return new Y4(a,b,S)}
    function wW(a){var b=Oh(!1);if("undefined"===typeof Ac||"undefined"===typeof cU||"undefined"===typeof $4)$4=function(c,d,e){this.ya=c;this.wd=d;this.dh=e;this.h=1074135040;this.I=0;},$4.prototype.O=function(c,d){return new $4(this.ya,this.wd,d)},$4.prototype.N=function(){return this.dh},$4.prototype.qc=function(){return de(this.ya)},$4.prototype.Pc=function(c,d){c=Yc(d);if(p(A.b?A.b(String,c):A.call(null,String,c)))return d=d.toLowerCase(),Tc(t(this.wd))?(c=/\S/g.exec(d),c=p(c)?c.index:c,p(c)?(ce(this.ya,
    [d.substring(0,c),pf(d,c).toUpperCase(),d.substring(c+1).toLowerCase()].join("")),Ph(this.wd,!0)):ce(this.ya,d)):ce(this.ya,d.toLowerCase());if(p(A.b?A.b(Number,c):A.call(null,Number,c)))return d=rg(d),p(Tc(t(this.wd))?wc(d):!1)?(Ph(this.wd,!0),ce(this.ya,d.toUpperCase())):ce(this.ya,d.toLowerCase());throw Error(["No matching clause: ",q.a(c)].join(""));},$4.Pa=function(){return new Q(null,3,5,R,[tG,EG,CT],null)},$4.Ia=!0,$4.Da="cljs.pprint/t_cljs$pprint13925",$4.Ja=function(c){return ce(c,"cljs.pprint/t_cljs$pprint13925")};
    return new $4(a,b,S)}function xW(a,b){var c=p(mt.a(a))?wq:eE;mV(c,hG.a(a));return b}function yW(a,b){a=p(mt.a(a))?p(IH.a(a))?go:SD:p(IH.a(a))?cI:bF;lV(a);return b}
    var zW=Xj("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""),[new n(null,5,[Qo,"A",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],null),tt,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){return FV(ql,a,b)}}],null),new n(null,5,[Qo,"S",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],
    null),tt,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){return FV(ol,a,b)}}],null),new n(null,5,[Qo,"D",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),vD,new Q(null,2,5,R,[3,Number],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,
    b){return JV(10,a,b)}}],null),new n(null,5,[Qo,"B",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),vD,new Q(null,2,5,R,[3,Number],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){return JV(2,a,b)}}],null),new n(null,5,[Qo,"O",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],
    null),vD,new Q(null,2,5,R,[3,Number],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){return JV(8,a,b)}}],null),new n(null,5,[Qo,"X",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),vD,new Q(null,2,5,R,[3,Number],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){return JV(16,a,b)}}],
    null),new n(null,5,[Qo,"R",ns,new n(null,5,[LA,new Q(null,2,5,R,[null,Number],null),Hx,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),vD,new Q(null,2,5,R,[3,Number],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(a){return p(C(LA.a(a)))?function(b,c){return JV(LA.a(b),b,c)}:p(function(){var b=IH.a(a);return p(b)?mt.a(a):b}())?function(b,c){return UV(SV,c)}:p(IH.a(a))?function(b,c){return UV(TV,
    c)}:p(mt.a(a))?function(b,c){b=vV(c);c=J(b,0,null);b=J(b,1,null);if(A.b(0,c))jU.g(G(["zeroth"]));else {var d=HV(1E3,0>c?-c:c);if(F(d)<=F(OV)){var e=Wh.b(PV,Zh(1,d));e=QV(e,1);d=RV(Bf(d));jU.g(G([[0>c?"minus ":null,Pf(e)||Pf(d)?Pf(e)?d:[e,"th"].join(""):[e,", ",d].join("")].join("")]));}else JV(10,new n(null,5,[Hx,0,UC," ",us,",",vD,3,mt,!0],null),pV(new Q(null,1,5,R,[c],null))),d=ug(c,100),c=11<d||19>d,d=ug(d,10),jU.g(G([1===d&&c?"st":2===d&&c?"nd":3===d&&c?"rd":"th"]));}return b}:function(b,c){c=vV(c);
    b=J(c,0,null);c=J(c,1,null);if(A.b(0,b))jU.g(G(["zero"]));else {var d=HV(1E3,0>b?-b:b);F(d)<=F(OV)?(d=Wh.b(PV,d),d=QV(d,0),jU.g(G([[0>b?"minus ":null,d].join("")]))):JV(10,new n(null,5,[Hx,0,UC," ",us,",",vD,3,mt,!0],null),pV(new Q(null,1,5,R,[b],null)));}return c}}],null),new n(null,5,[Qo,"P",ns,S,fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return function(a,b){b=p(mt.a(a))?yV(b,-1):b;a=p(IH.a(a))?new Q(null,2,5,R,["y","ies"],null):new Q(null,2,5,R,["","s"],
    null);var c=vV(b);b=J(c,0,null);c=J(c,1,null);jU.g(G([A.b(b,1)?C(a):zf(a)]));return c}}],null),new n(null,5,[Qo,"C",ns,new n(null,1,[sH,new Q(null,2,5,R,[null,String],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(a){return p(mt.a(a))?WV:p(IH.a(a))?XV:YV}],null),new n(null,5,[Qo,"F",ns,new n(null,5,[eG,new Q(null,2,5,R,[null,Number],null),dG,new Q(null,2,5,R,[null,Number],null),$F,new Q(null,2,5,R,[0,Number],null),SI,new Q(null,2,5,R,[null,String],
    null),UC,new Q(null,2,5,R,[" ",String],null)],null),fv,new Bk(null,new n(null,1,[IH,null],null),null),Pw,S,PI,function(){return eW}],null),new n(null,5,[Qo,"E",ns,new n(null,7,[eG,new Q(null,2,5,R,[null,Number],null),dG,new Q(null,2,5,R,[null,Number],null),bG,new Q(null,2,5,R,[null,Number],null),$F,new Q(null,2,5,R,[1,Number],null),SI,new Q(null,2,5,R,[null,String],null),UC,new Q(null,2,5,R,[" ",String],null),Ko,new Q(null,2,5,R,[null,String],null)],null),fv,new Bk(null,new n(null,1,[IH,null],null),
    null),Pw,S,PI,function(){return fW}],null),new n(null,5,[Qo,"G",ns,new n(null,7,[eG,new Q(null,2,5,R,[null,Number],null),dG,new Q(null,2,5,R,[null,Number],null),bG,new Q(null,2,5,R,[null,Number],null),$F,new Q(null,2,5,R,[1,Number],null),SI,new Q(null,2,5,R,[null,String],null),UC,new Q(null,2,5,R,[" ",String],null),Ko,new Q(null,2,5,R,[null,String],null)],null),fv,new Bk(null,new n(null,1,[IH,null],null),null),Pw,S,PI,function(){return gW}],null),new n(null,5,[Qo,"$",ns,new n(null,4,[dG,new Q(null,
    2,5,R,[2,Number],null),hG,new Q(null,2,5,R,[1,Number],null),eG,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null)],null),fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return hW}],null),new n(null,5,[Qo,"%",ns,new n(null,1,[gw,new Q(null,2,5,R,[1,Number],null)],null),fv,Dk,Pw,S,PI,function(){return function(a,b){a=gw.a(a);for(var c=0;;)if(c<a)lU(),c+=1;else break;return b}}],null),new n(null,5,[Qo,"\x26",ns,new n(null,1,[gw,new Q(null,2,
    5,R,[1,Number],null)],null),fv,new Bk(null,new n(null,1,[Jr,null],null),null),Pw,S,PI,function(){return function(a,b){a=gw.a(a);0<a&&((null!=Dc?Dc.h&32768||h===Dc.nf||(Dc.h?0:Xc(Ld,Dc)):Xc(Ld,Dc))?A.b(0,sU(LA.a(t(t(Dc))),kr))||lU():lU());--a;for(var c=0;;)if(c<a)lU(),c+=1;else break;return b}}],null),new n(null,5,[Qo,"|",ns,new n(null,1,[gw,new Q(null,2,5,R,[1,Number],null)],null),fv,Dk,Pw,S,PI,function(){return function(a,b){a=gw.a(a);for(var c=0;;)if(c<a)jU.g(G(["\f"])),c+=1;else break;return b}}],
    null),new n(null,5,[Qo,"~",ns,new n(null,1,[hG,new Q(null,2,5,R,[1,Number],null)],null),fv,Dk,Pw,S,PI,function(){return function(a,b){a=hG.a(a);jU.g(G([fh(q,ai(a,"~"))]));return b}}],null),new n(null,5,[Qo,"\n",ns,S,fv,new Bk(null,new n(null,2,[mt,null,IH,null],null),null),Pw,S,PI,function(){return function(a,b){p(IH.a(a))&&lU();return b}}],null),new n(null,5,[Qo,"T",ns,new n(null,2,[iI,new Q(null,2,5,R,[1,Number],null),lq,new Q(null,2,5,R,[1,Number],null)],null),fv,new Bk(null,new n(null,2,[IH,null,
    Jr,null],null),null),Pw,S,PI,function(a){return p(IH.a(a))?function(b,c){var d=iI.a(b);b=lq.a(b);var e=d+sU(LA.a(t(t(Dc))),kr);e=0<b?ug(e,b):0;d+=A.b(0,e)?0:b-e;jU.g(G([fh(q,ai(d," "))]));return c}:function(b,c){var d=iI.a(b);b=lq.a(b);var e=sU(LA.a(t(t(Dc))),kr);d=e<d?d-e:A.b(b,0)?0:b-ug(e-d,b);jU.g(G([fh(q,ai(d," "))]));return c}}],null),new n(null,5,[Qo,"*",ns,new n(null,1,[hG,new Q(null,2,5,R,[1,Number],null)],null),fv,new Bk(null,new n(null,2,[mt,null,IH,null],null),null),Pw,S,PI,function(){return function(a,
    b){var c=hG.a(a);return p(IH.a(a))?xV(b,c):yV(b,p(mt.a(a))?-c:c)}}],null),new n(null,5,[Qo,"?",ns,S,fv,new Bk(null,new n(null,1,[IH,null],null),null),Pw,S,PI,function(a){return p(IH.a(a))?function(b,c){var d=wV(c);c=J(d,0,null);d=J(d,1,null);return $V(c,d,qo.a(b))}:function(b,c){var d=wV(c);c=J(d,0,null);d=J(d,1,null);var e=vV(d);d=J(e,0,null);e=J(e,1,null);d=pV(d);$V(c,d,qo.a(b));return e}}],null),new n(null,5,[Qo,"(",ns,S,fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,new n(null,
    3,[QB,")",FG,null,ks,null],null),PI,function(a){var b=p(function(){var c=IH.a(a);return p(c)?mt.a(a):c}())?tW:p(mt.a(a))?vW:p(IH.a(a))?wW:sW;return function(c,d){a:{var e=C(hw.a(c)),f=Dc;Dc=b.a?b.a(Dc):b.call(null,Dc);try{var k=$V(e,d,qo.a(c));break a}finally{Dc=f;}k=void 0;}return k}}],null),new n(null,5,[Qo,")",ns,S,fv,Dk,Pw,S,PI,function(){return null}],null),new n(null,5,[Qo,"[",ns,new n(null,1,[ZH,new Q(null,2,5,R,[null,Number],null)],null),fv,new Bk(null,new n(null,2,[mt,null,IH,null],null),null),
    Pw,new n(null,3,[QB,"]",FG,!0,ks,VF],null),PI,function(a){return p(mt.a(a))?jW:p(IH.a(a))?kW:iW}],null),new n(null,5,[Qo,";",ns,new n(null,2,[pE,new Q(null,2,5,R,[null,Number],null),vH,new Q(null,2,5,R,[null,Number],null)],null),fv,new Bk(null,new n(null,1,[mt,null],null),null),Pw,new n(null,1,[xD,!0],null),PI,function(){return null}],null),new n(null,5,[Qo,"]",ns,S,fv,Dk,Pw,S,PI,function(){return null}],null),new n(null,5,[Qo,"{",ns,new n(null,1,[Px,new Q(null,2,5,R,[null,Number],null)],null),fv,
    new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,new n(null,2,[QB,"}",FG,!1],null),PI,function(a){var b=IH.a(a);b=p(b)?mt.a(a):b;return p(b)?oW:p(mt.a(a))?mW:p(IH.a(a))?nW:lW}],null),new n(null,5,[Qo,"}",ns,S,fv,new Bk(null,new n(null,1,[mt,null],null),null),Pw,S,PI,function(){return null}],null),new n(null,5,[Qo,"\x3c",ns,new n(null,4,[Hx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],null),tt,new Q(null,2,5,R,[0,Number],null),UC,new Q(null,2,5,R,[" ",String],null)],
    null),fv,new Bk(null,new n(null,4,[mt,null,IH,null,Qu,null,Jr,null],null),null),Pw,new n(null,3,[QB,"\x3e",FG,!0,ks,YA],null),PI,function(){return pW}],null),new n(null,5,[Qo,"\x3e",ns,S,fv,new Bk(null,new n(null,1,[mt,null],null),null),Pw,S,PI,function(){return null}],null),new n(null,5,[Qo,"^",ns,new n(null,3,[HI,new Q(null,2,5,R,[null,Number],null),II,new Q(null,2,5,R,[null,Number],null),FI,new Q(null,2,5,R,[null,Number],null)],null),fv,new Bk(null,new n(null,1,[mt,null],null),null),Pw,S,PI,function(){return function(a,
    b){var c=HI.a(a),d=II.a(a),e=FI.a(a),f=p(mt.a(a))?LG:yx;return p(p(c)?p(d)?e:d:c)?c<=d&&d<=e?new Q(null,2,5,R,[f,b],null):b:p(p(c)?d:c)?A.b(c,d)?new Q(null,2,5,R,[f,b],null):b:p(c)?A.b(c,0)?new Q(null,2,5,R,[f,b],null):b:(p(mt.a(a))?Pf(ts.a(qo.a(a))):Pf(ts.a(b)))?new Q(null,2,5,R,[f,b],null):b}}],null),new n(null,5,[Qo,"W",ns,S,fv,new Bk(null,new n(null,4,[mt,null,IH,null,Qu,null,Jr,null],null),null),Pw,S,PI,function(a){if(p(function(){var c=IH.a(a);return p(c)?c:mt.a(a)}())){var b=Xg.b(p(IH.a(a))?
    new Q(null,4,5,R,[cn,null,Ez,null],null):I,p(mt.a(a))?new Q(null,2,5,R,[Jr,!0],null):I);return function(c,d){d=vV(d);c=J(d,0,null);d=J(d,1,null);return p(gh(hV,c,b))?new Q(null,2,5,R,[yx,d],null):d}}return function(c,d){d=vV(d);c=J(d,0,null);d=J(d,1,null);return p(gV(c))?new Q(null,2,5,R,[yx,d],null):d}}],null),new n(null,5,[Qo,"_",ns,S,fv,new Bk(null,new n(null,3,[mt,null,IH,null,Qu,null],null),null),Pw,S,PI,function(){return yW}],null),new n(null,5,[Qo,"I",ns,new n(null,1,[hG,new Q(null,2,5,R,[0,
    Number],null)],null),fv,new Bk(null,new n(null,1,[mt,null],null),null),Pw,S,PI,function(){return xW}],null)]),AW=/^([vV]|#|('.)|([+-]?\d+)|(?=,))/,BW=new Bk(null,new n(null,2,[gD,null,Ew,null],null),null);
    function CW(a){var b=J(a,0,null),c=J(a,1,null),d=J(a,2,null);a=new RegExp(AW.source,"g");var e=a.exec(b);return p(e)?(d=C(e),b=b.substring(a.lastIndex),a=c+a.lastIndex,A.b(",",pf(b,0))?new Q(null,2,5,R,[new Q(null,2,5,R,[d,c],null),new Q(null,3,5,R,[b.substring(1),a+1,!0],null)],null):new Q(null,2,5,R,[new Q(null,2,5,R,[d,c],null),new Q(null,3,5,R,[b,a,!1],null)],null)):p(d)?tV("Badly formed parameters in format directive",c):new Q(null,2,5,R,[null,new Q(null,2,5,R,[b,c],null)],null)}
    function DW(a){var b=J(a,0,null);a=J(a,1,null);return new Q(null,2,5,R,[A.b(b.length,0)?null:A.b(b.length,1)&&N(new Bk(null,new n(null,2,["V",null,"v",null],null),null),pf(b,0))?Ew:A.b(b.length,1)&&A.b("#",pf(b,0))?gD:A.b(b.length,2)&&A.b("'",pf(b,0))?pf(b,1):parseInt(b,10),a],null)}var EW=new n(null,2,[":",mt,"@",IH],null);
    function FW(a,b){return oU(function(c){var d=J(c,0,null),e=J(c,1,null);c=J(c,2,null);if(Pf(d))return new Q(null,2,5,R,[null,new Q(null,3,5,R,[d,e,c],null)],null);var f=x.b(EW,C(d));return p(f)?N(c,f)?tV(['Flag "',q.a(C(d)),'" appears more than once in a directive'].join(""),e):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[d.substring(1),e+1,K.c(c,f,new Q(null,2,5,R,[!0,e],null))],null)],null):new Q(null,2,5,R,[null,new Q(null,3,5,R,[d,e,c],null)],null)},new Q(null,3,5,R,[a,b,S],null))}
    function GW(a,b){var c=fv.a(a);p(Tc(IH.a(c))?IH.a(b):!1)&&tV(['"@" is an illegal flag for format directive "',q.a(Qo.a(a)),'"'].join(""),pf(IH.a(b),1));p(Tc(mt.a(c))?mt.a(b):!1)&&tV(['":" is an illegal flag for format directive "',q.a(Qo.a(a)),'"'].join(""),pf(mt.a(b),1));p(Tc(Qu.a(c))?function(){var d=IH.a(b);return p(d)?mt.a(b):d}():!1)&&tV(['Cannot combine "@" and ":" flags for format directive "',q.a(Qo.a(a)),'"'].join(""),function(){var d=pf(mt.a(b),1),e=pf(IH.a(b),1);return d<e?d:e}());}
    function HW(a,b,c,d){GW(a,c);F(b)>F(ns.a(a))&&tV(nV(null,'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed',G([Qo.a(a),F(b),F(ns.a(a))])),zf(C(b)));Vk(Wh.c(function(e,f){var k=C(e);return null==k||N(BW,k)||A.b(zf(zf(f)),Yc(k))?null:tV(["Parameter ",Lg(C(f)),' has bad type in directive "',q.a(Qo.a(a)),'": ',q.a(Yc(k))].join(""),zf(e))},b,ns.a(a)));return wk.g(G([ji.b(S,Eg(function(){return function k(f){return new Mg(null,function(){for(;;){var l=
    B(f);if(l){if(Wf(l)){var m=re(l),r=F(m),u=Qg(r);a:for(var v=0;;)if(v<r){var y=qd(m,v),E=J(y,0,null);y=J(y,1,null);y=J(y,0,null);u.add(new Q(null,2,5,R,[E,new Q(null,2,5,R,[y,d],null)],null));v+=1;}else {m=!0;break a}return m?Sg(Ug(u),k(se(l))):Sg(Ug(u),null)}m=C(l);u=J(m,0,null);m=J(m,1,null);m=J(m,0,null);return vf(new Q(null,2,5,R,[u,new Q(null,2,5,R,[m,d],null)],null),k(Re(l)))}return null}},null,null)}(ns.a(a))}())),gd.c(function(e,f){return gh(K,e,f)},S,fi.b(function(e){return C(pf(e,1))},Ik(mj(ns.a(a)),
    b))),c]))}
    function IW(a,b){b=oU(CW,new Q(null,3,5,R,[a,b,!1],null));a=J(b,0,null);var c=J(b,1,null);b=J(c,0,null);c=J(c,1,null);b=FW(b,c);J(b,0,null);b=J(b,1,null);var d=J(b,0,null),e=J(b,1,null);b=J(b,2,null);c=C(d);var f=x.b(zW,c.toUpperCase()),k=p(f)?HW(f,Wh.b(DW,a),b,e):null;Tc(c)&&tV("Format string ended in the middle of a directive",e);Tc(f)&&tV(['Directive "',q.a(c),'" is undefined'].join(""),e);return new Q(null,2,5,R,[new zV(function(){var l=PI.a(f);return l.b?l.b(k,e):l.call(null,k,e)}(),f,k,e,null,
    null,null),function(){var l=d.substring(1),m=e+1;if(A.b("\n",Qo.a(f))&&Tc(mt.a(k)))a:{var r=new Q(null,2,5,R,[" ","\t"],null);r=Qf(r)?Fk(r):Ek([r]);for(var u=0;;){var v;(v=A.b(u,F(l)))||(v=pf(l,u),v=r.a?r.a(v):r.call(null,v),v=Tc(v));if(v){r=u;break a}u+=1;}}else r=0;return new Q(null,2,5,R,[l.substring(r),m+r],null)}()],null)}function JW(a,b){return new zV(function(c,d){jU.g(G([a]));return d},null,new n(null,1,[xn,a],null),b,null,null,null)}
    function KW(a,b){var c=LW(Pw.a(yo.a(a)),qE.a(a),b);b=J(c,0,null);c=J(c,1,null);return new Q(null,2,5,R,[new zV(iG.a(a),yo.a(a),wk.g(G([ns.a(a),qU(b,qE.a(a))])),qE.a(a),null,null,null),c],null)}
    function MW(a,b,c){return oU(function(d){if(Pf(d))return tV("No closing bracket found.",b);var e=C(d);d=D(d);if(p(QB.a(Pw.a(yo.a(e)))))e=KW(e,d);else if(A.b(QB.a(a),Qo.a(yo.a(e))))e=new Q(null,2,5,R,[null,new Q(null,4,5,R,[Kq,ns.a(e),null,d],null)],null);else {var f=xD.a(Pw.a(yo.a(e)));f=p(f)?mt.a(ns.a(e)):f;e=p(f)?new Q(null,2,5,R,[null,new Q(null,4,5,R,[ks,null,ns.a(e),d],null)],null):p(xD.a(Pw.a(yo.a(e))))?new Q(null,2,5,R,[null,new Q(null,4,5,R,[xD,null,null,d],null)],null):new Q(null,2,5,R,[e,
    d],null);}return e},c)}
    function LW(a,b,c){return zf(oU(function(d){var e=J(d,0,null),f=J(d,1,null);d=J(d,2,null);var k=MW(a,b,d);d=J(k,0,null);var l=J(k,1,null);k=J(l,0,null);var m=J(l,1,null),r=J(l,2,null);l=J(l,3,null);return A.b(k,Kq)?new Q(null,2,5,R,[null,new Q(null,2,5,R,[xk.g(Xg,G([e,Gf([p(f)?ks:hw,new Q(null,1,5,R,[d],null),kp,m])])),l],null)],null):A.b(k,ks)?p(ks.a(e))?tV('Two else clauses ("~:;") inside bracket construction.',b):Tc(ks.a(a))?tV('An else clause ("~:;") is in a bracket type that doesn\'t support it.',b):
    A.b(YA,ks.a(a))&&B(hw.a(e))?tV('The else clause ("~:;") is only allowed in the first position for this directive.',b):A.b(YA,ks.a(a))?new Q(null,2,5,R,[!0,new Q(null,3,5,R,[xk.g(Xg,G([e,new n(null,2,[ks,new Q(null,1,5,R,[d],null),HJ,r],null)])),!1,l],null)],null):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[xk.g(Xg,G([e,new n(null,1,[hw,new Q(null,1,5,R,[d],null)],null)])),!0,l],null)],null):A.b(k,xD)?p(f)?tV('A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.',b):Tc(FG.a(a))?
    tV('A separator ("~;") is in a bracket type that doesn\'t support it.',b):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[xk.g(Xg,G([e,new n(null,1,[hw,new Q(null,1,5,R,[d],null)],null)])),!1,l],null)],null):null},new Q(null,3,5,R,[new n(null,1,[hw,I],null),!1,c],null)))}function NW(a){return C(oU(function(b){var c=C(b);b=D(b);var d=Pw.a(yo.a(c));return p(QB.a(d))?KW(c,b):new Q(null,2,5,R,[c,b],null)},a))}
    function oV(a){var b=sV;sV=a;try{return NW(C(oU(function(c){var d=J(c,0,null);c=J(c,1,null);if(Pf(d))return new Q(null,2,5,R,[null,d],null);var e=d.indexOf("~");return 0>e?new Q(null,2,5,R,[JW(d,c),new Q(null,2,5,R,["",c+d.length],null)],null):0===e?IW(d.substring(1),c+1):new Q(null,2,5,R,[JW(d.substring(0,e),c),new Q(null,2,5,R,[d.substring(e),e+c],null)],null)},new Q(null,2,5,R,[a,0],null))))}finally{sV=b;}}
    var qV=function qV(a){for(;;){if(Pf(a))return !1;var c=Jr.a(fv.a(yo.a(C(a))));p(c)||(c=Eh(qV,C(hw.a(ns.a(C(a))))),c=p(c)?c:Eh(qV,C(ks.a(ns.a(C(a))))));if(p(c))return !0;a=D(a);}};function rV(a,b){nU(function(c,d){if(ZV(d))return new Q(null,2,5,R,[null,d],null);d=BV(ns.a(c),d);var e=J(d,0,null);d=J(d,1,null);var f=pU(e);e=J(f,0,null);f=J(f,1,null);e=K.c(e,qo,d);return new Q(null,2,5,R,[null,fh(iG.a(c),new Q(null,3,5,R,[e,d,f],null))],null)},b,a);return null}
    var OW=function(a){var b=Oh(S);return function(){function c(e){var f=null;if(0<arguments.length){f=0;for(var k=Array(arguments.length-0);f<k.length;)k[f]=arguments[f+0],++f;f=new Qe(k,0,null);}return d.call(this,f)}function d(e){var f=x.c(t(b),e,Yf);return f===Yf?(f=fh(a,e),Rh.A(b,K,e,f),f):f}c.F=0;c.G=function(e){e=B(e);return d(e)};c.g=d;return c}()}(oV),PW=new n(null,6,[Hm,"'",Gm,"#'",Xq,"@",Zu,"~",Un,"@",Tz,"~"],null);
    function QW(a){var b=C(a);b=PW.a?PW.a(b):PW.call(null,b);return p(p(b)?A.b(2,F(a)):b)?(ce(Dc,b),gV(zf(a)),!0):null}function RW(a){if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("[","]");for(var d=0,e=B(a);;){if(Tc(Hc)||d<Hc){if(e&&(gV(C(e)),D(e))){ce(Dc," ");lV(bF);a=d+1;var f=D(e);d=a;e=f;continue}}else ce(Dc,"...");break}WU();}finally{eV=c,dV=b;}}return null}
    (function(){var a=OW("~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=pV(d);return rV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()})();
    function SW(a){var b=Uf(a)?null:function(){var m=new Ne(function(){return ul},YF,Xj([Jn,By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[!0,Hy,Cu,"cljs/core.cljs",15,1,10307,10307,O(new Q(null,1,5,R,[Kp],null)),"Returns [lifted-ns lifted-map] or nil if m can't be lifted.",p(ul)?ul.ld:null]));return m.a?m.a(a):m.call(null,a)}(),c=J(b,0,null);b=J(b,1,null);var d=p(b)?b:a,e=p(c)?["#:",q.a(c),"{"].join(""):"{";if(p(kV()))ce(Dc,"#");else {c=dV;b=eV;dV+=1;eV=0;try{VU(e,"}");e=0;for(var f=B(d);;){if(Tc(Hc)||e<Hc){if(f){if(p(kV()))ce(Dc,
    "#");else {d=dV;var k=eV;dV+=1;eV=0;try{VU(null,null),gV(C(C(f))),ce(Dc," "),lV(bF),eV=0,gV(Af(C(f))),WU();}finally{eV=k,dV=d;}}if(D(f)){ce(Dc,", ");lV(bF);d=e+1;var l=D(f);e=d;f=l;continue}}}else ce(Dc,"...");break}WU();}finally{eV=b,dV=c;}}return null}function TW(a){return ce(Dc,ol.g(G([a])))}
    var UW=function(){var a=OW("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=pV(d);return rV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}(),VW=new n(null,2,["core$future_call","Future","core$promise","Promise"],null);
    function WW(a){var b=Xk(/^[^$]+\$[^$]+/,a);b=p(b)?VW.a?VW.a(b):VW.call(null,b):null;return p(b)?b:a}var XW=function(){var a=OW("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=pV(d);return rV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}();
    function YW(a){return a instanceof bj?TH:(null!=a?a.h&32768||h===a.nf||(a.h?0:Xc(Ld,a)):Xc(Ld,a))?Lx:a instanceof w?xu:$f(a)?JI:M(a)?Tv:Vf(a)?Uu:Rf(a)?yA:null==a?null:em}var ZW,a5=Oh(S),b5=Oh(S),c5=Oh(S),d5=Oh(S),g5=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));ZW=new dm(Me.b(ca,"simple-dispatch"),YW,g5,a5,b5,c5,d5);
    $l(ZW,JI,function(a){if(Tc(QW(a)))if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("(",")");for(var d=0,e=B(a);;){if(Tc(Hc)||d<Hc){if(e&&(gV(C(e)),D(e))){ce(Dc," ");lV(bF);a=d+1;var f=D(e);d=a;e=f;continue}}else ce(Dc,"...");break}WU();}finally{eV=c,dV=b;}}return null});$l(ZW,Uu,RW);$l(ZW,Tv,SW);$l(ZW,yA,UW);$l(ZW,null,function(){return ce(Dc,ol.g(G([null])))});$l(ZW,em,TW);YU=ZW;function eX(a){return Vf(a)?new Q(null,2,5,R,["[","]"],null):new Q(null,2,5,R,["(",")"],null)}
    function fX(a){if(Tf(a)){var b=eX(a),c=J(b,0,null),d=J(b,1,null),e=B(a),f=C(e),k=D(e);if(p(kV()))ce(Dc,"#");else {var l=dV,m=eV,r=dV+1;dV=r;eV=0;try{VU(c,d);(function(){var sb=OW("~w~:i");return function(){function rb(Sb){var ob=null;if(0<arguments.length){ob=0;for(var Tb=Array(arguments.length-0);ob<Tb.length;)Tb[ob]=arguments[ob+0],++ob;ob=new Qe(Tb,0,null);}return xc.call(this,ob)}function xc(Sb){Sb=pV(Sb);return rV(sb,Sb)}rb.F=0;rb.G=function(Sb){Sb=B(Sb);return xc(Sb)};rb.g=xc;return rb}()})()(f);
    for(var u=k;;)if(B(u)){(function(){var sb=OW(" ");return function(rb,xc,Sb){return function(){function ob(gb){var ib=null;if(0<arguments.length){ib=0;for(var mc=Array(arguments.length-0);ib<mc.length;)mc[ib]=arguments[ib+0],++ib;ib=new Qe(mc,0,null);}return Tb.call(this,ib)}function Tb(gb){gb=pV(gb);return rV(Sb,gb)}ob.F=0;ob.G=function(gb){gb=B(gb);return Tb(gb)};ob.g=Tb;return ob}()}(u," ",sb,l,m,r,0,b,c,d,a,e,f,k,f,k)})()();var v=C(u);if(Tf(v)){var y=eX(v),E=J(y,0,null),H=J(y,1,null);if(p(kV()))ce(Dc,
    "#");else {var T=dV,Y=eV,ia=dV+1;dV=ia;eV=0;try{VU(E,H);if(A.b(F(v),3)&&zf(v)instanceof z){var ba=v,wa=J(ba,0,null),ua=J(ba,1,null),pb=J(ba,2,null);(function(){var sb=OW("~w ~w ");return function(rb,xc,Sb){return function(){function ob(gb){var ib=null;if(0<arguments.length){ib=0;for(var mc=Array(arguments.length-0);ib<mc.length;)mc[ib]=arguments[ib+0],++ib;ib=new Qe(mc,0,null);}return Tb.call(this,ib)}function Tb(gb){gb=pV(gb);return rV(Sb,gb)}ob.F=0;ob.G=function(gb){gb=B(gb);return Tb(gb)};ob.g=Tb;
    return ob}()}(u,"~w ~w ",sb,ba,wa,ua,pb,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)})()(wa,ua);Tf(pb)?function(){var sb=Vf(pb)?"~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e":"~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e",rb="string"===typeof sb?OW(sb):sb;return function(xc,Sb,ob){return function(){function Tb(ib){var mc=null;if(0<arguments.length){mc=0;for(var of=Array(arguments.length-0);mc<of.length;)of[mc]=arguments[mc+0],++mc;mc=new Qe(of,0,null);}return gb.call(this,mc)}function gb(ib){ib=pV(ib);return rV(ob,ib)}Tb.F=0;
    Tb.G=function(ib){ib=B(ib);return gb(ib)};Tb.g=gb;return Tb}()}(u,sb,rb,ba,wa,ua,pb,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()(pb):gV(pb);}else fh(function(){var sb=OW("~w ~:i~@{~w~^ ~:_~}");return function(rb,xc,Sb){return function(){function ob(gb){var ib=null;if(0<arguments.length){ib=0;for(var mc=Array(arguments.length-0);ib<mc.length;)mc[ib]=arguments[ib+0],++ib;ib=new Qe(mc,0,null);}return Tb.call(this,ib)}function Tb(gb){gb=pV(gb);return rV(Sb,gb)}ob.F=0;ob.G=function(gb){gb=B(gb);return Tb(gb)};
    ob.g=Tb;return ob}()}(u,"~w ~:i~@{~w~^ ~:_~}",sb,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}(),v);WU();}finally{eV=Y,dV=T;}}D(u)&&function(){var sb=OW("~_");return function(rb,xc,Sb){return function(){function ob(gb){var ib=null;if(0<arguments.length){ib=0;for(var mc=Array(arguments.length-0);ib<mc.length;)mc[ib]=arguments[ib+0],++ib;ib=new Qe(mc,0,null);}return Tb.call(this,ib)}function Tb(gb){gb=pV(gb);return rV(Sb,gb)}ob.F=0;ob.G=function(gb){gb=B(gb);return Tb(gb)};ob.g=Tb;return ob}()}(u,"~_",
    sb,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()();}else gV(v),D(u)&&function(){var sb=OW("~:_");return function(rb,xc,Sb){return function(){function ob(gb){var ib=null;if(0<arguments.length){ib=0;for(var mc=Array(arguments.length-0);ib<mc.length;)mc[ib]=arguments[ib+0],++ib;ib=new Qe(mc,0,null);}return Tb.call(this,ib)}function Tb(gb){gb=pV(gb);return rV(Sb,gb)}ob.F=0;ob.G=function(gb){gb=B(gb);return Tb(gb)};ob.g=Tb;return ob}()}(u,"~:_",sb,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()();u=D(u);}else break;WU();}finally{eV=
    m,dV=l;}}}else gV(a);}var gX=function(){var a=OW("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=pV(d);return rV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}();
    function hX(a,b){B(a)&&(p(b)?function(){var c=OW(" ~_");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+0],++k;k=new Qe(l,0,null);}return e.call(this,k)}function e(f){f=pV(f);return rV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()():function(){var c=OW(" ~@_");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+
    0],++k;k=new Qe(l,0,null);}return e.call(this,k)}function e(f){f=pV(f);return rV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()(),function(){var c=OW("~{~w~^ ~_~}");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+0],++k;k=new Qe(l,0,null);}return e.call(this,k)}function e(f){f=pV(f);return rV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()(a));}
    function iX(a){B(a)&&function(){var b=OW(" ~_~{~w~^ ~_~}");return function(){function c(e){var f=null;if(0<arguments.length){f=0;for(var k=Array(arguments.length-0);f<k.length;)k[f]=arguments[f+0],++f;f=new Qe(k,0,null);}return d.call(this,f)}function d(e){e=pV(e);return rV(b,e)}c.F=0;c.G=function(e){e=B(e);return d(e)};c.g=d;return c}()}()(a);}
    function jX(a){if(D(a)){var b=B(a);a=C(b);var c=D(b);b=C(c);c=D(c);var d="string"===typeof C(c)?new Q(null,2,5,R,[C(c),D(c)],null):new Q(null,2,5,R,[null,c],null);c=J(d,0,null);d=J(d,1,null);var e=M(C(d))?new Q(null,2,5,R,[C(d),D(d)],null):new Q(null,2,5,R,[null,d],null);d=J(e,0,null);e=J(e,1,null);if(p(kV()))ce(Dc,"#");else {var f=dV,k=eV;dV+=1;eV=0;try{VU("(",")"),function(){var l=OW("~w ~1I~@_~w");return function(){function m(u){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-
    0);v<y.length;)y[v]=arguments[v+0],++v;v=new Qe(y,0,null);}return r.call(this,v)}function r(u){u=pV(u);return rV(l,u)}m.F=0;m.G=function(u){u=B(u);return r(u)};m.g=r;return m}()}()(a,b),p(c)&&function(){var l=OW(" ~_~w");return function(){function m(u){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Qe(y,0,null);}return r.call(this,v)}function r(u){u=pV(u);return rV(l,u)}m.F=0;m.G=function(u){u=B(u);return r(u)};m.g=r;return m}()}()(c),
    p(d)&&function(){var l=OW(" ~_~w");return function(){function m(u){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Qe(y,0,null);}return r.call(this,v)}function r(u){u=pV(u);return rV(l,u)}m.F=0;m.G=function(u){u=B(u);return r(u)};m.g=r;return m}()}()(d),Vf(C(e))?hX(e,p(c)?c:d):iX(e),WU();}finally{eV=k,dV=f;}}return null}return kX(a)}
    function lX(a){if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("[","]");for(var d=0;;){if(Tc(Hc)||d<Hc){if(B(a)){if(p(kV()))ce(Dc,"#");else {var e=dV,f=eV;dV+=1;eV=0;try{VU(null,null),gV(C(a)),D(a)&&(ce(Dc," "),lV(cI),gV(zf(a))),WU();}finally{eV=f,dV=e;}}if(D(Re(a))){ce(Dc," ");lV(bF);e=d+1;var k=D(Re(a));d=e;a=k;continue}}}else ce(Dc,"...");break}WU();}finally{eV=c,dV=b;}}}
    function mX(a){var b=C(a);if(p(kV()))ce(Dc,"#");else {var c=dV,d=eV;dV+=1;eV=0;try{VU("(",")"),D(a)&&Vf(zf(a))?(function(){var e=OW("~w ~1I~@_");return function(){function f(l){var m=null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Qe(r,0,null);}return k.call(this,m)}function k(l){l=pV(l);return rV(e,l)}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()}()(b),lX(zf(a)),function(){var e=OW(" ~_~{~w~^ ~_~}");return function(){function f(l){var m=
    null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Qe(r,0,null);}return k.call(this,m)}function k(l){l=pV(l);return rV(e,l)}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()}()(D(Re(a)))):kX(a),WU();}finally{eV=d,dV=c;}}return null}
    var nX=function(){var a=OW("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Qe(f,0,null);}return c.call(this,e)}function c(d){d=pV(d);return rV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}(),oX=S;
    function kX(a){if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("(",")");mV(eE,1);for(var d=0,e=B(a);;){if(Tc(Hc)||d<Hc){if(e&&(gV(C(e)),D(e))){ce(Dc," ");lV(bF);a=d+1;var f=D(e);d=a;e=f;continue}}else ce(Dc,"...");break}WU();}finally{eV=c,dV=b;}}return null}
    var pX=function(a){return ji.b(S,ei(lg,G([function(){return function d(c){return new Mg(null,function(){for(;;){var e=B(c);if(e){if(Wf(e)){var f=re(e),k=F(f),l=Qg(k);a:for(var m=0;;)if(m<k){var r=qd(f,m);r=new Q(null,2,5,R,[r,new Q(null,2,5,R,[Me.a(Lg(C(r))),zf(r)],null)],null);l.add(r);m+=1;}else {f=!0;break a}return f?Sg(Ug(l),d(se(e))):Sg(Ug(l),null)}l=C(e);return vf(new Q(null,2,5,R,[l,new Q(null,2,5,R,[Me.a(Lg(C(l))),zf(l)],null)],null),d(Re(e)))}return null}},null,null)}(a)}()])))}(function(a){return ji.b(S,
    Wh.b(function(b){var c=J(b,0,null),d=J(b,1,null);var e=Ig(c);e=p(e)?e:mm(c);return Tc(e)?new Q(null,2,5,R,[Me.b("clojure.core",Lg(c)),d],null):b},a))}(Xj([Fm,Cm,sp,wm,bJ,Fr,oy,OE,Bw,PE,kv,Kz,ix,Km,TB,Hz,vF,BD,yH,ym,aA,oH,Qt,ou,$w,pA,wE,ZI,jw,ss],[gX,function(a){var b=zf(a),c=C(Re(Re(a)));if(Vf(b)){a=oX;oX=A.b(1,F(b))?Gf([C(b),"%"]):ji.b(S,Wh.c(function(d,e){return new Q(null,2,5,R,[d,["%",q.a(e)].join("")],null)},b,Rk(1,F(b)+1)));try{return function(){var d=OW("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e");return function(){function e(k){var l=
    null;if(0<arguments.length){l=0;for(var m=Array(arguments.length-0);l<m.length;)m[l]=arguments[l+0],++l;l=new Qe(m,0,null);}return f.call(this,l)}function f(k){k=pV(k);return rV(d,k)}e.F=0;e.G=function(k){k=B(k);return f(k)};e.g=f;return e}()}()(c)}finally{oX=a;}}else return kX(a)},mX,nX,function(a){if(3<F(a)){if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("(",")");mV(eE,1);fh(function(){var l=OW("~w ~@_~w ~@_~w ~_");return function(){function m(u){var v=null;if(0<arguments.length){v=0;
    for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Qe(y,0,null);}return r.call(this,v)}function r(u){u=pV(u);return rV(l,u)}m.F=0;m.G=function(u){u=B(u);return r(u)};m.g=r;return m}()}(),a);for(var d=0,e=B(Yh(3,a));;){if(Tc(Hc)||d<Hc){if(e){if(p(kV()))ce(Dc,"#");else {a=dV;var f=eV;dV+=1;eV=0;try{VU(null,null),gV(C(e)),D(e)&&(ce(Dc," "),lV(cI),gV(zf(e))),WU();}finally{eV=f,dV=a;}}if(D(Re(e))){ce(Dc," ");lV(bF);a=d+1;var k=D(Re(e));d=a;e=k;continue}}}else ce(Dc,"...");break}WU();}finally{eV=
    c,dV=b;}}return null}return kX(a)},gX,jX,jX,mX,gX,mX,nX,nX,gX,nX,mX,mX,gX,mX,function(a){if(D(a)){var b=B(a);a=C(b);var c=D(b);b=C(c);c=D(c);var d="string"===typeof C(c)?new Q(null,2,5,R,[C(c),D(c)],null):new Q(null,2,5,R,[null,c],null);c=J(d,0,null);d=J(d,1,null);d=M(C(d))?new Q(null,2,5,R,[C(d),D(d)],null):new Q(null,2,5,R,[null,d],null);var e=J(d,0,null),f=J(d,1,null);if(p(kV()))ce(Dc,"#");else {d=dV;var k=eV;dV+=1;eV=0;try{VU("(",")");(function(){var m=OW("~w ~1I~@_~w");return function(){function r(v){var y=
    null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Qe(E,0,null);}return u.call(this,y)}function u(v){v=pV(v);return rV(m,v)}r.F=0;r.G=function(v){v=B(v);return u(v)};r.g=u;return r}()})()(a,b);p(p(c)?c:p(e)?e:B(f))&&function(){var m=OW("~@:_");return function(){function r(v){var y=null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Qe(E,0,null);}return u.call(this,y)}function u(v){v=
    pV(v);return rV(m,v)}r.F=0;r.G=function(v){v=B(v);return u(v)};r.g=u;return r}()}()();p(c)&&nV(!0,'"~a"~:[~;~:@_~]',G([c,p(e)?e:B(f)]));p(e)&&function(){var m=OW("~w~:[~;~:@_~]");return function(){function r(v){var y=null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Qe(E,0,null);}return u.call(this,y)}function u(v){v=pV(v);return rV(m,v)}r.F=0;r.G=function(v){v=B(v);return u(v)};r.g=u;return r}()}()(e,B(f));for(a=f;;){fX(C(a));var l=D(a);
    if(l)b=l,lV(bF),a=b;else break}WU();}finally{eV=k,dV=d;}}return null}return gV(a)},mX,function(a){if(p(kV()))ce(Dc,"#");else {var b=dV,c=eV;dV+=1;eV=0;try{VU("(",")");mV(eE,1);gV(C(a));if(D(a)){ce(Dc," ");lV(bF);for(var d=0,e=D(a);;){if(Tc(Hc)||d<Hc){if(e){if(p(kV()))ce(Dc,"#");else {a=dV;var f=eV;dV+=1;eV=0;try{VU(null,null),gV(C(e)),D(e)&&(ce(Dc," "),lV(cI),gV(zf(e))),WU();}finally{eV=f,dV=a;}}if(D(Re(e))){ce(Dc," ");lV(bF);a=d+1;var k=D(Re(e));d=a;e=k;continue}}}else ce(Dc,"...");break}}WU();}finally{eV=
    c,dV=b;}}return null},mX,jX,jX,gX,gX,mX,mX,gX]))),qX,h5=Oh(S),i5=Oh(S),j5=Oh(S),k5=Oh(S),l5=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));qX=new dm(Me.b(ca,"code-dispatch"),YW,l5,h5,i5,j5,k5);$l(qX,JI,function(a){if(Tc(QW(a))){var b=pX.call(null,C(a));return p(b)?b.a?b.a(a):b.call(null,a):kX(a)}return null});$l(qX,xu,function(a){var b=a.a?a.a(oX):a.call(null,oX);return p(b)?jU.g(G([b])):p(aV)?jU.g(G([Lg(a)])):kU.call(null,a)});$l(qX,Uu,RW);$l(qX,Tv,SW);$l(qX,yA,UW);$l(qX,TH,XW);
    $l(qX,Lx,function(a){var b=["#\x3c",q.a(WW(Yc(a).name)),"@",q.a(hb(a)),": "].join("");if(p(kV()))ce(Dc,"#");else {var c=dV,d=eV;dV+=1;eV=0;try{VU(b,"\x3e"),mV(eE,-(b.length-2)),lV(bF),gV((null!=a?a.I&1||h===a.Uh||(a.I?0:Xc(ge,a)):Xc(ge,a))&&!he(a)?Jz:t(a)),WU();}finally{eV=d,dV=c;}}return null});$l(qX,null,kU);$l(qX,em,TW);YU=ZW;var wX=null;function xX(){var a=wX;p(a)||(a=new n(null,5,[Sx,new n(null,4,[jF,0,IE,0,fB,0,IA,0],null),qt,Se,uD,Se,zt,ol,RE,EC],null),a=A.b(az,EC)?K.g(a,RE,EC,G([zt,iV])):a);return a}function yX(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;c=arguments[0];d=arguments[1];b=2<b.length?new Qe(b.slice(2),0,null):null;return wX=ih(oi,xX(),c,d,b)}
    function zX(a){var b=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(b,OD);var c=x.b(b,en);b=x.b(b,ux);return [q.a(Eg(Wh.b(function(d){return yw.a(Lf(d))},qt.a(xX()))))," (",q.a(a),":",q.a(c),p(b)?[":",q.a(b)].join(""):null,")"].join("")}function AX(a){return p(Sx.a(xX()))?yX(new Q(null,2,5,R,[Sx,a],null),Mh($e,0)):null}
    var BX=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(ea,"report"),function(f){return new Q(null,2,5,R,[RE.a(xX()),U.a(f)],null)},e,a,b,c,d)}();BX.v(null,em,function(){return null});BX.v(null,new Q(null,2,5,R,[EC,IE],null),function(){return AX(IE)});
    function CX(a){var b=function(){var c=zt.a(xX());return p(c)?c:ol}();sl(G(["expected:",function(){var c=Cy.a(a);return b.a?b.a(c):b.call(null,c)}()]));return sl(G(["  actual:",function(){var c=MA.a(a);return b.a?b.a(c):b.call(null,c)}()]))}BX.v(null,new Q(null,2,5,R,[EC,fB],null),function(a){AX(fB);sl(G(["\nFAIL in",zX(a)]));B(uD.a(xX()))&&sl(G([fh(q,di(" ",Eg(uD.a(xX()))))]));var b=sr.a(a);p(b)&&sl(G([b]));return CX(a)});
    BX.v(null,new Q(null,2,5,R,[EC,IA],null),function(a){AX(IA);sl(G(["\nERROR in",zX(a)]));B(uD.a(xX()))&&sl(G([fh(q,di(" ",Eg(uD.a(xX()))))]));var b=sr.a(a);p(b)&&sl(G([b]));return CX(a)});BX.v(null,new Q(null,2,5,R,[EC,Kr],null),function(a){sl(G(["\nRan",jF.a(a),"tests containing",IE.a(a)+fB.a(a)+IA.a(a),"assertions."]));return sl(G([fB.a(a),"failures,",IA.a(a),"errors."]))});BX.v(null,new Q(null,2,5,R,[EC,zs],null),function(a){return sl(G(["\nTesting",Lg(By.a(a))]))});
    BX.v(null,new Q(null,2,5,R,[EC,Fw],null),function(){return null});BX.v(null,new Q(null,2,5,R,[EC,co],null),function(){return null});BX.v(null,new Q(null,2,5,R,[EC,tJ],null),function(){return null});BX.v(null,new Q(null,2,5,R,[EC,Jx],null),function(){return null});BX.v(null,new Q(null,2,5,R,[EC,lx],null),function(){return null});BX.v(null,new Q(null,2,5,R,[EC,Xz],null),function(){return null});aK&&kK("9");!dK||kK("528");cK&&kK("1.9b")||aK&&kK("8")||$J&&kK("9.5")||dK&&kK("528");cK&&!kK("8")||aK&&kK("9");function DX(a){a=String(a);if(/^\s*$/.test(a)?0:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,"")))try{return eval("("+a+")")}catch(b){}throw Error("Invalid JSON string: "+a);}function EX(a){var b=[];FX(new GX,a,b);return b.join("")}function GX(){this.re=void 0;}
    function FX(a,b,c){if(null==b)c.push("null");else {if("object"==typeof b){if("array"==db(b)){var d=b;b=d.length;c.push("[");for(var e="",f=0;f<b;f++)c.push(e),e=d[f],FX(a,a.re?a.re.call(d,String(f),e):e,c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else {c.push("{");f="";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(e=b[d],"function"!=typeof e&&(c.push(f),HX(d,c),c.push(":"),FX(a,a.re?a.re.call(b,d,e):e,c),f=","));c.push("}");return}}switch(typeof b){case "string":HX(b,
    c);break;case "number":c.push(isFinite(b)&&!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}}var IX={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},JX=/\uffff/.test("￿")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;
    function HX(a,b){b.push('"',a.replace(JX,function(c){var d=IX[c];d||(d="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1),IX[c]=d);return d}),'"');}var KX=new Q(null,3,5,R,[2,91,0],null);function LX(a){return "string"===typeof a?A.b(a,"")?null:a:null}function MX(a){return "number"===typeof a?sg(a):"string"===typeof a?(a=parseInt(a,10),p(isNaN(a))?null:a):null}function NX(a,b,c){return og(Lk(),mg(function(d,e){var f=J(e,0,null);e=J(e,1,null);return a.c?a.c(d,f,e):a.call(null,d,f,e)},lg),b,c)}function OX(a,b){return gd.c(function(c,d){c=a.a?a.a(d):a.call(null,d);return p(c)?bf(c):null},null,b)}A.b("default","nodejs");
    function PX(a){a=UL(q.a(a),/-/,2);var b=J(a,0,null);a=J(a,1,null);var c=/\d+/;if("string"===typeof b)b=Yk(c,b);else throw new TypeError("re-seq must match against a string.");b=p(b)?ki.b(MX,b):null;return new n(null,2,[Ln,b,gH,p(a)?a.toLowerCase():null],null)}
    function QX(a){var b=J(KX,0,null),c=J(KX,1,null),d=J(KX,2,null),e=Vf(a)?a:Ln.a(PX(a));a=J(e,0,null);var f=J(e,1,null);e=J(e,2,null);e=ki.b(function(k){return p(k)?k:0},new Q(null,3,5,R,[a,f,e],null));a=J(e,0,null);f=J(e,1,null);e=J(e,2,null);if(!(b>a||A.b(b,a)&&(c>f||A.b(c,f)&&d>=e)))throw im("Insufficient `com.taoensso/encore` version, you may have a dependency conflict: see http://goo.gl/qBbLvC for solutions.",new n(null,2,[FE,SL(".",new Q(null,3,5,R,[a,f,e],null)),rq,SL(".",new Q(null,3,5,R,[b,
    c,d],null))],null));}var RX=function RX(a){switch(arguments.length){case 3:return RX.c(arguments[0],arguments[1],arguments[2]);case 2:return RX.b(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return RX.g(arguments[0],arguments[1],arguments[2],new Qe(c.slice(3),0,null))}};RX.c=function(a,b,c){return N(a,b)?a:K.c(a,b,c)};RX.g=function(a,b,c,d){return NX(RX,RX.c(a,b,c),d)};
    RX.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};RX.b=function(a,b){return kg(function(c,d,e){return N(c,d)?c:K.c(c,d,e)},null==a?S:a,b)};RX.F=3;var SX=function SX(a){switch(arguments.length){case 2:return SX.b(arguments[0],arguments[1]);case 3:return SX.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};SX.b=function(a,b){b=0>b?0:b;var c=F(a);return b>=c?I:Wi(a,b,c)};
    SX.c=function(a,b,c){b=0>b?0:b;var d=sg(F(a));c=c>d?d:c;return b>=c?I:Wi(a,b,c)};SX.F=3;var TX=function TX(a){switch(arguments.length){case 2:return TX.b(arguments[0],arguments[1]);case 3:return TX.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};TX.b=function(a,b){var c=F(a);return 0>b?(b+=c,Wi(a,0>b?0:b,c)):b>=c?I:Wi(a,b,c)};
    TX.c=function(a,b,c){if(0>=c)return I;var d=sg(F(a));if(0>b)return b+=d,b=0>b?0:b,c=b+c,Wi(a,b,c>d?d:c);c=b+c;d=c>d?d:c;return b>=d?I:Wi(a,b,d)};TX.F=3;
    function UX(a){var b=new Uh(S),c={};return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+0],++k;k=new Qe(l,0,null);}return e.call(this,k)}function e(f){var k=C(f);if(p(P.b?P.b(k,wr):P.call(null,k,wr)))return f=D(f),k=C(f),p(P.b?P.b(k,hA):P.call(null,k,hA))?xe(b,S):b.Cc(null,Hf.b(b.zb(null),f)),null;if(p(P.b?P.b(k,dI):P.call(null,k,dI)))return f=D(f),k=fh(a,f),b.Cc(null,K.c(b.zb(null),f,k)),k;k=x.c(t(b),f,c);return k===
    c?(k=fh(a,f),b.Cc(null,K.c(b.zb(null),f,k)),k):k}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}function VX(a,b){this.n=a;this.We=b;}function WX(a,b){this.n=a;this.$e=b;}function XX(a,b,c){this.Ue=a;this.Uf=b;this.cf=c;}
    function YX(a){if(M(a))return kg(function(c,d,e){var f=J(e,0,null);e=J(e,1,null);return K.c(c,d,new VX(f,e))},S,a);if(Vf(a)){var b=new Uh(-1);return gd.c(function(c,d){var e=J(d,0,null),f=J(d,1,null);d=J(d,2,null);return K.c(c,p(d)?d:b.Cc(null,b.zb(null)+1),new VX(e,f))},S,a)}throw im("No matching `encore/cond!` clause",S);}
    function ZX(a){function b(f,k){var l=(new Date).getTime();Tc(k)&&6.25E-5>=Math.random()&&(Ph(c,null),Rh.b(d,function(v){return le(kg(function(y,E,H){H=kg(function(T,Y,ia){var ba=x.b(e,Y);return p(ba)?l>=ia.$e+ba.We?Hf.b(T,Y):T:Hf.b(T,Y)},H,H);return Pf(H)?ne(y,E):me(y,E,H)},je(p(v)?v:S),v))}));for(;;){var m=t(d),r=x.b(m,f),u=null==r?null:kg(function(v,y,E,H,T,Y){return function(ia,ba,wa){var ua=x.b(Y,ba);if(p(ua)){if(wa.n<ua.n)return ia;wa=wa.$e+ua.We-E;return 0>=wa?ia:null==ia?new XX(Gf([ba,wa]),
    ba,wa):wa>ia.cf?new XX(K.c(ia.Ue,ba,wa),ba,wa):new XX(K.c(ia.Ue,ba,wa),ia.Uf,ia.cf)}return ia}}(m,r,l,c,d,e),null,r);if(p(p(k)?k:u))return k=u,p(k)?(f=k,new Q(null,3,5,R,[f.Uf,f.cf,f.Ue],null)):null;k=t(c);if(p(k))return null;r=kg(function(v,y,E,H,T){return function(Y,ia,ba){return K.c(Y,ia,function(){var wa=x.b(E,ia);if(p(wa)){var ua=wa.$e;return T>=ua+ba.We?new WX(1,T):new WX(wa.n+1,ua)}return new WX(1,T)}())}}(k,m,r,u,l),r,e);Ph(d,K.c(m,f,r));return null}}if(Pf(a))return new Q(null,2,5,R,
    [null,Hh(null)],null);var c=Oh(null),d=Oh(null),e=YX(a);return new Q(null,2,5,R,[d,function(){function f(r,u){if(p(P.b?P.b(r,nu):P.call(null,r,nu)))return p(P.b?P.b(u,JD):P.call(null,u,JD))?Ph(d,null):Rh.c(d,Hf,u),null;if(p(P.b?P.b(r,MG):P.call(null,r,MG)))return b(u,!0);throw im("Unrecognized rate limiter command",new n(null,2,[uF,r,Lq,u],null));}function k(r){return b(r,!1)}function l(){return b(null,!1)}var m=null;m=function(r,u){switch(arguments.length){case 0:return l.call(this);case 1:return k.call(this,
    r);case 2:return f.call(this,r,u)}throw Error("Invalid arity: "+arguments.length);};m.o=l;m.a=k;m.b=f;return m}()],null)}
    var $X=function(){function a(d){return new zc(d)}function b(){return new zc}var c=null;c=function(d){switch(arguments.length){case 0:return b.call(this);case 1:return a.call(this,d)}throw Error("Invalid arity: "+arguments.length);};c.o=b;c.a=a;return c}(),aY=function(){function a(e,f){e=e instanceof zc?e:$X.a(q.a(e));f=q.a(f);return e.append(f)}function b(e){return e instanceof zc?e:$X.a(q.a(e))}function c(){return $X.o()}var d=null;d=function(e,f){switch(arguments.length){case 0:return c.call(this);
    case 1:return b.call(this,e);case 2:return a.call(this,e,f)}throw Error("Invalid arity: "+arguments.length);};d.o=c;d.a=b;d.b=a;return d}();function bY(a,b){if(p(p(" ")?kh.b(" ",""):" ")){var c=ci(),d=mg(aY,q);return p(a)?ng(Ih.b(a,c),d,b):ng(c,d,b)}return p(a)?ng(a,mg(aY,q),b):q.a(gd.b(aY,b))}
    var cY=function cY(a){switch(arguments.length){case 2:return cY.b(arguments[0],arguments[1]);case 3:return cY.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};cY.b=function(a,b){return a.substring(b)};cY.c=function(a,b,c){return b>=c?"":a.substring(b,c)};cY.F=3;
    var dY=function dY(a){switch(arguments.length){case 2:return dY.b(arguments[0],arguments[1]);case 3:return dY.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};dY.b=function(a,b){return LX(a.substr(b))};dY.c=function(a,b,c){return LX(a.substr(b,c))};dY.F=3;function eY(a){return void 0===a||null==a?"nil":a}
    var fY=function fY(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return fY.g(0<c.length?new Qe(c.slice(0),0,null):null)};fY.g=function(a){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var b=x.b(a,Oy),c=x.b(a,Dx),d=x.b(a,ky),e=x.b(a,XD),f=x.b(a,Uq),k=x.b(a,ZE),l=x.b(a,Pn),m=x.b(a,HE),r=x.b(a,Zs);mj(a);return Math.round((p(r)?31536E6*r:0)+(p(e)?2551392E3*e:0)+(p(c)?6048E5*c:0)+(p(l)?864E5*l:0)+(p(m)?36E5*m:0)+(p(k)?6E4*k:0)+(p(f)?1E3*f:0)+(p(d)?d:0)+(p(b)?b:0))};
    fY.F=0;fY.G=function(a){return this.g(B(a))};Ih.b(function(a){return tg(sg(a),1E3)},fY);
    var gY=function(){function a(b){if(b instanceof RegExp)return function(d){return Xk(b,d)};if("string"===typeof b){if(kh.b(-1,b.indexOf("*"))){var c=Zk(RL(RL(["^",b,"$"].join(""),".","\\."),"*","(.*)"));return function(d){return Xk(c,d)}}return function(d){return A.b(d,b)}}throw im("Unexpected ns-pattern type",new n(null,2,[uF,b,U,Yc(b)],null));}return function(){function b(e,f){var k=B(e)?function(){var m=ki.b(a,e),r=B(m),u=C(r);return D(r)?function(v){return OX(function(y){return y.a?y.a(v):y.call(null,
    v)},m)}:function(v){return u.a?u.a(v):u.call(null,v)}}():null,l=B(f)?function(){var m=ki.b(a,f),r=B(m),u=C(r);return D(r)?function(v){return Tc(OX(function(y){return y.a?y.a(v):y.call(null,v)},m))}:function(v){return Tc(u.a?u.a(v):u.call(null,v))}}():null;return p(p(k)?l:k)?function(m){m=q.a(m);return p(k.a?k.a(m):k.call(null,m))?p(l.a?l.a(m):l.call(null,m))?!0:null:null}:p(k)?function(m){return p(k(q.a(m)))?!0:null}:p(l)?function(m){return p(l(q.a(m)))?!0:null}:function(){return !0}}function c(e){if(M(e))return d.b(ty.a(e),
    Lz.a(e));if(Vf(e)||Rf(e))return d.b(e,null);if(A.b(e,"*"))return function(){return !0};var f=a(e);return function(k){return p(f(q.a(k)))?!0:null}}var d=null;d=function(e,f){switch(arguments.length){case 1:return c.call(this,e);case 2:return b.call(this,e,f)}throw Error("Invalid arity: "+arguments.length);};d.a=c;d.b=b;return d}()}();Ih.b(lh,SX);Ih.b(lh,TX);Ih.b(LX,cY);Ih.b(LX,dY);function hY(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return iY(0<b.length?new Qe(b.slice(0),0,null):null)}
    function iY(a){J(a,0,null);return new n(null,6,[Ju,!0,tB,!1,GI,null,eC,null,vr,dx,qI,"undefined"!==typeof console?function(){function b(c){var d=function(){var e=c instanceof z?c.da:null;switch(e){case "trace":return console.trace;case "debug":return console.debug;case "info":return console.info;case "warn":return console.warn;case "error":return console.error;case "fatal":return console.error;case "report":return console.info;default:throw Error(["No matching clause: ",q.a(e)].join(""));}}();return p(d)?
    d:console.log}return function(c){var d=b(cn.a(c));if(p(d)){if(p(function(){var k=bA.a(c);return p(k)?k:mi.b(c,new Q(null,2,5,R,[xw,bA],null))}())){var e=function(){var k=K.g(c,fx,"",G([eB,null])),l=vr.a(c);return l.a?l.a(k):l.call(null,k)}(),f=function(){var k=QH.a(c),l=eB.a(c);return p(l)?vf(e,vf(l,k)):vf(e,k)}();return d.apply(console,fd(f))}return d.call(console,Bl(Qx.a(c)))}return null}}():function(){return null}],null)}Vf(KX)?QX(new Q(null,3,5,R,[2,87,0],null)):QX(2.87);var jY=function jY(a){switch(arguments.length){case 1:return jY.a(arguments[0]);case 2:return jY.b(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};jY.a=function(a){return jY.b(null,a)};
    jY.b=function(a,b){var c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,d=x.b(c,xB);x.b(c,UH);var e=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(e,cn);c=x.b(e,eB);var f=x.b(e,fx),k=x.b(e,uq),l=x.b(e,Pv);x.b(e,et);x.b(e,pI);e=x.b(e,iF);return [Lg(b).toUpperCase()," [",q.a(p(k)?k:p(l)?l:"?"),":",q.a(p(e)?e:"?"),"] - ",q.a(Bl(f)),p(d)?null:p(c)?["\n",q.a(kY?kY(c):lY.call(null,c,a))].join(""):null].join("")};jY.F=2;
    var mY=new n(null,6,[cn,AG,tz,I,tp,I,Eu,I,vr,jY,HG,new n(null,1,[zI,hY.a?hY.a(S):hY.call(null,S)],null)],null);function nY(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return mY=gh(arguments[0],mY,1<b.length?new Qe(b.slice(1),0,null):null)}function oY(a){return nY(function(){return a})}var pY=Fk(new Q(null,7,5,R,[mu,AG,sD,VH,IA,$B,rz],null)),qY=Ik(new Q(null,7,5,R,[mu,AG,sD,VH,IA,$B,rz],null),D(Rk(0,Number.MAX_VALUE)));
    function rY(a){var b=pY.a?pY.a(a):pY.call(null,a);if(p(b))return b;throw im("Invalid Timbre logging level",new n(null,1,[uF,a],null));}function sY(a,b){return function(){var c=rY(a);return qY.a?qY.a(c):qY.call(null,c)}()>=function(){var c=rY(b);return qY.a?qY.a(c):qY.call(null,c)}()}var tY=UX(gY),uY=UX(function(a,b,c){a=tY(a,b);return a.a?a.a(c):a.call(null,c)});function vY(a,b,c){c=p(c)?c:mY;var d=x.c(c,cn,rz);return sY(a,d)&&ag(uY(x.b(c,tz),x.b(c,tp),b))&&!0}
    function wY(a){return bY(Wh.a(function(b){b=eY(b);return Uf(b)?ol.g(G([b])):b}),a)}var xY=UX(function(a,b){a=ZX(b);J(a,0,null);return J(a,1,null)});function yY(a){return 1<F(a)?Wi(a,1,F(a)):I}
    function zY(a){var b=P.b?P.b(mq,mq):P.call(null,mq,mq),c=P.b?P.b(fG,cG):P.call(null,fG,cG),d=J(a,0,null);if(p(p(b)?d instanceof Error:b)){b=d;d=null;var e=yY(a);a=p(c)?J(e,0,null):null;c=p(c)?yY(e):e;return new Q(null,4,5,R,[b,d,a,c],null)}d=p(M(d)?Mc.a(Lf(d)):!1)?d:null;e=SB.a(d);b=p(e)?e:p(b)?null:mq;d=Hf.b(d,SB);e=p(d)?yY(a):a;a=p(c)?J(e,0,null):null;c=p(c)?yY(e):e;return new Q(null,4,5,R,[b,d,a,c],null)}
    function AY(a,b,c,d,e){var f=mY;if(vY(a,b,f)){var k=new Date;d=t(d);d=zY(d);var l=J(d,0,null),m=J(d,1,null),r=J(d,2,null);d=J(d,3,null);k=Cf.b(p(null)?null:S,Xj([BC,Yx,QH,Pv,xs,uq,cn,eB,fI,iF,dn,xw,jt],[k,f,d,null,function(){var E=new Bk(null,new n(null,2,[$B,null,IA,null],null),null);return E.a?E.a(a):E.call(null,a)}(),b,a,l,null,c,new xl(function(){return l}),m,r]));k=gd.c(function(E,H){E=H.a?H.a(E):H.call(null,E);return null==E?bf(null):E},k,Eu.a(f));if(p(k)){d=null!=k&&(k.h&64||h===k.D)?fh(qk,
    k):k;var u=x.b(d,QH);k=K.c(k,uo,new xl(function(){return u}));var v=RX.g(k,fx,new xl(function(){if(A.b(null,fG))return "";if(A.b(fG,fG))return wY(u);if(A.b(cG,fG)){if("string"!==typeof r)throw im("Timbre format-style logging call without a format pattern (string)",new n(null,2,[cn,a,Ht,[q.a(p(b)?b:p(null)?null:"?"),":",q.a(p(c)?c:"?")].join("")],null));var E=p(r)?r:"",H=ki.b(eY,u);return gh(WQ,E,H)}throw Error(["No matching clause: ",q.a(fG)].join(""));}),G([Lv,new xl(function(){return Je(new Q(null,
    3,5,R,[e,r,x.c(m,AI,u)],null))})])),y=UX(x.c(f,vr,jY));kg(function(E,H,T){if(p(function(){var ua=Ju.a(T);p(ua)&&(ua=GI.a(T),ua=sY(a,p(ua)?ua:mu));return ua}())&&p(uY(tz.a(T),tp.a(T),b))){var Y=eC.a(T);if(function(){var ua=Pf(Y);if(ua)return ua;ua=xY(H,Y);var pb=Bl(Lv.a(v));ua=ua.a?ua.a(pb):ua.call(null,pb);return Tc(ua)}()){var ia=null!=T&&(T.h&64||h===T.D)?fh(qk,T):T;E=x.b(ia,qI);x.b(ia,tB);var ba=function(){var ua=vr.a(T);var pb=(pb=null==ua)?pb:P.b?P.b(ua,dx):P.call(null,ua,dx);return p(pb)?y:
    ua}(),wa=Cf.b(v,new n(null,4,[Fz,H,Cw,T,vr,ba,Qx,new xl(function(){return ba.a?ba.a(v):ba.call(null,v)})],null));ia=function(){var ua=Py.a(T);return p(ua)?ua.a?ua.a(wa):ua.call(null,wa):wa}();return p(ia)?E.a?E.a(ia):E.call(null,ia):null}}return null},null,HG.a(f));}}return null}function lY(a){switch(arguments.length){case 1:return kY(arguments[0]);case 2:return kY(arguments[0]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}}
    function kY(a){return q.a(a)}function BY(a,b,c){var d=BY[db(null)];if(null!=d)d.A?d.A(null,a,b,c):d.call(null,null,a,b,c);else if(d=BY._,null!=d)d.A?d.A(null,a,b,c):d.call(null,null,a,b,c);else throw Zc("Measurements.record!",null);}function CY(a){if(null!=a&&null!=a.yf)a.yf(a);else {var b=CY[db(null==a?null:a)];if(null!=b)b.a?b.a(a):b.call(null,a);else if(b=CY._,null!=b)b.a?b.a(a):b.call(null,a);else throw Zc("Node.close",a);}}function DY(a,b){if(null!=a&&null!=a.zf)a.zf(a,b);else {var c=DY[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=DY._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Node.message",a);}}
    function EY(a,b){if(null==a||null==a.Fg){var c=EY[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=EY._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Node.add-source",a);}}function FY(a,b){if(null!=a&&null!=a.Af)a.Af(a,b);else {var c=FY[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=FY._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Node.remove-source",a);}}
    function GY(a,b,c){c=ow.a(c);a=JT.b(a,c);if(p(p(a)?kh.b(b,lz.a(a)):a))throw im(["The original source of peer ",q.a(c)," doesnt match the current source"].join(""),S);}
    function HY(a,b,c){return gd.c(function(d,e){var f=J(d,0,null);d=J(d,1,null);AY(AG,Pa,33,new xl(function(){return new Q(null,2,5,R,["about to remove source from domain",ET(e)],null)}),-1707658676);var k=HT(e,f,a);return p(k)?(f=J(k,0,null),k=J(k,1,null),AY(AG,Pa,36,new xl(function(){return new Q(null,2,5,R,["removed source from domain",ET(e)],null)}),-1765538511),new Q(null,2,5,R,[f,ji.b(d,k)],null)):new Q(null,2,5,R,[f,d],null)},new Q(null,2,5,R,[b,I],null),fi.b(Uc,Cf.b(ki.b(function(d){J(d,0,null);
    d=J(d,1,null);return tq.a(d)},Hf.b(c,"global")),mi.b(c,new Q(null,2,5,R,["global",tq],null)))))}
    function IY(a,b,c,d,e){try{if(A.b(Nz,U.a(e)))return HY(c,b,a);var f=mi.b(a,new Q(null,2,5,R,[tq.b(e,"global"),tq],null));return p(f)?(AY(AG,Pa,59,new xl(function(){return new Q(null,4,5,R,["Handling message with domain",f,"message: \n",q.a(c)],null)}),-150357184),GY(b,d,e),HT(f,b,c)):new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(tq.a(e),d,is.a(e),ow.a(e),mL("global.errors.failure",["Unable to find domain for message ",q.a(c)].join("")))],null)],null)}finally{a=U.a(e),p(a)&&p(null)&&BY(HC,["inv/",Lg(a)].join(""),
    0);}}var JY={};function KY(a){a=bL(a);var b=U.a(a);return p(b)?K.c(a,U,Kg.a(b)):a}function LY(a,b,c,d){a=KY(a);var e=mi.b(t(b),new Q(null,2,5,R,[d,lz],null));if(p(e)){A.b(cJ,U.a(a))||DY(c,new n(null,3,[Hv,Fs,lz,e,Xv,a],null));var f=(new Date).getTime();return Rh.b(b,function(k){return ni(k,new Q(null,2,5,R,[d,Nn],null),f)})}return AY(VH,na,31,new xl(function(){return new Q(null,2,5,R,["Cannot process message for not-registered key",d],null)}),-1344154771)}
    function MY(a,b){YK(lD.a(a));try{FY(b,a);}catch(d){if(d instanceof Error){var c=d;AY(IA,na,39,new xl(function(){return new Q(null,3,5,R,[c,"Unable to remove client for",Pi],null)}),-1803855914);}else throw d;}}function NY(a,b,c){AY(sD,na,43,new xl(function(){return new Q(null,2,5,R,["removing client for",c],null)}),38438999);a=Th(a,c);var d=J(a,0,null);J(a,1,null);a=mi.b(d,new Q(null,2,5,R,[c,lz],null));p(a)&&MY(a,b);}
    function OY(a,b,c,d){Rh.A(a,K,c,new n(null,2,[lz,d,Nn,(new Date).getTime()],null));EY(b,d);}function PY(a,b,c){return ji.b(S,function(){function d(e){J(e,0,null);e=J(e,1,null);return Nn.a(e)<b}return a.b?a.b(d,c):a.call(null,d,c)}())}
    function QY(a,b,c){AY(AG,na,61,new xl(function(){return new Q(null,2,5,R,["running client scavenger. collecting everything older than",c],null)}),695701546);a=Sh(a,Kh(PY,gi,c));for(var d=J(a,0,null),e=J(a,1,null),f=PY(fi,c,d),k=B(f),l=null,m=0,r=0;;)if(r<m){var u=l.W(null,r),v=J(u,0,null),y=J(u,1,null),E=lz.a(y);AY(sD,na,66,new xl(function(Y,ia,ba,wa,ua,pb,sb){return function(){return new Q(null,2,5,R,["scavenging client for",sb],null)}}(k,l,m,r,E,u,v)),-1066526687);MY(E,b);r+=1;}else if(E=
    B(k)){u=E;if(Wf(u))k=re(u),r=se(u),l=k,m=F(k),k=r;else {var H=C(u);v=J(H,0,null);y=J(H,1,null);var T=lz.a(y);AY(sD,na,66,new xl(function(Y,ia,ba,wa,ua,pb,sb){return function(){return new Q(null,2,5,R,["scavenging client for",sb],null)}}(k,l,m,r,T,H,v)),697620603);MY(T,b);k=D(u);l=null;m=0;}r=0;}else break}var RY={},m5;
    function TY(a,b,c,d){var e=OK(1);uK(function(){var f=function(){function l(m){var r=m[1];if(7===r)return m[2]=m[2],m[1]=3,yz;if(1===r)return m[2]=null,m[1]=2,yz;if(4===r)return r=m[7],r=m[2],m[7]=r,m[1]=p(r)?5:6,yz;if(13===r)return m[2]=null,m[1]=14,yz;if(6===r)return m[2]=null,m[1]=7,yz;if(3===r)return LK(m,m[2]);if(12===r)return r=m[7],r=Hl(r),r=a.b?a.b(d,r):a.call(null,d,r),m[2]=r,m[1]=14,yz;if(2===r)return KK(m,c);if(11===r){m[4]=Re(m[4]);r=m[2];m[5]=r;if(r instanceof Error)m[1]=10,m[5]=null;
    else throw r;return yz}if(9===r)return m[8]=m[2],m[2]=null,m[1]=2,yz;if(5===r)return m[2]=null,m[1]=8,yz;if(14===r)return r=m[2],m[4]=Re(m[4]),m[2]=r,m[1]=9,yz;if(10===r){r=m[7];var u=m[2];r=AY(IA,oa,15,new xl(function(){return function(){return new Q(null,2,5,R,[u,"error while invoking the client callback"],null)}}()),377597321);m[2]=r;m[1]=9;return yz}return 8===r?(m[4]=vf(11,m[4]),m[1]=p(a)?12:13,yz):null}return function(){function m(v){for(;;){a:try{for(;;){var y=l(v);if(!P(y,yz)){var E=y;break a}}}catch(H){E=
    H;v[2]=E;if(B(v[4]))v[1]=C(v[4]);else throw E;E=yz;}if(!P(E,yz))return E}}function r(){var v=[null,null,null,null,null,null,null,null,null];v[0]=u;v[1]=1;return v}var u=null;u=function(v){switch(arguments.length){case 0:return r.call(this);case 1:return m.call(this,v)}throw Error("Invalid arity: "+arguments.length);};u.o=r;u.a=m;return u}()}(),k=function(){var l=f();l[6]=e;return l}();return JK(k)});return new n(null,3,[U,Fs,lD,c,Rs,tn.b(b,"127.0.0.1")],null)}
    function UY(a,b){p(p(a)?b:a)&&(a=t(a),NY(kE.a(a),Yp.a(a),b),AY(sD,oa,27,new xl(function(){return new Q(null,1,5,R,["local client disconnected"],null)}),1501190767));return Promise.resolve(!0)}function VY(a,b,c){if(p(p(a)?b:a)){AY(AG,oa,33,new xl(function(){return new Q(null,3,5,R,["Processing incoming message",c,"from local client"],null)}),1854402887);var d=Ll(c);a=t(a);return LY(d,kE.a(a),Yp.a(a),b)}return null}
    function WY(a,b){var c=t(a),d=OK(new YJ(WJ(100),100)),e=function(){if("undefined"===typeof SK||"undefined"===typeof JY||"undefined"===typeof RY||"undefined"===typeof m5)m5=function(k,l,m,r,u){this.Qe=k;this.Wd=l;this.qd=m;this.ch=r;this.fh=u;this.h=393216;this.I=0;},m5.prototype.O=function(k,l){return new m5(this.Qe,this.Wd,this.qd,this.ch,l)},m5.prototype.N=function(){return this.fh},m5.prototype.disconnect=function(){return UY(this.Qe,this.ch)},m5.prototype.send=function(k){return VY(this.Qe,this.ch,
    k)},m5.Pa=function(){return new Q(null,5,5,R,[zp,Kt,hu,Jt,eK],null)},m5.Ia=!0,m5.Da="gateway.cljs.local-client/t_gateway$cljs$local_client14811",m5.Ja=function(k){return ce(k,"gateway.cljs.local-client/t_gateway$cljs$local_client14811")};return new m5(a,b,c,d,S)}();AY(sD,oa,46,new xl(function(){return new Q(null,1,5,R,["local client connected"],null)}),113159820);var f=TY(b,c,d,e);OY(kE.a(c),Yp.a(c),d,f);return Promise.resolve(e)}var n5=function(){function a(d,e,f){var k=XY[db(null==d?null:d)];if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);k=XY._;if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);throw Zc("IPromise.-then",d);}function b(d,e){var f=XY[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=XY._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("IPromise.-then",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+
    arguments.length);};c.b=b;c.c=a;return c}(),XY=function XY(a){switch(arguments.length){case 2:return XY.b(arguments[0],arguments[1]);case 3:return XY.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};XY.b=function(a,b){return null!=a&&null!=a.If?a.If(a,b):n5(a,b)};XY.c=function(a,b,c){return null!=a&&null!=a.Jf?a.Jf(a,b,c):n5(a,b,c)};XY.F=3;
    var o5=function(){function a(d,e,f){var k=YY[db(null==d?null:d)];if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);k=YY._;if(null!=k)return k.c?k.c(d,e,f):k.call(null,d,e,f);throw Zc("IPromise.-thenErr",d);}function b(d,e){var f=YY[db(null==d?null:d)];if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);f=YY._;if(null!=f)return f.b?f.b(d,e):f.call(null,d,e);throw Zc("IPromise.-thenErr",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.c=a;return c}(),YY=function YY(a){switch(arguments.length){case 2:return YY.b(arguments[0],arguments[1]);case 3:return YY.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};YY.b=function(a,b){return null!=a&&null!=a.Kf?a.Kf(a,b):o5(a,b)};YY.c=function(a,b,c){return null!=a&&null!=a.Lf?a.Lf(a,b,c):o5(a,b,c)};YY.F=3;
    function ZY(a){if(null!=a&&null!=a.Xe)a=a.Xe(a);else {var b=ZY[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=ZY._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("IPromiseFactory.-promise",a);}return a}function $Y(a){if(null!=a&&null!=a.Ff)a.Ff(a);else {var b=$Y[db(null==a?null:a)];if(null!=b)b.a?b.a(a):b.call(null,a);else if(b=$Y._,null!=b)b.a?b.a(a):b.call(null,a);else throw Zc("ICancellable.-cancel!",a);}}
    function aZ(a,b){if(null!=a&&null!=a.Hf)a=a.Hf(a,b);else {var c=aZ[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=aZ._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ICompletable.-resolve!",a);}return a}function bZ(a,b){if(null!=a&&null!=a.Gf)a=a.Gf(a,b);else {var c=bZ[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=bZ._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("ICompletable.-reject!",a);}return a}
    function cZ(a,b,c){if(null!=a&&null!=a.Mf)a=a.Mf(a,b,c);else {var d=cZ[db(null==a?null:a)];if(null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else if(d=cZ._,null!=d)a=d.c?d.c(a,b,c):d.call(null,a,b,c);else throw Zc("IScheduler.-schedule!",a);}return a}var eZ=new xl(function(){return dZ.o?dZ.o():dZ.call(null)});function fZ(a){return cZ(eZ instanceof xl?t(eZ):eZ,1E3,a)}function gZ(a,b){var c=eZ instanceof xl?t(eZ):eZ;cZ(c,a,b);}function hZ(a){this.state=a;this.I=1;this.h=0;}hZ.prototype.Bd=function(){return t(Vb(this.state,"done"))};hZ.prototype.Ff=function(){if(p(Vb(this.state,"cancelled")))return null;var a=Vb(this.state,"cancel-fn");this.state.cancelled=!0;return a.o?a.o():a.call(null)};function iZ(){}
    iZ.prototype.Mf=function(a,b,c){var d=new Uh(!1),e=setTimeout(function(){try{return c.o?c.o():c.call(null)}finally{xe(d,!0);}},b);return new hZ({done:d,cancelled:!1,"cancel-fn":function(){return clearTimeout(e)}})};function dZ(){return new iZ}var jZ=Promise;function kZ(){var a={},b=new jZ(function(c,d){a.resolve=c;return a.reject=d});b.Zh=h;b.Hf=function(c,d){return a.resolve(d)};b.Gf=function(c,d){return a.reject(d)};return b}
    (function(a){a.prototype.Xe=function(){return this};a.prototype.If=function(b,c){return this.then(function(d){return c.a?c.a(d):c.call(null,d)})};a.prototype.Jf=function(b,c){return this.then(function(d){return c.a?c.a(d):c.call(null,d)})};a.prototype.Kf=function(b,c){return this.catch(function(d){return c.a?c.a(d):c.call(null,d)})};a.prototype.Lf=function(b,c){return this.catch(function(d){return c.a?c.a(d):c.call(null,d)})};return function(b,c){this.then(function(d){return c.b?c.b(d,null):c.call(null,
    d,null)},function(d){return c.b?c.b(null,d):c.call(null,null,d)});return this}})(Promise);YY._=function(){function a(d,e,f){return YY(ZY(d),e,f)}function b(d,e){return YY(ZY(d),e)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.c=a;return c}();Error.prototype.Xe=function(){return jZ.reject(this)};ZY._=function(a){return jZ.resolve(a)};Promise.prototype.ma=h;
    Promise.prototype.S=function(a,b){return ce(b,"#\x3cPromise[~]\x3e")};function lZ(a){var b=kZ();try{var c=function(e){return aZ(b,e)},d=function(e){return bZ(b,e)};a.b?a.b(c,d):a.call(null,c,d);}catch(e){bZ(b,e);}return b}function mZ(a,b){return XY(a,b)}function nZ(a,b){return YY(a,b)}function oZ(){return this}ub(oZ,Error);function pZ(a,b){return qZ(a,b)}
    function qZ(a,b){var c=new n(null,2,[U,lC,sr,"Authentication timed out"],null),d=kZ();gZ(b,function(){return A.b(c,Ix)?bZ(d,new oZ("Operation timed out.")):aZ(d,c)});return jZ.race(fd(Wh.b(ZY,new Q(null,2,5,R,[a,d],null))))}function rZ(a,b){if(null!=a&&null!=a.wf)a=a.wf(a,b);else {var c=rZ[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=rZ._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Authenticator.authenticate",a);}return a}function sZ(a){if(null!=a&&null!=a.xf)a.xf(a);else {var b=sZ[db(null==a?null:a)];if(null!=b)b.a?b.a(a):b.call(null,a);else if(b=sZ._,null!=b)b.a?b.a(a):b.call(null,a);else throw Zc("Authenticator.stop",a);}}
    function tZ(a){a=YB.a(a);var b=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(b,Gs);b=x.b(b,Ro);return p(p(a)?b:a)?jZ.resolve(new n(null,3,[U,qz,dt,a,Gs,a],null)):jZ.reject(im("Missing login/secret",new n(null,2,[U,lC,sr,"Missing login/secret"],null)))}function uZ(a){return A.b(Ts.a(a),"gateway-token")?$p.a(a):null}Z(KI,BI,Wc);Z(dq,Wx,Wx);
    Z(RC,O(wt,ir,new Q(null,1,5,R,[KI],null),iA,new Q(null,2,5,R,[GF,dq],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[KI],null),new Q(null,2,5,R,[GF,dq],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,YB)}],null),function(a){return M(a)&&N(a,YB)},new Q(null,2,5,R,[is,su],null),new Q(null,1,5,R,[KI],null),null,new Q(null,1,5,R,[YB],null),new Q(null,2,5,R,[GF,dq],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],
    null),O(jG,V,YB))],null),null])));Z(fE,Qp,Hg);var vZ,p5=Oh(S),q5=Oh(S),r5=Oh(S),s5=Oh(S),t5=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));vZ=new dm(Me.b(ka,"response-type"),U,t5,p5,q5,r5,s5);Z(ey,Bo,Vc);
    vZ.v(null,lC,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[fE,ey],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,sr)}],null),function(a){return M(a)&&N(a,U)&&N(a,sr)},I,new Q(null,2,5,R,[fE,ey],null),null,new Q(null,2,5,R,[U,sr],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,sr))],null),null]))});
    Z(br,Bo,Vc);Z(Xs,Bo,Vc);Z(gB,Bo,Vc);
    vZ.v(null,qz,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[fE,br,Xs],null),new Q(null,1,5,R,[gB],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Gs)},function(a){return N(a,dt)}],null),function(a){return M(a)&&N(a,U)&&N(a,Gs)&&N(a,dt)},new Q(null,1,5,R,[Gu],null),new Q(null,3,5,R,[fE,br,Xs],null),null,new Q(null,3,5,R,[U,Gs,dt],null),new Q(null,1,5,R,[gB],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Gs)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,dt))],null),null]))});
    vZ.v(null,fF,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[fE,KI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,YB)}],null),function(a){return M(a)&&N(a,U)&&N(a,YB)},I,new Q(null,2,5,R,[fE,KI],null),null,new Q(null,2,5,R,[U,YB],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,YB))],null),null]))});
    Z(wH,O(io,$o,U),VS($o,new Ne(function(){return vZ},$o,Xj([By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[ms,vC,"gateway/auth/spec.cljc",24,1,14,14,Se,null,p(vZ)?vZ.ld:null]))));var BZ=new n(null,6,["application",new n(null,1,[ax,!0],null),"instance",new n(null,1,[ax,!1],null),"region",new n(null,1,[ax,!1],null),"environment",new n(null,1,[ax,!1],null),"machine",new n(null,1,[ax,!1],null),"user",new n(null,1,[ax,!1],null)],null);function CZ(a){return kg(function(b,c,d){return K.c(b,N(BZ,c)?Kg.a(c):c,d)},S,a)}
    function DZ(a){var b=Eh(function(d){var e=J(d,0,null);J(d,1,null);d=ax.a(e);return p(d)?null==x.b(a,Kg.a(e)):d},BZ);if(p(b)){var c=J(b,0,null);J(b,1,null);return c}return null}function EZ(a){var b=DZ(a);if(p(b))throw im(["Identity ",q.a(a)," is missing a required key: ",q.a(b)].join(""),S);}function Z4(a,b){var c=p(a)?-1!=a.indexOf("127.0.0.1"):a;if(p(c))return c=b,p(c)?c:a;c=a;return p(c)?c:b}function FZ(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e;}return b}pc();ZJ()||oc("iPod");oc("iPad");!oc("Android")||qc()||pc()||oc("Opera")||oc("Silk");qc();var GZ=oc("Safari")&&!(qc()||oc("Coast")||oc("Opera")||oc("Edge")||oc("Edg/")||oc("OPR")||pc()||oc("Silk")||oc("Android"))&&!(ZJ()||oc("iPad")||oc("iPod"));var HZ={},IZ=null,JZ=cK||dK&&!GZ||$J,KZ=JZ||"function"==typeof cb.btoa,LZ=JZ||!GZ&&!aK&&"function"==typeof cb.atob;function MZ(a,b){void 0===b&&(b=0);NZ();b=HZ[b];for(var c=[],d=0;d<a.length;d+=3){var e=a[d],f=d+1<a.length,k=f?a[d+1]:0,l=d+2<a.length,m=l?a[d+2]:0,r=e>>2;e=(e&3)<<4|k>>4;k=(k&15)<<2|m>>6;m&=63;l||(m=64,f||(k=64));c.push(b[r],b[e],b[k]||"",b[m]||"");}return c.join("")}function OZ(a){return KZ?cb.btoa(a):MZ(FZ(a),void 0)}
    function PZ(a){if(LZ)return cb.atob(a);var b="";QZ(a,function(c){b+=String.fromCharCode(c);});return b}function QZ(a,b){function c(m){for(;d<a.length;){var r=a.charAt(d++),u=IZ[r];if(null!=u)return u;if(!ec(r))throw Error("Unknown base64 encoding at char: "+r);}return m}NZ();for(var d=0;;){var e=c(-1),f=c(0),k=c(64),l=c(64);if(64===l&&-1===e)break;b(e<<2|f>>4);64!=k&&(b(f<<4&240|k>>2),64!=l&&b(k<<6&192|l));}}
    function NZ(){if(!IZ){IZ={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/\x3d","+/","-_\x3d","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));HZ[c]=d;for(var e=0;e<d.length;e++){var f=d[e];void 0===IZ[f]&&(IZ[f]=e);}}}}function RZ(){this.bb=-1;}function SZ(a,b){this.bb=TZ;this.zc=cb.Uint8Array?new Uint8Array(this.bb):Array(this.bb);this.Lc=this.rd=0;this.aa=[];this.me=a;this.ge=b;this.af=cb.Int32Array?new Int32Array(64):Array(64);void 0===UZ&&(UZ=cb.Int32Array?new Int32Array(VZ):VZ);this.reset();}var UZ;ub(SZ,RZ);var TZ=64,WZ=Kb(128,Rb(TZ-1));SZ.prototype.reset=function(){this.Lc=this.rd=0;this.aa=cb.Int32Array?new Int32Array(this.ge):Lb(this.ge);};
    SZ.prototype.Tc=function(){for(var a=this.zc,b=this.af,c=0,d=0;d<a.length;)b[c++]=a[d]<<24|a[d+1]<<16|a[d+2]<<8|a[d+3],d=4*c;for(a=16;64>a;a++){d=b[a-15]|0;c=b[a-2]|0;var e=(b[a-16]|0)+((d>>>7|d<<25)^(d>>>18|d<<14)^d>>>3)|0,f=(b[a-7]|0)+((c>>>17|c<<15)^(c>>>19|c<<13)^c>>>10)|0;b[a]=e+f|0;}c=this.aa[0]|0;d=this.aa[1]|0;var k=this.aa[2]|0,l=this.aa[3]|0,m=this.aa[4]|0,r=this.aa[5]|0,u=this.aa[6]|0;e=this.aa[7]|0;for(a=0;64>a;a++){var v=((c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10))+(c&d^c&k^d&k)|0;f=
    m&r^~m&u;e=e+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))|0;f=f+(UZ[a]|0)|0;f=e+(f+(b[a]|0)|0)|0;e=u;u=r;r=m;m=l+f|0;l=k;k=d;d=c;c=f+v|0;}this.aa[0]=this.aa[0]+c|0;this.aa[1]=this.aa[1]+d|0;this.aa[2]=this.aa[2]+k|0;this.aa[3]=this.aa[3]+l|0;this.aa[4]=this.aa[4]+m|0;this.aa[5]=this.aa[5]+r|0;this.aa[6]=this.aa[6]+u|0;this.aa[7]=this.aa[7]+e|0;};
    SZ.prototype.update=function(a,b){void 0===b&&(b=a.length);var c=0,d=this.rd;if("string"===typeof a)for(;c<b;)this.zc[d++]=a.charCodeAt(c++),d==this.bb&&(this.Tc(),d=0);else if(eb(a))for(;c<b;){var e=a[c++];if(!("number"==typeof e&&0<=e&&255>=e&&e==(e|0)))throw Error("message must be a byte array");this.zc[d++]=e;d==this.bb&&(this.Tc(),d=0);}else throw Error("message must be string or array");this.rd=d;this.Lc+=b;};
    SZ.prototype.digest=function(){var a=[],b=8*this.Lc;56>this.rd?this.update(WZ,56-this.rd):this.update(WZ,this.bb-(this.rd-56));for(var c=63;56<=c;c--)this.zc[c]=b&255,b/=256;this.Tc();for(c=b=0;c<this.me;c++)for(var d=24;0<=d;d-=8)a[b++]=this.aa[c]>>d&255;return a};
    var VZ=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,
    4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function XZ(){SZ.call(this,8,YZ);}ub(XZ,SZ);var YZ=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function ZZ(a,b){this.bb=128;this.zc=cb.Uint8Array?new Uint8Array(this.bb):Array(this.bb);this.Lc=this.fd=0;this.aa=[];this.me=a;this.af=[];this.ge=$Z(b);this.le=!1;this.reset();}ub(ZZ,RZ);var a_=Kb([128],Rb(127));g=ZZ.prototype;g.reset=function(){this.Lc=this.fd=0;this.aa=Lb(this.ge);this.le=!1;};
    g.update=function(a,b){b=void 0!==b?b:a.length;if(this.le)throw Error("this hasher needs to be reset");var c=this.fd;if("string"===typeof a)for(var d=0;d<b;d++){var e=a.charCodeAt(d);if(255<e)throw Error("Characters must be in range [0,255]");this.zc[c++]=e;c==this.bb&&(this.Tc(),c=0);}else if(eb(a))for(d=0;d<b;d++){e=a[d];if("number"!==typeof e||0>e||255<e||e!=(e|0))throw Error("message must be a byte array");this.zc[c++]=e;c==this.bb&&(this.Tc(),c=0);}else throw Error("message must be string or array");
    this.fd=c;this.Lc+=b;};g.digest=function(){if(this.le)throw Error("this hasher needs to be reset");var a=8*this.Lc;112>this.fd?this.update(a_,112-this.fd):this.update(a_,this.bb-this.fd+112);for(var b=127;112<=b;b--)this.zc[b]=a&255,a/=256;this.Tc();a=0;var c=Array(8*this.me);for(b=0;b<this.me;b++){var d=this.aa[b],e=d.ea;d=d.ja;for(var f=24;0<=f;f-=8)c[a++]=e>>f&255;for(f=24;0<=f;f-=8)c[a++]=d>>f&255;}this.le=!0;return c};
    g.Tc=function(){for(var a=this.zc,b=this.af,c=0;16>c;c++){var d=8*c;b[c]=new xb(a[d+4]<<24|a[d+5]<<16|a[d+6]<<8|a[d+7],a[d]<<24|a[d+1]<<16|a[d+2]<<8|a[d+3]);}for(c=16;80>c;c++){d=b[c-15];a=d.ja;d=d.ea;var e=b[c-2],f=e.ja;e=e.ea;b[c]=this.Rf(b[c-16],b[c-7],new xb(a>>>1^d<<31^a>>>8^d<<24^a>>>7^d<<25,d>>>1^a<<31^d>>>8^a<<24^d>>>7),new xb(f>>>19^e<<13^e>>>29^f<<3^f>>>6^e<<26,e>>>19^f<<13^f>>>29^e<<3^e>>>6));}a=this.aa[0];d=this.aa[1];f=this.aa[2];e=this.aa[3];var k=this.aa[4],l=this.aa[5],m=this.aa[6],
    r=this.aa[7];for(c=0;80>c;c++){var u=a.ja,v=a.ea;u=(new xb(u>>>28^v<<4^v>>>2^u<<30^v>>>7^u<<25,v>>>28^u<<4^u>>>2^v<<30^u>>>7^v<<25)).add(new xb(a.ja&d.ja|d.ja&f.ja|a.ja&f.ja,a.ea&d.ea|d.ea&f.ea|a.ea&f.ea));v=k.ja;var y=k.ea,E=k.ja,H=k.ea;v=this.Rf(r,new xb(v>>>14^y<<18^v>>>18^y<<14^y>>>9^v<<23,y>>>14^v<<18^y>>>18^v<<14^v>>>9^y<<23),new xb(E&l.ja|~E&m.ja,H&l.ea|~H&m.ea),b_[c],b[c]);r=m;m=l;l=k;k=e.add(v);e=f;f=d;d=a;a=v.add(u);}this.aa[0]=this.aa[0].add(a);this.aa[1]=this.aa[1].add(d);this.aa[2]=this.aa[2].add(f);
    this.aa[3]=this.aa[3].add(e);this.aa[4]=this.aa[4].add(k);this.aa[5]=this.aa[5].add(l);this.aa[6]=this.aa[6].add(m);this.aa[7]=this.aa[7].add(r);};g.Rf=function(a,b,c){for(var d=(a.ja^2147483648)+(b.ja^2147483648),e=a.ea+b.ea,f=arguments.length-1;2<=f;--f)d+=arguments[f].ja^2147483648,e+=arguments[f].ea;arguments.length&1&&(d+=2147483648);e+=arguments.length>>1;e+=Math.floor(d/4294967296);return new xb(d,e)};function $Z(a){for(var b=[],c=0;c<a.length;c+=2)b.push(new xb(a[c+1],a[c]));return b}
    var b_=$Z([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,
    1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,
    1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,
    289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);function c_(){ZZ.call(this,6,d_);}ub(c_,ZZ);var d_=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428];function e_(){ZZ.call(this,8,f_);}ub(e_,ZZ);var f_=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];function g_(a,b,c){this.bb=-1;this.Rb=a;this.bb=c||a.bb||16;this.Bf=Array(this.bb);this.Te=Array(this.bb);a=b;a.length>this.bb&&(this.Rb.update(a),a=this.Rb.digest(),this.Rb.reset());for(c=0;c<this.bb;c++)b=c<a.length?a[c]:0,this.Bf[c]=b^92,this.Te[c]=b^54;this.Rb.update(this.Te);}ub(g_,RZ);g_.prototype.reset=function(){this.Rb.reset();this.Rb.update(this.Te);};g_.prototype.update=function(a,b){this.Rb.update(a,b);};
    g_.prototype.digest=function(){var a=this.Rb.digest();this.Rb.reset();this.Rb.update(this.Bf);this.Rb.update(a);return this.Rb.digest()};g_.prototype.getHmac=function(a){this.reset();this.update(a);return this.digest()};var h_=new n(null,4,"HS256 sha256 HS384 sha384 HS512 sha512 RS256 RSA-SHA256".split(" "),null),i_=new n(null,4,"HS256 hmac HS384 hmac HS512 hmac RS256 sign".split(" "),null);function j_(a){return RL(RL(RL(a,"+","-"),"/","_"),"\x3d","")}function k_(a,b){var c=function(){switch(a){case "sha256":return new XZ;case "sha384":return new c_;case "sha512":return new e_;default:throw Error([q.a(a)," hashing not supported"].join(""));}}();return new g_(c,b)}
    function l_(a,b,c,d){switch(d){case "hmac":return j_(MZ(k_(c,FZ(b)).getHmac(a)));default:throw Error("algorithm not supported");}}function m_(a,b,c,d,e){switch(e){case "hmac":return A.b(b,l_(a,c,d,e));default:throw Error("algorithm not supported");}}
    function n_(a,b){b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;var c=x.b(b,rt),d=x.b(b,yu),e=x.b(b,MD),f=x.c(b,WD,(new Date).getTime()),k=x.c(b,iH,0);if(p(function(){if(p(d)){var l=yu.a(a);Qf(d)?(l=Ek([l]),l=Tc(Eh(l,d))):l=kh.b(l,d);return l}return d}()))throw im(["Issuer does not match ",q.a(d)].join(""),new n(null,2,[U,Sw,TD,yu],null));if(p(function(){if(p(e)){var l=MD.a(a);if(Qf(l)){var m=Ek([e]);l=Tc(Eh(m,l));}else l=kh.b(e,l);return l}return e}()))throw im(["Audience does not match ",q.a(e)].join(""),
    new n(null,2,[U,Sw,TD,MD],null));if(p(function(){var l=bD.a(a);return p(l)?bD.a(a)<=f-k:l}()))throw im(["Token is expired ",q.a(bD.a(a))].join(""),new n(null,2,[U,Sw,TD,bD],null));if(p(function(){var l=IB.a(a);return p(l)?IB.a(a)>f+k:l}()))throw im(["Token is not yet valid ",q.a(IB.a(a))].join(""),new n(null,2,[U,Sw,TD,IB],null));if(p(function(){var l=px.a(a);return p(l)?"number"===typeof c&&f-px.a(a)>c:l}()))throw im(["Token is older than max-age ",q.a(c)].join(""),new n(null,2,[U,Sw,TD,rt],null));
    return a}var o_=function o_(a){switch(arguments.length){case 2:return o_.b(arguments[0],arguments[1]);case 3:return o_.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};tb("gateway.common.jwt.unsign",o_);o_.b=function(a,b){return o_.c(a,b,S)};
    o_.c=function(a,b,c){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;var d=x.c(c,At,!1),e=UL(a,".",0);a=x.b(e,0);var f=x.b(e,1);e=x.b(e,2);if(p(Eh(Qc,new Q(null,3,5,R,[a,f,e],null))))throw Error("invalid token");var k=DX(PZ(a)).alg,l=kg(function(r,u,v){return K.c(r,Kg.a(u),v)},S,Ll(DX(PZ(f)))),m=x.b(h_,k);k=x.b(i_,k);if(p(d))return l;if(Tc(p(m)?k:m))throw Error("algorithm not supported");if(Tc(m_([q.a(a),".",q.a(f)].join(""),e,b,m,k)))throw Error("signature verification failed");return n_(l,c)};o_.F=3;
    var p_=function p_(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return p_.g(arguments[0],arguments[1],2<c.length?new Qe(c.slice(2),0,null):null)};tb("gateway.common.jwt.sign",p_);
    p_.g=function(a,b,c){var d=J(c,0,null);c=J(c,1,null);var e=p(d)?d:"HS256",f=p(c)?c:S;d=x.b(h_,e);c=x.b(i_,e);if(!M(a))throw Error("payload should be in JSON format");if(!M(f))throw Error("extra-headers should be a map");if(!p(p(d)?c:d))throw Error("algorithm not supported");e=j_(OZ(EX(Hl(gh(Cf,f,new n(null,2,[nC,e,Cr,"JWT"],null))))));a=j_(OZ(EX(Hl(a))));b=l_([e,".",a].join(""),b,d,c);return [e,".",a,".",q.a(b)].join("")};p_.F=2;p_.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};var q_=6E5;function r_(a,b,c){var d=TK()+q_;b=new n(null,3,[U,hI,hD,b,hI,c],null);d=p(d)?K.c(b,bD,d):b;return p_(d,pn.a(a))}function s_(a,b){var c=TK();a=pi(pi(o_.c(b,a,p(c)?new n(null,1,[WD,c],null):null),U,Kg),hD,CZ);return A.b(U.a(a),hI)?pi(a,hI,function(d){return pi(hO(d),U,Kg)}):a}function t_(a,b){if(null!=a&&null!=a.Re)a=a.Re(a,b);else {var c=t_[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=t_._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("AuthImpl.auth",a);}return a}
    function u_(a,b){a=s_(a,b);b=U.a(a);switch(b instanceof z?b.da:null){case "gw-request":return b=hI.a(a),p(b)?jZ.resolve(new n(null,3,[U,qz,hI,b,hD,hD.a(a)],null)):jZ.reject(new n(null,2,[U,lC,sr,"Token is missing the gateway request information"],null));case "authentication":return b=dt.a(a),p(b)?jZ.resolve(new n(null,2,[U,qz,dt,b],null)):jZ.reject(new n(null,2,[U,lC,sr,"Token is missing the impersonation information"],null));default:return jZ.reject(new n(null,2,[U,lC,sr,["Invalid gateway token type: ",
    q.a(U.a(a))].join("")],null))}}function v_(a,b,c){var d=uZ(YB.a(c));return p(d)?u_(pn.a(c),d):p(a)?pZ(lZ(function(e,f){return QK(a,new Q(null,3,5,R,[e,f,c],null))}),b):jZ.reject(im("No authenticator configured",new n(null,2,[U,lC,sr,"No authenticator configured"],null)))}function w_(a,b){this.we=a;this.timeout=b;}w_.prototype.xf=function(){return p(this.we)?YK(this.we):null};w_.prototype.wf=function(a,b){return v_(this.we,this.timeout,b)};
    function I_(a,b){var c=OK(new YJ(WJ(2E4),2E4));AY(sD,ja,85,new xl(function(){return new Q(null,2,5,R,["starting authenticator",b],null)}),1826837962);var d=OK(1);uK(function(){var e=function(){function k(l){var m=l[1];if(1===m)return l[2]=null,l[1]=2,yz;if(2===m)return KK(l,c);if(3===m)return LK(l,l[2]);if(4===m)return m=l[7],m=l[2],l[7]=m,l[1]=p(m)?5:6,yz;if(5===m){m=l[7];var r=J(m,0,null),u=J(m,1,null);m=J(m,2,null);var v=pi(m,YB,hO),y=YB.a(v);m=AY(AG,ja,92,new xl(function(){return function(){var E=
    R;var H=p(Ro.a(y))?K.c(y,Ro,"XXX"):K.c(y,$p,"XXX");return new Q(null,2,5,E,["processing authentication",H],null)}}()),781137680);v=t_(b,v);v=mZ(v,function(){return function(E){return r.a?r.a(E):r.call(null,E)}}());v=nZ(v,function(){return function(E){return u.a?u.a(E):u.call(null,E)}}());l[8]=v;l[9]=m;l[2]=null;l[1]=2;return yz}return 6===m?(l[2]=null,l[1]=7,yz):7===m?(l[2]=l[2],l[1]=3,yz):null}return function(){function l(u){for(;;){a:try{for(;;){var v=k(u);if(!P(v,yz)){var y=v;break a}}}catch(E){y=
    E;u[2]=y;if(B(u[4]))u[1]=C(u[4]);else throw y;y=yz;}if(!P(y,yz))return y}}function m(){var u=[null,null,null,null,null,null,null,null,null,null];u[0]=r;u[1]=1;return u}var r=null;r=function(u){switch(arguments.length){case 0:return m.call(this);case 1:return l.call(this,u)}throw Error("Invalid arity: "+arguments.length);};r.o=m;r.a=l;return r}()}(),f=function(){var k=e();k[6]=d;return k}();return JK(f)});return new w_(c,yE.b(a,5E3))}function J_(a){this.ve=a;}J_.prototype.Re=function(a,b){var c=this;return nZ(mZ(function(){var d=Hl(b);return c.ve.a?c.ve.a(d):c.ve.call(null,d)}(),function(d){var e=pi(hO(Ll(d)),U,Kg);AY(AG,ma,15,new xl(function(){return new Q(null,2,5,R,["auth response",e],null)}),460971887);return e}),function(d){AY(AG,ma,18,new xl(function(){return new Q(null,2,5,R,["auth failure",d],null)}),1008486204);throw im(d,new n(null,2,[U,lC,sr,d],null));})};function K_(a,b,c){this.ca=a;this.n=b;this.se=0;this.ne=c;this.h=2;this.I=0;}K_.prototype.Dd=function(){return !1};K_.prototype.ae=function(a,b){this.ca.length!==this.n?this.ca.unshift(b):(this.se+=1,p(this.ne)&&(this.ne.b?this.ne.b(b,this.se):this.ne.call(null,b,this.se)));return this};K_.prototype.X=function(){return this.ca.length};function L_(a,b){return new K_(WJ(a),a,b)}var M_=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Oa,"process-response"),function(f){f=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;var k=x.b(f,Fy);x.b(f,Xv);return U.a(k)},e,a,b,c,d)}();M_.v(null,Zv,function(){return null});M_.v(null,Yp,function(){return null});M_.v(null,WI,function(){return null});
    M_.v(null,Fs,function(a){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var b=x.b(a,Fy),c=x.b(a,Xv);AY(AG,Oa,38,new xl(function(){return new Q(null,3,5,R,["Sending message",c,"to local peer"],null)}),-1251927606);return QK(lD.a(b),c)});M_.v(null,em,function(a){return AY(IA,Oa,42,new xl(function(){return new Q(null,2,5,R,["Unable to process response",a],null)}),-521125095)});function N_(a){this.ch=a;}N_.prototype.yf=function(){return PJ(this.ch)};N_.prototype.zf=function(a,b){return QK(this.ch,b)};
    N_.prototype.Fg=function(){return null};N_.prototype.Af=function(a,b){return QK(this.ch,new n(null,3,[Hv,Fs,lz,b,Xv,new n(null,1,[U,Nz],null)],null))};
    function O_(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,lz),f=x.b(d,Xv),k=x.b(d,Hv);x.b(d,Fy);mi.b(a,new Q(null,2,5,R,[Mx,$y],null));try{return A.b(f,new n(null,1,[Ev,1],null))?AY(sD,Oa,65,new xl(function(){return new Q(null,1,5,R,[function(){var m=new zc,r=Fc,u=Ec;Fc=!0;Ec=function(v){return m.append(v)};try{iV.a(a);}finally{Ec=u,Fc=r;}return q.a(m)}()],null)}),843983722):A.b(k,Zv)?null:IY(b,a,c,e,f)}catch(m){if(m instanceof Error){var l=m;AY(IA,Oa,70,new xl(function(){return new Q(null,
    3,5,R,[l,"Error handling message",c],null)}),-2130846531);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K(null,e,is.a(f),ow.a(f),jL(l,"global.errors.failure"))],null)],null)}throw m;}}function P_(a,b){var c=ow.a(b);if(p(c))return a=JT.b(a,c),p(a)?pD.a(a):null;a=pD.a(b);return p(a)?K.c(a,dt,dt.a(b)):null}
    function Q_(a,b,c){var d=new Uh(null);try{AY(mu,Oa,89,new xl(function(){return new Q(null,2,5,R,["domain handler processing message",c],null)}),1671393030);if(p(!1)){var e=Xv.a(c),f=U.a(e);Vh(d,P_(a,e));switch(f instanceof z?f.da:null){case "gateway.common.commands/source-removed":break;case "hello":p(!1)&&AY(sD,Oa,null,new xl(function(){return new Q(null,2,5,R,[OA,new n(null,2,[pD,t(d),OA,UK(e,new Q(null,2,5,R,[YB,"secret"],null))],null)],null)}),1370516204);break;default:p(!1)&&AY(sD,Oa,null,new xl(function(){return new Q(null,
    2,5,R,[OA,new n(null,2,[pD,t(d),OA,e],null)],null)}),-468633239);}}var k=O_(a,b,c),l=J(k,0,null),m=J(k,1,null),r=p(l)?l:a,u=B(m);b=null;for(var v=f=0;;)if(v<f){var y=b.W(null,v);M_.a(y);p(!1)&&p(!1)&&AY(sD,Oa,null,new xl(function(ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib){return function(){return new Q(null,2,5,R,[OA,new n(null,2,[pD,t(ib),OA,Xv.a(xc)],null)],null)}}(u,b,f,v,y,k,l,m,r,d)),337746494);v+=1;}else {var E=B(u);if(E){var H=E;if(Wf(H)){var T=re(H),Y=se(H);H=T;var ia=F(T);u=Y;b=H;f=ia;}else {var ba=C(H);
    M_.a(ba);p(!1)&&p(!1)&&AY(sD,Oa,null,new xl(function(ua,pb,sb,rb,xc,Sb,ob,Tb,gb,ib,mc,of){return function(){return new Q(null,2,5,R,[OA,new n(null,2,[pD,t(of),OA,Xv.a(xc)],null)],null)}}(u,b,f,v,ba,H,E,k,l,m,r,d)),422427538);u=D(H);b=null;f=0;}v=0;}else break}return r}catch(ua){if(ua instanceof Error){var wa=ua;AY(IA,Oa,107,new xl(function(){return new Q(null,3,5,R,[wa,"error handling message",c],null)}),-220733563);return a}throw ua;}}
    function R_(a){return ji.b(S,Wh.b(function(b){var c=ET(b);return new Q(null,2,5,R,[$v.a(c),new n(null,2,[tq,b,sD,c],null)],null)},a))}
    function S_(a){var b=S,c=Ds.b(b,2E4);AY(sD,Oa,120,new xl(function(){return new Q(null,2,5,R,["node buffer size:",c],null)}),-208696662);var d=OK(L_(c,function(l,m){return AY(VH,Oa,125,new xl(function(){return new Q(null,4,5,R,["the message",l,"is dropped. total dropped so far",m],null)}),-1405000850)})),e=R_(a);AY(AG,Oa,128,new xl(function(){return new Q(null,1,5,R,[q.a(e)],null)}),-477682962);Bt.a(b);var f=cL(),k=OK(1);uK(function(){var l=function(){function r(u){var v=u[1];if(1===v){v=function(){return function(H,
    T){return FT(T,H)}}();var y=K.c(nL(f),pz,e);y=K.c(y,er,d);var E=nj(e);E=Wh.b(tq,E);v=gd.c(v,y,E);u[7]=v;u[2]=null;u[1]=2;return yz}return 2===v?KK(u,d):3===v?LK(u,u[2]):4===v?(y=u[8],v=u[2],u[8]=v,u[1]=p(null==v)?5:6,yz):5===v?(y=u[8],v=u[7],y=function(){return function(H,T){return GT(T,H)}}(),E=nj(e),E=Wh.b(tq,E),v=gd.c(y,v,E),u[2]=v,u[1]=7,yz):6===v?(y=u[8],v=u[7],v=Q_(v,e,y),u[7]=v,u[2]=null,u[1]=2,yz):7===v?(u[2]=u[2],u[1]=3,yz):null}return function(){function u(E){for(;;){a:try{for(;;){var H=
    r(E);if(!P(H,yz)){var T=H;break a}}}catch(Y){T=Y;E[2]=T;if(B(E[4]))E[1]=C(E[4]);else throw T;T=yz;}if(!P(T,yz))return T}}function v(){var E=[null,null,null,null,null,null,null,null,null];E[0]=y;E[1]=1;return E}var y=null;y=function(E){switch(arguments.length){case 0:return v.call(this);case 1:return u.call(this,E)}throw Error("Invalid arity: "+arguments.length);};y.o=v;y.a=u;return y}()}(),m=function(){var r=l();r[6]=k;return r}();return JK(m)});return new N_(d)}var T_=iL("agm.peer-removed","Peer has been removed"),U_=iL("agm.method-removed","Method has been removed"),V_=iL("agm.errors.subscription.invalid_subscription","Trying to drop a subscription that wasnt established. Did you mean to return an error instead?");function W_(a,b,c,d,e){return uL(a,new n(null,6,[tq,"agm",U,jD,ow,b,ov,e,Tu,c,Zw,d],null))}function X_(a,b,c,d){return uL(a,new n(null,5,[tq,"agm",U,TA,ow,b,Tu,c,Zw,d],null))}function Y_(a,b,c,d){return uL(a,new n(null,5,[tq,"agm",U,Ru,is,b,ow,c,Ru,d],null))}function Z_(a,b,c,d,e,f){b=new n(null,8,[tq,"agm",U,ut,fA,b,ow,c,MI,d,zz,e,uE,$v.a(f),kJ,sr.a(f)],null);return uL(a,b)}function $_(a,b,c){return new n(null,6,[tq,"agm",U,Uw,fA,a,ow,b,uE,$v.a(c),kJ,sr.a(c)],null)}function a0(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,Tu);var e=x.b(d,MI),f=x.b(d,kq);d=x.b(d,Xr);kh.b(qJ.a(a),qJ.a(b))&&Tc(VT.c(ip,a,b))&&kL("agm.errors.invocation.failure","Unable to invoke methods across different users");p(mi.b(a,new Q(null,4,5,R,[ip,Zw,c,e],null)))||kL("agm.errors.invocation.failure",["Unable to find method with id ",q.a(e)," on server id ",q.a(c)," registered with this peer"].join(""));B(f)&&B(d)&&kL("agm.errors.invocation.failure","Cant use positional and by-name arguments at the same time");}
    function b0(a,b){return "string"===typeof a?A.b(a,b):null!=b?Wk(a,b):!1}function c0(a,b){return gd.c(function(c,d){return p(b0(d,b))?bf(!0):!1},!1,a)}function d0(a,b){return gd.c(function(c,d){return p(b0(d,b))?bf(!0):c},!1,Lz.a(a))}function e0(a,b){a=ty.a(a);return p(a)?gd.c(function(c,d){return p(b0(d,b))?bf(!0):c},!1,a):!0}function f0(a,b){return M(b)?kg(function(c,d,e){return p(d0(a,d))?K.c(c,d,"\x3cREMOVED\x3e"):p(e0(a,d))?K.c(c,d,e):K.c(c,d,"\x3cREMOVED\x3e")},S,b):b}
    function g0(a,b){var c=gd.c(function(d,e){var f=b0(yw.a(e),b);f=p(f)?Cp.b(e,!0):f;return p(f)?bf(e):d},null,Zw.a(a));if(null!=c)return c;a=lH.a(a);switch(a instanceof z?a.da:null){case "whitelist":return new n(null,1,[kq,new n(null,1,[Lz,I],null)],null);case "blacklist":return null;default:return new n(null,1,[kq,new n(null,1,[Lz,I],null)],null)}}var h0=new n(null,1,[TF,null],null);function i0(){return null!=TF.a(h0)?mi.b(h0,new Q(null,2,5,R,[mo,QG],null)):!1}function j0(a,b){return f0(kq.a(a),b)}function k0(a,b,c){a=TF.a(a);p(a)&&(a.c?a.c("interop",b,c):a.call(null,"interop",b,c));}
    function l0(a){if(null!=TF.a(h0)){var b=t(a);b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,Ts);var c=yw.a(b);b=mi.b(h0,new Q(null,2,5,R,[mo,ND],null));var d=WA.a(b);if(p(d)){if(p(d.a?d.a(c):d.call(null,c))){var e=fp.a(b);k0(h0,"invoke",K.c(pi(t(a),rI,function(k){return p(e)?e.b?e.b(c,k):e.call(null,c,k):k}),Ts,c));}}else {var f=g0(nr.a(b),c);p(f)&&k0(h0,"invoke",K.c(pi(t(a),rI,function(k){return j0(f,k)}),Ts,c));}}}
    function m0(a){if(null!=TF.a(h0)){var b=t(a);b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,Ts);b=yw.a(b);var c=mi.b(h0,new Q(null,2,5,R,[mo,ND],null)),d=WA.a(c);p(d)?p(d.a?d.a(b):d.call(null,b))&&k0(h0,"yield",K.c(t(a),Ts,b)):p(g0(nr.a(c),b))&&k0(h0,"yield",K.c(t(a),Ts,b));}}
    function n0(a){if(null!=TF.a(h0)){var b=t(a);b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,Ts);var c=yw.a(b);b=mi.b(h0,new Q(null,2,5,R,[mo,ND],null));var d=WA.a(b);if(p(d)){if(p(d.a?d.a(c):d.call(null,c))){var e=fp.a(b);k0(h0,"subscribe",K.c(pi(t(a),rI,function(k){return p(e)?e.b?e.b(c,k):e.call(null,c,k):k}),Ts,c));}}else {var f=g0(nr.a(b),c);p(f)&&k0(h0,"subscribe",K.c(pi(t(a),rI,function(k){return j0(f,k)}),Ts,c));}}}
    function o0(a){if(null!=TF.a(h0)){var b=t(a);b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,Ts);b=yw.a(b);var c=mi.b(h0,new Q(null,2,5,R,[mo,ND],null)),d=WA.a(c);p(d)?p(d.a?d.a(b):d.call(null,b))&&k0(h0,"unsubscribe",K.c(t(a),Ts,b)):p(g0(nr.a(c),b))&&k0(h0,"unsubscribe",K.c(t(a),Ts,b));}}
    function p0(a){if(null!=TF.a(h0)){var b=t(a);b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,Ts);var c=yw.a(b);b=mi.b(h0,new Q(null,2,5,R,[mo,ND],null));var d=WA.a(b);if(p(d)){if(p(d.a?d.a(c):d.call(null,c))){var e=fp.a(b);k0(h0,"event",K.c(pi(t(a),yn,function(k){return p(e)?e.b?e.b(c,k):e.call(null,c,k):k}),Ts,c));}}else {var f=g0(nr.a(b),c);p(f)&&k0(h0,"event",K.c(pi(t(a),yn,function(k){return j0(f,k)}),Ts,c));}}}function q0(a,b){return new n(null,3,[U,WI,Fp,b,Yp,a],null)}Z(Oz,RG,RG);Z(Cq,JA,JA);Z(YH,O(CJ,O(hq,BI)),rT(O(hq,BI),eT(qC,Wc,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,BI)],null),null),null));Z(UB,O(CJ,Hq),rT(Hq,M,null));Z(xz,O(CJ,Hq),rT(Hq,M,null));Z(hr,O(CJ,Hq),rT(Hq,M,null));
    Z(KC,O(xv,Wp,O(wt,ir,new Q(null,2,5,R,[Cq,Oz],null),iA,new Q(null,4,5,R,[YH,UB,xz,hr],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,2,5,R,[Cq,Oz],null),iA,new Q(null,4,5,R,[YH,UB,xz,hr],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Cq,Oz],null),new Q(null,4,5,R,[YH,UB,xz,hr],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Tu)},function(a){return N(a,MI)}],null),function(a){return M(a)&&N(a,Tu)&&N(a,MI)},new Q(null,
    4,5,R,[kq,Xr,fv,fI],null),new Q(null,2,5,R,[Cq,Oz],null),null,new Q(null,2,5,R,[Tu,MI],null),new Q(null,4,5,R,[YH,UB,xz,hr],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Tu)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI))],null),null]))],null),null));Z(JG,Bo,Vc);
    Z(Bq,O(xv,Wp,O(wt,ir,new Q(null,3,5,R,[JG,QD,dC],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,3,5,R,[JG,QD,dC],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[JG,QD,dC],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,fA)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[JG,QD,dC],null),null,new Q(null,3,5,R,[fA,uE,kJ],null),
    I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null));Z(AF,JA,JA);
    Z(St,O(wt,ir,new Q(null,4,5,R,[JG,JA,Oz,AF],null),iA,new Q(null,4,5,R,[YH,UB,xz,hr],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,4,5,R,[JG,JA,Oz,AF],null),new Q(null,4,5,R,[YH,UB,xz,hr],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,ow)},function(a){return N(a,MI)},function(a){return N(a,zz)}],null),function(a){return M(a)&&N(a,fA)&&N(a,ow)&&N(a,MI)&&N(a,zz)},new Q(null,4,5,R,[kq,Xr,fv,fI],null),new Q(null,4,5,R,[JG,JA,Oz,
    AF],null),null,new Q(null,4,5,R,[fA,ow,MI,zz],null),new Q(null,4,5,R,[YH,UB,xz,hr],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,zz))],null),null])));
    Z(Wo,O(wt,ir,new Q(null,6,5,R,[JG,JA,Oz,AF,QD,dC],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,6,5,R,[JG,JA,Oz,AF,QD,dC],null),null,null,new Q(null,7,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,ow)},function(a){return N(a,MI)},function(a){return N(a,zz)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,fA)&&N(a,ow)&&N(a,MI)&&N(a,zz)&&N(a,uE)&&N(a,kJ)},I,new Q(null,6,5,R,[JG,JA,Oz,AF,QD,dC],null),null,
    new Q(null,6,5,R,[fA,ow,MI,zz,uE,kJ],null),I,new Q(null,7,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,zz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null])));Z(hn,Bo,Vc);
    Z(Yu,O(wt,ir,new Q(null,3,5,R,[JG,JA,hn],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[JG,JA,hn],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,ow)},function(a){return N(a,Is)}],null),function(a){return M(a)&&N(a,fA)&&N(a,ow)&&N(a,Is)},I,new Q(null,3,5,R,[JG,JA,hn],null),null,new Q(null,3,5,R,[fA,ow,Is],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Is))],null),null])));
    Z(wJ,O(wt,ir,new Q(null,4,5,R,[JA,JG,QD,dC],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,4,5,R,[JA,JG,QD,dC],null),null,null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,ow)},function(a){return N(a,fA)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,ow)&&N(a,fA)&&N(a,uE)&&N(a,kJ)},I,new Q(null,4,5,R,[JA,JG,QD,dC],null),null,new Q(null,4,5,R,[ow,fA,uE,kJ],null),I,new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,
    V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null])));Z(pG,gq,Sc);Z(Vm,jH,Zf);Z(IF,Hq,M);
    Z(HD,O(wt,ir,new Q(null,4,5,R,[JA,pG,Vm,IF],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,4,5,R,[JA,pG,Vm,IF],null),null,null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,ow)},function(a){return N(a,cE)},function(a){return N(a,Jq)},function(a){return N(a,yn)}],null),function(a){return M(a)&&N(a,ow)&&N(a,cE)&&N(a,Jq)&&N(a,yn)},I,new Q(null,4,5,R,[JA,pG,Vm,IF],null),null,new Q(null,4,5,R,[ow,cE,Jq,yn],null),I,new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,
    V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,cE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Jq)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn))],null),null])));
    Z(Bs,O(xv,HD,O(wt,ir,new Q(null,1,5,R,[JG],null))),cT(new Q(null,2,5,R,[HD,O(wt,ir,new Q(null,1,5,R,[JG],null))],null),new Q(null,2,5,R,[HD,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[JG],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,fA)}],null),function(a){return M(a)&&N(a,fA)},I,new Q(null,1,5,R,[JG],null),null,new Q(null,1,5,R,[fA],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA))],
    null),null]))],null),null));
    Z(ar,O(xv,HD,O(wt,ir,new Q(null,1,5,R,[hn],null))),cT(new Q(null,2,5,R,[HD,O(wt,ir,new Q(null,1,5,R,[hn],null))],null),new Q(null,2,5,R,[HD,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[hn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Is)}],null),function(a){return M(a)&&N(a,Is)},I,new Q(null,1,5,R,[hn],null),null,new Q(null,1,5,R,[Is],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Is))],
    null),null]))],null),null));
    Z(jq,O(xv,Wp,O(wt,ir,new Q(null,2,5,R,[Cq,Oz],null),iA,new Q(null,3,5,R,[YH,UB,hr],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,2,5,R,[Cq,Oz],null),iA,new Q(null,3,5,R,[YH,UB,hr],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Cq,Oz],null),new Q(null,3,5,R,[YH,UB,hr],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Tu)},function(a){return N(a,MI)}],null),function(a){return M(a)&&N(a,Tu)&&N(a,MI)},new Q(null,3,5,R,
    [kq,Xr,fI],null),new Q(null,2,5,R,[Cq,Oz],null),null,new Q(null,2,5,R,[Tu,MI],null),new Q(null,3,5,R,[YH,UB,hr],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Tu)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI))],null),null]))],null),null));Z(Dy,Bo,Vc);
    Z(vw,O(wt,ir,new Q(null,4,5,R,[Dy,AF,JA,Oz],null),iA,new Q(null,3,5,R,[YH,UB,hr],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,4,5,R,[Dy,AF,JA,Oz],null),new Q(null,3,5,R,[YH,UB,hr],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,qu)},function(a){return N(a,zz)},function(a){return N(a,ow)},function(a){return N(a,MI)}],null),function(a){return M(a)&&N(a,qu)&&N(a,zz)&&N(a,ow)&&N(a,MI)},new Q(null,3,5,R,[kq,Xr,fI],null),new Q(null,4,5,R,[Dy,AF,JA,Oz],null),
    null,new Q(null,4,5,R,[qu,zz,ow,MI],null),new Q(null,3,5,R,[YH,UB,hr],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qu)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,zz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,MI))],null),null])));Z(ev,Hq,M);
    Z(uz,O(wt,ir,new Q(null,3,5,R,[Dy,JA,ev],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Dy,JA,ev],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,qu)},function(a){return N(a,ow)},function(a){return N(a,Ru)}],null),function(a){return M(a)&&N(a,qu)&&N(a,ow)&&N(a,Ru)},I,new Q(null,3,5,R,[Dy,JA,ev],null),null,new Q(null,3,5,R,[qu,ow,Ru],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,qu)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,ow)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Ru))],null),null])));function r0(a,b,c,d){return oi.A(a,new Q(null,4,5,R,[ip,AD,b,c],null),Mh(Cf,Dk),d)}function s0(a,b,c,d){return null==b?a:XK(a,new Q(null,4,5,R,[ip,AD,b,c],null),d)}function t0(a,b,c,d,e){var f=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(f,vo);var k=x.b(f,sJ);f=x.b(f,MI);k=s0(UK(JT.b(a,c),new Q(null,3,5,R,[ip,$n,b],null)),k,d,b);a=TT(a,c,k);return MT(k)?new Q(null,2,5,R,[a,Z_(lz.a(k),b,c,f,d,e)],null):new Q(null,2,5,R,[a,null],null)}
    function u0(a,b,c){var d=mi.b(b,new Q(null,2,5,R,[ip,qy],null)),e=qJ.a(b);b=gd.c(function(f,k){var l=J(k,0,null),m=J(k,1,null);k=J(f,0,null);f=J(f,1,null);m=t0(k,l,m,e,c);l=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(l)?l:k,$f(m)||Vf(m)?gd.c(Mh(Cf,I),f,m):null!=m?Mh(Cf,I)(f,m):f],null)},new Q(null,2,5,R,[a,I],null),d);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[a,b],null)}
    function v0(a,b,c){if(p(i0())){var d=qJ.a(b);c=B(c);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k),m=C(l),r=zf(l),u=mi.b(b,new Q(null,4,5,R,[ip,Zw,d,MI.a(r)],null));o0(new xl(function(E,H,T,Y,ia,ba,wa){return function(){return new n(null,4,[fA,ia,Dz,pD.a(a),vo,pD.a(b),Ts,wa],null)}}(c,e,f,k,m,r,u)));k+=1;}else if(r=B(c)){m=r;if(Wf(m))c=re(m),k=se(m),e=c,f=F(c),c=k;else {l=C(m);u=C(l);var v=zf(l),y=mi.b(b,new Q(null,4,5,R,[ip,Zw,d,MI.a(v)],null));o0(new xl(function(E,H,T,Y,ia,ba,wa){return function(){return new n(null,
    4,[fA,ia,Dz,pD.a(a),vo,pD.a(b),Ts,wa],null)}}(c,e,f,k,u,v,y)));c=D(m);e=null;f=0;}k=0;}else break}}function w0(a,b,c){return kg(function(d,e,f){return A.b(b,vo.a(f))&&(Pf(c)||N(c,MI.a(f)))?pi(d,Hr,function(k){return K.c(k,e,f)}):pi(d,fD,function(k){return K.c(k,e,f)})},S,a)}
    function x0(a,b,c,d,e){var f=qJ.a(c);d=w0(mi.b(b,new Q(null,2,5,R,[ip,qy],null)),f,d);f=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d;d=x.b(f,Hr);var k=x.b(f,fD);f=kg(function(l,m,r){return C(t0(l,m,r,qJ.a(b),e))},a,d);return B(d)?(v0(b,c,d),new Q(null,2,5,R,[UT(f,qJ.a(b),function(l){return B(k)?ni(l,new Q(null,2,5,R,[ip,qy],null),k):qi(l,ip,Hf,qy)}),zL(lz.a(b))?ki.b(function(l){var m=lz.a(b);l=Dd(l);var r=qJ.a(b);return uL(m,$_(l,r,e))},d):null],null)):new Q(null,2,5,R,[a,null],null)}
    function y0(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,ow),f=x.b(d,Tu),k=x.b(d,fA),l=x.b(d,MI),m=x.b(d,kq),r=x.b(d,Xr),u=x.b(d,fI);d=x.b(d,fv);var v=JT.b(b,f);if(p(v)){var y=ni(v,new Q(null,3,5,R,[ip,$n,k],null),new n(null,2,[Dz,e,MI,l],null));v=lz.a(y);var E=mi.b(a,new Q(null,4,5,R,[ip,Zw,f,l],null));n0(new xl(function(){return new n(null,5,[fA,k,Dz,pD.a(a),vo,pD.a(y),Ts,E,rI,r],null)}));return new Q(null,2,5,R,[TT(b,f,y),zL(v)?new Q(null,1,5,R,[uL(v,Xj([kq,U,zz,fA,ow,fI,tq,fv,Xr,
    MI],[m,mH,e,k,f,u,"agm",d,r,l]))],null):new Q(null,1,5,R,[wL(q0(dL(Mx.a(b)),e),new n(null,2,[U,Yp,Yp,Yp.a(v)],null),c)],null)],null)}throw im(["Unable to find server with id ",q.a(f)].join(""),S);}function z0(a,b,c){var d=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,e=x.b(d,is),f=x.b(d,ow),k=x.b(d,Tu);d=x.b(d,MI);e=ni(LT(a,f,ip),new Q(null,3,5,R,[ip,qy,c],null),new n(null,3,[vo,k,MI,d,is,e],null));k=LT(a,k,ip);a0(e,k,b);return y0(e,TT(a,f,e),K.c(b,fA,c))}
    function A0(a,b,c,d,e,f,k){if(p(b)){var l=new Q(null,3,5,R,[ip,qy,d],null),m=mi.b(b,l);m=is.a(m);var r=lz.a(b);return new Q(null,2,5,R,[TT(a,c,UK(b,l)),zL(r)?p(k)?new Q(null,1,5,R,[xL.la("agm",r,m,c,e,f)],null):new Q(null,1,5,R,[uL(r,$_(d,c,e))],null):null],null)}return new Q(null,2,5,R,[a,null],null)}
    function B0(a,b,c,d,e){var f=JT.b(a,b),k=mi.b(f,new Q(null,4,5,R,[ip,qy,c,is],null));a=TT(a,b,ni(f,new Q(null,4,5,R,[ip,qy,c,sJ],null),d));d=lz.a(f);return MT(f)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[uL(d,new n(null,5,[tq,"agm",U,Gz,is,k,ow,b,fA,c],null))],null)],null):new Q(null,2,5,R,[a,new Q(null,1,5,R,[wL(q0(dL(Mx.a(a)),ow.a(e)),new n(null,2,[U,Yp,Yp,Yp.a(d)],null),e)],null)],null)}
    function C0(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,fA),f=x.b(d,ow);d=x.b(d,Is);null==d&&kL("agm.errors.subscription.invalid_subscription","Invalid or missing stream id");var k=mi.b(b,new Q(null,3,5,R,[ip,$n,e],null));return p(k)?(k=Dz.a(k),B0(TT(a,f,r0(ni(b,new Q(null,4,5,R,[ip,$n,e,sJ],null),d),d,k,e)),k,e,d,c)):AY(AG,Fa,247,new xl(function(){return new Q(null,3,5,R,["Subscription accept response",c,"for missing interest"],null)}),1825397101)}
    function D0(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,d=x.b(c,fA),e=x.b(c,ow);c=x.b(c,GH);e=JT.c(a,e,ip);if(p(e))return C0(a,e,b);AY(VH,Fa,257,new xl(function(){return new Q(null,3,5,R,["Subscription accept response",b,"from missing peer"],null)}),-944687329);return A0(a,JT.b(a,c),c,d,iL("agm.errors.subscription.failure","Received a response from a missing server"),null,!0)}var E0,u5=Oh(S),v5=Oh(S),w5=Oh(S),x5=Oh(S),y5=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));
    E0=new dm(Me.b(Fa,"drop-interest-rq"),U,y5,u5,v5,w5,x5);E0.v(null,IA,function(){return YI});E0.v(null,OB,function(){return wJ});Z(Cx,O(io,nJ,U),VS(nJ,new Ne(function(){return E0},nJ,Xj([By,yw,OD,ho,ux,en,fz,AE,Dv,jF],[vt,xx,"gateway/domains/agm/subscriptions.cljc",27,1,283,283,Se,null,p(E0)?E0.ld:null]))));
    function K0(a,b,c,d){var e=ow.a(c),f=x.b(c,p(d)?is:fA),k=LT(a,e,ip),l=mi.b(k,new Q(null,3,5,R,[ip,$n,f],null));if(p(l)){var m=Dz.a(l),r=x.b(l,sJ);l=JT.b(a,m);var u=lz.a(l);return p(p(r)?r:d)?(k=new Q(null,2,5,R,[TT(a,e,s0(UK(k,new Q(null,3,5,R,[ip,$n,f],null)),r,m,f)),I],null),b=J(k,0,null),k=J(k,1,null),f=A0(b,l,m,f,lL(c),fI.a(c),d),d=J(f,0,null),f=J(f,1,null),f=new Q(null,2,5,R,[p(d)?d:b,$f(f)||Vf(f)?gd.c(Mh(Cf,I),k,f):null!=f?Mh(Cf,I)(k,f):k],null),d=J(f,0,null),f=J(f,1,null),c=p(p(l)?!zL(u):l)?
    new Q(null,2,5,R,[null,wL(q0(dL(Mx.a(a)),e),new n(null,2,[U,Yp,Yp,Yp.a(u)],null),c)],null):null,a=J(c,0,null),c=J(c,1,null),new Q(null,2,5,R,[p(a)?a:d,$f(c)||Vf(c)?gd.c(Mh(Cf,I),f,c):null!=c?Mh(Cf,I)(f,c):f],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.la("agm",b,f,e,V_,null)],null)],null)}return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.la("agm",b,f,e,iL("agm.errors.subscription.invalid_subscription","Trying to drop a non-existing subscription"),null)],null)],null)}
    function L0(a,b,c,d,e){var f=JT.b(a,c);if(p(f)){var k=mi.b(f,new Q(null,3,5,R,[ip,$n,d],null));if(p(k)){o0(new xl(function(){return new n(null,4,[fA,d,Dz,pD.a(b),vo,pD.a(f),Ts,mi.b(f,new Q(null,4,5,R,[ip,Zw,c,MI.a(k)],null))],null)}));var l=qJ.a(b),m=lz.a(f);a=TT(a,c,s0(UK(f,new Q(null,3,5,R,[ip,$n,d],null)),sJ.a(k),l,d));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[zL(m)?Z_(m,d,c,MI.a(k),l,lL(e)):wL(q0(dL(Mx.a(a)),l),new n(null,2,[U,Yp,Yp,Yp.a(m)],null),e)],null)],null)}}return null}
    function M0(a,b,c,d){var e=LT(a,c,ip),f=new Q(null,3,5,R,[ip,qy,d],null),k=mi.b(e,f);k=null!=k&&(k.h&64||h===k.D)?fh(qk,k):k;k=x.b(k,vo);return p(k)?(a=TT(a,c,UK(e,f)),b=L0(a,e,k,d,b),p(b)?b:new Q(null,2,5,R,[a,I],null)):kL("agm.errors.subscription.invalid_subscription",["Unable to find subscription with id ",q.a(d)," on subscriber id ",q.a(c)].join(""))}
    function N0(a,b,c,d,e,f,k){if(p(i0())){var l=qJ.a(c),m=mi.b(c,new Q(null,2,5,R,[ip,$n],null)),r=mi.b(c,new Q(null,3,5,R,[ip,Zw,l],null));a=B(a);for(var u=null,v=0,y=0;;)if(y<v){var E=u.W(null,y),H=x.b(m,E),T=x.b(r,MI.a(H));p0(new xl(function(ba,wa,ua,pb,sb,rb,xc){return function(){return new n(null,8,[fA,xc,Dz,pD.a(b),vo,pD.a(c),Ts,rb,UI,d,$H,e,Jq,f,yn,k],null)}}(a,u,v,y,H,T,E)));y+=1;}else if(T=B(a)){H=T;if(Wf(H))a=re(H),y=se(H),u=a,v=F(a),a=y;else {E=C(H);var Y=x.b(m,E),ia=x.b(r,MI.a(Y));p0(new xl(function(ba,
    wa,ua,pb,sb,rb,xc){return function(){return new n(null,8,[fA,xc,Dz,pD.a(b),vo,pD.a(c),Ts,rb,UI,d,$H,e,Jq,f,yn,k],null)}}(a,u,v,y,Y,ia,E)));a=D(H);u=null;v=0;}y=0;}else break}}
    function O0(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,d=x.b(c,ow),e=x.b(c,Is),f=x.b(c,cE),k=x.b(c,Jq),l=x.b(c,yn),m=JT.c(a,d,ip);c=mi.b(m,new Q(null,3,5,R,[ip,AD,e],null));var r=new Uh(Dk);return new Q(null,2,5,R,[a,Vk(fi.b(Uc,ei(function(u){var v=J(u,0,null);u=J(u,1,null);var y=JT.b(a,v),E=lz.a(y);if(zL(E))return N0(u,y,m,!1,f,k,l),Wh.b(function(H){return uL(E,new n(null,8,[tq,"agm",U,OA,ow,v,fA,H,UI,!1,cE,f,Jq,k,yn,l],null))},u);u=Yp.a(E);if(N(t(r),u))return null;r.Cc(null,Cf.b(r.zb(null),
    u));return new Q(null,1,5,R,[wL(q0(dL(Mx.a(a)),d),new n(null,2,[U,Yp,Yp,u],null),b)],null)},G([c]))))],null)}Z(at,O(hq,LD),eT(LD,LD,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,LD)],null),null));
    Z(vG,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[at],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[at],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[at],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Zw)}],null),function(a){return M(a)&&N(a,Zw)},I,new Q(null,1,5,R,[at],null),null,new Q(null,1,5,R,[Zw],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zw))],
    null),null]))],null),null));Z(iE,O(hq,RG),eT(RG,RG,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,RG)],null),null));
    Z(Bn,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[iE],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[iE],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[iE],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Zw)}],null),function(a){return M(a)&&N(a,Zw)},I,new Q(null,1,5,R,[iE],null),null,new Q(null,1,5,R,[Zw],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zw))],
    null),null]))],null),null));function P0(a){a=bL(a);var b=lS(os.a(a));return p(b)?K.c(a,Bu,b):a}function Q0(a,b,c){a=Bu.a(a);return p(a)?mS(a,b,c):!0}function R0(a,b,c){var d=JT.b(a,c),e=new Q(null,3,5,R,[ip,Zw,b],null),f=ji.b(Dk,Wh.b(C,mi.b(d,e)));return B(f)?S0(a,b,d,e,f):new Q(null,2,5,R,[UT(a,c,function(k){return aL(UK(k,e),ip)}),null],null)}
    function S0(a,b,c,d,e){var f=JT.b(a,b);e=gd.c(function(k,l){var m=J(k,0,null);k=J(k,1,null);var r=Cf.b(d,l);return p(mi.b(m,r))?new Q(null,2,5,R,[UK(m,r),Cf.b(k,l)],null):new Q(null,2,5,R,[m,k],null)},new Q(null,2,5,R,[c,Dk],null),e);c=J(e,0,null);e=J(e,1,null);a=TT(a,qJ.a(c),aL(c,ip));if(Tc(B(e)))return new Q(null,2,5,R,[a,null],null);a=x0(a,c,f,e,U_);f=J(a,0,null);a=J(a,1,null);c=new Q(null,2,5,R,[f,MT(c)?X_(lz.a(c),qJ.a(c),b,Ni(e)):null],null);b=J(c,0,null);c=J(c,1,null);return new Q(null,2,5,
    R,[p(b)?b:f,$f(c)||Vf(c)?gd.c(Mh(Cf,I),a,c):null!=c?Mh(Cf,I)(a,c):a],null)}
    function T0(a,b){b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;var c=x.b(b,ow),d=x.b(b,Zw),e=new Q(null,3,5,R,[ip,Zw,c],null);b=aL(gd.c(function(k,l){var m=Cf.b(e,l);return p(mi.b(k,m))?UK(k,m):kL("agm.errors.unregistration.failure",["Unable to unregister missing method ",q.a(l)].join(""))},KT(a,c),d),ip);var f=TT(a,c,b);b=og(gi.a(function(k){return A.b(c,qJ.a(k))}),mg(function(k,l){var m=J(k,0,null);k=J(k,1,null);var r=S0(m,c,l,e,d);l=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[p(l)?l:m,$f(r)||
    Vf(r)?gd.c(Mh(Cf,I),k,r):null!=r?Mh(Cf,I)(k,r):k],null)},lg),new Q(null,2,5,R,[f,I],null),XT(a,ip,b,!1));a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[a,b],null)}
    function U0(a,b,c,d){var e=qJ.a(b),f=pD.a(b),k=qJ.a(d),l=pD.a(d),m=mi.b(d,new Q(null,3,5,R,[ip,Zw,e],null));m=og(fi.a(function(r){return Q0(r,f,l)}),mg(function(r,u){var v=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[K.c(v,qJ.a(u),u),Cf.b(r,Hf.b(u,Bu))],null)},lg),new Q(null,2,5,R,[m,I],null),c);c=J(m,0,null);m=J(m,1,null);return B(m)?new Q(null,2,5,R,[TT(a,k,ni(d,new Q(null,3,5,R,[ip,Zw,e],null),c)),MT(d)?W_(lz.a(d),k,e,m,U.a(lz.a(b))):null],null):new Q(null,2,5,R,[a,null],null)}
    function V0(a,b){b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;var c=x.b(b,ow);b=x.b(b,Zw);var d=Wh.b(P0,b),e=gd.c(function(f,k){return ni(f,new Q(null,4,5,R,[ip,Zw,c,qJ.a(k)],null),k)},KT(a,c),d);b=TT(a,c,e);return gd.c(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=U0(l,e,d,k);k=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(k)?k:l,$f(m)||Vf(m)?gd.c(Mh(Cf,I),f,m):null!=m?Mh(Cf,I)(f,m):f],null)},new Q(null,2,5,R,[b,I],null),XT(a,ip,e,!1))}
    function W0(a,b,c){var d=pD.a(a),e=pD.a(c);return og(fi.a(function(f){return Q0(f,d,e)}),mg(function(f,k){return Cf.b(f,K.c(Hf.b(k,Bu),Tu,qJ.a(a)))},lg),I,b)}function X0(a,b,c){var d=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,e=x.b(d,is),f=x.b(d,ow),k=x.b(d,Tu),l=x.b(d,qu),m=x.b(d,MI),r=x.b(d,kq),u=x.b(d,Xr);d=x.b(d,fI);var v=ni(c,new Q(null,3,5,R,[ip,Xw,l],null),new n(null,3,[Qr,f,MI,m,is,e],null)),y=!MT(v);c=R;e=TT(a,k,v);y?f=new Q(null,1,5,R,[wL(q0(dL(Mx.a(a)),f),new n(null,2,[U,Yp,Yp,mi.b(v,new Q(null,2,5,R,[lz,Yp],null))],null),b)],null):(a=R,b=lz.a(v),f=uL(b,Xj([kq,qu,U,zz,ow,fI,tq,Xr,MI],[r,l,ND,f,k,d,"agm",u,m])),f=new Q(null,1,5,a,[f],null));return new Q(null,
    2,5,c,[e,f],null)}function Y0(a,b,c,d,e){var f=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,k=x.b(f,is),l=x.b(f,ow),m=x.b(f,Tu),r=x.b(f,MI),u=ni(e,new Q(null,3,5,R,[ip,jA,k],null),new n(null,3,[Yr,m,MI,r,qu,c],null));l0(new xl(function(){return new n(null,5,[is,k,Qr,pD.a(u),vo,pD.a(d),Ts,mi.b(d,new Q(null,4,5,R,[ip,Zw,m,r],null)),rI,Xr.a(b)],null)}));return X0(TT(a,l,u),K.c(b,qu,c),A.b(l,m)?u:d)}
    function Z0(a,b,c,d){function e(m){return xL.K("agm",b,Dd(m),qJ.a(c),iL("agm.errors.invocation.failure","Peer has left while waiting for result"))}var f=qJ.a(d);d=Ol(function(m){return A.b(Yr.a(Ed(m)),f)},mi.b(c,new Q(null,2,5,R,[ip,jA],null)));d=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d;var k=x.b(d,!0),l=x.b(d,!1);return B(k)?new Q(null,2,5,R,[UT(a,qJ.a(c),function(m){return B(l)?ni(m,new Q(null,2,5,R,[ip,jA],null),ji.b(S,l)):qi(m,ip,Hf,jA)}),MT(c)?ki.b(e,k):null],null):new Q(null,2,5,R,[a,null],null)}
    function $0(a,b,c,d,e){var f=is.a(c),k=Qr.a(c),l=MI.a(c),m=function(){var H=JT.b(a,k);return null==H?null:UK(H,new Q(null,3,5,R,[ip,jA,f],null))}();if(p(m)){var r=TT(a,k,m),u=JT.b(r,b),v=mi.b(u,new Q(null,4,5,R,[ip,Zw,b,l],null)),y=qz.a(e),E=lC.a(e);if(MT(m)){if(p(y))return m0(new xl(function(){return new n(null,6,[is,is.a(c),Qr,pD.a(m),vo,pD.a(u),Ts,v,qz,!0,Ru,Ru.a(y)],null)})),new Q(null,2,5,R,[r,new Q(null,1,5,R,[Y_(lz.a(m),f,k,Ru.a(y))],null)],null);m0(new xl(function(){return new n(null,6,[is,
    is.a(c),Qr,pD.a(m),vo,pD.a(u),Ts,v,qz,!1,Ru,yk(E,new Q(null,2,5,R,[kJ,uE],null))],null)}));return new Q(null,2,5,R,[r,new Q(null,1,5,R,[xL.la("agm",lz.a(m),f,k,lL(E),fI.a(E))],null)],null)}return new Q(null,2,5,R,[r,new Q(null,1,5,R,[wL(q0(dL(Mx.a(r)),b),new n(null,2,[U,Yp,Yp,mi.b(m,new Q(null,2,5,R,[lz,Yp],null))],null),d)],null)],null)}return null}
    function a1(a,b,c,d,e){var f=JT.b(a,c),k=mi.b(f,new Q(null,3,5,R,[ip,Xw,b],null));return p(k)?(b=new Q(null,2,5,R,[TT(a,c,UK(f,new Q(null,3,5,R,[ip,Xw,b],null))),I],null),a=J(b,0,null),b=J(b,1,null),d=$0(a,c,k,d,e),c=J(d,0,null),d=J(d,1,null),new Q(null,2,5,R,[p(c)?c:a,$f(d)||Vf(d)?gd.c(Mh(Cf,I),b,d):null!=d?Mh(Cf,I)(b,d):b],null)):null}function b1(a,b,c,d,e,f){b=new n(null,6,[tq,"global",U,Bv,is,b,ow,c,Tn,d,ko,e],null);f=p(f)?K.c(b,eI,f):b;return uL(a,f)}Z(Pz,Bo,Vc);Z(zv,Bo,Vc);Z(sC,jH,Zf);Z(Wn,O(wt,ir,new Q(null,1,5,R,[sC],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[sC],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Fs)}],null),function(a){return M(a)&&N(a,Fs)},I,new Q(null,1,5,R,[sC],null),null,new Q(null,1,5,R,[Fs],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Fs))],null),null])));
    yT.v(null,SE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[nv,Wx,Wn],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[nv,Wx,Wn],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,dB)},function(a){return N(a,pD)},function(a){return N(a,Mc)}],null),function(a){return M(a)&&N(a,dB)&&N(a,pD)&&N(a,Mc)},I,new Q(null,3,5,R,[nv,Wx,Wn],null),null,new Q(null,3,5,R,[dB,pD,Mc],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,dB)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Mc))],null),null]))],null),null)});Z(RF,JA,JA);
    yT.v(null,mE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[RF,Pz,zv],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[RF,Pz,zv],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,EJ)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,EJ)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[RF,Pz,zv],null),null,new Q(null,3,5,R,[EJ,uE,kJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,EJ)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});
    yT.v(null,TA,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,1,5,R,[iE],null),iA,new Q(null,2,5,R,[Pz,zv],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[iE],null),new Q(null,2,5,R,[Pz,zv],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Zw)}],null),function(a){return M(a)&&N(a,Zw)},new Q(null,2,5,R,[uE,kJ],null),new Q(null,1,5,R,[iE],null),null,new Q(null,1,5,R,[Zw],null),new Q(null,2,5,R,[Pz,zv],null),new Q(null,
    2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zw))],null),null]))],null),null)});Z(GG,new Bk(null,new n(null,4,[Zv,"null",WI,"null",Yp,"null",Fs,"null"],null),null),new Bk(null,new n(null,4,[Zv,null,WI,null,Yp,null,Fs,null],null),null));
    yT.v(null,jD,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[Cq,GG,qB],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Cq,GG,qB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Tu)},function(a){return N(a,ov)},function(a){return N(a,Zw)}],null),function(a){return M(a)&&N(a,Tu)&&N(a,ov)&&N(a,Zw)},I,new Q(null,3,5,R,[Cq,GG,qB],null),null,new Q(null,3,5,R,[Tu,ov,Zw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Tu)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ov)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zw))],null),null]))],null),null)});yT.v(null,mH,function(){return cT(new Q(null,2,5,R,[rs,St],null),new Q(null,2,5,R,[rs,St],null),null)});yT.v(null,ut,function(){return cT(new Q(null,2,5,R,[rs,Wo],null),new Q(null,2,5,R,[rs,Wo],null),null)});yT.v(null,Nu,function(){return cT(new Q(null,2,5,R,[kG,KC],null),new Q(null,2,5,R,[kG,KC],null),null)});
    yT.v(null,Gr,function(){return cT(new Q(null,2,5,R,[kG,Yu],null),new Q(null,2,5,R,[kG,Yu],null),null)});
    yT.v(null,Gz,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,1,5,R,[JG],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[JG],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,fA)}],null),function(a){return M(a)&&N(a,fA)},I,new Q(null,1,5,R,[JG],null),null,new Q(null,1,5,R,[fA],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA))],null),null]))],null),
    null)});yT.v(null,OB,function(){return cT(new Q(null,2,5,R,[kG,wJ],null),new Q(null,2,5,R,[kG,wJ],null),null)});
    yT.v(null,Uw,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[JG,Pz,zv],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[JG,Pz,zv],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,fA)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[JG,Pz,zv],null),null,new Q(null,3,5,R,[fA,uE,kJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});yT.v(null,fw,function(){return cT(new Q(null,2,5,R,[kG,vG],null),new Q(null,2,5,R,[kG,vG],null),null)});yT.v(null,nt,function(){return cT(new Q(null,2,5,R,[kG,Bn],null),new Q(null,2,5,R,[kG,Bn],null),null)});yT.v(null,ox,function(){return cT(new Q(null,2,5,R,[kG,Bs],null),new Q(null,2,5,R,[kG,Bs],null),null)});
    yT.v(null,wG,function(){return cT(new Q(null,2,5,R,[kG,ar],null),new Q(null,2,5,R,[kG,ar],null),null)});Z(Xx,jH,Zf);
    yT.v(null,OA,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,5,5,R,[JG,Xx,pG,Vm,IF],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,5,5,R,[JG,Xx,pG,Vm,IF],null),null,null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,fA)},function(a){return N(a,UI)},function(a){return N(a,cE)},function(a){return N(a,Jq)},function(a){return N(a,yn)}],null),function(a){return M(a)&&N(a,fA)&&N(a,UI)&&N(a,cE)&&N(a,Jq)&&N(a,yn)},I,new Q(null,5,
    5,R,[JG,Xx,pG,Vm,IF],null),null,new Q(null,5,5,R,[fA,UI,cE,Jq,yn],null),I,new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,fA)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,UI)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,cE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Jq)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn))],null),null]))],null),null)});yT.v(null,mw,function(){return cT(new Q(null,2,5,R,[kG,jq],null),new Q(null,2,5,R,[kG,jq],null),null)});
    yT.v(null,ND,function(){return cT(new Q(null,2,5,R,[kG,vw],null),new Q(null,2,5,R,[kG,vw],null),null)});yT.v(null,Ox,function(){return cT(new Q(null,2,5,R,[kG,uz],null),new Q(null,2,5,R,[kG,uz],null),null)});
    yT.v(null,Ru,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,1,5,R,[ev],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[ev],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Ru)}],null),function(a){return M(a)&&N(a,Ru)},I,new Q(null,1,5,R,[ev],null),null,new Q(null,1,5,R,[Ru],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Ru))],null),null]))],null),
    null)});Z(Mv,Bo,Vc);
    Z(vx,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Wx],null),iA,new Q(null,1,5,R,[Mv],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Wx],null),iA,new Q(null,1,5,R,[Mv],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Wx],null),new Q(null,1,5,R,[Mv],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,pD)}],null),function(a){return M(a)&&N(a,pD)},new Q(null,1,5,R,[os],null),new Q(null,1,5,R,[Wx],null),null,new Q(null,1,5,R,[pD],
    null),new Q(null,1,5,R,[Mv],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD))],null),null]))],null),null));function c1(a,b,c){var d=LT(a,c,ip);return gd.c(function(e,f){var k=J(e,0,null);J(e,1,null);var l=J(e,0,null);e=J(e,1,null);k=JT.b(k,c);var m=pD.a(f),r=qJ.a(f),u=Dl(G([Wh.a(Qi),mi.b(f,new Q(null,3,5,R,[ip,Zw,r],null))])),v=qJ.a(k),y=MT(k),E=MT(f);m=y?Cf.b(I,AL.la("agm",b,v,r,m,new n(null,1,[Fs,E],null))):I;r=E?Cf.b(m,AL.la("agm",lz.a(f),r,v,pD.a(k),new n(null,1,[Fs,y],null))):m;k=U0(l,f,u,k);f=J(k,0,null);k=J(k,1,null);k=new Q(null,2,5,R,[f,p(k)?Cf.b(r,k):r],null);f=J(k,0,null);k=J(k,1,null);return new Q(null,
    2,5,R,[p(f)?f:l,$f(k)||Vf(k)?gd.c(Mh(Cf,I),e,k):null!=k?Mh(Cf,I)(e,k):e],null)},new Q(null,2,5,R,[a,I],null),XT(a,ip,d,!1))}function d1(a,b,c,d){d=lS(d);return c1(oL(a,c,ip,d),b,c)}
    function e1(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);x.b(d,pD);d=x.b(d,os);if(p(qL(a,f,ip)))return new Q(null,2,5,R,[a,new Q(null,1,5,R,[yL.A("agm",b,e,f)],null)],null);var k=d1(a,b,f,d);d=J(k,0,null);k=J(k,1,null);var l=JT.b(d,f);return new Q(null,2,5,R,[d,Cf.g(k,yL.A("agm",b,e,f),G([vL(q0(dL(Mx.a(a)),f),function(){var m=K.c(c,U,ds);return p(eI.a(l))?K.c(m,eI,eI.a(l)):m}())]))],null)}
    function f1(a,b,c,d){var e=JT.b(a,c),f=lz.a(e),k=function(){var m=new Q(null,2,5,R,[a,null],null),r=function(){var H=J(m,0,null),T=J(m,1,null),Y=Z0(H,f,e,b),ia=J(Y,0,null);Y=J(Y,1,null);return new Q(null,2,5,R,[p(ia)?ia:H,$f(Y)||Vf(Y)?gd.c(Mh(Cf,I),T,Y):null!=Y?Mh(Cf,I)(T,Y):T],null)}(),u=function(){var H=J(r,0,null),T=J(r,1,null),Y=x0(H,e,b,null,T_),ia=J(Y,0,null);Y=J(Y,1,null);return new Q(null,2,5,R,[p(ia)?ia:H,$f(Y)||Vf(Y)?gd.c(Mh(Cf,I),T,Y):null!=Y?Mh(Cf,I)(T,Y):T],null)}(),v=J(u,0,null);u=J(u,
    1,null);var y=R0(v,qJ.a(b),c),E=J(y,0,null);y=J(y,1,null);return new Q(null,2,5,R,[p(E)?E:v,$f(y)||Vf(y)?gd.c(Mh(Cf,I),u,y):null!=y?Mh(Cf,I)(u,y):u],null)}(),l=J(k,0,null);k=J(k,1,null);return new Q(null,2,5,R,[l,zL(f)?Cf.b(k,BL.K("agm",f,c,qJ.a(b),d)):k],null)}
    function g1(a,b,c){var d=qJ.a(b),e=og(Wh.a(qJ),mg(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=f1(l,b,k,c);k=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(k)?k:l,$f(m)||Vf(m)?gd.c(Mh(Cf,I),f,m):null!=m?Mh(Cf,I)(f,m):f],null)},lg),u0(a,b,c),XT(a,ip,b,!1));a=J(e,0,null);e=J(e,1,null);return new Q(null,2,5,R,[pL(a,d,ip),e],null)}
    function h1(a,b){AY(AG,Aa,195,new xl(function(){return new Q(null,1,5,R,["removing source from agm domain"],null)}),1481016309);b=Ch(QT(a,b,ip));a=og(Wh.a(qJ),mg(function(c,d){return pL(c,d,ip)},lg),a,b);a=gd.c(function(c,d){var e=J(c,0,null);c=J(c,1,null);var f=g1(e,d,T_);d=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(d)?d:e,$f(f)||Vf(f)?gd.c(Mh(Cf,I),c,f):null!=f?Mh(Cf,I)(c,f):c],null)},new Q(null,2,5,R,[a,null],null),b);AY(AG,Aa,206,new xl(function(){return new Q(null,1,5,R,["removed source from agm domain"],
    null)}),-1463453410);return a}function i1(a,b,c){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;var d=x.b(c,ow);c=x.b(c,is);var e=LT(a,d,ip);e=Ni(ii(Wh.b(function(f){f=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;var k=x.b(f,qJ),l=JT.b(a,d);k=nj(mi.b(f,new Q(null,3,5,R,[ip,Zw,k],null)));return W0(f,k,l)},fi.b(MT,XT(a,ip,e,!1)))));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[uL(b,new n(null,4,[Zw,e,is,c,U,Zw,ow,d],null))],null)],null)}
    var j1=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Aa,"handle-request"),function(f,k,l){return U.a(l)},e,a,b,c,d)}();j1.v(null,xH,function(a,b,c){if(zL(b))a=e1(a,b,c);else {var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,ow);x.b(d,pD);d=x.b(d,os);a=p(qL(a,c,ip))?null:d1(a,b,c,d);}return a});
    j1.v(null,LF,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=g1(a,KT(a,d),lL(c)),k=J(f,0,null);f=J(f,1,null);a=new Q(null,2,5,R,[k,Cf.g(f,yL.A("agm",b,e,d),G([vL(q0(dL(Mx.a(a)),d),K.c(c,U,bu))]))],null);}else b=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,b=x.b(b,ow),b=JT.b(a,b),a=p(b)?g1(a,b,lL(c)):null;return a});
    j1.v(null,fw,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);d=x.b(d,Zw);var k=V0(a,c);a=J(k,0,null);k=J(k,1,null);b=new Q(null,2,5,R,[a,Cf.g(k,W_(b,f,f,d,Fs),G([yL.A("agm",b,e,f),vL(q0(dL(Mx.a(a)),f),c)]))],null);}else b=V0(a,c);return b});
    j1.v(null,nt,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);d=x.b(d,Zw);var k=T0(a,c),l=J(k,0,null);k=J(k,1,null);a=new Q(null,2,5,R,[l,Cf.g(k,X_(b,f,f,d),G([yL.A("agm",b,e,f),vL(q0(dL(Mx.a(a)),f),c)]))],null);}else a=T0(a,c);return a});
    j1.v(null,mw,function(a,b,c){if(zL(b)){b=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;x.b(b,is);var d=x.b(b,ow);b=x.b(b,Tu);b=LT(a,b,ip);d=LT(a,d,ip);var e=eL(Mx.a(a)),f=J(e,0,null);e=J(e,1,null);a0(d,b,c);a=Y0(K.c(a,Mx,f),c,e,b,d);}else f=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,x.b(f,is),b=x.b(f,ow),d=x.b(f,Tu),f=x.b(f,qu),d=JT.c(a,d,ip),a=MT(d)?Y0(a,c,f,d,LT(a,b,ip)):null;return a});
    j1.v(null,Ox,function(a,b,c){zL(b);var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;b=x.b(d,qu);d=x.b(d,ow);LT(a,d,ip);return a1(a,b,d,c,new n(null,1,[qz,c],null))});j1.v(null,Nu,function(a,b,c){if(zL(b)){var d=eL(Mx.a(a));b=J(d,0,null);d=J(d,1,null);a=z0(K.c(a,Mx,b),c,d);}else d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,b=x.b(d,fA),d=x.b(d,Tu),a=p(JT.b(a,d))?z0(a,c,b):null;return a});
    j1.v(null,hH,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);d=x.b(d,fA);c=M0(a,c,f,d);a=J(c,0,null);c=J(c,1,null);a=new Q(null,2,5,R,[a,Cf.b(c,yL.A("agm",b,e,f))],null);}else e=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,x.b(e,is),b=x.b(e,ow),e=x.b(e,fA),a=M0(a,c,b,e);return a});j1.v(null,OB,function(a,b,c){return K0(a,b,c,!1)});
    j1.v(null,Gr,function(a,b,c){zL(b)?(b=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,x.b(b,fA),b=x.b(b,ow),b=LT(a,b,ip),a=C0(a,b,c)):a=D0(a,c);return a});j1.v(null,wG,function(a,b,c){return O0(a,c)});
    j1.v(null,ox,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,ow);b=x.b(d,fA);var f=x.b(d,cE),k=x.b(d,Jq);d=x.b(d,yn);var l=JT.c(a,e,ip),m=mi.b(l,new Q(null,4,5,R,[ip,$n,b,Dz],null)),r=JT.b(a,m),u=lz.a(r);if(p(u)){var v=m=R;MT(r)?(N0(new Q(null,1,5,R,[b],null),r,l,!0,f,k,d),c=qJ.a(r),c=uL(u,new n(null,8,[tq,"agm",U,OA,ow,c,fA,b,UI,!0,cE,f,Jq,k,yn,d],null))):c=wL(q0(dL(Mx.a(a)),e),new n(null,2,[U,Yp,Yp,Yp.a(u)],null),c);a=new Q(null,2,5,m,[a,new Q(null,1,5,v,[c],null)],null);}else a=
    null;return a});j1.v(null,IA,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);KT(a,d);e=a1(a,e,d,c,new n(null,1,[lC,c],null));return p(e)?e:K0(a,b,c,!0)});j1.v(null,Nz,function(a,b){return h1(a,b)});j1.v(null,$z,function(a,b,c){return i1(a,b,c)});
    j1.v(null,em,function(a,b,c){AY(IA,Aa,300,new xl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),-855943582);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("agm",b,is.b(c,-1),ow.a(c),mL("agm.errors.unhandled_message",["Unhandled message ",q.a(c)].join("")))],null)],null)});
    function k1(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,d=x.b(c,lz);c=x.b(c,Xv);try{return j1.c(a,d,c)}catch(f){var e=f;p(km(e))||AY(IA,Aa,317,new xl(function(){return new Q(null,3,5,R,[e,"Error handling request",b],null)}),-39438057);return zL(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("agm",d,is.a(c),ow.a(c),jL(e,"agm.errors.failure"))],null)],null):null}}function l1(){}l1.prototype.Yc=function(){return new n(null,3,[$v,"agm",Rn,"",Ln,1],null)};l1.prototype.Zc=function(a,b){return b};
    l1.prototype.Wc=function(a,b){return b};l1.prototype.Xc=function(a,b,c){return k1(b,c)};var m1=iL("activity.peer-removed","Peer has been removed"),n1=iL("activity.destroyed","Activity destroyed");function o1(a,b,c,d){b=new n(null,6,[tq,"activity",U,BG,ow,b,bz,c,uE,$v.a(d),kJ,sr.a(d)],null);return uL(a,b)}function p1(a,b){return new n(null,4,[tq,"activity",U,Dp,ow,a,$E,b],null)}function q1(a,b,c,d){return uL(a,new n(null,5,[tq,"activity",U,qr,is,b,ow,c,Zr,d],null))}var r1=function r1(a){return ji.b(S,Wh.b(function(c){var d=J(c,0,null);c=J(c,1,null);return new Q(null,2,5,R,[d,pi(pi(c,fI,yn),YC,r1)],null)},a))};
    function s1(a,b){a=JT.b(a,b);return new n(null,3,[ow,b,yw,Vu.a(a),U,KH.a(a)],null)}function t1(a,b,c,d,e){var f=YC.a(d);var k=Vu.a(c),l=KH.a(c);a=Xj([fs,ln,U,ow,tE,WB,tq,Dt,Zr,oA],[ki.b(Jh(s1,a),zG.a(d)),ln.a(d),Tx,qJ.a(c),U.a(d),e,"activity",ap.a(d),qJ.a(d),s1(a,oA.a(d))]);k=p(k)?K.c(a,Vu,k):a;l=p(l)?K.c(k,KH,l):k;f=p(f)?K.c(l,YC,r1(f)):l;return uL(b,f)}
    var u1=function u1(a){switch(arguments.length){case 4:return u1.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 3:return u1.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};u1.A=function(a,b,c,d){return uL(b,u1.c(a,c,d))};u1.c=function(a,b,c){var d=YC.a(c);a=Xj([fs,ln,U,ow,tE,tq,Dt,Zr,oA],[ki.b(Jh(s1,a),aU(fs.a(c),zG.a(c))),ln.a(c),bI,b,U.a(c),"activity",ap.a(c),qJ.a(c),s1(a,oA.a(c))]);return p(d)?K.c(a,YC,r1(d)):a};
    u1.F=4;var v1=Jh(yL,"activity"),w1=Jh(xL,"activity");function x1(a,b,c){return gd.c(function(d,e){e=new Q(null,2,5,R,[ZF,e],null);return ni(d,e,Cf.b(mi.c(d,e,I),c))},a,b)}function y1(a,b,c){return p(function(){var d=B(b);return d?c:d}())?gd.c(function(d,e){e=new Q(null,2,5,R,[ZF,e],null);var f=ZK(c,mi.c(d,e,null));return B(f)?ni(d,e,f):UK(d,e)},a,b):a}function z1(a,b){return p(b)?mi.b(a,new Q(null,2,5,R,[vs,b],null)):null}function A1(a,b,c){return p(b)?ni(a,new Q(null,2,5,R,[vs,b],null),c):a}
    function B1(a,b){return mi.b(a,new Q(null,2,5,R,[Vr,b],null))}function C1(a,b,c){return gd.c(function(d,e){return ni(d,new Q(null,3,5,R,[Vr,b,yw.a(e)],null),e)},a,c)}function D1(a,b,c){return gd.c(function(d,e){return UK(d,new Q(null,3,5,R,[Vr,b,e],null))},a,c)}function E1(a,b){return aU(mi.b(a,new Q(null,2,5,R,[EF,b],null)),mi.b(a,new Q(null,2,5,R,[EF,yC],null)))}function F1(a,b,c){return oi.A(a,new Q(null,2,5,R,[EF,c],null),Mh(Cf,Dk),b)}
    function G1(a,b,c){return oi.A(a,new Q(null,2,5,R,[EF,c],null),Of,b)}function H1(a,b){return p(b)?(a=z1(a,b),p(a)?a:kL("activity.errors.invalid_activity",["Unable to find activity with id ",q.a(b)].join(""))):null}function I1(a,b){return ni(a,new Q(null,2,5,R,[ao,qJ.a(b)],null),b)}function J1(a,b){return p(b)?mi.b(a,new Q(null,2,5,R,[ao,b],null)):null}function K1(a,b,c){if(p(p(b)?c:b)){var d=x.b(b,tD);return N(d,c)?a:ni(a,new Q(null,2,5,R,[ao,qJ.a(b)],null),qi(b,tD,Mh(Cf,Dk),c))}return a}function L1(a,b,c){var d=qi(b,tD,Of,c);c=A.b(c,oA.a(d))?Hf.b(d,oA):d;return new Q(null,2,5,R,[ni(a,new Q(null,2,5,R,[ao,qJ.a(b)],null),c),c],null)}
    var M1=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Ma,"apply-command"),function(f,k){return C(k)},e,a,b,c,d)}();M1.v(null,Hr,function(a,b){J(b,0,null);b=J(b,1,null);return B(b)?gh(Hf,a,b):a});M1.v(null,Qv,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?kg(K,a,b):a});
    M1.v(null,BA,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?kg(function(c,d,e){return pi(c,d,function(f){return Vf(e)||$f(e)||Vf(f)||$f(f)?e:Sf(e)&&Sf(f)?wk.g(G([f,e])):e})},a,b):a});M1.v(null,vq,function(a,b){J(b,0,null);b=J(b,1,null);return p(b)?b:a});M1.v(null,em,function(a,b){var c=J(b,0,null),d=J(b,1,null);AY(VH,Ma,101,new xl(function(){return new Q(null,4,5,R,["ignoring unknown context delta command",c,"with payload",d],null)}),31928E4);return a});function N1(a,b,c){var d=Ol(KH,c);return x1(TT(a,qJ.a(b),oi.c(b,new Q(null,2,5,R,[by,ZF],null),Mh(function(e){return kg(function(f,k,l){return K.c(f,k,C(l))},e,d)},S))),mj(d),qJ.a(b))}function O1(a,b,c){return ki.b(function(d){var e=lz.a(d);d=qJ.a(d);var f=qJ.a(b);return uL(e,new n(null,5,[tq,"activity",U,FH,ow,d,mA,f,ZF,c],null))},XT(a,by,b,!1))}
    function P1(a,b,c,d){var e=qJ.a(b);return li(Uc,Wh.b(function(f){if(p(p(d)?d:kh.b(e,qJ.a(f)))){var k=lz.a(f);f=qJ.a(f);var l=Ni(c);k=uL(k,new n(null,5,[tq,"activity",U,wI,ow,f,mA,e,ex,l],null));}else k=null;return k},XT(a,by,b,!1)))}var Q1=function Q1(a){switch(arguments.length){case 2:return Q1.b(arguments[0],arguments[1]);case 3:return Q1.c(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    Q1.b=function(a,b){return li(Uc,Wh.b(Kh(Q1,a,b),fi.b(Kh(VT,by,b),Wh.b(Jh(JT,a),Fk(ii(nj(x.b(a,ZF))))))))};Q1.c=function(a,b,c){var d=nj(mi.b(c,new Q(null,2,5,R,[by,ZF],null)));p(d)?(a=lz.a(b),b=qJ.a(b),c=qJ.a(c),d=Ni(d),a=uL(a,new n(null,5,[tq,"activity",U,FH,ow,b,mA,c,ZF,d],null))):a=null;return a};Q1.F=3;
    function R1(a,b){b=KH.a(b);p(mi.b(a,new Q(null,3,5,R,[by,ZF,b],null)))&&kL("activity.errors.factory_already_registered",["Factory for type ",q.a(b)," is already registered by this peer"].join(""));}function S1(a,b){return $K(function(c){return A.b(qJ.a(c),b)},nj(a))}
    function T1(a,b){var c=mi.b(a,new Q(null,2,5,R,[by,ZF],null));b=gd.c(function(d,e){var f=J(d,0,null);d=J(d,1,null);e=S1(c,e);return p(e)?new Q(null,2,5,R,[UK(f,new Q(null,3,5,R,[by,ZF,KH.a(e)],null)),Cf.b(d,e)],null):new Q(null,2,5,R,[f,d],null)},new Q(null,2,5,R,[a,Dk],null),b);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[aL(a,by),b],null)}
    function U1(a,b,c,d,e,f,k,l){f=p(f)?K.c(S,Tr,new n(null,4,[qJ,qJ.a(f),U,U.a(f),Dt,qJ.a(k),WF,yn.a(k)],null)):S;l=p(l)?K.c(f,Vu,l):f;f=lz.a(a);a=qJ.a(a);k=qJ.a(b);b=wk.g(G([PH.a(b),c]));return uL(f,wk.g(G([new n(null,7,[tq,"activity",U,Lr,is,e,ow,a,gx,k,PG,d,PH,b],null),l])))}function V1(a,b,c){var d=JT.b(a,ow.a(c));return p(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[w1(lz.a(d),is.a(c),qJ.a(d),b)],null)],null):new Q(null,2,5,R,[a,null],null)}
    function W1(a,b,c){a=JT.b(a,p(b)?b:C(mi.b(a,new Q(null,2,5,R,[ZF,c],null))));b=mi.b(a,new Q(null,3,5,R,[by,ZF,c],null));return p(b)?new Q(null,2,5,R,[a,b],null):kL("activity.errors.missing_factory",["Unable to find factory owner for type ",q.a(c)].join(""))}
    function X1(a,b,c,d,e,f,k){var l=W1(a,null,U.a(c)),m=J(l,0,null);l=J(l,1,null);var r=KT(a,b),u=eL(Mx.a(a));b=J(u,0,null);u=J(u,1,null);f=new n(null,4,[U,Tr,qJ,u,KH,U.a(c),Tr,new n(null,2,[qJ,qJ.a(d),yy,f],null)],null);c=p(yw.a(c))?K.c(f,Vu,yw.a(c)):f;f=pD.a(r);f=r_(a,f,c);a=rL(K.c(a,Mx,b),u,c);return new n(null,3,[Sz,a,eu,new Q(null,1,5,R,[U1(m,l,k,f,u,d,e,null)],null),WG,u],null)}function Y1(a){return nj(mi.b(a,new Q(null,1,5,R,[ao],null)))}
    function Z1(a,b,c){var d=function(){var k=null==c?null:pD.a(c);return null==k?null:dt.a(k)}(),e=function(){var k=null==c?null:eI.a(c);return null==k?null:po.a(k)}();a=nj(ao.a(a));var f=gd.c(function(k,l){return A.b(b,yw.a(l))&&A.b(d,function(){var m=null==l?null:pD.a(l);return null==m?null:dt.a(m)}())?bf(l):null},null,a);return p(f)?f:gd.c(function(k,l){A.b(b,yw.a(l))?p(e)?k=e:(k=null==l?null:eI.a(l),k=null==k?null:po.a(k)):k=!1;return p(k)?bf(l):null},null,a)}
    function $1(a,b){a=mi.b(a,new Q(null,2,5,R,[ao,b],null));if(p(a))return a;throw im(["Unable to find context with id ",q.a(b)].join(""),S);}function a2(a,b,c){if(p(p(b)?c:b)){var d=x.b(b,tD);return N(d,c)?a:ni(a,new Q(null,2,5,R,[ao,qJ.a(b)],null),qi(b,tD,Mh(Cf,Dk),c))}return a}var e5=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(sa,"apply-delta-cmd"),function(f,k){return C(k)},e,a,b,c,d)}();
    e5.v(null,Hr,function(a,b){J(b,0,null);b=J(b,1,null);return B(b)?gh(Hf,a,b):a});e5.v(null,Qv,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?kg(K,a,b):a});e5.v(null,BA,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?kg(function(c,d,e){return pi(c,d,function(f){return Vf(e)&&Vf(f)?e:Sf(e)&&Sf(f)?wk.g(G([f,e])):e})},a,b):a});e5.v(null,vq,function(a,b){J(b,0,null);b=J(b,1,null);return p(b)?b:a});
    var b2=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(sa,"apply-command"),function(f,k){return Kg.a(U.a(k))},e,a,b,c,d)}(),f5=function f5(a,b,c){b=B(b);var e=C(b),f=D(b);return null==e?c:f?K.c(a,e,function(){var k=x.b(a,e);k=null!=k&&M(k)?k:S;return f5.c?f5.c(k,f,c):f5.call(null,k,f,c)}()):K.c(a,e,c)};
    b2.v(null,yA,function(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(c,jK);c=x.b(c,JO);a=p(a)?a:S;c=ec(null==c?"":String(c))?null:UL(c,/\./,0);return f5(a,c,b)});b2.v(null,iK,function(a,b){b=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(b,JO);b=ec(null==b?"":String(b))?null:UL(b,/\./,0);return null==b?S:UK.g(a,b,G([new n(null,1,[FO,!0],null)]))});e5.v(null,hK,function(a,b){J(b,0,null);b=J(b,1,null);return gd.c(function(c,d){return b2.b(c,bL(d))},a,b)});
    e5.v(null,em,function(a,b){var c=J(b,0,null),d=J(b,1,null);AY(VH,sa,154,new xl(function(){return new Q(null,4,5,R,["ignoring unknown context delta command",c,"with payload",d],null)}),1689008759);return a});function c2(a,b,c,d){var e=qJ.a(b);return ni(ni(a,new Q(null,3,5,R,[ao,e,yn],null),gd.c(e5,function(){var f=yn.a(b);return p(f)?f:S}(),c)),new Q(null,3,5,R,[ao,e,Ln],null),d)}
    function d2(a,b,c,d,e,f,k){var l=new n(null,2,[HA,0,Zt,(new Date).getTime()],null),m=pD.a(a);a=eI.a(a);b=Xj([Ys,pD,yw,gz,qJ,Zz,tD,Ln,yn],[f,m,b,e,k,d,Dk,l,c]);return p(a)?K.c(b,eI,a):b}function f2(a,b,c,d,e,f,k){this.id=a;this.type=b;this.ac=c;this.Nb=d;this.Mb=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=f2.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "id":return this.id;case "type":return this.type;case "context-id":return this.ac;case "initiator":return this.Nb;default:return x.c(this.j,b,c)}};
    g.Aa=function(a,b,c){return gd.c(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.c?b.c(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return $k(b,function(d){return $k(b,hl,""," ","",c,d)},"#gateway.domains.activity.activity.Activity{",", ","}",c,Xg.b(new Q(null,4,5,R,[new Q(null,2,5,R,[qJ,this.id],null),new Q(null,2,5,R,[U,this.type],null),new Q(null,2,5,R,[ap,this.ac],null),new Q(null,2,5,R,[ln,this.Nb],null)],null),this.j))};
    g.ua=function(){return new gj(this,4,new Q(null,4,5,R,[qJ,U,ap,ln],null),p(this.j)?ze(this.j):mh())};g.N=function(){return this.Mb};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=246370226^Ye(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.b(this.id,b.id)&&A.b(this.type,b.type)&&A.b(this.ac,b.ac)&&A.b(this.Nb,b.Nb)&&A.b(this.j,b.j)};
    g.Ka=function(a,b){return N(new Bk(null,new n(null,4,[ln,null,U,null,qJ,null,ap,null],null),null),b)?Hf.b(Pd(ji.b(S,this),this.Mb),b):new f2(this.id,this.type,this.ac,this.Nb,this.Mb,lh(Hf.b(this.j,b)),null)};
    g.fa=function(a,b,c){return p(P.b?P.b(qJ,b):P.call(null,qJ,b))?new f2(c,this.type,this.ac,this.Nb,this.Mb,this.j,null):p(P.b?P.b(U,b):P.call(null,U,b))?new f2(this.id,c,this.ac,this.Nb,this.Mb,this.j,null):p(P.b?P.b(ap,b):P.call(null,ap,b))?new f2(this.id,this.type,c,this.Nb,this.Mb,this.j,null):p(P.b?P.b(ln,b):P.call(null,ln,b))?new f2(this.id,this.type,this.ac,c,this.Mb,this.j,null):new f2(this.id,this.type,this.ac,this.Nb,this.Mb,K.c(this.j,b,c),null)};
    g.$=function(){return B(Xg.b(new Q(null,4,5,R,[new Gi(qJ,this.id),new Gi(U,this.type),new Gi(ap,this.ac),new Gi(ln,this.Nb)],null),this.j))};g.O=function(a,b){return new f2(this.id,this.type,this.ac,this.Nb,b,this.j,this.B)};g.ga=function(a,b){return Vf(b)?this.fa(null,qd(b,0),qd(b,1)):gd.c(od,this,b)};function g2(a,b,c,d){return new f2(a,b,c,d,null,null,null)}
    function h2(a,b,c){var d=fL(Mx.a(a)),e=J(d,0,null);d=J(d,1,null);c=d2(c,d,Wq.a(b),Tr,gz.a(b),Ys.a(b),d);var f=Qq.b(e,1);var k=["a-",q.a($y.a(e)),"-",q.a(f)].join("");f=new Q(null,2,5,R,[K.c(e,Qq,f+1),k],null);e=J(f,0,null);f=J(f,1,null);b=K.c(g2(f,tE.a(b),d,ow.a(b)),gn,b);return new Q(null,3,5,R,[K.c(a,Mx,e),b,c],null)}function i2(a,b,c){return ji.c(I,Ih.b(fi.a(function(d){return A.b(b,mi.b(d,new Q(null,2,5,R,[pD,dt],null)))}),Wh.a(function(d){var e=lz.a(d);d=qJ.a(d);return uL(e,p1(d,c))})),NT(a,by))}function j2(a,b,c){return ji.c(I,Ih.b(fi.a(function(d){return A.b(b,mi.b(d,new Q(null,2,5,R,[pD,dt],null)))}),Wh.a(function(d){var e=lz.a(d);d=qJ.a(d);return uL(e,new n(null,4,[tq,"activity",U,pF,ow,d,$E,c],null))})),NT(a,by))}
    function k2(a,b){a=Fk(nj(B1(a,mi.b(b,new Q(null,2,5,R,[pD,dt],null)))));if(B(a)){var c=R,d=lz.a(b);b=qJ.a(b);b=new Q(null,1,5,c,[uL(d,p1(b,a))],null);}else b=null;return b}function l2(a,b,c){a=x.b(B1(a,mi.b(b,new Q(null,2,5,R,[pD,dt],null))),c);return p(a)?a:kL("activity.errors.missing_type",["Unable to find activity type ",q.a(c)].join(""))}function m2(a,b){var c=PH.a(a);return wk.g(G([c,x.b(b,new n(null,1,[U,U.a(a)],null)),x.b(b,new n(null,2,[U,U.a(a),yw,yw.a(a)],null))]))}
    function n2(a,b,c,d,e){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;var f=x.b(a,Sz),k=x.b(a,Tr);b=X1(f,c,b,k,d,!0,m2(b,e));return VK(WK(K.c(a,Sz,Sz.a(b)),new Q(null,1,5,R,[eu],null),eu.a(b)),new Q(null,2,5,R,[Tr,aC],null),G([WG.a(b)]))}
    function o2(a,b,c,d,e){a=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;x.b(a,Sz);var f=x.b(a,Tr);return gd.c(function(k,l){try{var m=X1(Sz.a(k),c,l,Tr.a(k),d,!1,m2(l,e)),r=null!=m&&(m.h&64||h===m.D)?fh(qk,m):m,u=x.b(r,Sz),v=x.b(r,eu),y=x.b(r,WG);return VK(WK(K.c(k,Sz,u),new Q(null,1,5,R,[eu],null),v),new Q(null,2,5,R,[Tr,aC],null),G([y]))}catch(H){var E=H;AY(VH,ya,157,new xl(function(){return new Q(null,5,5,R,[E,"Unable to create helper type",l,"for activity",qJ.a(f)],null)}),2059607643);return k}},a,b)}
    function p2(a,b,c,d){var e=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,f=x.b(e,is);e=x.b(e,ow);var k=LT(a,e,by),l=tE.a(c),m=l2(a,k,l);d=ji.b(S,Wh.b(function(u){return new Q(null,2,5,R,[yk(u,new Q(null,2,5,R,[U,yw],null)),PH.a(u)],null)},d));var r=rx.a(c);p(p(r)?!Pf(d):r)&&kL("activity.errors.activity_is_child","Cannot specify types override and custom configuration at the same time");a=h2(a,c,k);c=J(a,0,null);k=J(a,1,null);a=J(a,2,null);b=o2(n2(new n(null,3,[Sz,c,eu,new Q(null,1,5,R,[q1(b,f,e,qJ.a(k))],
    null),Tr,k],null),function(){var u=uH.a(r);return p(u)?u:uH.a(m)}(),e,a,d),function(){var u=aG.a(r);return p(u)?u:aG.a(m)}(),e,a,d);e=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;f=x.b(e,Sz);b=x.b(e,eu);e=x.b(e,Tr);f=A1(I1(f,a),qJ.a(e),e);return new Q(null,2,5,R,[f,b],null)}function q2(a,b,c){var d=qJ.a(c);return N(zG.a(a),d)||N(fs.a(a),d)||A.b(oA.a(a),d)?!0:VT.la(pD.a(b),gz.a(a),mi.b(b,new Q(null,2,5,R,[eI,po],null)),pD.a(c),null,mi.b(c,new Q(null,2,5,R,[eI,po],null)))}
    function r2(a,b,c){var d=oA.a(b),e=zG.a(b);return ki.b(function(f){return t1(a,lz.a(f),f,b,c)},fi.b(Uc,Wh.b(function(f){return JT.b(a,f)},Cf.b(e,d))))}function s2(a,b){return bU(Ek([b]),x.c(a,fs,Dk),G([x.b(a,zG)]))}function t2(a,b,c,d){return fi.b(Kh(q2,c,d),Wh.b(Jh(JT,a),gi.b(Jh(A,b),aU(E1(a,U.a(c)),p(!0)?s2(c,qJ.a(d)):null))))}function u2(a,b){var c=U.a(b),d=JT.b(a,oA.a(b));return ki.b(function(e){return u1.A(a,lz.a(e),qJ.a(e),b)},fi.b(function(e){return q2(b,d,e)},Wh.b(Jh(JT,a),E1(a,c))))}
    function v2(a,b,c,d){return p(Io.a(b))?(c=JT.b(a,c),ki.b(function(e){var f=lz.a(e);e=qJ.a(e);var k=qJ.a(b);e=new n(null,6,[tq,"activity",U,Hw,ow,e,Zr,k,uE,$v.a(d),kJ,sr.a(d)],null);return uL(f,e)},t2(a,null,b,c))):null}function w2(a,b,c){if(p(Io.a(b))){var d=qJ.a(c);return ki.b(function(e){var f=lz.a(e),k=qJ.a(e),l=qJ.a(b),m=Vu.a(c);e=KH.a(c);k=new n(null,5,[tq,"activity",U,kF,ow,k,Zr,l,mA,qJ.a(c)],null);m=p(m)?K.c(k,Vu,m):k;e=p(e)?K.c(m,KH,e):m;return uL(f,e)},t2(a,d,b,c))}return null}
    function x2(a,b,c,d){var e=qJ.a(b);return ki.b(function(f){var k=lz.a(f),l=qJ.a(f),m=qJ.a(c);f=Vu.a(b);l=new n(null,6,[tq,"activity",U,aD,ow,l,Zr,m,sv,qJ.a(b),Ky,KH.a(b)],null);f=p(f)?K.c(l,Zx,f):l;return uL(k,f)},t2(a,e,c,d))}function y2(a,b,c,d){var e=JT.b(a,oA.a(c));return ki.b(function(f){var k=lz.a(f);f=qJ.a(f);var l=qJ.a(c);f=new n(null,7,[tq,"activity",U,mn,ow,f,Zr,l,lu,b,uE,$v.a(d),kJ,sr.a(d)],null);return uL(k,f)},t2(a,b,c,e))}
    function z2(a,b,c){var d=qJ.a(c),e=ap.a(b);e=J1(a,e);b=qi(b,zG,Mh(Cf,Dk),d);if(p(Io.a(b))){var f=oA.a(b);f=JT.b(a,f);c=Cf.b(x2(a,c,b,f),t1(a,lz.a(c),c,b,yn.a(e)));}else c=null;return new n(null,3,[Sz,K1(a,e,d),Tr,b,eu,c],null)}function A2(a){return aL(UK(UK(a,new Q(null,2,5,R,[by,eJ],null)),new Q(null,2,5,R,[by,oA],null)),by)}
    function B2(a,b,c){return gd.c(function(d,e){var f=J(d,0,null);d=J(d,1,null);var k=JT.b(f,e);return p(k)?new Q(null,2,5,R,[TT(f,e,A2(k)),Cf.b(d,o1(lz.a(k),e,null,c))],null):new Q(null,2,5,R,[f,d],null)},new Q(null,2,5,R,[a,I],null),b)}function C2(a,b){return gd.c(function(c,d){return C(sL(c,d))},a,aC.a(b))}
    function D2(a,b,c){var d=gn.a(b),e=oA.a(b);qJ.a(b);var f=R;a=C2(a,b);var k=qJ.a(b);a=UK(a,new Q(null,2,5,R,[vs,k],null));k=ap.a(b);a=UK(a,new Q(null,2,5,R,[ao,k],null));a=new Q(null,2,5,f,[a,null],null);f=J(a,0,null);a=J(a,1,null);var l=B2(f,bU(Ek([e]),fs.a(b),G([zG.a(b)])),c);k=J(l,0,null);l=J(l,1,null);a=new Q(null,2,5,R,[p(k)?k:f,$f(l)||Vf(l)?gd.c(Mh(Cf,I),a,l):null!=l?Mh(Cf,I)(a,l):a],null);f=J(a,0,null);a=J(a,1,null);e=new Q(null,2,5,R,[f,v2(f,b,e,c)],null);b=J(e,0,null);e=J(e,1,null);e=new Q(null,
    2,5,R,[p(b)?b:f,$f(e)||Vf(e)?gd.c(Mh(Cf,I),a,e):null!=e?Mh(Cf,I)(a,e):a],null);b=J(e,0,null);e=J(e,1,null);f=p(d)?JT.b(b,ow.a(d)):d;return p(f)?new Q(null,2,5,R,[b,Cf.b(e,w1(lz.a(f),is.a(d),ow.a(d),c))],null):new Q(null,2,5,R,[b,e],null)}function E2(a,b){p(yy.a(b))?(b=z1(a,qJ.a(b)),a=D2(a,b,iL("activity.errors.owner_creation","Activity owner cannot be created"))):a=new Q(null,2,5,R,[a,null],null);return a}function F2(a,b){var c=p(fs.a(a))?qi(a,fs,Of,b):a;return p(zG.a(a))?qi(c,zG,Of,b):c}
    function G2(a,b,c,d){AY(AG,ya,563,new xl(function(){return new Q(null,5,5,R,["a participant",qJ.a(c),"of activity",qJ.a(b),"has left"],null)}),-209386152);var e=qJ.a(c),f=F2(b,e),k=qJ.a(f);d=y2(a,e,f,d);return new n(null,3,[Sz,C(L1(A1(TT(a,e,A2(c)),k,f),J1(a,ap.a(f)),e)),Tr,f,eu,d],null)}
    function H2(a,b,c,d,e){var f=qJ.a(c);AY(AG,ya,583,new xl(function(){return new Q(null,5,5,R,["the owner",f,"of activity",qJ.a(b),"has left"],null)}),1899025864);if(p(e))return D2(TT(a,f,A2(c)),b,d);a=G2(a,b,c,d);c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(c,Sz);c=x.b(c,eu);return new Q(null,2,5,R,[a,c],null)}
    function I2(a,b,c,d,e,f){a=B(e)?gd.c(function(k,l){return f.c?f.c(k,d,l):f.call(null,k,d,l)},a,gi.b(Qc,e)):f.c?f.c(a,d,yC):f.call(null,a,d,yC);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[v1(b,c,d)],null)],null)}
    function J2(a,b,c){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;var d=x.b(c,is),e=x.b(c,ow),f=x.b(c,lp);c=LT(a,e,by);b=I2(a,b,d,e,f,F1);a=J(b,0,null);b=J(b,1,null);d=fi.b(Io,nj(x.b(a,vs)));return new Q(null,2,5,R,[a,ji.b(b,ki.b(Lh(u1,a,lz.a(c),qJ.a(c)),B(f)?fi.b(function(k){return N(f,U.a(k))},d):d))],null)}function K2(a,b,c,d,e){return uL(b,new n(null,5,[tq,a,U,du,is,c,ow,d,Dt,e],null))}function L2(a,b,c,d,e){return uL(b,new n(null,6,[tq,a,U,KE,ow,c,Dt,d,uE,$v.a(e),kJ,sr.a(e)],null))}function M2(a){return [q.a(a),".errors.not_authorized"].join("")}function N2(a){return mL([q.a(a),".destroyed"].join(""),"Context destroyed explicitly")}function O2(a){return mL([q.a(a),".peer-left"].join(""),"Context destroyed because its owner/last peer left")}function P2(a){return [q.a(a),".errors.failure"].join("")}Z(zB,Bo,Vc);
    Z(ps,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Wx],null),iA,new Q(null,1,5,R,[zB],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Wx],null),iA,new Q(null,1,5,R,[zB],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Wx],null),new Q(null,1,5,R,[zB],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,pD)}],null),function(a){return M(a)&&N(a,pD)},new Q(null,1,5,R,[os],null),new Q(null,1,5,R,[Wx],null),null,new Q(null,1,5,R,[pD],
    null),new Q(null,1,5,R,[zB],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD))],null),null]))],null),null));Z(rJ,Bp,Bp);Z(DI,O(hq,Bo),eT(Uy,Vc,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,Bo)],null),null));Z(cC,Hq,M);Z(ro,Hq,M);Z(mC,Hq,M);Z(jo,new Bk(null,new n(null,2,[iK,"null",yA,"null"],null),null),new Bk(null,new n(null,2,[iK,null,yA,null],null),null));Z(tT,Bo,Vc);Z(uT,BI,Wc);
    Z(GO,O(wt,ir,new Q(null,2,5,R,[jo,tT],null),iA,new Q(null,1,5,R,[uT],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[jo,tT],null),new Q(null,1,5,R,[uT],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,JO)}],null),function(a){return M(a)&&N(a,U)&&N(a,JO)},new Q(null,1,5,R,[jK],null),new Q(null,2,5,R,[jo,tT],null),null,new Q(null,2,5,R,[U,JO],null),new Q(null,1,5,R,[uT],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,JO))],null),null])));Z(HO,O(hq,GO,Os,XF,uC,I),eT(GO,GO,new n(null,6,[uC,I,Zn,XF,NC,function(a){return Vf(a)},Os,Vf,sy,!0,NH,O(hq,GO,uC,I,Os,XF)],null),null));
    Z(wx,O(wt,iA,new Q(null,5,5,R,[DI,cC,ro,mC,HO],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,5,5,R,[DI,cC,ro,mC,HO],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,5,5,R,[Hr,Qv,BA,vq,hK],null),I,null,I,new Q(null,5,5,R,[DI,cC,ro,mC,HO],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));
    Z(cr,O(xv,Wp,O(wt,ir,new Q(null,2,5,R,[rJ,wx],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,2,5,R,[rJ,wx],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[rJ,wx],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,oo)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,oo)},I,new Q(null,2,5,R,[rJ,wx],null),null,new Q(null,2,5,R,[Dt,oo],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,oo))],null),null]))],null),null));Z(Cz,O(W,new Q(null,1,5,R,[V],null),O(Fq,bn,O(Xp,V))),function(a){return QS(bn,Kg.a(a))});Z(Pr,O(CJ,Bo),rT(Bo,Vc,null));Z(gE,O(CJ,Bo),rT(Bo,Vc,null));
    Z(JB,O(xv,Wp,O(wt,ir,new Q(null,3,5,R,[Xy,LI,Cz],null),iA,new Q(null,3,5,R,[ZC,Pr,gE],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,3,5,R,[Xy,LI,Cz],null),iA,new Q(null,3,5,R,[ZC,Pr,gE],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Xy,LI,Cz],null),new Q(null,3,5,R,[ZC,Pr,gE],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,yw)},function(a){return N(a,yn)},function(a){return N(a,Zz)}],null),function(a){return M(a)&&
    N(a,yw)&&N(a,yn)&&N(a,Zz)},new Q(null,3,5,R,[Ln,gz,Ys],null),new Q(null,3,5,R,[Xy,LI,Cz],null),null,new Q(null,3,5,R,[yw,yn,Zz],null),new Q(null,3,5,R,[ZC,Pr,gE],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zz))],null),null]))],null),null));Z(rJ,Bp,Bp);
    Z(IC,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[rJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[rJ],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));
    Z(fu,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[rJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[rJ],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));
    Z(Sp,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[rJ],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[rJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[rJ],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));Z(rF,Bo,Vc);Z(ww,Bo,Vc);Z(bE,JA,JA);
    yT.v(null,PB,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[bE,yt,wx],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[bE,yt,wx],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,CE)},function(a){return N(a,Dt)},function(a){return N(a,oo)}],null),function(a){return M(a)&&N(a,CE)&&N(a,Dt)&&N(a,oo)},I,new Q(null,3,5,R,[bE,yt,wx],null),null,new Q(null,3,5,R,[CE,Dt,oo],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,CE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,oo))],null),null]))],null),null)});yT.v(null,pJ,function(){return cT(new Q(null,2,5,R,[kG,cr],null),new Q(null,2,5,R,[kG,cr],null),null)});
    yT.v(null,du,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,1,5,R,[yt],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[yt],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[yt],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],null),null]))],null),
    null)});Z(qH,JA,JA);Z(yt,Bp,Bp);
    yT.v(null,on,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[qH,yt,Xy],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[qH,yt,Xy],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Vp)},function(a){return N(a,Dt)},function(a){return N(a,yw)}],null),function(a){return M(a)&&N(a,Vp)&&N(a,Dt)&&N(a,yw)},I,new Q(null,3,5,R,[qH,yt,Xy],null),null,new Q(null,3,5,R,[Vp,Dt,yw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Vp)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw))],null),null]))],null),null)});
    yT.v(null,ly,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,2,5,R,[yt,LI],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[yt,LI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,yn)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,yn)},I,new Q(null,2,5,R,[yt,LI],null),null,new Q(null,2,5,R,[Dt,yn],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn))],null),null]))],null),null)});
    yT.v(null,KE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[yt,rF,ww],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[yt,rF,ww],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[yt,rF,ww],null),null,new Q(null,3,5,R,[Dt,uE,kJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});yT.v(null,Pu,function(){return cT(new Q(null,2,5,R,[kG,JB],null),new Q(null,2,5,R,[kG,JB],null),null)});yT.v(null,Tt,function(){return cT(new Q(null,2,5,R,[kG,Sp],null),new Q(null,2,5,R,[kG,Sp],null),null)});yT.v(null,Qw,function(){return cT(new Q(null,2,5,R,[kG,IC],null),new Q(null,2,5,R,[kG,IC],null),null)});
    yT.v(null,bx,function(){return cT(new Q(null,2,5,R,[kG,fu],null),new Q(null,2,5,R,[kG,fu],null),null)});function Q2(a,b){a=Ln.a(a);b=Ln.a(b);return HA.a(a)>HA.a(b)||A.b(HA.a(a),HA.a(b))&&Zt.a(a)>=Zt.a(b)}function R2(a,b){var c=Zz.a(a);if(A.b(c,Tr))a=N(tD.a(a),qJ.a(b));else {var d=(c=A.b(Zz.a(a),Mw))&&A.b(oA.a(a),qJ.a(b));a=d?d:c?!1:mS(Ys.a(a),pD.a(a),pD.a(b));}return a}
    function S2(a,b,c){A.b(Zz.a(b),Tr)&&kL(M2(a),"Activity contexts cannot be explicitly destroyed");var d=Zz.a(b);if(A.b(d,Tr))b=N(tD.a(b),qJ.a(c));else {var e=(d=A.b(Zz.a(b),Mw))&&A.b(oA.a(b),qJ.a(c));b=e?e:d?!1:mS(Ys.a(b),pD.a(b),pD.a(c));}p(b)||kL(M2(a),"Not authorized to update context");}function T2(a,b){return mS(gz.a(a),pD.a(a),pD.a(b))}function U2(a,b){return MT(a)?kh.b(Zz.a(b),Tr)?T2(b,a):!1:!1}function V2(a,b,c){p(T2(b,c))||kL(M2(a),"Not authorized to read context");}
    function W2(a){return p(mi.b(a,new Q(null,2,5,R,[eI,pu],null)))?"global":"context"}function X2(a,b,c,d,e){var f=qJ.a(b);a=c2(a,b,d,e);return new Q(null,2,5,R,[a,ki.b(function(k){var l=W2(k),m=lz.a(k);k=qJ.a(k);return uL(m,new n(null,6,[tq,l,U,PB,ow,k,CE,c,Dt,f,oo,d],null))},fi.b(MT,Wh.b(Jh(JT,a),gi.b(Jh(A,c),tD.a(b)))))],null)}
    function Y2(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;x.b(c,is);var d=x.b(c,ow),e=x.b(c,yw);c=x.b(c,oo);try{var f=KT(a,d),k=Z1(a,e,f);if(p(k))return p(function(){var m=R2(k,f);return p(m)?Q2(b,k):m}())?X2(a,k,d,bL(c),Ln.a(b)):new Q(null,2,5,R,[a,null],null);AY(VH,pa,155,new xl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),1931868431);return new Q(null,2,5,R,[a,null],null)}catch(m){var l=m;AY(IA,pa,159,new xl(function(){return new Q(null,2,5,R,[l,"error performing remote context update"],
    null)}),222751919);return new Q(null,2,5,R,[a,null],null)}}
    function $2(a,b,c,d){if(zL(c)){var e=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d,f=x.b(e,is),k=x.b(e,ow),l=x.b(e,Dt);e=x.b(e,oo);try{var m=KT(b,k),r=$1(b,l),u=Ln.b(r,new n(null,1,[HA,0],null));var v=K.c(pi(u,HA,$e),Zt,(new Date).getTime());p(R2(r,m))||kL(a,"Not authorized to update context");var y=X2(b,r,k,bL(e),v),E=J(y,0,null),H=J(y,1,null),T=new Q(null,2,5,R,[E,new Q(null,2,5,R,[yL.A(a,c,f,k),vL(q0(dL(Mx.a(b)),k),K.g(d,U,pJ,G([Ln,v,yw,yw.a(r)])))],null)],null),Y=J(T,0,null),ia=J(T,1,null);var ba=new Q(null,
    2,5,R,[p(Y)?Y:E,$f(ia)||Vf(ia)?gd.c(Mh(Cf,I),H,ia):null!=ia?Mh(Cf,I)(H,ia):H],null);}catch(wa){ba=new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(a,c,f,k,jL(wa,P2(a)))],null)],null);}}else ba=Y2(b,d);return ba}function a3(a){if(a instanceof z)return a;switch(a){case "ownership":return Mw;case "ref-counted":return Go;case "retained":return aI;default:return null}}
    function b3(a,b,c,d){d=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d;var e=x.b(d,yw),f=x.b(d,yn),k=x.b(d,Zz),l=x.b(d,gz),m=x.b(d,Ys),r=x.b(d,ow),u=fL(Mx.a(a));d=J(u,0,null);u=J(u,1,null);b=K.g(d2(b,e,f,k,l,m,u),tD,Ek([r]),G([an,c]));b=A.b(k,Mw)?K.c(b,oA,r):b;c=R;a=K.c(a,Mx,d);a=ni(a,new Q(null,2,5,R,[ao,qJ.a(b)],null),b);return new Q(null,2,5,c,[a,b],null)}
    function c3(a,b,c,d,e,f){b=a2(b,e,f);var k=R,l=R,m=qJ.a(e);e=yn.a(e);return new Q(null,2,5,k,[b,new Q(null,1,5,l,[uL(c,new n(null,6,[tq,a,U,ly,is,d,ow,f,Dt,m,yn,e],null))],null)],null)}
    function d3(a,b,c){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;x.b(c,is);var d=x.b(c,ow),e=x.b(c,yw);try{var f=KT(b,d),k=Z1(b,e,f);if(p(k))return V2(a,k,f),new Q(null,2,5,R,[a2(b,k,d),null],null);AY(VH,pa,254,new xl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),303241329);return new Q(null,2,5,R,[b,null],null)}catch(l){return new Q(null,2,5,R,[b,null],null)}}
    function e3(a,b,c,d){if(zL(c)){var e=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d,f=x.b(e,is),k=x.b(e,ow);e=x.b(e,Dt);try{var l=KT(b,k),m=$1(b,e),r=Jh(c3,a);V2(a,m,l);var u=new Q(null,2,5,R,[b,null],null),v=J(u,0,null),y=J(u,1,null),E=r(v,c,f,m,k),H=J(E,0,null),T=J(E,1,null);var Y=new Q(null,2,5,R,[p(H)?H:v,$f(T)||Vf(T)?gd.c(Mh(Cf,I),y,T):null!=T?Mh(Cf,I)(y,T):y],null);var ia=J(Y,0,null),ba=J(Y,1,null),wa=new Q(null,2,5,R,[null,vL(q0(dL(Mx.a(b)),k),K.g(d,U,Qw,G([yw,yw.a(m)])))],null),ua=J(wa,0,null),pb=
    J(wa,1,null);var sb=new Q(null,2,5,R,[p(ua)?ua:ia,$f(pb)||Vf(pb)?gd.c(Mh(Cf,I),ba,pb):null!=pb?Mh(Cf,I)(ba,pb):ba],null);}catch(rb){sb=new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(a,c,f,k,jL(rb,P2(a)))],null)],null);}}else sb=d3(a,b,d);return sb}function f3(a,b,c){var d=yw.a(b),e=qJ.a(b),f=qJ.a(c);return ji.c(I,Ih.c(fi.a(MT),fi.a(Jh(T2,b)),Wh.a(function(k){var l=W2(k),m=lz.a(k);k=qJ.a(k);return uL(m,new n(null,6,[tq,l,U,on,ow,k,Vp,f,Dt,e,yw,d],null))})),XT(a,ct,c,!0))}
    function g3(a,b,c){var d=qJ.a(a);return ji.c(I,Ih.c(fi.a(MT),fi.a(Jh(T2,a)),Wh.a(function(e){return L2(W2(e),lz.a(e),qJ.a(e),d,c)})),b)}function h3(a,b){var c=lS(gz.a(b)),d=lS(Ys.a(b)),e=a3(Zz.a(b));p(e)||kL([q.a(a),".errors.bad_lifetime"].join(""),["Bad lifetime value ",q.a(e)].join(""));return wk.g(G([b,new n(null,3,[gz,c,Ys,d,Zz,e],null)]))}
    function i3(a,b,c,d){var e=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d,f=x.b(e,is),k=x.b(e,ow);e=x.b(e,yw);try{var l=KT(b,k),m=Z1(b,e,l);if(p(m))return V2(a,m,k),c3(a,b,c,f,m,k);var r=b3(b,l,!0,h3(a,d)),u=J(r,0,null),v=J(r,1,null);return new Q(null,2,5,R,[u,Cf.g(f3(u,v,l),K2(a,c,f,k,qJ.a(v)),G([vL(q0(dL(Mx.a(b)),k),K.g(d,U,Pu,G([Ln,Ln.a(v)])))]))],null)}catch(E){var y=E;AY(IA,pa,383,new xl(function(){return new Q(null,2,5,R,[y,"error"],null)}),-3677801);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(a,
    c,f,k,jL(y,P2(a)))],null)],null)}}function j3(a,b,c,d){if(zL(c))var e=i3(a,b,c,d);else {var f=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d;x.b(f,is);c=x.b(f,ow);f=x.b(f,yw);try{var k=KT(b,c),l=Z1(b,f,k);if(p(l))V2(a,l,c),e=Q2(d,l)?X2(b,l,c,new n(null,1,[vq,yn.a(d)],null),Ln.a(d)):new Q(null,2,5,R,[b,null],null);else {var m=b3(b,k,!1,h3(a,d)),r=J(m,0,null),u=J(m,1,null);e=new Q(null,2,5,R,[r,f3(r,u,k)],null);}}catch(v){e=new Q(null,2,5,R,[b,null],null);}}return e}
    function k3(a,b,c,d){var e=qJ.a(c),f=tD.a(c);return new Q(null,2,5,R,[UK(b,new Q(null,2,5,R,[ao,e],null)),gd.c(Cf,ki.b(function(k){return L2(a,lz.a(k),qJ.a(k),e,d)},fi.b(MT,Wh.b(Jh(JT,b),f))),g3(c,Dl(G([gi.b(function(k){return x.b(f,qJ.a(k))},NT(b,ct))])),d))],null)}
    function l3(a,b,c){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;var d=x.b(c,ow),e=x.b(c,yw);try{var f=KT(b,d),k=Z1(b,e,f);if(p(k))return S2(a,k,f),k3(a,b,k,N2(a));AY(VH,pa,437,new xl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),1815829467);return new Q(null,2,5,R,[b,null],null)}catch(l){return new Q(null,2,5,R,[b,null],null)}}
    function m3(a,b,c,d){if(zL(c)){var e=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d,f=x.b(e,is),k=x.b(e,ow);e=x.b(e,Dt);try{var l=KT(b,k),m=$1(b,e);S2(a,m,l);var r=k3(a,b,m,N2(a)),u=J(r,0,null),v=J(r,1,null),y=new Q(null,2,5,R,[null,new Q(null,2,5,R,[yL.A(a,c,f,k),vL(q0(dL(Mx.a(b)),k),K.g(d,U,Tt,G([yw,yw.a(m)])))],null)],null),E=J(y,0,null),H=J(y,1,null);var T=new Q(null,2,5,R,[p(E)?E:u,$f(H)||Vf(H)?gd.c(Mh(Cf,I),v,H):null!=H?Mh(Cf,I)(v,H):v],null);}catch(Y){T=new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(a,c,
    f,k,jL(Y,P2(a)))],null)],null);}}else T=l3(a,b,d);return T}var n3=function n3(a){switch(arguments.length){case 3:return n3.c(arguments[0],arguments[1],arguments[2]);case 4:return n3.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.a(arguments.length)].join(""));}};
    n3.c=function(a,b,c){var d=qJ.a(c),e=Jh(n3,a);return gd.c(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=e(l,d,k);k=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(k)?k:l,$f(m)||Vf(m)?gd.c(Mh(Cf,I),f,m):null!=m?Mh(Cf,I)(f,m):f],null)},new Q(null,2,5,R,[b,I],null),Y1(b))};
    n3.A=function(a,b,c,d){if(N(tD.a(d),c)){var e=qi(d,tD,Of,c);c=A.b(c,oA.a(e))?Hf.b(e,oA):e;d=new Q(null,2,5,R,[ni(b,new Q(null,2,5,R,[ao,qJ.a(d)],null),c),c],null);b=J(d,0,null);d=J(d,1,null);a:switch(c=Zz.a(d),c instanceof z?c.da:null){case "ownership":c=null==oA.a(d);break a;case "ref-counted":c=Pf(tD.a(d));break a;default:c=!1;}return p(c)?k3(a,b,d,O2(a)):new Q(null,2,5,R,[b,null],null)}return new Q(null,2,5,R,[b,null],null)};n3.F=4;
    function o3(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;x.b(d,is);var e=x.b(d,ow),f=x.b(d,yw);try{var k=KT(b,e),l=Z1(b,f,k);if(p(l))return n3.A(a,b,e,l);AY(VH,pa,508,new xl(function(){return new Q(null,2,5,R,["unable to find remote context",f],null)}),1349283870);return new Q(null,2,5,R,[b,null],null)}catch(r){var m=r;AY(VH,pa,512,new xl(function(){return new Q(null,3,5,R,[m,"unable to process remote unsubscribe",c],null)}),82328913);return new Q(null,2,5,R,[b,null],null)}}
    function p3(a,b,c,d){if(zL(c)){var e=null!=d&&(d.h&64||h===d.D)?fh(qk,d):d,f=x.b(e,is),k=x.b(e,ow);e=x.b(e,Dt);try{KT(b,k);var l=$1(b,e),m=n3.A(a,b,k,l),r=J(m,0,null),u=J(m,1,null),v=new Q(null,2,5,R,[null,new Q(null,2,5,R,[yL.A(a,c,f,k),vL(q0(dL(Mx.a(b)),k),K.g(d,U,bx,G([yw,yw.a(l)])))],null)],null),y=J(v,0,null),E=J(v,1,null);var H=new Q(null,2,5,R,[p(y)?y:r,$f(E)||Vf(E)?gd.c(Mh(Cf,I),u,E):null!=E?Mh(Cf,I)(u,E):u],null);}catch(T){H=new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K(a,c,f,k,jL(T,P2(a)))],
    null)],null);}}else H=o3(a,b,d);return H}function q3(a,b,c){var d=lz.a(c),e=qJ.a(c);return Wh.b(function(f){var k=oA.a(f),l=qJ.a(f);f=yw.a(f);return uL(d,new n(null,6,[tq,a,U,on,ow,e,Vp,k,Dt,l,yw,f],null))},fi.b(Jh(U2,c),Y1(b)))}function r3(a,b){a=JT.b(a,ow.a(Xv.a(b)));return p(a)?Tc(pu.a(eI.a(a))):null}var s3=Jh($2,"activity");function t3(a,b){var c=sL(a,is.a(b));a=J(c,0,null);var d=J(c,1,null);if(p(d))switch(c=U.a(d),c instanceof z?c.da:null){case "activity":return b=Tr.a(d),p(b)?E2(a,b):null;case "create-peer":return V1(a,lL(b),gn.a(d));default:return AY(IA,za,35,new xl(function(){return new Q(null,2,5,R,["Unable to handle error for an unknown incoming request type",U.a(d)],null)}),223675566)}else return null}var u3=Kh(ZT,"activity",by);
    function v3(a,b,c,d){var e=new Q(null,2,5,R,[a,null],null),f=function(){var m=J(e,0,null),r=J(e,1,null);var u=mi.b(b,new Q(null,2,5,R,[by,eJ],null)),v=z1(m,u);if(p(v)){u=oA.a(v);var y=qJ.a(b);var E=N(Us.a(v),y);v=E?qi(v,Us,Mh(Of,Dk),y):v;A.b(u,y)?y=H2(m,v,b,c,!E):(u=G2(m,v,b,c),y=null!=u&&(u.h&64||h===u.D)?fh(qk,u):u,u=x.b(y,Sz),y=x.b(y,eu),y=new Q(null,2,5,R,[u,y],null));}else y=null;u=J(y,0,null);y=J(y,1,null);return new Q(null,2,5,R,[p(u)?u:m,$f(y)||Vf(y)?gd.c(Mh(Cf,I),r,y):null!=y?Mh(Cf,I)(r,y):
    r],null)}(),k=function(){var m=J(f,0,null),r=J(f,1,null),u=nj(mi.b(b,new Q(null,2,5,R,[by,ZF],null)));var v=p(u)?new Q(null,2,5,R,[y1(m,Wh.b(KH,u),qJ.a(b)),P1(m,b,Wh.b(qJ,u),!1)],null):null;u=J(v,0,null);v=J(v,1,null);return new Q(null,2,5,R,[p(u)?u:m,$f(v)||Vf(v)?gd.c(Mh(Cf,I),r,v):null!=v?Mh(Cf,I)(r,v):r],null)}();a=J(k,0,null);k=J(k,1,null);var l=u3(a,b,c,d);d=J(l,0,null);l=J(l,1,null);return new Q(null,2,5,R,[p(d)?d:a,$f(l)||Vf(l)?gd.c(Mh(Cf,I),k,l):null!=l?Mh(Cf,I)(k,l):k],null)}
    function w3(a,b){b=QT(a,b,by);a=og(Wh.a(qJ),mg(function(c,d){return pL(c,d,by)},lg),a,b);return gd.c(function(c,d){var e=J(c,0,null);c=J(c,1,null);var f=v3(e,d,m1,!0);d=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(d)?d:e,$f(f)||Vf(f)?gd.c(Mh(Cf,I),c,f):null!=f?Mh(Cf,I)(c,f):c],null)},new Q(null,2,5,R,[a,null],null),b)}var x3=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(za,"handle-request"),function(f,k,l){return U.a(l)},e,a,b,c,d)}();
    x3.v(null,xH,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow);d=x.b(d,os);if(p(qL(a,e,by)))b=new Q(null,2,5,R,[a,new Q(null,1,5,R,[v1(b,c,e)],null)],null);else {d=lS(d);d=oL(a,e,by,d);a=JT.b(d,e);b:{var f=dH.a(a);if(p(f)){var k=Vu.a(f),l=KH.a(f);k=p(k)?K.c(a,Vu,k):a;l=p(l)?K.c(k,KH,l):k;k=U.a(f);k=k instanceof z?k.da:null;switch(k){case "activity":k=mi.b(f,new Q(null,2,5,R,[Tr,qJ],null));var m=z1(d,k);if(p(m)){var r=qJ.a(l),u=mi.b(f,new Q(null,2,5,R,[Tr,yy],null)),
    v=J1(d,ap.a(m));m=VK(m,new Q(null,1,5,R,[fs],null),G([r]));u=p(u)?K.c(m,oA,qJ.a(l)):m;u=XK(u,new Q(null,1,5,R,[aC],null),qJ.a(f));d=K1(TT(A1(d,k,u),r,ni(ni(l,new Q(null,2,5,R,[by,eJ],null),k),new Q(null,2,5,R,[by,zE],null),zE.a(f))),v,r);}break b;case "create-peer":d=TT(d,qJ.a(l),l);break b;default:throw Error(["No matching clause: ",q.a(k)].join(""));}}}b=Cf.b(ji.b(ji.b(YT("activity",by,d,b,a),k2(d,a)),Q1.b(d,a)),v1(b,c,e));b=new Q(null,2,5,R,[d,b],null);}return b});
    x3.v(null,LF,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=LT(a,d,by);c=v3(a,f,lL(c),!1);a=J(c,0,null);c=J(c,1,null);e=new Q(null,2,5,R,[null,v1(b,e,d)],null);b=J(e,0,null);e=J(e,1,null);return new Q(null,2,5,R,[p(b)?b:a,$f(e)||Vf(e)?gd.c(Mh(Cf,I),c,e):null!=e?Mh(Cf,I)(c,e):c],null)});
    x3.v(null,zl,function(a,b,c){c=ow.a(c);c=JT.b(a,c);var d=mi.b(c,new Q(null,2,5,R,[by,eJ],null));if(p(d)){var e=qJ.a(c),f=z1(a,d);if(p(f)){var k=A.b(oA.a(f),e);b=k?f:qi(f,zG,Mh(Cf,Dk),e);b=XK(b,new Q(null,1,5,R,[fs],null),e);k?(e=ap.a(b),e=yn.a(J1(a,e)),k=qJ.a(c),f=mi.b(c,new Q(null,2,5,R,[by,zE],null)),b=Hf.b(K.g(b,oA,k,G([Io,!0])),gn),a=new n(null,3,[Sz,A1(TT(a,k,ni(c,new Q(null,2,5,R,[by,eJ],null),qJ.a(b))),qJ.a(b),b),Tr,b,eu,p(f)?ji.b(new Q(null,1,5,R,[t1(a,lz.a(c),c,b,e)],null),w2(a,b,c)):ji.b(r2(a,
    b,e),u2(a,b))],null)):a=z2(a,b,c);b=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a;a=x.b(b,Sz);c=x.b(b,Tr);b=x.b(b,eu);a=new Q(null,2,5,R,[A1(a,d,c),b],null);}else a=new Q(null,2,5,R,[TT(a,e,A2(c)),new Q(null,1,5,R,[o1(b,e,null,n1)],null)],null);}else f=mi.b(c,new Q(null,2,5,R,[dH,gn],null)),p(f)?(d=ow.a(f),k=JT.b(a,d),e=b=R,k=lz.a(k),f=is.a(f),c=qJ.a(c),a=new Q(null,2,5,b,[a,new Q(null,1,5,e,[uL(k,new n(null,5,[tq,"activity",U,Aw,is,f,ow,d,gC,c],null))],null)],null)):a=kL("activity.errors.invalid_peer",["Unable to find originating request for a ready message from peer ",
    q.a(qJ.a(c))].join(""));return a});function y3(a){return pi(pi(a,uH,bL),aG,Jh(ki,bL))}function z3(a){return ki.b(function(b){return y3(yk(bL(b),new Q(null,4,5,R,[yw,uH,aG,Rz],null)))},a)}
    x3.v(null,Ov,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow);d=x.b(d,$E);d=z3(d);var f=LT(a,e,by),k=mi.b(f,new Q(null,2,5,R,[pD,dt],null));return p(k)?new Q(null,2,5,R,[C1(a,k,d),Cf.b(i2(a,k,d),v1(b,c,e))],null):new Q(null,2,5,R,[a,new Q(null,1,5,R,[w1(b,c,e,mL("activity.errors.registration.failure",["Registering peer is missing an user in its identity",q.a(pD.a(f))].join("")))],null)],null)});
    x3.v(null,qD,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow),f=x.b(d,$E),k=LT(a,e,by);d=mi.b(k,new Q(null,2,5,R,[pD,dt],null));p(d)?(f=Fk(f),f=Fk(fi.b(f,mj(B1(a,d)))),a=new Q(null,2,5,R,[D1(a,d,f),Cf.b(j2(a,d,f),v1(b,c,e))],null)):a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[w1(b,c,e,mL("activity.errors.registration.failure",["Removing peer is missing an user in its identity",q.a(pD.a(k))].join("")))],null)],null);return a});
    x3.v(null,cv,function(a,b,c){var d=Hf.b(c,PH);d=p(rx.a(c))?pi(d,rx,Ih.b(y3,bL)):d;return p2(a,b,d,Wh.b(bL,PH.a(c)))});
    x3.v(null,RI,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow),k=x.b(d,Zr);d=LT(a,f,by);k=H1(a,k);var l=qJ.a(d);N(zG.a(k),l)||N(fs.a(k),l)||A.b(oA.a(k),l)?d=!0:(l=JT.b(a,oA.a(k)),d=VT.la(pD.a(l),Ys.a(k),!1,pD.a(d),null,!1));p(d)?(c=D2(a,k,lL(c)),a=J(c,0,null),c=J(c,1,null),e=new Q(null,2,5,R,[null,v1(b,e,f)],null),b=J(e,0,null),e=J(e,1,null),b=new Q(null,2,5,R,[p(b)?b:a,$f(e)||Vf(e)?gd.c(Mh(Cf,I),c,e):null!=e?Mh(Cf,I)(c,e):c],null)):b=new Q(null,2,5,R,[a,w1(b,e,f,
    iL("activity.errors.not_authorized","Not authorized to destroy activity"))],null);return b});x3.v(null,Nu,function(a,b,c){return J2(a,b,c)});x3.v(null,hH,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow);d=x.b(d,lp);LT(a,e,by);return I2(a,b,c,e,d,G1)});
    x3.v(null,Yz,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow),f=x.b(d,LB),k=x.b(d,Zr),l=x.b(d,KH),m=x.b(d,Vu);LT(a,e,by);d=H1(a,k);f=wk.g(G([LT(a,f,by),ji.b(S,fi.b(zf,new n(null,2,[Vu,m,KH,l],null)))]));m=by.a(f);l=eJ.a(m);m=oA.a(m);l=z1(a,p(l)?l:m);A.b(qJ.a(l),k)?b=new Q(null,2,5,R,[a,new Q(null,1,5,R,[v1(b,c,e)],null)],null):p(l)?b=kL("activity.errors.activity_is_child",["Peer is already in activity ",q.a(qJ.a(l))].join("")):(k=qJ.a(d),l=qJ.a(f),a=z2(a,d,f),
    m=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,a=x.b(m,Sz),d=x.b(m,Tr),m=x.b(m,eu),a=new n(null,3,[Sz,TT(A1(a,k,d),l,ni(f,new Q(null,2,5,R,[by,eJ],null),k)),Tr,d,eu,m],null),f=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,a=x.b(f,Sz),f=x.b(f,eu),b=new Q(null,2,5,R,[a,Cf.b(f,v1(b,c,e))],null));return b});
    x3.v(null,Du,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=LT(a,d,by),k=mi.b(f,new Q(null,2,5,R,[by,eJ],null));k=z1(a,k);var l=oA.a(k);p(k)||kL("activity.errors.not_a_member","Not a member of an activity");c=lL(c);A.b(l,d)?c=H2(a,k,f,c,!0):(a=G2(a,k,f,c),c=null!=a&&(a.h&64||h===a.D)?fh(qk,a):a,a=x.b(c,Sz),c=x.b(c,eu),c=new Q(null,2,5,R,[a,c],null));a=J(c,0,null);c=J(c,1,null);e=new Q(null,2,5,R,[null,v1(b,e,d)],null);b=J(e,0,null);e=J(e,1,null);return new Q(null,
    2,5,R,[p(b)?b:a,$f(e)||Vf(e)?gd.c(Mh(Cf,I),c,e):null!=e?Mh(Cf,I)(c,e):c],null)});x3.v(null,Hs,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow),f=x.b(d,ZF);d=LT(a,e,by);f=Wh.b(hO,f);for(var k=B(f),l=null,m=0,r=0;;)if(r<m){var u=l.W(null,r);R1(d,u);r+=1;}else if(k=B(k))l=k,Wf(l)?(k=re(l),r=se(l),l=k,m=F(k),k=r):(k=C(l),R1(d,k),k=D(l),l=null,m=0),r=0;else break;a=N1(a,d,f);return new Q(null,2,5,R,[a,Cf.b(O1(a,d,f),v1(b,c,e))],null)});
    x3.v(null,Iv,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);var e=x.b(d,ow),f=x.b(d,ex);d=LT(a,e,by);var k=T1(d,f);f=J(k,0,null);k=J(k,1,null);a=y1(TT(a,e,f),Wh.b(KH,k),e);b=Cf.b(P1(a,d,ki.b(qJ,k),!0),v1(b,c,e));return new Q(null,2,5,R,[a,b],null)});
    x3.v(null,BB,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow),k=x.b(d,mA),l=x.b(d,KH),m=x.b(d,Vu);d=x.b(d,Zr);LT(a,f,by);d=p(d)?H1(a,d):null;m=p(m)?m:l;var r=PH.a(c),u=W1(a,k,l);k=J(u,0,null);u=J(u,1,null);var v=KT(a,f),y=eL(Mx.a(a)),E=J(y,0,null);y=J(y,1,null);c=yk(c,new Q(null,2,5,R,[is,ow],null));l=new n(null,4,[U,BB,qJ,y,KH,l,gn,c],null);l=p(m)?K.c(l,Vu,m):l;c=pD.a(v);c=r_(a,c,l);l=rL(K.c(a,Mx,E),y,l);a=new n(null,3,[Sz,l,eu,new Q(null,1,5,R,[U1(k,u,r,c,y,d,
    J1(a,ap.a(d)),m)],null),WG,y],null);return new Q(null,2,5,R,[Sz.a(a),Cf.b(eu.a(a),v1(b,e,f))],null)});x3.v(null,cp,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;b=x.b(d,is);var e=x.b(d,ow);d=x.b(d,sG);LT(a,e,by);var f=KT(a,d);return new Q(null,2,5,R,[a,new Q(null,2,5,R,[o1(lz.a(f),d,e,lL(c)),v1(b,e)],null)],null)});x3.v(null,IA,function(a,b,c){return t3(a,c)});
    x3.v(null,zE,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);d=x.b(d,ow);var e=KT(a,d),f=mi.b(e,new Q(null,2,5,R,[by,eJ],null)),k=z1(a,f),l=eL(Mx.a(a)),m=J(l,0,null),r=J(l,1,null);l=new n(null,5,[U,Tr,qJ,r,KH,KH.a(e),Tr,new n(null,2,[qJ,qJ.a(k),yy,A.b(qJ.a(e),oA.a(k))],null),zE,!0],null);l=p(Vu.a(e))?K.c(l,Vu,Vu.a(e)):l;r=rL(K.c(a,Mx,m),r,l);m=R;f=p(f)?A1(r,f,qi(k,Us,Mh(Cf,Dk),d)):r;k=R;e=pD.a(e);a=r_(a,e,l);return new Q(null,2,5,m,[f,new Q(null,1,5,k,[uL(b,new n(null,5,[tq,
    "activity",U,$p,is,c,ow,d,$p,a],null))],null)],null)});x3.v(null,pJ,function(a,b,c){return s3(a,b,c)});x3.v(null,Nz,function(a,b){return w3(a,b)});x3.v(null,em,function(a,b,c){AY(IA,za,246,new xl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),271523315);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[w1(b,is.b(c,-1),ow.a(c),mL("activity.errors.unhandled_message",["Unhandled message ",q.a(c)].join("")))],null)],null)});function A3(){}
    A3.prototype.Yc=function(){return new n(null,3,[$v,"activity",Rn,"",Ln,2],null)};A3.prototype.Zc=function(a,b){return b};A3.prototype.Wc=function(a,b){return b};
    A3.prototype.Xc=function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;a=x.b(d,lz);d=x.b(d,Xv);U.a(d);try{return x3.c(b,a,d)}catch(f){var e=f;p(km(e))||AY(IA,za,270,new xl(function(){return new Q(null,3,5,R,[e,"Error handling request",c],null)}),2018153646);return zL(a)?new Q(null,2,5,R,[b,new Q(null,1,5,R,[w1(a,is.a(d),ow.a(d),jL(e,"activity.errors.failure"))],null)],null):null}};Z(iB,O(W,new Q(null,1,5,R,[V],null),O(Fq,KI,O(fC,V))),function(a){return QS(KI,hO(a))});
    Z(ez,O(wt,ir,new Q(null,3,5,R,[GF,Wx,iB],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[GF,Wx,iB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,is)},function(a){return N(a,pD)},function(a){return N(a,YB)}],null),function(a){return M(a)&&N(a,is)&&N(a,pD)&&N(a,YB)},I,new Q(null,3,5,R,[GF,Wx,iB],null),null,new Q(null,3,5,R,[is,pD,YB],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,is)),
    O(W,new Q(null,1,5,R,[V],null),O(jG,V,pD)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,YB))],null),null])));Z(Ut,GA,GA);
    Z(ju,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Ut],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Ut],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Ut],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,zo)}],null),function(a){return M(a)&&N(a,zo)},I,new Q(null,1,5,R,[Ut],null),null,new Q(null,1,5,R,[zo],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,zo))],
    null),null]))],null),null));
    Z(Zp,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Ut],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Ut],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Ut],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,zo)}],null),function(a){return M(a)&&N(a,zo)},I,new Q(null,1,5,R,[Ut],null),null,new Q(null,1,5,R,[zo],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,zo))],
    null),null]))],null),null));Z(rp,O(W,new Q(null,1,5,R,[V],null),O(Fq,bn,O(Xp,V))),function(a){return QS(bn,Kg.a(a))});Z(Iy,O(CJ,Bo),rT(Bo,Vc,null));Z(Jo,O(CJ,Bo),rT(Bo,Vc,null));
    Z(CF,O(xv,Wp,O(wt,ir,new Q(null,5,5,R,[Xy,LI,rp,Iy,Jo],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,5,5,R,[Xy,LI,rp,Iy,Jo],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,5,5,R,[Xy,LI,rp,Iy,Jo],null),null,null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,yw)},function(a){return N(a,yn)},function(a){return N(a,Zz)},function(a){return N(a,gz)},function(a){return N(a,Ys)}],null),function(a){return M(a)&&N(a,yw)&&N(a,yn)&&N(a,Zz)&&
    N(a,gz)&&N(a,Ys)},I,new Q(null,5,5,R,[Xy,LI,rp,Iy,Jo],null),null,new Q(null,5,5,R,[yw,yn,Zz,gz,Ys],null),I,new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Zz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,gz)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Ys))],null),null]))],null),null));Z(Xo,Bp,Bp);
    Z(DF,O(hq,Bo),eT(Uy,Vc,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,Bo)],null),null));Z(tx,Hq,M);Z(JE,Hq,M);Z(ys,Hq,M);
    Z(UF,O(wt,iA,new Q(null,4,5,R,[DF,tx,JE,ys],null)),US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[null,new Q(null,4,5,R,[DF,tx,JE,ys],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,4,5,R,[Hr,Qv,BA,vq],null),I,null,I,new Q(null,4,5,R,[DF,tx,JE,ys],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V))],null),null])));
    Z(or,O(xv,Wp,O(wt,ir,new Q(null,2,5,R,[Xo,UF],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,2,5,R,[Xo,UF],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Xo,UF],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,oo)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,oo)},I,new Q(null,2,5,R,[Xo,UF],null),null,new Q(null,2,5,R,[Dt,oo],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,oo))],null),null]))],null),null));
    Z(iu,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Xo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[Xo],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));
    Z(oJ,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Xo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[Xo],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));
    Z(qs,O(xv,Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))),cT(new Q(null,2,5,R,[Wp,O(wt,ir,new Q(null,1,5,R,[Xo],null))],null),new Q(null,2,5,R,[Wp,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[Xo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[Xo],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],
    null),null]))],null),null));Z(sB,Bo,Vc);Z(qq,Bo,Vc);yT.v(null,BH,function(){return cT(new Q(null,2,5,R,[kG,ez],null),new Q(null,2,5,R,[kG,ez],null),null)});yT.v(null,ds,function(){return cT(new Q(null,2,5,R,[kG,ju],null),new Q(null,2,5,R,[kG,ju],null),null)});yT.v(null,bu,function(){return cT(new Q(null,2,5,R,[kG,Zp],null),new Q(null,2,5,R,[kG,Zp],null),null)});Z(kz,Wx,Wx);
    yT.v(null,AC,function(){return US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,5,5,R,[oE,GF,kz,Xs,br],null),new Q(null,1,5,R,[gB],null),null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,is)},function(a){return N(a,Wv)},function(a){return N(a,dt)},function(a){return N(a,Gs)}],null),function(a){return M(a)&&N(a,U)&&N(a,is)&&N(a,Wv)&&N(a,dt)&&N(a,Gs)},new Q(null,1,5,R,[Gu],null),new Q(null,5,5,R,[oE,GF,kz,Xs,br],null),null,new Q(null,5,5,R,[U,is,
    Wv,dt,Gs],null),new Q(null,1,5,R,[gB],null),new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,is)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Wv)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Gs))],null),null]))});Z(Vw,O(hq,ay),eT(ay,ay,new n(null,4,[Zn,null,NC,function(a){return Qf(a)},sy,!0,NH,O(hq,ay)],null),null));Z(uv,Wx,Wx);
    yT.v(null,Bv,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,2,5,R,[Vw,uv],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[Vw,uv],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Tn)},function(a){return N(a,ko)}],null),function(a){return M(a)&&N(a,Tn)&&N(a,ko)},I,new Q(null,2,5,R,[Vw,uv],null),null,new Q(null,2,5,R,[Tn,ko],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(jG,V,Tn)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,ko))],null),null]))],null),null)});
    yT.v(null,du,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,1,5,R,[kC],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,1,5,R,[kC],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Dt)}],null),function(a){return M(a)&&N(a,Dt)},I,new Q(null,1,5,R,[kC],null),null,new Q(null,1,5,R,[Dt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt))],null),null]))],null),
    null)});Z($m,JA,JA);Z(kC,Bp,Bp);
    yT.v(null,on,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[$m,kC,Xy],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[$m,kC,Xy],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Vp)},function(a){return N(a,Dt)},function(a){return N(a,yw)}],null),function(a){return M(a)&&N(a,Vp)&&N(a,Dt)&&N(a,yw)},I,new Q(null,3,5,R,[$m,kC,Xy],null),null,new Q(null,3,5,R,[Vp,Dt,yw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Vp)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yw))],null),null]))],null),null)});
    yT.v(null,ly,function(){return cT(new Q(null,2,5,R,[tv,O(wt,ir,new Q(null,2,5,R,[kC,LI],null))],null),new Q(null,2,5,R,[tv,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,2,5,R,[kC,LI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,yn)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,yn)},I,new Q(null,2,5,R,[kC,LI],null),null,new Q(null,2,5,R,[Dt,yn],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,yn))],null),null]))],null),null)});Z(Up,JA,JA);
    yT.v(null,PB,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[Up,kC,UF],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[Up,kC,UF],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,CE)},function(a){return N(a,Dt)},function(a){return N(a,oo)}],null),function(a){return M(a)&&N(a,CE)&&N(a,Dt)&&N(a,oo)},I,new Q(null,3,5,R,[Up,kC,UF],null),null,new Q(null,3,5,R,[CE,Dt,oo],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,CE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,oo))],null),null]))],null),null)});
    yT.v(null,KE,function(){return cT(new Q(null,2,5,R,[rs,O(wt,ir,new Q(null,3,5,R,[kC,sB,qq],null))],null),new Q(null,2,5,R,[rs,US(Xj([ir,iA,TE,Wt,ot,hx,CG,Lu,QI,JF,GE,jJ],[new Q(null,3,5,R,[kC,sB,qq],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Dt)},function(a){return N(a,uE)},function(a){return N(a,kJ)}],null),function(a){return M(a)&&N(a,Dt)&&N(a,uE)&&N(a,kJ)},I,new Q(null,3,5,R,[kC,sB,qq],null),null,new Q(null,3,5,R,[Dt,uE,kJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Hq,V)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,Dt)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,uE)),O(W,new Q(null,1,5,R,[V],null),O(jG,V,kJ))],null),null]))],null),null)});function B3(a,b,c){c=SC.a(c);return p(c)?F(mi.b(a,new Q(null,2,5,R,[Av,p(b)?b:Qy],null)))>=c:null}function C3(a,b){return kg(function(c,d,e){return K.c(c,d,A.b("?",e)?b:e)},S,a)}
    function D3(a,b,c){function d(r,u){return xL.K("global",b,f,k,iL(r,u))}var e=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,f=x.b(e,is),k=x.b(e,ow);e=x.b(e,zo);var l=pD.a(JT.b(a,k));if(p(l)){var m=tL(a,e);return p(m)?HT(m,a,new n(null,3,[Hv,Fs,lz,b,Xv,K.c(K.c(c,pD,l),U,xH)],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[d("global.errors.invalid_domain",["Unable to join missing domain ",q.a(e)].join(""))],null)],null)}return new Q(null,2,5,R,[a,new Q(null,1,5,R,[d("global.errors.invalid_peer",["Unable to find peer with id ",
    q.a(k)].join(""))],null)],null)}function E3(a,b,c){return D3(a,b,c)}
    function G3(a,b,c,d,e){var f=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,k=x.b(f,is),l=x.b(f,Wv),m=x.b(f,hI),r=x.b(f,dt),u=x.b(f,Gu),v=x.b(f,eI);f=dJ.a(d);a=sL(a,qJ.a(m));var y=J(a,0,null);J(a,1,null);var E=function(){var mc=wk.g(G([new n(null,1,[cy,Z4(Rs.a(b),tn.a(e))],null),CZ(l),yk(c,new Q(null,2,5,R,[dt,Gs],null))]));if(p(hD.a(c))){var of=hD.a(c);of=dt.a(of);mc=p(of)?K.c(mc,dt,of):mc;}return mc}(),H=p(jp.a(E))?new Q(null,2,5,R,[E,y],null):function(){var mc=Mx.a(y);var of=Qq.b(mc,1);var lv=["i-",q.a($y.a(mc)),
    "-",q.a(of)].join("");of=new Q(null,2,5,R,[K.c(mc,Qq,of+1),lv],null);mc=J(of,0,null);of=J(of,1,null);return new Q(null,2,5,R,[K.c(E,jp,of),K.c(y,Mx,mc)],null)}();a=J(H,0,null);H=J(H,1,null);v=K.c(v,pu,!0);try{var T=mi.b(H,new Q(null,2,5,R,[vu,a],null));p(T)&&kL("global.errors.already_seen","Hello already received once");EZ(a);p(B3(H,r,f))&&kL("global.errors.limits_exceeded","Maximum number of peers per user have been reached");var Y=gL(Mx.a(H)),ia=J(Y,0,null),ba=J(Y,1,null),wa=C3(a,ba),ua=RT(K.c(H,
    Mx,ia),b,ba,wa,m,v),pb=J(ua,0,null),sb=J(ua,1,null),rb=b1(b,k,qJ.a(sb),Wh.b(sD,nj(pz.a(pb))),wa,wk.g(G([function(){var mc=sD.a(d);return p(mc)?new n(null,1,[sD,mc],null):null}(),p(u)?new n(null,1,[Gu,u],null):null])));p(null)&&BY(dF,"global/peer-count",F(Dn.a(pb)));var xc=new Q(null,2,5,R,[pb,new Q(null,1,5,R,[rb],null)],null),Sb=J(xc,0,null),ob=J(xc,1,null),Tb=E3(Sb,b,new n(null,6,[is,k,ow,qJ.a(sb),pD,wa,eI,v,zo,"context",tq,"global"],null)),gb=J(Tb,0,null),ib=J(Tb,1,null);return new Q(null,2,5,
    R,[p(gb)?gb:Sb,$f(ib)||Vf(ib)?gd.c(Mh(Cf,I),ob,ib):null!=ib?Mh(Cf,I)(ob,ib):ob],null)}catch(mc){return m=mc,zL(b)?new Q(null,2,5,R,[H,new Q(null,1,5,R,[xL.K("global",b,k,null,jL(m,"global.errors.failure"))],null)],null):null}}
    function H3(a,b,c){AY(AG,Ia,229,new xl(function(){return new Q(null,1,5,R,["removing source from global domain"],null)}),1035225972);var d=mi.b(a,new Q(null,2,5,R,[Mx,$y],null));a=gd.c(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=new Q(null,2,5,R,[ST(l,k),null],null),r=J(m,0,null);m=J(m,1,null);f=new Q(null,2,5,R,[p(r)?r:l,$f(m)||Vf(m)?gd.c(Mh(Cf,I),f,m):null!=m?Mh(Cf,I)(f,m):f],null);l=J(f,0,null);f=J(f,1,null);r=new Q(null,2,5,R,[null,zL(b)?vL(new n(null,3,[U,WI,Fp,qJ.a(k),Yp,d],null),c):
    null],null);k=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[p(k)?k:l,$f(r)||Vf(r)?gd.c(Mh(Cf,I),f,r):null!=r?Mh(Cf,I)(f,r):f],null)},new Q(null,2,5,R,[a,null],null),PT(a,b));var e=J(a,0,null);J(a,1,null);AY(AG,Ia,242,new xl(function(){return new Q(null,1,5,R,["removed source from global domain"],null)}),321153352);p(null)&&BY(dF,"global/peer-count",F(Dn.a(e)));return a}
    function I3(a,b,c,d,e){c=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;var f=x.b(c,is),k=x.b(c,pD);c=x.b(c,YB);c=hO(c);var l=Kg.a(mI.b(c,em.a(d)));d=mi.b(d,new Q(null,2,5,R,[rw,l],null));return p(d)?(mZ(nZ(mZ(rZ(d,new n(null,4,[is,f,Wv,k,YB,c,pn,pn.a(a)],null)),function(m){return pi(m,U,function(r){switch(r instanceof z?r.da:null){case "success":return AC;case "continue":return DE;default:return r}})}),function(m){return K.c(km(m),U,QE)}),function(m){return QK(e,new n(null,3,[Hv,Fs,lz,b,Xv,K.g(m,is,f,G([Wv,
    k]))],null))}),new Q(null,2,5,R,[a,null],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("global",b,f,null,mL("global.errors.authentication.failure",["Requested authentication provider ",q.a(l)," is not available"].join("")))],null)],null)}
    var J3=Jh($2,"global"),K3=Jh(j3,"global"),L3=Jh(m3,"global"),M3=Jh(e3,"global"),N3=Jh(p3,"global"),O3=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Ia,"handle-request"),function(f,k,l){return U.a(l)},e,a,b,c,d)}();O3.v(null,BH,function(a,b,c,d){return I3(a,b,c,d,er.a(a))});
    O3.v(null,ds,function(a,b,c){if(zL(b))b=D3(a,b,c);else {var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,ow),f=x.b(d,zo);d=x.b(d,eI);f=tL(a,f);p(f)?(a=RT(a,b,e,pD.a(c),null,d),e=J(a,0,null),J(a,1,null),b=HT(f,e,new n(null,3,[Hv,Zv,lz,b,Xv,K.c(c,U,xH)],null))):b=null;}return b});
    O3.v(null,bu,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);d=x.b(d,zo);if(p(JT.b(a,f))){var k=tL(a,d);a=p(k)?HT(k,a,new n(null,3,[Hv,Fs,lz,b,Xv,K.c(c,U,LF)],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("global",b,e,f,mL("global.errors.invalid_domain",["Unable to leave missing domain ",q.a(d)].join("")))],null)],null);}else a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("global",b,e,f,mL("global.errors.invalid_peer",["Unable to find peer with id ",
    q.a(f)].join("")))],null)],null);}else f=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(f,ow),f=x.b(f,zo),p(JT.b(a,e))?(e=tL(a,f),a=p(e)?HT(e,a,new n(null,3,[Hv,Fs,lz,b,Xv,K.c(c,U,LF)],null)):null):a=null;return a});O3.v(null,AC,function(a,b,c,d,e,f){return G3(a,b,c,e,f)});O3.v(null,QE,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,sr);d=x.b(d,is);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("global",b,d,null,iL("global.errors.authentication.failure",c))],null)],null)});
    O3.v(null,DE,function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);d=x.b(d,YB);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[uL(b,new n(null,4,[tq,"global",U,PC,is,c,YB,d],null))],null)],null)});O3.v(null,Pu,function(a,b,c){return K3(a,b,c)});O3.v(null,pJ,function(a,b,c){return J3(a,b,c)});O3.v(null,Qw,function(a,b,c){return M3(a,b,c)});O3.v(null,bx,function(a,b,c){return N3(a,b,c)});O3.v(null,Tt,function(a,b,c){return L3(a,b,c)});
    O3.v(null,cJ,function(a){return new Q(null,1,5,R,[a],null)});O3.v(null,Nz,function(a,b,c){return H3(a,b,c)});
    O3.v(null,to,function(a,b,c,d,e){d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,is);d=x.b(d,ow);var f=KT(a,d),k=R,l=R;a:{var m=q_;e=1E3*mi.c(e,new Q(null,2,5,R,[YB,ew],null),0);q_=0<e?e:q_;try{var r=pD.a(f),u=TK()+q_,v=new n(null,2,[U,YB,dt,dt.a(r)],null);var y=p(u)?K.c(v,bD,u):v;var E=p_(y,pn.a(a));break a}finally{q_=m;}E=void 0;}return new Q(null,2,5,k,[a,new Q(null,1,5,l,[uL(b,new n(null,5,[tq,"global",U,$p,is,c,ow,d,$p,E],null))],null)],null)});
    O3.v(null,em,function(a,b,c){AY(IA,Ia,416,new xl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),-1372641111);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("global",b,is.b(c,-1),ow.a(c),mL("global.errors.unhandled_message",["Unhandled message ",q.a(c)].join("")))],null)],null)});
    function P3(a,b,c,d,e){var f=null!=e&&(e.h&64||h===e.D)?fh(qk,e):e,k=x.b(f,lz);f=x.b(f,Xv);try{return O3.la(d,k,f,a,b,c)}catch(m){if(m instanceof Error){var l=m;p(km(l))||AY(IA,Ia,432,new xl(function(){return new Q(null,3,5,R,[l,"Error processing message",e],null)}),1026914181);return new Q(null,2,5,R,[d,new Q(null,1,5,R,[xL.K("global",k,is.b(f,-1),ow.a(f),jL(l,"global.errors.failure"))],null)],null)}throw m;}}
    function Q3(a){this.Pe=new n(null,1,[tn,"127.0.0.1"],null);this.Zf=a;this.configuration=null;}Q3.prototype.Yc=function(){return new n(null,3,[$v,"global",Rn,"",Ln,1],null)};Q3.prototype.Zc=function(a,b){return b};Q3.prototype.Wc=function(a,b){return b};Q3.prototype.Xc=function(a,b,c){return P3(this.Zf,this.configuration,this.Pe,b,c)};function R3(a,b){return kg(function(c,d,e){c=x.b(b,d);return Tc(b0(e,c))?bf(!1):!0},!0,a)}function S3(a,b,c){var d=gd.c(function(e,f){return p(R3(TF.a(f),b))?p(c0(mi.b(f,new Q(null,2,5,R,[Ym,Lz],null)),c))?bf(!1):p(e)?e:c0(mi.b(f,new Q(null,2,5,R,[Ym,ty],null)),c):e},null,CH.a(a));if(null!=d)return d;a=lH.a(a);switch(a instanceof z?a.da:null){case "whitelist":return !0;case "blacklist":return !1;default:return !0}}function T3(a){if(null!=a&&null!=a.Cg)a=a.Cg(a);else {var b=T3[db(null==a?null:a)];if(null!=b)a=b.a?b.a(a):b.call(null,a);else if(b=T3._,null!=b)a=b.a?b.a(a):b.call(null,a);else throw Zc("Repository.start!",a);}return a}function U3(a){if(null!=a&&null!=a.Dg)a.Dg(a);else {var b=U3[db(null==a?null:a)];if(null!=b)b.a?b.a(a):b.call(null,a);else if(b=U3._,null!=b)b.a?b.a(a):b.call(null,a);else throw Zc("Repository.stop!",a);}}
    function V3(a,b){if(null!=a&&null!=a.Ag)a=a.Ag(a,b);else {var c=V3[db(null==a?null:a)];if(null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else if(c=V3._,null!=c)a=c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Repository.add!",a);}return a}function W3(a,b){if(null!=a&&null!=a.Bg)a.Bg(a,b);else {var c=W3[db(null==a?null:a)];if(null!=c)c.b?c.b(a,b):c.call(null,a,b);else if(c=W3._,null!=c)c.b?c.b(a,b):c.call(null,a,b);else throw Zc("Repository.publish!",a);}}
    function X3(a,b){if(null!=a&&null!=a.Eg)a=a.Eg(a,b,null);else {var c=X3[db(null==a?null:a)];if(null!=c)a=c.c?c.c(a,b,null):c.call(null,a,b,null);else if(c=X3._,null!=c)a=c.c?c.c(a,b,null):c.call(null,a,b,null);else throw Zc("RepositoryFactory.repository",a);}return a}var Y3=new Bk(null,new n(null,3,[lJ,null,Zq,null,jp,null],null),null);function Z3(a){var b=Eh(function(c){return N(a,c)?!1:c},Y3);p(b)&&kL("metrics.errors.bad_identity",["Repository is missing required ",q.a(b)," property"].join(""));}function $3(a,b,c){var d=cy.a(c);p(d)?b=d:(b=Z4(Rs.a(b),tn.a(a)),b=p(b)?b:"127.0.0.1");return new n(null,6,[cy,b,Sn,Sn.a(a),No,(new Date).getTime(),Vz,Vz.a(a),Zq,Zq.a(c),lJ,Mr.a(c)],null)}
    function a4(a,b){var c=qJ.a(b);b=mi.b(b,new Q(null,2,5,R,[nE,vz],null));if(B(b)){AY(sD,Na,72,new xl(function(){return new Q(null,2,5,R,["stopping metrics publishing for peer",c],null)}),-295205215);b=B(b);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);U3(k);f+=1;}else if(b=B(b))d=b,Wf(d)?(b=re(d),f=se(d),d=b,e=F(b),b=f):(b=C(d),U3(b),b=D(d),d=null,e=0),f=0;else break}return pL(a,c,nE)}
    function b4(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=KT(a,d);a=a4(a,f,lL(c));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[yL.A("metrics",b,e,d)],null)],null)}function c4(a){return kg(function(b,c,d){return K.c(b,c,d4.a?d4.a(d):d4.call(null,d))},S,a)}function d4(a){return kg(function(b,c,d){c=Kg.a(c);return K.c(b,c,A.b(c,Mt)?c4(d):d)},S,a)}
    function e4(a,b,c){var d=mi.b(c,new Q(null,2,5,R,[nE,vz],null));if(p(d))return new Q(null,2,5,R,[a,d],null);d=qJ.a(c);var e=mi.b(c,new Q(null,2,5,R,[nE,jB],null));b=Vk(Wh.b(function(f){return T3(X3(f,e))},b));return new Q(null,2,5,R,[ni(a,new Q(null,4,5,R,[Dn,d,nE,vz],null),b),b],null)}
    function f4(a,b,c,d){var e=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(e,ow);e=x.b(e,Ym);var f=KT(a,b),k=mi.b(f,new Q(null,2,5,R,[nE,jB],null)),l=fi.b(function(m){return S3(d,k,yw.a(m))},Wh.b(d4,e));return B(l)?(AY(AG,Na,130,new xl(function(){return new Q(null,4,5,R,["publisher",k,"adding metrics",Wh.b(yw,l)],null)}),72937979),c=e4(a,c,f),a=J(c,0,null),c=J(c,1,null),B(c)?new Q(null,2,5,R,[ni(a,new Q(null,4,5,R,[Dn,b,nE,vz],null),Vk(Wh.b(function(m){return V3(m,l)},c))),null],null):null):null}
    function g4(a,b,c){var d=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b;b=x.b(d,ow);d=x.b(d,nA);b=KT(a,b);var e=mi.b(b,new Q(null,2,5,R,[nE,jB],null));a=fi.b(function(m){return S3(c,e,yw.a(m))},Wh.b(bL,d));if(B(a))if(b=mi.b(b,new Q(null,2,5,R,[nE,vz],null)),p(b)){b=B(b);d=null;for(var f=0,k=0;;)if(k<f){var l=d.W(null,k);W3(l,a);k+=1;}else if(b=B(b))d=b,Wf(d)?(b=re(d),f=se(d),d=b,l=F(b),b=f,f=l):(l=C(d),W3(l,a),b=D(d),d=null,f=0),k=0;else return null}else return null;else return null}
    function h4(a,b){AY(AG,Na,154,new xl(function(){return new Q(null,2,5,R,["removing source",b],null)}),405066030);a=gd.c(function(c,d){return a4(c,d)},a,QT(a,b,nE));return new Q(null,2,5,R,[a,null],null)}
    var i4=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Na,"handle-request"),function(){function f(k,l,m,r){if(3<arguments.length)for(var u=0,v=Array(arguments.length-3);u<v.length;)v[u]=arguments[u+3],++u;return U.a(m)}f.F=3;f.G=function(k){C(k);k=D(k);C(k);k=D(k);var l=C(k);Re(k);return U.a(l)};f.g=function(k,l,m){return U.a(m)};return f}(),e,a,b,c,d)}();
    i4.v(null,xH,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Qe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){f=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;var k=x.b(f,uI);var l=null!=e&&(e.h&64||h===e.D)?fh(qk,e):e;e=x.b(l,is);f=x.b(l,ow);var m=x.b(l,pD);l=x.b(l,eI);k=wk.g(G([$3(k,d,m),bL(l),bL(m)]));p(qL(c,f,nE))?d=new Q(null,2,5,R,[c,new Q(null,1,5,R,[yL.A("metrics",d,e,f)],null)],null):(Z3(k),
    c=ni(oL(c,f,nE,null),new Q(null,4,5,R,[Dn,f,nE,jB],null),k),d=new Q(null,2,5,R,[c,new Q(null,1,5,R,[yL.A("metrics",d,e,f)],null)],null));return d}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Re(c);return b(d,e,f,c)};a.g=b;return a}());
    i4.v(null,LF,function(){function a(b,c,d,e){if(3<arguments.length)for(var f=0,k=Array(arguments.length-3);f<k.length;)k[f]=arguments[f+3],++f;return b4(b,c,d)}a.F=3;a.G=function(b){var c=C(b);b=D(b);var d=C(b);b=D(b);var e=C(b);Re(b);return b4(c,d,e)};a.g=function(b,c,d){return b4(b,c,d)};return a}());
    i4.v(null,Nz,function(){function a(b,c,d,e){if(3<arguments.length)for(var f=0,k=Array(arguments.length-3);f<k.length;)k[f]=arguments[f+3],++f;return h4(b,c)}a.F=3;a.G=function(b){var c=C(b);b=D(b);var d=C(b);b=D(b);C(b);Re(b);return h4(c,d)};a.g=function(b,c){return h4(b,c)};return a}());
    i4.v(null,rE,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Qe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){f=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;d=x.b(f,kn);f=x.b(f,nr);return f4(c,e,d,f)}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Re(c);return b(d,e,f,c)};a.g=b;return a}());
    i4.v(null,wG,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Qe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){d=null!=f&&(f.h&64||h===f.D)?fh(qk,f):f;d=x.b(d,nr);return g4(c,e,d)}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Re(c);return b(d,e,f,c)};a.g=b;return a}());
    i4.v(null,em,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Qe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e){AY(IA,Na,185,new xl(function(){return new Q(null,2,5,R,["Unhandled message",e],null)}),-1669920594);return new Q(null,2,5,R,[c,new Q(null,1,5,R,[xL.K("metrics",d,is.b(e,-1),ow.a(e),mL("metrics.errors.unhandled_message",["Unhandled message ",q.a(e)].join("")))],null)],null)}a.F=3;a.G=
    function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Re(c);return b(d,e,f)};a.g=b;return a}());function j4(a){this.Pe=a;this.filters=this.Ah=null;}j4.prototype.Yc=function(){return new n(null,3,[$v,"metrics",Rn,"",Ln,1],null)};j4.prototype.Zc=function(a,b){return b};j4.prototype.Wc=function(a,b){return gd.c(function(c,d){return a4(c,d)},b,NT(b,nE))};
    j4.prototype.Xc=function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;a=x.b(d,lz);d=x.b(d,Xv);try{return i4.Xa(b,a,d,uI,this.Pe,kn,this.Ah,nr,this.filters)}catch(f){var e=f;p(km(e))||AY(IA,Na,218,new xl(function(){return new Q(null,3,5,R,[e,"Error processing message",c],null)}),971732128);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K("metrics",a,is.a(d),ow.a(d),jL(e,"metrics.errors.failure"))],null)],null)}};
    function k4(){var a=l4;AY(AG,Na,228,new xl(function(){return new Q(null,2,5,R,["initializing metrics domain with filters",null],null)}),895504579);return new j4(a)}function m4(a,b){AY(AG,Ga,53,new xl(function(){return new Q(null,2,5,R,["removing source",b],null)}),1712681111);a=gd.c(function(c,d){return pL(c,Fp.a(d),Gq)},a,QT(a,b,Gq));return new Q(null,2,5,R,[a,null],null)}function n4(a){return ei(function(b){var c=J(b,0,null);b=J(b,1,null);return Wh.c(function(d,e){return new n(null,2,[WI,d,gJ,e],null)},new $h(null,-1,c,null),b)},G([Wh.b(function(b){return new Q(null,2,5,R,[b,mi.b(b,new Q(null,2,5,R,[Gq,qy],null))],null)},a)]))}
    function o4(a,b,c){J(c,0,null);c=J(c,1,null);var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,Zo);d=x.b(d,mF);a=p(d)?Wk(d,a):A.b(e,a);p(a)?(a=MH.a(c),b=Tc(a)||Tc(b)||A.b(a,b)):b=a;return b}function p4(a,b){var c=pD.a(b);return kg(function(d,e,f){return A.b(x.b(c,e),f)?!0:bf(!1)},!0,a)}
    function q4(a,b,c){var d=yn.a(b);if(p(d)){var e=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,f=x.b(e,Zo),k=x.b(e,zH),l=x.b(e,ow);e=x.b(e,wC);var m=Kh(o4,f,k);f=Jh(p4,CZ(e));var r=pD.a(c),u=new Uh(Dk);c=gd.c(function(v,y){y=null!=y&&(y.h&64||h===y.D)?fh(qk,y):y;var E=x.b(y,WI),H=x.b(y,gJ);y=lz.a(E);E=qJ.a(E);zL(y)?(H=C(H),y=uL(y,new n(null,6,[tq,"bus",U,OA,ow,E,fA,H,EB,r,yn,d],null))):A.b(l,E)?y=null:(y=Yp.a(y),N(t(u),y)?y=null:(u.Cc(null,Cf.b(u.zb(null),y)),y=wL(q0(dL(Mx.a(a)),l),new n(null,2,[U,Yp,Yp,y],
    null),b)));return p(y)?Cf.b(v,y):v},I,fi.b(function(v){return m(gJ.a(v))},n4(fi.b(f,XT(a,Gq,c,!0)))));return new Q(null,2,5,R,[a,c],null)}return null}
    function r4(a,b,c,d){var e=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,f=x.b(e,Zo),k=x.b(e,zH),l=x.b(e,is);e=x.b(e,ow);var m=lz.a(d),r=new Q(null,3,5,R,[Gq,qy,c],null);k=new n(null,2,[Zo,f,MH,k],null);f=-1!=f.indexOf("\x3e")||-1!=f.indexOf("*")?K.c(k,mF,Zk(RL(RL(RL(f,".","\\."),"*","[a-zA-Z_0-9]+"),"\x3e",".*"))):k;d=ni(d,r,f);return new Q(null,2,5,R,[TT(a,e,d),zL(m)?new Q(null,2,5,R,[uL(m,new n(null,5,[tq,"bus",U,Gz,is,l,ow,e,fA,c],null)),vL(q0(dL(Mx.a(a)),e),K.c(b,fA,c))],null):null],null)}
    function s4(a,b,c){var d=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,e=x.b(d,is),f=x.b(d,ow),k=x.b(d,fA);d=lz.a(c);c=oi.A(c,new Q(null,2,5,R,[Gq,qy],null),Hf,k);return new Q(null,2,5,R,[TT(a,f,c),zL(d)?new Q(null,2,5,R,[yL.A("bus",d,e,f),vL(q0(dL(Mx.a(a)),f),b)],null):null],null)}var t4=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Ga,"handle-request"),function(f,k,l){return U.a(l)},e,a,b,c,d)}();
    t4.v(null,xH,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);x.b(d,pD);d=x.b(d,os);if(p(qL(a,f,Gq)))a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[yL.A("bus",b,e,f)],null)],null);else {d=oL(a,f,Gq,lS(d));var k=JT.b(d,f),l=R,m=R;b=yL.A("bus",b,e,f);a=q0(dL(Mx.a(a)),f);c=K.c(c,U,ds);c=p(eI.a(k))?K.c(c,eI,eI.a(k)):c;a=new Q(null,2,5,l,[d,new Q(null,2,5,m,[b,vL(a,c)],null)],null);}}else d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,c=x.b(d,ow),d=x.b(d,os),a=p(qL(a,c,Gq))?
    null:new Q(null,2,5,R,[oL(a,c,Gq,lS(d)),null],null);return a});t4.v(null,LF,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=pL(a,d,Gq);a=new Q(null,2,5,R,[f,new Q(null,2,5,R,[yL.A("bus",b,e,d),vL(q0(dL(Mx.a(a)),d),K.c(c,U,bu))],null)],null);}else b=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,b=x.b(b,ow),c=JT.b(a,b),a=p(c)?new Q(null,2,5,R,[pL(a,b,Gq),null],null):null;return a});
    t4.v(null,wG,function(a,b,c){zL(b)?(b=ow.a(c),b=KT(a,b),a=p(b)?q4(a,c,b):null):(b=ow.a(c),b=JT.b(a,b),a=p(b)?q4(a,c,b):null);return a});t4.v(null,Nu,function(a,b,c){if(zL(b)){var d=eL(Mx.a(a));b=J(d,0,null);d=J(d,1,null);var e=ow.a(c);e=LT(a,e,Gq);a=r4(K.c(a,Mx,b),c,d,e);}else d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,b=x.b(d,fA),d=x.b(d,ow),d=JT.c(a,d,Gq),a=p(d)?r4(a,c,b,d):null;return a});
    t4.v(null,hH,function(a,b,c){zL(b)?(b=LT(a,ow.a(c),Gq),a=s4(a,c,b)):(b=JT.b(a,ow.a(c)),a=p(b)?s4(a,c,b):null);return a});t4.v(null,Nz,function(a,b){return m4(a,b)});t4.v(null,em,function(a,b,c){AY(IA,Ga,306,new xl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),1841638886);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[xL.K("bus",b,is.b(c,-1),ow.a(c),mL("bus.errors.unhandled_message",["Unhandled message ",q.a(c)].join("")))],null)],null)});function u4(){}
    u4.prototype.Yc=function(){return new n(null,3,[$v,"bus",Rn,"",Ln,1],null)};u4.prototype.Zc=function(a,b){return b};u4.prototype.Wc=function(a,b){return b};
    u4.prototype.Xc=function(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;a=x.b(d,lz);d=x.b(d,Xv);try{return t4.c(b,a,d)}catch(f){var e=f;p(km(e))||AY(IA,Ga,342,new xl(function(){return new Q(null,3,5,R,[e,"Error processing message",c],null)}),-2096053543);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[xL.K("bus",a,is.a(d),ow.a(d),jL(e,"bus.errors.failure"))],null)],null)}};O2("context");var v4=iL("context.peer-removed","Peer has been removed");var w4=Jh(yL,"context"),x4=Jh(xL,"context");var y4=Jh($2,"context"),z4=Jh(j3,"context"),A4=Jh(m3,"context"),B4=Jh(e3,"context"),C4=Jh(p3,"context"),D4=Jh(function(a,b,c,d,e){var f=Jh(n3,a);b=ZT(a,ct,b,c,d,e);a=J(b,0,null);b=J(b,1,null);b=fi.b(Jh(r3,a),b);b=new Q(null,2,5,R,[a,b],null);a=J(b,0,null);b=J(b,1,null);f=f(a,c);c=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(c)?c:a,$f(f)||Vf(f)?gd.c(Mh(Cf,I),b,f):null!=f?Mh(Cf,I)(b,f):b],null)},"context");
    function E4(a,b,c,d){var e=LT(a,c,ct),f=function(){var k=fi.b(Jh(r3,a),YT("context",ct,a,b,e));return p(d)?gi.b(function(l){return A.b(c,dB.a(Xv.a(l)))},k):k}();return Ni(Xg.b(f,Tc(d)?q3(W2(e),a,e):Se))}function F4(a,b,c,d,e){var f=lS(d);d=function(){var k=oL(a,c,ct,f);return p(e)?UT(k,c,function(l){return UK(l,new Q(null,2,5,R,[eI,pu],null))}):k}();return new Q(null,2,5,R,[d,E4(d,b,c,e)],null)}
    function G4(a,b,c){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is),f=x.b(d,ow);x.b(d,pD);d=x.b(d,os);var k=mi.b(c,new Q(null,2,5,R,[eI,pu],null)),l=function(){var v=JT.b(a,f);v=null==v?null:eI.a(v);return null==v?null:pu.a(v)}(),m=qL(a,f,ct);if(p(p(m)?Tc(l):m))return new Q(null,2,5,R,[a,new Q(null,1,5,R,[w4(b,e,f)],null)],null);d=F4(a,b,f,d,p(m)?l:m);l=J(d,0,null);var r=J(d,1,null),u=JT.b(l,f);return new Q(null,2,5,R,[l,function(){var v=Cf.b(r,vL(q0(dL(Mx.a(a)),f),function(){var y=K.c(c,U,
    ds);return p(eI.a(u))?K.c(y,eI,eI.a(u)):y}()));return Tc(k)?Cf.b(v,w4(b,e,f)):v}()],null)}
    function H4(a,b){AY(AG,Ha,124,new xl(function(){return new Q(null,1,5,R,["removing source from the context domain"],null)}),649478531);b=Ch(QT(a,b,ct));a=og(Wh.a(qJ),mg(function(d,e){return pL(d,e,ct)},lg),a,b);var c=new n(null,6,[is,null,tq,"global",U,bu,zo,"context",uE,v4.uri,kJ,v4.message],null);a=gd.c(function(d,e){var f=J(d,0,null);d=J(d,1,null);var k=D4(f,e,v4,!0),l=J(k,0,null);k=J(k,1,null);d=new Q(null,2,5,R,[p(l)?l:f,$f(k)||Vf(k)?gd.c(Mh(Cf,I),d,k):null!=k?Mh(Cf,I)(d,k):d],null);f=J(d,0,
    null);d=J(d,1,null);l=new Q(null,2,5,R,[f,vL(q0(dL(Mx.a(f)),qJ.a(e)),K.c(c,ow,qJ.a(e)))],null);e=J(l,0,null);l=J(l,1,null);return new Q(null,2,5,R,[p(e)?e:f,$f(l)||Vf(l)?gd.c(Mh(Cf,I),d,l):null!=l?Mh(Cf,I)(d,l):d],null)},new Q(null,2,5,R,[a,null],null),b);AY(AG,Ha,144,new xl(function(){return new Q(null,1,5,R,["removed source from context domain"],null)}),-323325377);return a}
    var I4=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(Ha,"handle-request"),function(f,k,l){return U.a(l)},e,a,b,c,d)}();I4.v(null,xH,function(a,b,c){if(zL(b))a=G4(a,b,c);else {var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c;c=x.b(d,ow);x.b(d,pD);d=x.b(d,os);var e=JT.b(a,c);e=null==e?null:eI.a(e);e=null==e?null:pu.a(e);a=p(Tc(e)?qL(a,c,ct):!1)?null:F4(a,b,c,d,e);}return a});
    I4.v(null,LF,function(a,b,c){if(zL(b)){var d=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,e=x.b(d,is);d=x.b(d,ow);var f=D4(a,KT(a,d),lL(c),!1),k=J(f,0,null);f=J(f,1,null);a=new Q(null,2,5,R,[k,Cf.g(f,w4(b,e,d),G([vL(q0(dL(Mx.a(a)),d),K.c(c,U,bu))]))],null);}else b=null!=c&&(c.h&64||h===c.D)?fh(qk,c):c,b=x.b(b,ow),b=JT.b(a,b),a=p(b)?D4(a,b,lL(c),!1):null;return a});I4.v(null,Pu,function(a,b,c){return z4(a,b,c)});I4.v(null,pJ,function(a,b,c){return y4(a,b,c)});I4.v(null,Qw,function(a,b,c){return B4(a,b,c)});
    I4.v(null,bx,function(a,b,c){return C4(a,b,c)});I4.v(null,Tt,function(a,b,c){return A4(a,b,c)});I4.v(null,Nz,function(a,b){return H4(a,b)});I4.v(null,em,function(a,b,c){AY(IA,Ha,209,new xl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),1383824357);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[x4(b,is.b(c,-1),ow.a(c),mL([q.a("context"),".errors.unhandled_message"].join(""),["Unhandled message ",q.a(c)].join("")))],null)],null)});
    function J4(a,b){var c=null!=b&&(b.h&64||h===b.D)?fh(qk,b):b,d=x.b(c,lz);c=x.b(c,Xv);try{return I4.c(a,d,c)}catch(f){var e=f;p(km(e))||AY(IA,Ha,226,new xl(function(){return new Q(null,3,5,R,[e,"Error handling request",b],null)}),1720562813);return zL(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[x4(d,is.a(c),ow.a(c),jL(e,"context.errors.failure"))],null)],null):null}}function K4(){}K4.prototype.Yc=function(){return new n(null,3,[$v,"context",Rn,"",Ln,2],null)};K4.prototype.Zc=function(a,b){return b};
    K4.prototype.Wc=function(a,b){return b};K4.prototype.Xc=function(a,b,c){return J4(b,c)};var L4=function(){var a=Oh(S),b=Oh(S),c=Oh(S),d=Oh(S),e=x.c(S,ku,Ql.o?Ql.o():Ql.call(null));return new dm(Me.b(la,"authenticate"),function(f){return mi.b(f,new Q(null,2,5,R,[YB,Ts],null))},e,a,b,c,d)}();L4.v(null,"secret",function(a,b,c){return mZ(tZ(a),function(d){var e=p_(new n(null,2,[dt,dt.a(d),bD,TK()+c],null),b);return K.c(d,Gu,e)})});
    L4.v(null,"access-token",function(a,b){try{var c=mi.b(a,new Q(null,2,5,R,[YB,$p],null)),d=dt.a(o_.c(c,b,new n(null,1,[WD,TK()],null)));return jZ.resolve(new n(null,4,[U,qz,Gs,d,dt,d,Gu,c],null))}catch(f){var e=f;AY(AG,la,37,new xl(function(){return new Q(null,2,5,R,[e,"Error processing access token authentication request"],null)}),-2143320436);return jZ.reject(im(lm(e),new n(null,2,[U,lC,sr,["Invalid or expired token: ",q.a(lm(e))].join("")],null)))}});
    L4.v(null,em,function(a){a=mi.b(a,new Q(null,2,5,R,[YB,Ts],null));var b=["Unknown authentication method ",q.a(a)].join("");AY(AG,la,44,new xl(function(){return new Q(null,1,5,R,[b],null)}),-1961658750);return jZ.reject(im(b,new n(null,2,[U,lC,sr,b],null)))});function M4(a,b){this.Gh=a;this.Ih=b;}M4.prototype.Re=function(a,b){return L4.c(b,this.Gh,this.Ih)};function N4(a,b){return new M4(a,b)}
    function O4(){var a=S;AY(sD,la,57,new xl(function(){return new Q(null,2,5,R,["creating basic authenticator with configuration",a],null)}),617112893);return I_(a,N4(cL(),1E3*Rq.b(a,6E4)))}var P4={},Q4={},z5;(function(a){return nY(function(b){return K.c(b,cn,a)})})(sD);var l4=new n(null,1,[No,(new Date).getTime()],null);function S4(a){return new n(null,6,[Ju,!0,tB,!1,GI,null,eC,null,vr,dx,qI,function(b){b={time:BC.a(b),level:Lg(cn.a(b)),namespace:uq.a(b),file:Pv.a(b),line:iF.a(b),stacktrace:eB.a(b),message:Bl(fx.a(b)),output:Bl(Qx.a(b))};return a.a?a.a(b):a.call(null,b)}],null)}
    tb("gateway_web.core.configure_logging",function(a){a=Ml(a,G([Nl,!0]));var b=new n(null,2,[cn,sD,HG,new n(null,1,[VI,hY.a?hY.a(S):hY.call(null,S)],null)],null);b=p(cn.a(a))?K.c(b,cn,Kg.a(cn.a(a))):b;b=p(ty.a(a))?K.c(b,Kw,ty.a(a)):b;b=p(Lz.a(a))?K.c(b,un,Lz.a(a)):b;a=p(Cw.a(a))?ni(b,new Q(null,2,5,R,[HG,VI],null),S4(Cw.a(a))):b;return oY(a)});
    function T4(a){a=mi.b(a,new Q(null,2,5,R,[YB,my],null));return p(a)?(AY(sD,ha,65,new xl(function(){return new Q(null,1,5,R,["will be using custom JS authenticator"],null)}),1345826046),new n(null,2,[em,ED,rw,new n(null,1,[ED,I_(S,new J_(a))],null)],null)):new n(null,2,[em,ED,rw,new n(null,1,[ED,O4()],null)],null)}
    var U4=function U4(a,b,c,d,e){return p(function(){var k=t(a);return p(k)?0<e:k}())?(QY(c,d,(new Date).getTime()-1E3*e),Rh.b(b,function(){return fZ(function(){return U4.K?U4.K(a,b,c,d,e):U4.call(null,a,b,c,d,e)})})):null};
    function V4(a){var b=Yx.a(t(a));AY(sD,ha,82,new xl(function(){return new Q(null,2,5,R,["starting gateway with configuration",b],null)}),-1715714573);Rh.b(a,function(c){var d=T4(b),e=new Q(null,6,5,R,[new l1,new A3,new Q3(d),new u4,new K4,k4()],null);e=S_(e);var f=Oh(S),k=Oh(null),l=Oh(!0),m=mi.c(b,new Q(null,2,5,R,[kE,FD],null),60);0<m&&(AY(sD,ha,97,new xl(function(){return new Q(null,3,5,R,["clients inactive for",m,"will be scavenged"],null)}),811655706),U4(l,k,f,e,m));return K.g(c,JH,l,G([iq,d,
    Yp,e,kE,f,QA,k]))});}function W4(a){AY(sD,ha,115,new xl(function(){return new Q(null,1,5,R,["stopping gateway"],null)}),661929129);Rh.b(a,function(b){Rh.b(JH.a(b),Hh(!1));var c=QA.a(b);c=null==c?null:t(c);null!=c&&$Y(c);c=Yp.a(b);null!=c&&CY(c);c=iq.a(b);if(null!=c)a:{c=B(nj(rw.a(c)));for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);sZ(k);f+=1;}else if(c=B(c))d=c,Wf(d)?(c=re(d),e=se(d),d=c,k=F(c),c=e,e=k):(k=C(d),sZ(k),c=D(d),d=null,e=0),f=0;else break a}return new n(null,1,[Yx,Yx.a(b)],null)});}
    tb("gateway_web.core.create",function(a){var b=Oh(new n(null,1,[Yx,hO(Ll(a))],null));if("undefined"===typeof P4||"undefined"===typeof Q4||"undefined"===typeof z5)z5=function(c,d,e){this.rg=c;this.qd=d;this.gh=e;this.h=393216;this.I=0;},z5.prototype.O=function(c,d){return new z5(this.rg,this.qd,d)},z5.prototype.N=function(){return this.gh},z5.prototype.start=function(){var c=this,d=this;return new Promise(function(e){V4(c.qd);return e.a?e.a(d):e.call(null,d)})},z5.prototype.stop=function(){var c=this,
    d=this;return new Promise(function(e){W4(c.qd);return e.a?e.a(d):e.call(null,d)})},z5.prototype.connect=function(c){return WY(this.qd,c)},z5.Pa=function(){return new Q(null,3,5,R,[op,hu,HK],null)},z5.Ia=!0,z5.Da="gateway-web.core/t_gateway_web$core15330",z5.Ja=function(c){return ce(c,"gateway-web.core/t_gateway_web$core15330")};return new z5(a,b,S)});
    }).call(commonjsGlobal);

    const Glue42CoreMessageTypes = {
        connectionRequest: { name: "connectionRequest" },
        connectionAccepted: { name: "connectionAccepted" },
        platformPing: { name: "platformPing" },
        platformReady: { name: "platformReady" },
        platformUnload: { name: "platformUnload" },
        clientUnload: { name: "clientUnload" },
        parentPing: { name: "parentPing" },
        parentReady: { name: "parentReady" }
    };
    const GlueWebPlatformControlName$1 = "T42.Web.Platform.Control";
    const GlueWebPlatformStreamName$1 = "T42.Web.Platform.Stream";
    const GlueClientControlName$1 = "T42.Web.Client.Control";
    const GlueWebPlatformWorkspacesStreamName = "T42.Web.Platform.WSP.Stream";
    const GlueWorkspaceFrameClientControlName = "T42.Workspaces.Control";
    const GlueWebIntentsPrefix = "Tick42.FDC3.Intents.";
    const ChannelContextPrefix = "___channel___";
    const dbName = "glue42core";
    const dbVersion = 1;

    class Gateway {
        constructor() {
            this.configureLogging = window.gateway_web.core.configure_logging;
            this.create = window.gateway_web.core.create;
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (config === null || config === void 0 ? void 0 : config.logging) {
                    this.configureLogging({
                        level: config.logging.level,
                        appender: config.logging.appender
                    });
                }
                this._gatewayWebInstance = this.create({});
                yield this._gatewayWebInstance.start();
            });
        }
        connectClient(clientPort, removeFromPlatform) {
            return __awaiter(this, void 0, void 0, function* () {
                const client = yield this._gatewayWebInstance.connect((_, message) => clientPort.postMessage(message));
                clientPort.onmessage = (event) => {
                    var _a;
                    const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                    if (data && data.type === Glue42CoreMessageTypes.clientUnload.name) {
                        if (removeFromPlatform) {
                            removeFromPlatform(data.data.clientId);
                        }
                        client.disconnect();
                        return;
                    }
                    client.send(event.data);
                };
            });
        }
    }

    /**
     * Wraps values in an `Ok` type.
     *
     * Example: `ok(5) // => {ok: true, result: 5}`
     */
    var ok$1 = function (result) { return ({ ok: true, result: result }); };
    /**
     * Typeguard for `Ok`.
     */
    var isOk$1 = function (r) { return r.ok === true; };
    /**
     * Wraps errors in an `Err` type.
     *
     * Example: `err('on fire') // => {ok: false, error: 'on fire'}`
     */
    var err$1 = function (error) { return ({ ok: false, error: error }); };
    /**
     * Typeguard for `Err`.
     */
    var isErr$1 = function (r) { return r.ok === false; };
    /**
     * Create a `Promise` that either resolves with the result of `Ok` or rejects
     * with the error of `Err`.
     */
    var asPromise$1 = function (r) {
        return r.ok === true ? Promise.resolve(r.result) : Promise.reject(r.error);
    };
    /**
     * Unwraps a `Result` and returns either the result of an `Ok`, or
     * `defaultValue`.
     *
     * Example:
     * ```
     * Result.withDefault(5, number().run(json))
     * ```
     *
     * It would be nice if `Decoder` had an instance method that mirrored this
     * function. Such a method would look something like this:
     * ```
     * class Decoder<A> {
     *   runWithDefault = (defaultValue: A, json: any): A =>
     *     Result.withDefault(defaultValue, this.run(json));
     * }
     *
     * number().runWithDefault(5, json)
     * ```
     * Unfortunately, the type of `defaultValue: A` on the method causes issues
     * with type inference on  the `object` decoder in some situations. While these
     * inference issues can be solved by providing the optional type argument for
     * `object`s, the extra trouble and confusion doesn't seem worth it.
     */
    var withDefault$1 = function (defaultValue, r) {
        return r.ok === true ? r.result : defaultValue;
    };
    /**
     * Return the successful result, or throw an error.
     */
    var withException$1 = function (r) {
        if (r.ok === true) {
            return r.result;
        }
        else {
            throw r.error;
        }
    };
    /**
     * Given an array of `Result`s, return the successful values.
     */
    var successes$1 = function (results) {
        return results.reduce(function (acc, r) { return (r.ok === true ? acc.concat(r.result) : acc); }, []);
    };
    /**
     * Apply `f` to the result of an `Ok`, or pass the error through.
     */
    var map$1 = function (f, r) {
        return r.ok === true ? ok$1(f(r.result)) : r;
    };
    /**
     * Apply `f` to the result of two `Ok`s, or pass an error through. If both
     * `Result`s are errors then the first one is returned.
     */
    var map2$1 = function (f, ar, br) {
        return ar.ok === false ? ar :
            br.ok === false ? br :
                ok$1(f(ar.result, br.result));
    };
    /**
     * Apply `f` to the error of an `Err`, or pass the success through.
     */
    var mapError$1 = function (f, r) {
        return r.ok === true ? r : err$1(f(r.error));
    };
    /**
     * Chain together a sequence of computations that may fail, similar to a
     * `Promise`. If the first computation fails then the error will propagate
     * through. If it succeeds, then `f` will be applied to the value, returning a
     * new `Result`.
     */
    var andThen$1 = function (f, r) {
        return r.ok === true ? f(r.result) : r;
    };


    var result$1 = Object.freeze({
    	ok: ok$1,
    	isOk: isOk$1,
    	err: err$1,
    	isErr: isErr$1,
    	asPromise: asPromise$1,
    	withDefault: withDefault$1,
    	withException: withException$1,
    	successes: successes$1,
    	map: map$1,
    	map2: map2$1,
    	mapError: mapError$1,
    	andThen: andThen$1
    });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */



    var __assign$2 = function() {
        __assign$2 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$2.apply(this, arguments);
    };

    function __rest$2(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function isEqual$1(a, b) {
        if (a === b) {
            return true;
        }
        if (a === null && b === null) {
            return true;
        }
        if (typeof (a) !== typeof (b)) {
            return false;
        }
        if (typeof (a) === 'object') {
            // Array
            if (Array.isArray(a)) {
                if (!Array.isArray(b)) {
                    return false;
                }
                if (a.length !== b.length) {
                    return false;
                }
                for (var i = 0; i < a.length; i++) {
                    if (!isEqual$1(a[i], b[i])) {
                        return false;
                    }
                }
                return true;
            }
            // Hash table
            var keys = Object.keys(a);
            if (keys.length !== Object.keys(b).length) {
                return false;
            }
            for (var i = 0; i < keys.length; i++) {
                if (!b.hasOwnProperty(keys[i])) {
                    return false;
                }
                if (!isEqual$1(a[keys[i]], b[keys[i]])) {
                    return false;
                }
            }
            return true;
        }
    }
    /*
     * Helpers
     */
    var isJsonArray$1 = function (json) { return Array.isArray(json); };
    var isJsonObject$1 = function (json) {
        return typeof json === 'object' && json !== null && !isJsonArray$1(json);
    };
    var typeString$1 = function (json) {
        switch (typeof json) {
            case 'string':
                return 'a string';
            case 'number':
                return 'a number';
            case 'boolean':
                return 'a boolean';
            case 'undefined':
                return 'undefined';
            case 'object':
                if (json instanceof Array) {
                    return 'an array';
                }
                else if (json === null) {
                    return 'null';
                }
                else {
                    return 'an object';
                }
            default:
                return JSON.stringify(json);
        }
    };
    var expectedGot$1 = function (expected, got) {
        return "expected " + expected + ", got " + typeString$1(got);
    };
    var printPath$1 = function (paths) {
        return paths.map(function (path) { return (typeof path === 'string' ? "." + path : "[" + path + "]"); }).join('');
    };
    var prependAt$1 = function (newAt, _a) {
        var at = _a.at, rest = __rest$2(_a, ["at"]);
        return (__assign$2({ at: newAt + (at || '') }, rest));
    };
    /**
     * Decoders transform json objects with unknown structure into known and
     * verified forms. You can create objects of type `Decoder<A>` with either the
     * primitive decoder functions, such as `boolean()` and `string()`, or by
     * applying higher-order decoders to the primitives, such as `array(boolean())`
     * or `dict(string())`.
     *
     * Each of the decoder functions are available both as a static method on
     * `Decoder` and as a function alias -- for example the string decoder is
     * defined at `Decoder.string()`, but is also aliased to `string()`. Using the
     * function aliases exported with the library is recommended.
     *
     * `Decoder` exposes a number of 'run' methods, which all decode json in the
     * same way, but communicate success and failure in different ways. The `map`
     * and `andThen` methods modify decoders without having to call a 'run' method.
     *
     * Alternatively, the main decoder `run()` method returns an object of type
     * `Result<A, DecoderError>`. This library provides a number of helper
     * functions for dealing with the `Result` type, so you can do all the same
     * things with a `Result` as with the decoder methods.
     */
    var Decoder$1 = /** @class */ (function () {
        /**
         * The Decoder class constructor is kept private to separate the internal
         * `decode` function from the external `run` function. The distinction
         * between the two functions is that `decode` returns a
         * `Partial<DecoderError>` on failure, which contains an unfinished error
         * report. When `run` is called on a decoder, the relevant series of `decode`
         * calls is made, and then on failure the resulting `Partial<DecoderError>`
         * is turned into a `DecoderError` by filling in the missing information.
         *
         * While hiding the constructor may seem restrictive, leveraging the
         * provided decoder combinators and helper functions such as
         * `andThen` and `map` should be enough to build specialized decoders as
         * needed.
         */
        function Decoder(decode) {
            var _this = this;
            this.decode = decode;
            /**
             * Run the decoder and return a `Result` with either the decoded value or a
             * `DecoderError` containing the json input, the location of the error, and
             * the error message.
             *
             * Examples:
             * ```
             * number().run(12)
             * // => {ok: true, result: 12}
             *
             * string().run(9001)
             * // =>
             * // {
             * //   ok: false,
             * //   error: {
             * //     kind: 'DecoderError',
             * //     input: 9001,
             * //     at: 'input',
             * //     message: 'expected a string, got 9001'
             * //   }
             * // }
             * ```
             */
            this.run = function (json) {
                return mapError$1(function (error) { return ({
                    kind: 'DecoderError',
                    input: json,
                    at: 'input' + (error.at || ''),
                    message: error.message || ''
                }); }, _this.decode(json));
            };
            /**
             * Run the decoder as a `Promise`.
             */
            this.runPromise = function (json) { return asPromise$1(_this.run(json)); };
            /**
             * Run the decoder and return the value on success, or throw an exception
             * with a formatted error string.
             */
            this.runWithException = function (json) { return withException$1(_this.run(json)); };
            /**
             * Construct a new decoder that applies a transformation to the decoded
             * result. If the decoder succeeds then `f` will be applied to the value. If
             * it fails the error will propagated through.
             *
             * Example:
             * ```
             * number().map(x => x * 5).run(10)
             * // => {ok: true, result: 50}
             * ```
             */
            this.map = function (f) {
                return new Decoder(function (json) { return map$1(f, _this.decode(json)); });
            };
            /**
             * Chain together a sequence of decoders. The first decoder will run, and
             * then the function will determine what decoder to run second. If the result
             * of the first decoder succeeds then `f` will be applied to the decoded
             * value. If it fails the error will propagate through.
             *
             * This is a very powerful method -- it can act as both the `map` and `where`
             * methods, can improve error messages for edge cases, and can be used to
             * make a decoder for custom types.
             *
             * Example of adding an error message:
             * ```
             * const versionDecoder = valueAt(['version'], number());
             * const infoDecoder3 = object({a: boolean()});
             *
             * const decoder = versionDecoder.andThen(version => {
             *   switch (version) {
             *     case 3:
             *       return infoDecoder3;
             *     default:
             *       return fail(`Unable to decode info, version ${version} is not supported.`);
             *   }
             * });
             *
             * decoder.run({version: 3, a: true})
             * // => {ok: true, result: {a: true}}
             *
             * decoder.run({version: 5, x: 'abc'})
             * // =>
             * // {
             * //   ok: false,
             * //   error: {... message: 'Unable to decode info, version 5 is not supported.'}
             * // }
             * ```
             *
             * Example of decoding a custom type:
             * ```
             * // nominal type for arrays with a length of at least one
             * type NonEmptyArray<T> = T[] & { __nonEmptyArrayBrand__: void };
             *
             * const nonEmptyArrayDecoder = <T>(values: Decoder<T>): Decoder<NonEmptyArray<T>> =>
             *   array(values).andThen(arr =>
             *     arr.length > 0
             *       ? succeed(createNonEmptyArray(arr))
             *       : fail(`expected a non-empty array, got an empty array`)
             *   );
             * ```
             */
            this.andThen = function (f) {
                return new Decoder(function (json) {
                    return andThen$1(function (value) { return f(value).decode(json); }, _this.decode(json));
                });
            };
            /**
             * Add constraints to a decoder _without_ changing the resulting type. The
             * `test` argument is a predicate function which returns true for valid
             * inputs. When `test` fails on an input, the decoder fails with the given
             * `errorMessage`.
             *
             * ```
             * const chars = (length: number): Decoder<string> =>
             *   string().where(
             *     (s: string) => s.length === length,
             *     `expected a string of length ${length}`
             *   );
             *
             * chars(5).run('12345')
             * // => {ok: true, result: '12345'}
             *
             * chars(2).run('HELLO')
             * // => {ok: false, error: {... message: 'expected a string of length 2'}}
             *
             * chars(12).run(true)
             * // => {ok: false, error: {... message: 'expected a string, got a boolean'}}
             * ```
             */
            this.where = function (test, errorMessage) {
                return _this.andThen(function (value) { return (test(value) ? Decoder.succeed(value) : Decoder.fail(errorMessage)); });
            };
        }
        /**
         * Decoder primitive that validates strings, and fails on all other input.
         */
        Decoder.string = function () {
            return new Decoder(function (json) {
                return typeof json === 'string'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a string', json) });
            });
        };
        /**
         * Decoder primitive that validates numbers, and fails on all other input.
         */
        Decoder.number = function () {
            return new Decoder(function (json) {
                return typeof json === 'number'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a number', json) });
            });
        };
        /**
         * Decoder primitive that validates booleans, and fails on all other input.
         */
        Decoder.boolean = function () {
            return new Decoder(function (json) {
                return typeof json === 'boolean'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a boolean', json) });
            });
        };
        Decoder.constant = function (value) {
            return new Decoder(function (json) {
                return isEqual$1(json, value)
                    ? ok$1(value)
                    : err$1({ message: "expected " + JSON.stringify(value) + ", got " + JSON.stringify(json) });
            });
        };
        Decoder.object = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonObject$1(json) && decoders) {
                    var obj = {};
                    for (var key in decoders) {
                        if (decoders.hasOwnProperty(key)) {
                            var r = decoders[key].decode(json[key]);
                            if (r.ok === true) {
                                // tslint:disable-next-line:strict-type-predicates
                                if (r.result !== undefined) {
                                    obj[key] = r.result;
                                }
                            }
                            else if (json[key] === undefined) {
                                return err$1({ message: "the key '" + key + "' is required but was not present" });
                            }
                            else {
                                return err$1(prependAt$1("." + key, r.error));
                            }
                        }
                    }
                    return ok$1(obj);
                }
                else if (isJsonObject$1(json)) {
                    return ok$1(json);
                }
                else {
                    return err$1({ message: expectedGot$1('an object', json) });
                }
            });
        };
        Decoder.array = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonArray$1(json) && decoder) {
                    var decodeValue_1 = function (v, i) {
                        return mapError$1(function (err$$1) { return prependAt$1("[" + i + "]", err$$1); }, decoder.decode(v));
                    };
                    return json.reduce(function (acc, v, i) {
                        return map2$1(function (arr, result) { return arr.concat([result]); }, acc, decodeValue_1(v, i));
                    }, ok$1([]));
                }
                else if (isJsonArray$1(json)) {
                    return ok$1(json);
                }
                else {
                    return err$1({ message: expectedGot$1('an array', json) });
                }
            });
        };
        Decoder.tuple = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonArray$1(json)) {
                    if (json.length !== decoders.length) {
                        return err$1({
                            message: "expected a tuple of length " + decoders.length + ", got one of length " + json.length
                        });
                    }
                    var result = [];
                    for (var i = 0; i < decoders.length; i++) {
                        var nth = decoders[i].decode(json[i]);
                        if (nth.ok) {
                            result[i] = nth.result;
                        }
                        else {
                            return err$1(prependAt$1("[" + i + "]", nth.error));
                        }
                    }
                    return ok$1(result);
                }
                else {
                    return err$1({ message: expectedGot$1("a tuple of length " + decoders.length, json) });
                }
            });
        };
        Decoder.union = function (ad, bd) {
            var decoders = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                decoders[_i - 2] = arguments[_i];
            }
            return Decoder.oneOf.apply(Decoder, [ad, bd].concat(decoders));
        };
        Decoder.intersection = function (ad, bd) {
            var ds = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                ds[_i - 2] = arguments[_i];
            }
            return new Decoder(function (json) {
                return [ad, bd].concat(ds).reduce(function (acc, decoder) { return map2$1(Object.assign, acc, decoder.decode(json)); }, ok$1({}));
            });
        };
        /**
         * Escape hatch to bypass validation. Always succeeds and types the result as
         * `any`. Useful for defining decoders incrementally, particularly for
         * complex objects.
         *
         * Example:
         * ```
         * interface User {
         *   name: string;
         *   complexUserData: ComplexType;
         * }
         *
         * const userDecoder: Decoder<User> = object({
         *   name: string(),
         *   complexUserData: anyJson()
         * });
         * ```
         */
        Decoder.anyJson = function () { return new Decoder(function (json) { return ok$1(json); }); };
        /**
         * Decoder identity function which always succeeds and types the result as
         * `unknown`.
         */
        Decoder.unknownJson = function () {
            return new Decoder(function (json) { return ok$1(json); });
        };
        /**
         * Decoder for json objects where the keys are unknown strings, but the values
         * should all be of the same type.
         *
         * Example:
         * ```
         * dict(number()).run({chocolate: 12, vanilla: 10, mint: 37});
         * // => {ok: true, result: {chocolate: 12, vanilla: 10, mint: 37}}
         * ```
         */
        Decoder.dict = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonObject$1(json)) {
                    var obj = {};
                    for (var key in json) {
                        if (json.hasOwnProperty(key)) {
                            var r = decoder.decode(json[key]);
                            if (r.ok === true) {
                                obj[key] = r.result;
                            }
                            else {
                                return err$1(prependAt$1("." + key, r.error));
                            }
                        }
                    }
                    return ok$1(obj);
                }
                else {
                    return err$1({ message: expectedGot$1('an object', json) });
                }
            });
        };
        /**
         * Decoder for values that may be `undefined`. This is primarily helpful for
         * decoding interfaces with optional fields.
         *
         * Example:
         * ```
         * interface User {
         *   id: number;
         *   isOwner?: boolean;
         * }
         *
         * const decoder: Decoder<User> = object({
         *   id: number(),
         *   isOwner: optional(boolean())
         * });
         * ```
         */
        Decoder.optional = function (decoder) {
            return new Decoder(function (json) { return (json === undefined || json === null ? ok$1(undefined) : decoder.decode(json)); });
        };
        /**
         * Decoder that attempts to run each decoder in `decoders` and either succeeds
         * with the first successful decoder, or fails after all decoders have failed.
         *
         * Note that `oneOf` expects the decoders to all have the same return type,
         * while `union` creates a decoder for the union type of all the input
         * decoders.
         *
         * Examples:
         * ```
         * oneOf(string(), number().map(String))
         * oneOf(constant('start'), constant('stop'), succeed('unknown'))
         * ```
         */
        Decoder.oneOf = function () {
            var decoders = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                decoders[_i] = arguments[_i];
            }
            return new Decoder(function (json) {
                var errors = [];
                for (var i = 0; i < decoders.length; i++) {
                    var r = decoders[i].decode(json);
                    if (r.ok === true) {
                        return r;
                    }
                    else {
                        errors[i] = r.error;
                    }
                }
                var errorsList = errors
                    .map(function (error) { return "at error" + (error.at || '') + ": " + error.message; })
                    .join('", "');
                return err$1({
                    message: "expected a value matching one of the decoders, got the errors [\"" + errorsList + "\"]"
                });
            });
        };
        /**
         * Decoder that always succeeds with either the decoded value, or a fallback
         * default value.
         */
        Decoder.withDefault = function (defaultValue, decoder) {
            return new Decoder(function (json) {
                return ok$1(withDefault$1(defaultValue, decoder.decode(json)));
            });
        };
        /**
         * Decoder that pulls a specific field out of a json structure, instead of
         * decoding and returning the full structure. The `paths` array describes the
         * object keys and array indices to traverse, so that values can be pulled out
         * of a nested structure.
         *
         * Example:
         * ```
         * const decoder = valueAt(['a', 'b', 0], string());
         *
         * decoder.run({a: {b: ['surprise!']}})
         * // => {ok: true, result: 'surprise!'}
         *
         * decoder.run({a: {x: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b[0]' message: 'path does not exist'}}
         * ```
         *
         * Note that the `decoder` is ran on the value found at the last key in the
         * path, even if the last key is not found. This allows the `optional`
         * decoder to succeed when appropriate.
         * ```
         * const optionalDecoder = valueAt(['a', 'b', 'c'], optional(string()));
         *
         * optionalDecoder.run({a: {b: {c: 'surprise!'}}})
         * // => {ok: true, result: 'surprise!'}
         *
         * optionalDecoder.run({a: {b: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b.c' message: 'expected an object, got "cats"'}
         *
         * optionalDecoder.run({a: {b: {z: 1}}})
         * // => {ok: true, result: undefined}
         * ```
         */
        Decoder.valueAt = function (paths, decoder) {
            return new Decoder(function (json) {
                var jsonAtPath = json;
                for (var i = 0; i < paths.length; i++) {
                    if (jsonAtPath === undefined) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: 'path does not exist'
                        });
                    }
                    else if (typeof paths[i] === 'string' && !isJsonObject$1(jsonAtPath)) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: expectedGot$1('an object', jsonAtPath)
                        });
                    }
                    else if (typeof paths[i] === 'number' && !isJsonArray$1(jsonAtPath)) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: expectedGot$1('an array', jsonAtPath)
                        });
                    }
                    else {
                        jsonAtPath = jsonAtPath[paths[i]];
                    }
                }
                return mapError$1(function (error) {
                    return jsonAtPath === undefined
                        ? { at: printPath$1(paths), message: 'path does not exist' }
                        : prependAt$1(printPath$1(paths), error);
                }, decoder.decode(jsonAtPath));
            });
        };
        /**
         * Decoder that ignores the input json and always succeeds with `fixedValue`.
         */
        Decoder.succeed = function (fixedValue) {
            return new Decoder(function (json) { return ok$1(fixedValue); });
        };
        /**
         * Decoder that ignores the input json and always fails with `errorMessage`.
         */
        Decoder.fail = function (errorMessage) {
            return new Decoder(function (json) { return err$1({ message: errorMessage }); });
        };
        /**
         * Decoder that allows for validating recursive data structures. Unlike with
         * functions, decoders assigned to variables can't reference themselves
         * before they are fully defined. We can avoid prematurely referencing the
         * decoder by wrapping it in a function that won't be called until use, at
         * which point the decoder has been defined.
         *
         * Example:
         * ```
         * interface Comment {
         *   msg: string;
         *   replies: Comment[];
         * }
         *
         * const decoder: Decoder<Comment> = object({
         *   msg: string(),
         *   replies: lazy(() => array(decoder))
         * });
         * ```
         */
        Decoder.lazy = function (mkDecoder) {
            return new Decoder(function (json) { return mkDecoder().decode(json); });
        };
        return Decoder;
    }());

    /* tslint:disable:variable-name */
    /** See `Decoder.string` */
    var string$1 = Decoder$1.string;
    /** See `Decoder.number` */
    var number$1 = Decoder$1.number;
    /** See `Decoder.boolean` */
    var boolean$1 = Decoder$1.boolean;
    /** See `Decoder.anyJson` */
    var anyJson$1 = Decoder$1.anyJson;
    /** See `Decoder.constant` */
    var constant$1 = Decoder$1.constant;
    /** See `Decoder.object` */
    var object$1 = Decoder$1.object;
    /** See `Decoder.array` */
    var array$1 = Decoder$1.array;
    /** See `Decoder.optional` */
    var optional$1 = Decoder$1.optional;
    /** See `Decoder.oneOf` */
    var oneOf$1 = Decoder$1.oneOf;
    /** See `Decoder.intersection` */
    var intersection = Decoder$1.intersection;
    /** See `Decoder.fail` */
    var fail = Decoder$1.fail;
    /** See `Decoder.lazy` */
    var lazy$1 = Decoder$1.lazy;

    const nonNegativeNumberDecoder$1 = number$1().where((num) => num >= 0, "Expected a non-negative number");
    const nonEmptyStringDecoder$1 = string$1().where((s) => s.length > 0, "Expected a non-empty string");
    const windowRelativeDirectionDecoder$1 = oneOf$1(constant$1("top"), constant$1("left"), constant$1("right"), constant$1("bottom"));
    const logLevelDecoder = oneOf$1(constant$1("trace"), constant$1("debug"), constant$1("info"), constant$1("warn"), constant$1("error"));
    const channelMetaDecoder = anyJson$1().where((meta) => typeof meta["color"] === "string" && meta["color"].length > 0, "Expected color to be a non-empty string");
    const layoutTypeDecoder$1 = oneOf$1(constant$1("Global"), constant$1("Activity"), constant$1("ApplicationDefault"), constant$1("Swimlane"), constant$1("Workspace"));
    const componentTypeDecoder$1 = oneOf$1(constant$1("application"), constant$1("activity"));
    const functionCheck = (input, propDescription) => {
        const providedType = typeof input;
        return providedType === "function" ?
            anyJson$1() :
            fail(`The provided argument as ${propDescription} should be of type function, provided: ${typeof providedType}`);
    };
    const layoutSummaryDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$1,
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1())
    });
    const windowLayoutComponentDecoder$1 = object$1({
        type: constant$1("window"),
        componentType: componentTypeDecoder$1,
        state: object$1({
            name: anyJson$1(),
            context: anyJson$1(),
            url: nonEmptyStringDecoder$1,
            bounds: anyJson$1(),
            id: nonEmptyStringDecoder$1,
            parentId: optional$1(nonEmptyStringDecoder$1),
            main: boolean$1()
        })
    });
    const libDomainDecoder$1 = oneOf$1(constant$1("windows"), constant$1("appManager"), constant$1("layouts"), constant$1("workspaces"), constant$1("intents"));
    const windowLayoutItemDecoder$1 = object$1({
        type: constant$1("window"),
        config: object$1({
            appName: nonEmptyStringDecoder$1,
            url: optional$1(nonEmptyStringDecoder$1)
        })
    });
    const groupLayoutItemDecoder$1 = object$1({
        type: constant$1("group"),
        config: anyJson$1(),
        children: array$1(oneOf$1(windowLayoutItemDecoder$1))
    });
    const columnLayoutItemDecoder$1 = object$1({
        type: constant$1("column"),
        config: anyJson$1(),
        children: array$1(oneOf$1(groupLayoutItemDecoder$1, windowLayoutItemDecoder$1, lazy$1(() => columnLayoutItemDecoder$1), lazy$1(() => rowLayoutItemDecoder$1)))
    });
    const rowLayoutItemDecoder$1 = object$1({
        type: constant$1("row"),
        config: anyJson$1(),
        children: array$1(oneOf$1(columnLayoutItemDecoder$1, groupLayoutItemDecoder$1, windowLayoutItemDecoder$1, lazy$1(() => rowLayoutItemDecoder$1)))
    });
    const workspaceLayoutComponentDecoder$1 = object$1({
        type: constant$1("Workspace"),
        state: object$1({
            config: anyJson$1(),
            context: anyJson$1(),
            children: array$1(oneOf$1(rowLayoutItemDecoder$1, columnLayoutItemDecoder$1, groupLayoutItemDecoder$1, windowLayoutItemDecoder$1))
        })
    });
    const glueLayoutDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$1,
        components: array$1(oneOf$1(windowLayoutComponentDecoder$1, workspaceLayoutComponentDecoder$1)),
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1())
    });
    const applicationDetailsDecoder$1 = object$1({
        url: nonEmptyStringDecoder$1,
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1)
    });
    const intentDefinitionDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        displayName: optional$1(string$1()),
        contexts: optional$1(array$1(string$1())),
        customConfig: optional$1(object$1())
    });
    const glueCoreAppDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        customProperties: optional$1(anyJson$1()),
        icon: optional$1(nonEmptyStringDecoder$1),
        caption: optional$1(nonEmptyStringDecoder$1),
        details: applicationDetailsDecoder$1,
        intents: optional$1(array$1(intentDefinitionDecoder$1))
    });
    const fdc3AppDefinitionDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        appId: nonEmptyStringDecoder$1,
        manifest: nonEmptyStringDecoder$1,
        manifestType: nonEmptyStringDecoder$1,
        tooltip: optional$1(nonEmptyStringDecoder$1),
        description: optional$1(nonEmptyStringDecoder$1),
        contactEmail: optional$1(nonEmptyStringDecoder$1),
        supportEmail: optional$1(nonEmptyStringDecoder$1),
        publisher: optional$1(nonEmptyStringDecoder$1),
        images: optional$1(array$1(object$1({ url: optional$1(nonEmptyStringDecoder$1) }))),
        icons: optional$1(array$1(object$1({ icon: optional$1(nonEmptyStringDecoder$1) }))),
        customConfig: anyJson$1(),
        intents: optional$1(array$1(intentDefinitionDecoder$1))
    });
    const remoteStoreDecoder = object$1({
        url: nonEmptyStringDecoder$1,
        pollingInterval: optional$1(nonNegativeNumberDecoder$1),
        requestTimeout: optional$1(nonNegativeNumberDecoder$1)
    });
    const supplierDecoder = object$1({
        fetch: anyJson$1().andThen((result) => functionCheck(result, "supplier fetch")),
        timeout: optional$1(nonNegativeNumberDecoder$1),
        pollingInterval: optional$1(nonNegativeNumberDecoder$1),
        save: optional$1(anyJson$1().andThen((result) => functionCheck(result, "supplier save"))),
        delete: optional$1(anyJson$1().andThen((result) => functionCheck(result, "supplier delete")))
    });
    const channelDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        meta: channelMetaDecoder,
        data: optional$1(anyJson$1())
    });
    const pluginDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        start: anyJson$1(),
        config: anyJson$1()
    });
    const allApplicationDefinitionsDecoder$1 = oneOf$1(glueCoreAppDefinitionDecoder, fdc3AppDefinitionDecoder$1);
    const appsCollectionDecoder = array$1(allApplicationDefinitionsDecoder$1);
    const applicationsConfigDecoder = object$1({
        local: optional$1(array$1(allApplicationDefinitionsDecoder$1))
    });
    const layoutsConfigDecoder = object$1({
        mode: oneOf$1(constant$1("idb"), constant$1("session")),
        local: optional$1(array$1(glueLayoutDecoder$1))
    });
    const channelsConfigDecoder = object$1({
        definitions: array$1(channelDefinitionDecoder)
    });
    const pluginsConfigDecoder = object$1({
        definitions: array$1(pluginDefinitionDecoder)
    });
    const gatewayConfigDecoder = object$1({
        logging: optional$1(object$1({
            level: optional$1(logLevelDecoder),
            appender: optional$1(anyJson$1().andThen((result) => functionCheck(result, "gateway log appender")))
        }))
    });
    const glueConfigDecoder = anyJson$1();
    const workspacesConfigDecoder = object$1({
        src: nonEmptyStringDecoder$1
    });
    const windowsConfigDecoder = object$1({
        windowResponseTimeoutMs: optional$1(nonNegativeNumberDecoder$1),
        defaultWindowOpenBounds: optional$1(object$1({
            top: number$1(),
            left: number$1(),
            width: nonNegativeNumberDecoder$1,
            height: nonNegativeNumberDecoder$1
        }))
    });
    const platformConfigDecoder = object$1({
        windows: optional$1(windowsConfigDecoder),
        applications: optional$1(applicationsConfigDecoder),
        layouts: optional$1(layoutsConfigDecoder),
        channels: optional$1(channelsConfigDecoder),
        plugins: optional$1(pluginsConfigDecoder),
        gateway: optional$1(gatewayConfigDecoder),
        glue: optional$1(glueConfigDecoder),
        workspaces: optional$1(workspacesConfigDecoder),
        glueFactory: optional$1(anyJson$1().andThen((result) => functionCheck(result, "glueFactory")))
    });
    const windowOpenSettingsDecoder$1 = object$1({
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        context: optional$1(anyJson$1()),
        relativeTo: optional$1(nonEmptyStringDecoder$1),
        relativeDirection: optional$1(windowRelativeDirectionDecoder$1)
    });

    class PlatformLogger {
        setLogger(logger) {
            this._logger = logger;
        }
        get(subSystem) {
            if (!this._logger) {
                return;
            }
            return this._logger.subLogger(subSystem);
        }
    }
    var logger = new PlatformLogger();

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed$1 = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue$1() {
        seed$1 = (seed$1 * 9301 + 49297) % 233280;
        return seed$1/(233280.0);
    }

    function setSeed$2(_seed_) {
        seed$1 = _seed_;
    }

    var randomFromSeed$1 = {
        nextValue: getNextValue$1,
        seed: setSeed$2
    };

    var ORIGINAL$1 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet$1;
    var previousSeed$1;

    var shuffled$1;

    function reset$1() {
        shuffled$1 = false;
    }

    function setCharacters$1(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet$1 !== ORIGINAL$1) {
                alphabet$1 = ORIGINAL$1;
                reset$1();
            }
            return;
        }

        if (_alphabet_ === alphabet$1) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL$1.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$1.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$1.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet$1 = _alphabet_;
        reset$1();
    }

    function characters$1(_alphabet_) {
        setCharacters$1(_alphabet_);
        return alphabet$1;
    }

    function setSeed$3(seed) {
        randomFromSeed$1.seed(seed);
        if (previousSeed$1 !== seed) {
            reset$1();
            previousSeed$1 = seed;
        }
    }

    function shuffle$1() {
        if (!alphabet$1) {
            setCharacters$1(ORIGINAL$1);
        }

        var sourceArray = alphabet$1.split('');
        var targetArray = [];
        var r = randomFromSeed$1.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed$1.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled$1() {
        if (shuffled$1) {
            return shuffled$1;
        }
        shuffled$1 = shuffle$1();
        return shuffled$1;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup$1(index) {
        var alphabetShuffled = getShuffled$1();
        return alphabetShuffled[index];
    }

    function get () {
      return alphabet$1 || ORIGINAL$1;
    }

    var alphabet_1$1 = {
        get: get,
        characters: characters$1,
        seed: setSeed$3,
        lookup: lookup$1,
        shuffled: getShuffled$1
    };

    var crypto$1 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    var randomByte$1;

    if (!crypto$1 || !crypto$1.getRandomValues) {
        randomByte$1 = function(size) {
            var bytes = [];
            for (var i = 0; i < size; i++) {
                bytes.push(Math.floor(Math.random() * 256));
            }
            return bytes;
        };
    } else {
        randomByte$1 = function(size) {
            return crypto$1.getRandomValues(new Uint8Array(size));
        };
    }

    var randomByteBrowser$1 = randomByte$1;

    // This file replaces `format.js` in bundlers like webpack or Rollup,
    // according to `browser` config in `package.json`.

    var format_browser = function (random, alphabet, size) {
      // We can’t use bytes bigger than the alphabet. To make bytes values closer
      // to the alphabet, we apply bitmask on them. We look for the closest
      // `2 ** x - 1` number, which will be bigger than alphabet size. If we have
      // 30 symbols in the alphabet, we will take 31 (00011111).
      // We do not use faster Math.clz32, because it is not available in browsers.
      var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
      // Bitmask is not a perfect solution (in our example it will pass 31 bytes,
      // which is bigger than the alphabet). As a result, we will need more bytes,
      // than ID size, because we will refuse bytes bigger than the alphabet.

      // Every hardware random generator call is costly,
      // because we need to wait for entropy collection. This is why often it will
      // be faster to ask for few extra bytes in advance, to avoid additional calls.

      // Here we calculate how many random bytes should we call in advance.
      // It depends on ID length, mask / alphabet size and magic number 1.6
      // (which was selected according benchmarks).

      // -~f => Math.ceil(f) if n is float number
      // -~i => i + 1 if n is integer number
      var step = -~(1.6 * mask * size / alphabet.length);
      var id = '';

      while (true) {
        var bytes = random(step);
        // Compact alternative for `for (var i = 0; i < step; i++)`
        var i = step;
        while (i--) {
          // If random byte is bigger than alphabet even after bitmask,
          // we refuse it by `|| ''`.
          id += alphabet[bytes[i] & mask] || '';
          // More compact than `id.length + 1 === size`
          if (id.length === +size) return id
        }
      }
    };

    function generate(number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + format_browser(randomByteBrowser$1, alphabet_1$1.get(), 1);
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var generate_1 = generate;

    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1567752802062;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version$2 = 7;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function build(clusterWorkerId) {
        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + generate_1(version$2);
        str = str + generate_1(clusterWorkerId);
        if (counter > 0) {
            str = str + generate_1(counter);
        }
        str = str + generate_1(seconds);
        return str;
    }

    var build_1 = build;

    function isShortId$1(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var nonAlphabetic = new RegExp('[^' +
          alphabet_1$1.get().replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&') +
        ']');
        return !nonAlphabetic.test(id);
    }

    var isValid$1 = isShortId$1;

    var lib$2 = createCommonjsModule$1(function (module) {





    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1$1.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1$1.characters(newCharacters);
        }

        return alphabet_1$1.shuffled();
    }

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {
      return build_1(clusterWorkerId);
    }

    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.isValid = isValid$1;
    });

    var shortid$1 = lib$2;

    class PlatformController {
        constructor(glueController, windowsController, applicationsController, layoutsController, workspacesController, intentsController, channelsController, portsBridge, stateController) {
            this.glueController = glueController;
            this.windowsController = windowsController;
            this.applicationsController = applicationsController;
            this.layoutsController = layoutsController;
            this.workspacesController = workspacesController;
            this.intentsController = intentsController;
            this.channelsController = channelsController;
            this.portsBridge = portsBridge;
            this.stateController = stateController;
            this.controllers = {
                windows: this.windowsController,
                appManager: this.applicationsController,
                layouts: this.layoutsController,
                workspaces: this.workspacesController,
                intents: this.intentsController,
                channels: this.channelsController
            };
        }
        get logger() {
            return logger.get("main.web.platform");
        }
        start(config) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                yield this.portsBridge.start(config.gateway);
                this.portsBridge.onClientUnloaded(this.handleClientUnloaded.bind(this));
                yield this.glueController.start(config);
                yield Promise.all([
                    this.glueController.createPlatformSystemMethod(this.handleControlMessage.bind(this)),
                    this.glueController.createPlatformSystemStream()
                ]);
                this.stateController.start();
                yield Promise.all(Object.values(this.controllers).map((controller) => controller.start(config)));
                yield this.glueController.initClientGlue(config === null || config === void 0 ? void 0 : config.glue, config === null || config === void 0 ? void 0 : config.glueFactory);
                (_a = config.plugins) === null || _a === void 0 ? void 0 : _a.definitions.forEach(this.startPlugin.bind(this));
            });
        }
        getClientGlue() {
            return this.glueController.clientGlue;
        }
        startPlugin(definition) {
            var _a;
            try {
                definition.start(this.glueController.clientGlue, definition.config);
            }
            catch (error) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`Plugin: ${definition.name} threw while initiating: ${JSON.stringify(error.message)}`);
            }
        }
        handleControlMessage(args, caller, success, error) {
            var _a, _b;
            const decodeResult = libDomainDecoder$1.run(args.domain);
            if (!decodeResult.ok) {
                const errString = JSON.stringify(decodeResult.error);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`rejecting execution of a command, because of a domain validation error: ${errString}`);
                return error(`Cannot execute this platform control, because of domain validation error: ${errString}`);
            }
            const domain = decodeResult.result;
            args.commandId = shortid$1.generate();
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${args.commandId}] received a command for a valid domain: ${domain} from window ${caller.windowId} and interop id ${caller.instance}, forwarding to the appropriate controller`);
            this.controllers[domain]
                .handleControl(args)
                .then((result) => {
                var _a;
                success(result);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${args.commandId}] this command was executed successfully, sending the result to the caller.`);
            })
                .catch((err) => {
                var _a;
                const stringError = typeof err === "string" ? err : JSON.stringify(err.message);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${args.commandId}] this command's execution was rejected, reason: ${stringError}`);
                error(`The platform rejected operation ${args.operation} for domain: ${domain} with reason: ${stringError}`);
            });
        }
        handleClientUnloaded(client) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`detected unloading of client: ${client.windowId}, notifying all controllers`);
            Object.values(this.controllers).forEach((controller, idx) => {
                var _a, _b;
                try {
                    (_a = controller.handleClientUnloaded) === null || _a === void 0 ? void 0 : _a.call(controller, client.windowId, client.win);
                }
                catch (error) {
                    const controllerName = Object.keys(this.controllers)[idx];
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error(`${controllerName} controller threw when handling unloaded client ${client.windowId} with error message: ${JSON.stringify(error.message)}`);
                }
            });
        }
    }

    const defaultPlatformConfig = {
        windows: {
            windowResponseTimeoutMs: 10000,
            defaultWindowOpenBounds: {
                top: 0,
                left: 0,
                width: 600,
                height: 600
            }
        },
        applications: {
            local: []
        },
        layouts: {
            mode: "idb",
            local: []
        },
        channels: {
            definitions: []
        },
        plugins: {
            definitions: []
        },
        gateway: {
            logging: {
                level: "info"
            }
        },
        glue: {}
    };
    const defaultTargetString = "*";

    var isMergeableObject = function isMergeableObject(value) {
    	return isNonNullObject(value)
    		&& !isSpecial(value)
    };

    function isNonNullObject(value) {
    	return !!value && typeof value === 'object'
    }

    function isSpecial(value) {
    	var stringValue = Object.prototype.toString.call(value);

    	return stringValue === '[object RegExp]'
    		|| stringValue === '[object Date]'
    		|| isReactElement(value)
    }

    // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

    function isReactElement(value) {
    	return value.$$typeof === REACT_ELEMENT_TYPE
    }

    function emptyTarget(val) {
    	return Array.isArray(val) ? [] : {}
    }

    function cloneUnlessOtherwiseSpecified(value, options) {
    	return (options.clone !== false && options.isMergeableObject(value))
    		? deepmerge(emptyTarget(value), value, options)
    		: value
    }

    function defaultArrayMerge(target, source, options) {
    	return target.concat(source).map(function(element) {
    		return cloneUnlessOtherwiseSpecified(element, options)
    	})
    }

    function getMergeFunction(key, options) {
    	if (!options.customMerge) {
    		return deepmerge
    	}
    	var customMerge = options.customMerge(key);
    	return typeof customMerge === 'function' ? customMerge : deepmerge
    }

    function getEnumerableOwnPropertySymbols(target) {
    	return Object.getOwnPropertySymbols
    		? Object.getOwnPropertySymbols(target).filter(function(symbol) {
    			return target.propertyIsEnumerable(symbol)
    		})
    		: []
    }

    function getKeys(target) {
    	return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
    }

    function propertyIsOnObject(object, property) {
    	try {
    		return property in object
    	} catch(_) {
    		return false
    	}
    }

    // Protects from prototype poisoning and unexpected merging up the prototype chain.
    function propertyIsUnsafe(target, key) {
    	return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
    		&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
    			&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
    }

    function mergeObject(target, source, options) {
    	var destination = {};
    	if (options.isMergeableObject(target)) {
    		getKeys(target).forEach(function(key) {
    			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    		});
    	}
    	getKeys(source).forEach(function(key) {
    		if (propertyIsUnsafe(target, key)) {
    			return
    		}

    		if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
    			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    		} else {
    			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    		}
    	});
    	return destination
    }

    function deepmerge(target, source, options) {
    	options = options || {};
    	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    	options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    	// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
    	// implementations can use it. The caller may not replace it.
    	options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

    	var sourceIsArray = Array.isArray(source);
    	var targetIsArray = Array.isArray(target);
    	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    	if (!sourceAndTargetTypesMatch) {
    		return cloneUnlessOtherwiseSpecified(source, options)
    	} else if (sourceIsArray) {
    		return options.arrayMerge(target, source, options)
    	} else {
    		return mergeObject(target, source, options)
    	}
    }

    deepmerge.all = function deepmergeAll(array, options) {
    	if (!Array.isArray(array)) {
    		throw new Error('first argument should be an array')
    	}

    	return array.reduce(function(prev, next) {
    		return deepmerge(prev, next, options)
    	}, {})
    };

    var deepmerge_1 = deepmerge;

    var cjs = deepmerge_1;

    var version$3 = "1.0.3";

    class Platform {
        constructor(controller, config) {
            this.controller = controller;
            this.checkSingleton();
            this.processConfig(config);
        }
        ready() {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.controller.start(this.platformConfig);
            });
        }
        getClientGlue() {
            return this.controller.getClientGlue();
        }
        exposeAPI() {
            return {
                version: this.version
            };
        }
        get version() {
            return version$3;
        }
        checkSingleton() {
            const glue42CoreNamespace = window.glue42core;
            if (!glue42CoreNamespace) {
                window.glue42core = { platformStarted: true };
                return;
            }
            if (glue42CoreNamespace.platformStarted) {
                throw new Error("The Glue42 Core Platform has already been started for this application.");
            }
            glue42CoreNamespace.platformStarted = true;
        }
        processConfig(config = {}) {
            const verifiedConfig = platformConfigDecoder.runWithException(config);
            this.validatePlugins(verifiedConfig);
            this.platformConfig = cjs(defaultPlatformConfig, verifiedConfig);
        }
        validatePlugins(verifiedConfig) {
            var _a;
            if ((_a = verifiedConfig.plugins) === null || _a === void 0 ? void 0 : _a.definitions) {
                const badDefinitions = verifiedConfig.plugins.definitions.reduce((soFar, definition) => {
                    const startType = typeof definition.start;
                    const name = definition.name;
                    if (startType !== "function") {
                        soFar.push({ name, startType });
                    }
                    return soFar;
                }, []);
                if (badDefinitions.length) {
                    const errorStack = badDefinitions
                        .map((def) => `The start function for plugin ${def.name} was expected to be of type function, but was provided: ${def.startType}`)
                        .join("\n");
                    throw new Error(errorStack);
                }
            }
        }
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics$1 = function(d, b) {
        extendStatics$1 = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics$1(d, b);
    };

    function __extends$1(d, b) {
        extendStatics$1(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign$3 = function() {
        __assign$3 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$3.apply(this, arguments);
    };

    function __awaiter$2(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator$1(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __spreadArrays$1() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    var MetricTypes$1 = {
        STRING: 1,
        NUMBER: 2,
        TIMESTAMP: 3,
        OBJECT: 4
    };

    function getMetricTypeByValue$1(metric) {
        if (metric.type === MetricTypes$1.TIMESTAMP) {
            return "timestamp";
        }
        else if (metric.type === MetricTypes$1.NUMBER) {
            return "number";
        }
        else if (metric.type === MetricTypes$1.STRING) {
            return "string";
        }
        else if (metric.type === MetricTypes$1.OBJECT) {
            return "object";
        }
        return "unknown";
    }
    function getTypeByValue$1(value) {
        if (value.constructor === Date) {
            return "timestamp";
        }
        else if (typeof value === "number") {
            return "number";
        }
        else if (typeof value === "string") {
            return "string";
        }
        else if (typeof value === "object") {
            return "object";
        }
        else {
            return "string";
        }
    }
    function serializeMetric$1(metric) {
        var serializedMetrics = {};
        var type = getMetricTypeByValue$1(metric);
        if (type === "object") {
            var values = Object.keys(metric.value).reduce(function (memo, key) {
                var innerType = getTypeByValue$1(metric.value[key]);
                if (innerType === "object") {
                    var composite = defineNestedComposite$1(metric.value[key]);
                    memo[key] = {
                        type: "object",
                        description: "",
                        context: {},
                        composite: composite,
                    };
                }
                else {
                    memo[key] = {
                        type: innerType,
                        description: "",
                        context: {},
                    };
                }
                return memo;
            }, {});
            serializedMetrics.composite = values;
        }
        serializedMetrics.name = normalizeMetricName$1(metric.path.join("/") + "/" + metric.name);
        serializedMetrics.type = type;
        serializedMetrics.description = metric.description;
        serializedMetrics.context = {};
        return serializedMetrics;
    }
    function defineNestedComposite$1(values) {
        return Object.keys(values).reduce(function (memo, key) {
            var type = getTypeByValue$1(values[key]);
            if (type === "object") {
                memo[key] = {
                    type: "object",
                    description: "",
                    context: {},
                    composite: defineNestedComposite$1(values[key]),
                };
            }
            else {
                memo[key] = {
                    type: type,
                    description: "",
                    context: {},
                };
            }
            return memo;
        }, {});
    }
    function normalizeMetricName$1(name) {
        if (typeof name !== "undefined" && name.length > 0 && name[0] !== "/") {
            return "/" + name;
        }
        else {
            return name;
        }
    }
    function getMetricValueByType$1(metric) {
        var type = getMetricTypeByValue$1(metric);
        if (type === "timestamp") {
            return Date.now();
        }
        else {
            return publishNestedComposite$1(metric.value);
        }
    }
    function publishNestedComposite$1(values) {
        if (typeof values !== "object") {
            return values;
        }
        return Object.keys(values).reduce(function (memo, key) {
            var value = values[key];
            if (typeof value === "object" && value.constructor !== Date) {
                memo[key] = publishNestedComposite$1(value);
            }
            else if (value.constructor === Date) {
                memo[key] = new Date(value).getTime();
            }
            else if (value.constructor === Boolean) {
                memo[key] = value.toString();
            }
            else {
                memo[key] = value;
            }
            return memo;
        }, {});
    }
    function flatten$1(arr) {
        return arr.reduce(function (flat, toFlatten) {
            return flat.concat(Array.isArray(toFlatten) ? flatten$1(toFlatten) : toFlatten);
        }, []);
    }
    function getHighestState$1(arr) {
        return arr.sort(function (a, b) {
            if (!a.state) {
                return 1;
            }
            if (!b.state) {
                return -1;
            }
            return b.state - a.state;
        })[0];
    }
    function aggregateDescription$1(arr) {
        var msg = "";
        arr.forEach(function (m, idx, a) {
            var path = m.path.join(".");
            if (idx === a.length - 1) {
                msg += path + "." + m.name + ": " + m.description;
            }
            else {
                msg += path + "." + m.name + ": " + m.description + ",";
            }
        });
        if (msg.length > 100) {
            return msg.slice(0, 100) + "...";
        }
        else {
            return msg;
        }
    }
    function composeMsgForRootStateMetric$1(system) {
        var aggregatedState = system.root.getAggregateState();
        var merged = flatten$1(aggregatedState);
        var highestState = getHighestState$1(merged);
        var aggregateDesc = aggregateDescription$1(merged);
        return {
            description: aggregateDesc,
            value: highestState.state,
        };
    }

    function gw3$1 (connection, config) {
        var _this = this;
        if (!connection || typeof connection !== "object") {
            throw new Error("Connection is required parameter");
        }
        var joinPromise;
        var session;
        var init = function (repo) {
            var resolveReadyPromise;
            joinPromise = new Promise(function (resolve) {
                resolveReadyPromise = resolve;
            });
            session = connection.domain("metrics");
            session.onJoined(function (reconnect) {
                if (!reconnect && resolveReadyPromise) {
                    resolveReadyPromise();
                    resolveReadyPromise = undefined;
                }
                var rootStateMetric = {
                    name: "/State",
                    type: "object",
                    composite: {
                        Description: {
                            type: "string",
                            description: "",
                        },
                        Value: {
                            type: "number",
                            description: "",
                        },
                    },
                    description: "System state",
                    context: {},
                };
                var defineRootMetricsMsg = {
                    type: "define",
                    metrics: [rootStateMetric],
                };
                session.send(defineRootMetricsMsg);
                if (reconnect) {
                    replayRepo(repo);
                }
            });
            session.join({
                system: config.system,
                service: config.service,
                instance: config.instance
            });
        };
        var replayRepo = function (repo) {
            replaySystem(repo.root);
        };
        var replaySystem = function (system) {
            createSystem(system);
            system.metrics.forEach(function (m) {
                createMetric(m);
            });
            system.subSystems.forEach(function (ss) {
                replaySystem(ss);
            });
        };
        var createSystem = function (system) { return __awaiter$2(_this, void 0, void 0, function () {
            var metric, createMetricsMsg;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (system.parent === undefined) {
                            return [2];
                        }
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        metric = {
                            name: normalizeMetricName$1(system.path.join("/") + "/" + system.name + "/State"),
                            type: "object",
                            composite: {
                                Description: {
                                    type: "string",
                                    description: "",
                                },
                                Value: {
                                    type: "number",
                                    description: "",
                                },
                            },
                            description: "System state",
                            context: {},
                        };
                        createMetricsMsg = {
                            type: "define",
                            metrics: [metric],
                        };
                        session.send(createMetricsMsg);
                        return [2];
                }
            });
        }); };
        var updateSystem = function (system, state) { return __awaiter$2(_this, void 0, void 0, function () {
            var shadowedUpdateMetric, stateObj, rootMetric;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, joinPromise];
                    case 1:
                        _a.sent();
                        shadowedUpdateMetric = {
                            type: "publish",
                            values: [{
                                    name: normalizeMetricName$1(system.path.join("/") + "/" + system.name + "/State"),
                                    value: {
                                        Description: state.description,
                                        Value: state.state,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(shadowedUpdateMetric);
                        stateObj = composeMsgForRootStateMetric$1(system);
                        rootMetric = {
                            type: "publish",
                            peer_id: connection.peerId,
                            values: [{
                                    name: "/State",
                                    value: {
                                        Description: stateObj.description,
                                        Value: stateObj.value,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(rootMetric);
                        return [2];
                }
            });
        }); };
        var createMetric = function (metric) { return __awaiter$2(_this, void 0, void 0, function () {
            var metricClone, m, createMetricsMsg;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        m = serializeMetric$1(metricClone);
                        createMetricsMsg = {
                            type: "define",
                            metrics: [m],
                        };
                        session.send(createMetricsMsg);
                        if (typeof metricClone.value !== "undefined") {
                            updateMetricCore(metricClone);
                        }
                        return [2];
                }
            });
        }); };
        var updateMetric = function (metric) { return __awaiter$2(_this, void 0, void 0, function () {
            var metricClone;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        updateMetricCore(metricClone);
                        return [2];
                }
            });
        }); };
        var updateMetricCore = function (metric) {
            if (canUpdate()) {
                var value = getMetricValueByType$1(metric);
                var publishMetricsMsg = {
                    type: "publish",
                    values: [{
                            name: normalizeMetricName$1(metric.path.join("/") + "/" + metric.name),
                            value: value,
                            timestamp: Date.now(),
                        }],
                };
                return session.sendFireAndForget(publishMetricsMsg);
            }
            return Promise.resolve();
        };
        var cloneMetric = function (metric) {
            var metricClone = __assign$3({}, metric);
            if (typeof metric.value === "object" && metric.value !== null) {
                metricClone.value = __assign$3({}, metric.value);
            }
            return metricClone;
        };
        var canUpdate = function () {
            var _a;
            try {
                var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });
                return func();
            }
            catch (_b) {
                return true;
            }
        };
        return {
            init: init,
            createSystem: createSystem,
            updateSystem: updateSystem,
            createMetric: createMetric,
            updateMetric: updateMetric,
        };
    }

    var Helpers$1 = {
        validate: function (definition, parent, transport) {
            if (definition === null || typeof definition !== "object") {
                throw new Error("Missing definition");
            }
            if (parent === null || typeof parent !== "object") {
                throw new Error("Missing parent");
            }
            if (transport === null || typeof transport !== "object") {
                throw new Error("Missing transport");
            }
        },
    };

    var BaseMetric$1 = (function () {
        function BaseMetric(definition, system, transport, value, type) {
            this.definition = definition;
            this.system = system;
            this.transport = transport;
            this.value = value;
            this.type = type;
            this.path = [];
            Helpers$1.validate(definition, system, transport);
            this.path = system.path.slice(0);
            this.path.push(system.name);
            this.name = definition.name;
            this.description = definition.description;
            transport.createMetric(this);
        }
        Object.defineProperty(BaseMetric.prototype, "repo", {
            get: function () {
                var _a;
                return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseMetric.prototype, "id", {
            get: function () { return this.system.path + "/" + name; },
            enumerable: true,
            configurable: true
        });
        BaseMetric.prototype.update = function (newValue) {
            this.value = newValue;
            return this.transport.updateMetric(this);
        };
        return BaseMetric;
    }());

    var NumberMetric$1 = (function (_super) {
        __extends$1(NumberMetric, _super);
        function NumberMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.NUMBER) || this;
        }
        NumberMetric.prototype.incrementBy = function (num) {
            this.update(this.value + num);
        };
        NumberMetric.prototype.increment = function () {
            this.incrementBy(1);
        };
        NumberMetric.prototype.decrement = function () {
            this.incrementBy(-1);
        };
        NumberMetric.prototype.decrementBy = function (num) {
            this.incrementBy(num * -1);
        };
        return NumberMetric;
    }(BaseMetric$1));

    var ObjectMetric$1 = (function (_super) {
        __extends$1(ObjectMetric, _super);
        function ObjectMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.OBJECT) || this;
        }
        ObjectMetric.prototype.update = function (newValue) {
            this.mergeValues(newValue);
            return this.transport.updateMetric(this);
        };
        ObjectMetric.prototype.mergeValues = function (values) {
            var _this = this;
            return Object.keys(this.value).forEach(function (k) {
                if (typeof values[k] !== "undefined") {
                    _this.value[k] = values[k];
                }
            });
        };
        return ObjectMetric;
    }(BaseMetric$1));

    var StringMetric$1 = (function (_super) {
        __extends$1(StringMetric, _super);
        function StringMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.STRING) || this;
        }
        return StringMetric;
    }(BaseMetric$1));

    var TimestampMetric$1 = (function (_super) {
        __extends$1(TimestampMetric, _super);
        function TimestampMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.TIMESTAMP) || this;
        }
        TimestampMetric.prototype.now = function () {
            this.update(new Date());
        };
        return TimestampMetric;
    }(BaseMetric$1));

    function system$1(name, repo, protocol, parent, description) {
        if (!repo) {
            throw new Error("Repository is required");
        }
        if (!protocol) {
            throw new Error("Transport is required");
        }
        var _transport = protocol;
        var _name = name;
        var _description = description || "";
        var _repo = repo;
        var _parent = parent;
        var _path = _buildPath(parent);
        var _state = {};
        var id = _arrayToString(_path, "/") + name;
        var root = repo.root;
        var _subSystems = [];
        var _metrics = [];
        function subSystem(nameSystem, descriptionSystem) {
            if (!nameSystem || nameSystem.length === 0) {
                throw new Error("name is required");
            }
            var match = _subSystems.filter(function (s) { return s.name === nameSystem; });
            if (match.length > 0) {
                return match[0];
            }
            var _system = system$1(nameSystem, _repo, _transport, me, descriptionSystem);
            _subSystems.push(_system);
            return _system;
        }
        function setState(state, stateDescription) {
            _state = { state: state, description: stateDescription };
            _transport.updateSystem(me, _state);
        }
        function stringMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.STRING, value, function (metricDef) { return new StringMetric$1(metricDef, me, _transport, value); });
        }
        function numberMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.NUMBER, value, function (metricDef) { return new NumberMetric$1(metricDef, me, _transport, value); });
        }
        function objectMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.OBJECT, value, function (metricDef) { return new ObjectMetric$1(metricDef, me, _transport, value); });
        }
        function timestampMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.TIMESTAMP, value, function (metricDef) { return new TimestampMetric$1(metricDef, me, _transport, value); });
        }
        function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {
            var metricDef = { name: "" };
            if (typeof metricObject === "string") {
                metricDef = { name: metricObject };
            }
            else {
                metricDef = metricObject;
            }
            var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });
            if (matching.length > 0) {
                var existing = matching[0];
                if (existing.type !== expectedType) {
                    throw new Error("A metric named " + metricDef.name + " is already defined with different type.");
                }
                if (typeof value !== "undefined") {
                    existing
                        .update(value)
                        .catch(function () { });
                }
                return existing;
            }
            var metric = createMetric(metricDef);
            _metrics.push(metric);
            return metric;
        }
        function _buildPath(shadowedSystem) {
            if (!shadowedSystem || !shadowedSystem.parent) {
                return [];
            }
            var path = _buildPath(shadowedSystem.parent);
            path.push(shadowedSystem.name);
            return path;
        }
        function _arrayToString(path, separator) {
            return ((path && path.length > 0) ? path.join(separator) : "");
        }
        function getAggregateState() {
            var aggState = [];
            if (Object.keys(_state).length > 0) {
                aggState.push({
                    name: _name,
                    path: _path,
                    state: _state.state,
                    description: _state.description,
                });
            }
            _subSystems.forEach(function (shadowedSubSystem) {
                var result = shadowedSubSystem.getAggregateState();
                if (result.length > 0) {
                    aggState.push.apply(aggState, result);
                }
            });
            return aggState;
        }
        var me = {
            get name() {
                return _name;
            },
            get description() {
                return _description;
            },
            get repo() {
                return _repo;
            },
            get parent() {
                return _parent;
            },
            path: _path,
            id: id,
            root: root,
            get subSystems() {
                return _subSystems;
            },
            get metrics() {
                return _metrics;
            },
            subSystem: subSystem,
            getState: function () {
                return _state;
            },
            setState: setState,
            stringMetric: stringMetric,
            timestampMetric: timestampMetric,
            objectMetric: objectMetric,
            numberMetric: numberMetric,
            getAggregateState: getAggregateState,
        };
        _transport.createSystem(me);
        return me;
    }

    var Repository$1 = (function () {
        function Repository(options, protocol) {
            protocol.init(this);
            this.root = system$1("", this, protocol);
            this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);
        }
        Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {
            if (typeof navigator !== "undefined") {
                rootSystem.stringMetric("UserAgent", navigator.userAgent);
            }
            if (useClickStream && typeof document !== "undefined") {
                var clickStream_1 = rootSystem.subSystem("ClickStream");
                var documentClickHandler = function (e) {
                    if (!e.target) {
                        return;
                    }
                    var target = e.target;
                    clickStream_1.objectMetric("LastBrowserEvent", {
                        type: "click",
                        timestamp: new Date(),
                        target: {
                            className: e.target ? target.className : "",
                            id: target.id,
                            type: "<" + target.tagName.toLowerCase() + ">",
                            href: target.href || "",
                        },
                    });
                };
                clickStream_1.objectMetric("Page", {
                    title: document.title,
                    page: window.location.href,
                });
                if (document.addEventListener) {
                    document.addEventListener("click", documentClickHandler);
                }
                else {
                    document.attachEvent("onclick", documentClickHandler);
                }
            }
            var startTime = rootSystem.stringMetric("StartTime", (new Date()).toString());
            var urlMetric = rootSystem.stringMetric("StartURL", "");
            var appNameMetric = rootSystem.stringMetric("AppName", "");
            if (typeof window !== "undefined") {
                if (typeof window.location !== "undefined") {
                    var startUrl = window.location.href;
                    urlMetric.update(startUrl);
                }
                if (typeof window.glue42gd !== "undefined") {
                    appNameMetric.update(window.glue42gd.appName);
                }
            }
        };
        return Repository;
    }());

    var NullProtocol$1 = (function () {
        function NullProtocol() {
        }
        NullProtocol.prototype.init = function (repo) {
        };
        NullProtocol.prototype.createSystem = function (system) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateSystem = function (metric, state) {
            return Promise.resolve();
        };
        NullProtocol.prototype.createMetric = function (metric) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateMetric = function (metric) {
            return Promise.resolve();
        };
        return NullProtocol;
    }());

    var PerfTracker$1 = (function () {
        function PerfTracker(api, initialPublishTimeout, publishInterval) {
            this.api = api;
            this.lastCount = 0;
            this.initialPublishTimeout = 10 * 1000;
            this.publishInterval = 60 * 1000;
            this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;
            this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;
            this.scheduleCollection();
            this.system = this.api.subSystem("performance", "Performance data published by the web application");
        }
        PerfTracker.prototype.scheduleCollection = function () {
            var _this = this;
            setTimeout(function () {
                _this.collect();
                setInterval(function () {
                    _this.collect();
                }, _this.publishInterval);
            }, this.initialPublishTimeout);
        };
        PerfTracker.prototype.collect = function () {
            try {
                this.collectMemory();
                this.collectEntries();
            }
            catch (_a) {
            }
        };
        PerfTracker.prototype.collectMemory = function () {
            var memory = window.performance.memory;
            this.system.stringMetric("memory", JSON.stringify({
                totalJSHeapSize: memory.totalJSHeapSize,
                usedJSHeapSize: memory.usedJSHeapSize
            }));
        };
        PerfTracker.prototype.collectEntries = function () {
            var allEntries = window.performance.getEntries();
            if (allEntries.length <= this.lastCount) {
                return;
            }
            this.lastCount = allEntries.length;
            this.system.stringMetric("entries", JSON.stringify(allEntries));
        };
        return PerfTracker;
    }());

    var metrics$1 = (function (options) {
        var protocol;
        if (!options.connection || typeof options.connection !== "object") {
            protocol = new NullProtocol$1();
        }
        else {
            protocol = gw3$1(options.connection, options);
        }
        var repo = new Repository$1(options, protocol);
        var rootSystem = repo.root;
        if (!options.disableAutoAppSystem) {
            rootSystem = rootSystem.subSystem("App");
        }
        var api = addFAVSupport$1(rootSystem);
        initPerf$1(api, options.pagePerformanceMetrics);
        return api;
    });
    var perf$1;
    function initPerf$1(api, config) {
        var _a, _b;
        if (typeof window === "undefined") {
            return;
        }
        var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;
        if (perfConfig) {
            config = perfConfig;
        }
        if (config === null || config === void 0 ? void 0 : config.enabled) {
            perf$1 = new PerfTracker$1(api, config.initialPublishTimeout, config.publishInterval);
        }
    }
    function addFAVSupport$1(system) {
        var reportingSystem = system.subSystem("reporting");
        var def = {
            name: "features"
        };
        var featureMetric;
        var featureMetricFunc = function (name, action, payload) {
            if (typeof name === "undefined" || name === "") {
                throw new Error("name is mandatory");
            }
            else if (typeof action === "undefined" || action === "") {
                throw new Error("action is mandatory");
            }
            else if (typeof payload === "undefined" || payload === "") {
                throw new Error("payload is mandatory");
            }
            if (!featureMetric) {
                featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });
            }
            else {
                featureMetric.update({
                    name: name,
                    action: action,
                    payload: payload
                });
            }
        };
        system.featureMetric = featureMetricFunc;
        return system;
    }

    function createRegistry$2(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$2.default = createRegistry$2;
    var lib$3 = createRegistry$2;

    var InProcTransport$1 = (function () {
        function InProcTransport(settings, logger) {
            var _this = this;
            this.registry = lib$3();
            this.gw = settings.facade;
            this.gw.connect(function (_client, message) {
                _this.messageHandler(message);
            }).then(function (client) {
                _this.client = client;
            });
        }
        Object.defineProperty(InProcTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InProcTransport.prototype.sendObject = function (msg) {
            if (this.client) {
                this.client.send(msg);
                return Promise.resolve(undefined);
            }
            else {
                return Promise.reject("not connected");
            }
        };
        InProcTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        InProcTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        InProcTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
        };
        InProcTransport.prototype.close = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.open = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.name = function () {
            return "in-memory";
        };
        InProcTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return InProcTransport;
    }());

    var SharedWorkerTransport$1 = (function () {
        function SharedWorkerTransport(workerFile, logger) {
            var _this = this;
            this.logger = logger;
            this.registry = lib$3();
            this.worker = new SharedWorker(workerFile);
            this.worker.port.onmessage = function (e) {
                _this.messageHandler(e.data);
            };
        }
        Object.defineProperty(SharedWorkerTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        SharedWorkerTransport.prototype.sendObject = function (msg) {
            this.worker.port.postMessage(msg);
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        SharedWorkerTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
        };
        SharedWorkerTransport.prototype.close = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.open = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.name = function () {
            return "shared-worker";
        };
        SharedWorkerTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return SharedWorkerTransport;
    }());

    var Utils$1 = (function () {
        function Utils() {
        }
        Utils.getGDMajorVersion = function () {
            if (typeof window === "undefined") {
                return undefined;
            }
            if (!window.glueDesktop) {
                return undefined;
            }
            if (!window.glueDesktop.version) {
                return undefined;
            }
            var ver = Number(window.glueDesktop.version.substr(0, 1));
            return isNaN(ver) ? undefined : ver;
        };
        Utils.isNode = function () {
            if (typeof Utils._isNode !== "undefined") {
                return Utils._isNode;
            }
            if (typeof window !== "undefined") {
                Utils._isNode = false;
                return false;
            }
            try {
                Utils._isNode = Object.prototype.toString.call(global.process) === "[object process]";
            }
            catch (e) {
                Utils._isNode = false;
            }
            return Utils._isNode;
        };
        return Utils;
    }());

    var PromiseWrapper$1 = (function () {
        function PromiseWrapper() {
            var _this = this;
            this.rejected = false;
            this.resolved = false;
            this.promise = new Promise(function (resolve, reject) {
                _this.resolve = function (t) {
                    _this.resolved = true;
                    resolve(t);
                };
                _this.reject = function (err) {
                    _this.rejected = true;
                    reject(err);
                };
            });
        }
        PromiseWrapper.delay = function (time) {
            return new Promise(function (resolve) { return setTimeout(resolve, time); });
        };
        Object.defineProperty(PromiseWrapper.prototype, "ended", {
            get: function () {
                return this.rejected || this.resolved;
            },
            enumerable: true,
            configurable: true
        });
        return PromiseWrapper;
    }());

    var timers$1 = {};
    function getAllTimers$1() {
        return timers$1;
    }
    function timer$1 (timerName) {
        var existing = timers$1[timerName];
        if (existing) {
            return existing;
        }
        var marks = [];
        function now() {
            return new Date().getTime();
        }
        var startTime = now();
        mark("start", startTime);
        var endTime;
        var period;
        function stop() {
            endTime = now();
            mark("end", endTime);
            period = endTime - startTime;
            return period;
        }
        function mark(name, time) {
            var currentTime = time !== null && time !== void 0 ? time : now();
            var diff = 0;
            if (marks.length > 0) {
                diff = currentTime - marks[marks.length - 1].time;
            }
            marks.push({ name: name, time: currentTime, diff: diff });
        }
        var timerObj = {
            get startTime() {
                return startTime;
            },
            get endTime() {
                return endTime;
            },
            get period() {
                return period;
            },
            stop: stop,
            mark: mark,
            marks: marks
        };
        timers$1[timerName] = timerObj;
        return timerObj;
    }

    var WebSocketConstructor$1 = Utils$1.isNode() ? require("ws") : window.WebSocket;
    var WS$1 = (function () {
        function WS(settings, logger) {
            this.startupTimer = timer$1("connection");
            this._running = true;
            this._registry = lib$3();
            this.wsRequests = [];
            this.settings = settings;
            this.logger = logger;
            if (!this.settings.ws) {
                throw new Error("ws is missing");
            }
        }
        WS.prototype.onMessage = function (callback) {
            return this._registry.add("onMessage", callback);
        };
        WS.prototype.send = function (msg, options) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(function () {
                    var _a;
                    try {
                        (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);
                        resolve();
                    }
                    catch (e) {
                        reject(e);
                    }
                }, reject);
            });
        };
        WS.prototype.open = function () {
            var _this = this;
            this.logger.info("opening ws...");
            this._running = true;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(resolve, reject);
            });
        };
        WS.prototype.close = function () {
            this._running = false;
            if (this.ws) {
                this.ws.close();
            }
            return Promise.resolve();
        };
        WS.prototype.onConnectedChanged = function (callback) {
            return this._registry.add("onConnectedChanged", callback);
        };
        WS.prototype.name = function () {
            return "ws " + this.settings.ws;
        };
        WS.prototype.reconnect = function () {
            var _a;
            (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();
            var pw = new PromiseWrapper$1();
            this.waitForSocketConnection(function () {
                pw.resolve();
            });
            return pw.promise;
        };
        WS.prototype.waitForSocketConnection = function (callback, failed) {
            var _a;
            failed = failed !== null && failed !== void 0 ? failed : (function () { });
            if (!this._running) {
                failed("wait for socket on " + this.settings.ws + " failed - socket closed by user");
                return;
            }
            if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {
                callback();
                return;
            }
            this.wsRequests.push({ callback: callback, failed: failed });
            if (this.wsRequests.length > 1) {
                return;
            }
            this.openSocket();
        };
        WS.prototype.openSocket = function (retryInterval, retriesLeft) {
            return __awaiter$2(this, void 0, void 0, function () {
                var _a;
                var _this = this;
                return __generator$1(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.startupTimer.mark("opening-socket");
                            if (retryInterval === undefined) {
                                retryInterval = this.settings.reconnectInterval;
                            }
                            if (retriesLeft !== undefined) {
                                if (retriesLeft === 0) {
                                    this.notifyForSocketState("wait for socket on " + this.settings.ws + " failed - no more retries left");
                                    return [2];
                                }
                                this.logger.debug("will retry " + retriesLeft + " more times (every " + retryInterval + " ms)");
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4, this.initiateSocket()];
                        case 2:
                            _b.sent();
                            this.startupTimer.mark("socket-initiated");
                            this.notifyForSocketState();
                            return [3, 4];
                        case 3:
                            _a = _b.sent();
                            setTimeout(function () {
                                var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;
                                _this.openSocket(retryInterval, retries);
                            }, retryInterval);
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        };
        WS.prototype.initiateSocket = function () {
            var _this = this;
            var pw = new PromiseWrapper$1();
            this.logger.debug("initiating ws to " + this.settings.ws + "...");
            this.ws = new WebSocketConstructor$1(this.settings.ws || "");
            this.ws.onerror = function (err) {
                var reason = "";
                try {
                    reason = JSON.stringify(err);
                }
                catch (error) {
                    var seen_1 = new WeakSet();
                    var replacer = function (key, value) {
                        if (typeof value === "object" && value !== null) {
                            if (seen_1.has(value)) {
                                return;
                            }
                            seen_1.add(value);
                        }
                        return value;
                    };
                    reason = JSON.stringify(err, replacer);
                }
                pw.reject("error");
                _this.notifyStatusChanged(false, reason);
            };
            this.ws.onclose = function (err) {
                _this.logger.info("ws closed " + err);
                pw.reject("closed");
                _this.notifyStatusChanged(false);
            };
            this.ws.onopen = function () {
                var _a;
                _this.startupTimer.mark("ws-opened");
                _this.logger.info("ws opened " + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));
                pw.resolve();
                _this.notifyStatusChanged(true);
            };
            this.ws.onmessage = function (message) {
                _this._registry.execute("onMessage", message.data);
            };
            return pw.promise;
        };
        WS.prototype.notifyForSocketState = function (error) {
            this.wsRequests.forEach(function (wsRequest) {
                if (error) {
                    if (wsRequest.failed) {
                        wsRequest.failed(error);
                    }
                }
                else {
                    wsRequest.callback();
                }
            });
            this.wsRequests = [];
        };
        WS.prototype.notifyStatusChanged = function (status, reason) {
            this._registry.execute("onConnectedChanged", status, reason);
        };
        return WS;
    }());

    function createCommonjsModule$2(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed$2 = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue$2() {
        seed$2 = (seed$2 * 9301 + 49297) % 233280;
        return seed$2/(233280.0);
    }

    function setSeed$4(_seed_) {
        seed$2 = _seed_;
    }

    var randomFromSeed$2 = {
        nextValue: getNextValue$2,
        seed: setSeed$4
    };

    var ORIGINAL$2 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet$2;
    var previousSeed$2;

    var shuffled$2;

    function reset$2() {
        shuffled$2 = false;
    }

    function setCharacters$2(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet$2 !== ORIGINAL$2) {
                alphabet$2 = ORIGINAL$2;
                reset$2();
            }
            return;
        }

        if (_alphabet_ === alphabet$2) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL$2.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$2.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$2.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet$2 = _alphabet_;
        reset$2();
    }

    function characters$2(_alphabet_) {
        setCharacters$2(_alphabet_);
        return alphabet$2;
    }

    function setSeed$1$1(seed) {
        randomFromSeed$2.seed(seed);
        if (previousSeed$2 !== seed) {
            reset$2();
            previousSeed$2 = seed;
        }
    }

    function shuffle$2() {
        if (!alphabet$2) {
            setCharacters$2(ORIGINAL$2);
        }

        var sourceArray = alphabet$2.split('');
        var targetArray = [];
        var r = randomFromSeed$2.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed$2.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled$2() {
        if (shuffled$2) {
            return shuffled$2;
        }
        shuffled$2 = shuffle$2();
        return shuffled$2;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup$2(index) {
        var alphabetShuffled = getShuffled$2();
        return alphabetShuffled[index];
    }

    var alphabet_1$2 = {
        characters: characters$2,
        seed: setSeed$1$1,
        lookup: lookup$2,
        shuffled: getShuffled$2
    };

    var crypto$2 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    function randomByte$2() {
        if (!crypto$2 || !crypto$2.getRandomValues) {
            return Math.floor(Math.random() * 256) & 0x30;
        }
        var dest = new Uint8Array(1);
        crypto$2.getRandomValues(dest);
        return dest[0] & 0x30;
    }

    var randomByteBrowser$2 = randomByte$2;

    function encode$1(lookup, number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser$2() );
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var encode_1$1 = encode$1;

    /**
     * Decode the id to get the version and worker
     * Mainly for debugging and testing.
     * @param id - the shortid-generated id.
     */
    function decode$1(id) {
        var characters = alphabet_1$2.shuffled();
        return {
            version: characters.indexOf(id.substr(0, 1)) & 0x0f,
            worker: characters.indexOf(id.substr(1, 1)) & 0x0f
        };
    }

    var decode_1$1 = decode$1;

    function isShortId$2(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var characters = alphabet_1$2.characters();
        var len = id.length;
        for(var i = 0; i < len;i++) {
            if (characters.indexOf(id[i]) === -1) {
                return false;
            }
        }
        return true;
    }

    var isValid$2 = isShortId$2;

    var lib$1$2 = createCommonjsModule$2(function (module) {






    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1459707606518;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version = 6;

    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {

        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + encode_1$1(alphabet_1$2.lookup, version);
        str = str + encode_1$1(alphabet_1$2.lookup, clusterWorkerId);
        if (counter > 0) {
            str = str + encode_1$1(alphabet_1$2.lookup, counter);
        }
        str = str + encode_1$1(alphabet_1$2.lookup, seconds);

        return str;
    }


    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1$2.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1$2.characters(newCharacters);
        }

        return alphabet_1$2.shuffled();
    }


    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.decode = decode_1$1;
    module.exports.isValid = isValid$2;
    });
    var lib_1$1 = lib$1$2.generate;
    var lib_2$1 = lib$1$2.seed;
    var lib_3$1 = lib$1$2.worker;
    var lib_4$1 = lib$1$2.characters;
    var lib_5$1 = lib$1$2.decode;
    var lib_6$1 = lib$1$2.isValid;

    var shortid$2 = lib$1$2;

    function domainSession$1 (domain, connection, logger, successMessages, errorMessages) {
        if (domain == null) {
            domain = "global";
        }
        successMessages = successMessages || ["success"];
        errorMessages = errorMessages || ["error"];
        var isJoined = false;
        var tryReconnecting = false;
        var _latestOptions;
        var _connectionOn = false;
        var callbacks = lib$3();
        connection.disconnected(handleConnectionDisconnected);
        connection.loggedIn(handleConnectionLoggedIn);
        connection.on("success", function (msg) { return handleSuccessMessage(msg); });
        connection.on("error", function (msg) { return handleErrorMessage(msg); });
        connection.on("result", function (msg) { return handleSuccessMessage(msg); });
        if (successMessages) {
            successMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleSuccessMessage(msg); });
            });
        }
        if (errorMessages) {
            errorMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleErrorMessage(msg); });
            });
        }
        var requestsMap = {};
        function join(options) {
            _latestOptions = options;
            return new Promise(function (resolve, reject) {
                if (isJoined) {
                    resolve();
                    return;
                }
                var joinPromise;
                if (domain === "global") {
                    joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject("not connected to gateway");
                }
                else {
                    logger.debug("joining domain " + domain);
                    var joinMsg = {
                        type: "join",
                        destination: domain,
                        domain: "global",
                        options: options,
                    };
                    joinPromise = send(joinMsg);
                }
                joinPromise
                    .then(function () {
                    handleJoined();
                    resolve();
                })
                    .catch(function (err) {
                    logger.debug("error joining " + domain + " domain: " + JSON.stringify(err));
                    reject(err);
                });
            });
        }
        function leave() {
            if (domain === "global") {
                return Promise.resolve();
            }
            logger.debug("stopping session " + domain + "...");
            var leaveMsg = {
                type: "leave",
                destination: domain,
                domain: "global",
            };
            tryReconnecting = false;
            return send(leaveMsg).then(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            });
        }
        function handleJoined() {
            logger.debug("did join " + domain);
            isJoined = true;
            var wasReconnect = tryReconnecting;
            tryReconnecting = false;
            callbacks.execute("onJoined", wasReconnect);
        }
        function handleConnectionDisconnected() {
            _connectionOn = false;
            logger.debug("connection is down");
            isJoined = false;
            tryReconnecting = true;
            callbacks.execute("onLeft", { disconnected: true });
        }
        function handleConnectionLoggedIn() {
            _connectionOn = true;
            if (tryReconnecting) {
                logger.debug("connection is now up - trying to reconnect...");
                join(_latestOptions);
            }
        }
        function onJoined(callback) {
            if (isJoined) {
                callback(false);
            }
            return callbacks.add("onJoined", callback);
        }
        function onLeft(callback) {
            if (!isJoined) {
                callback();
            }
            return callbacks.add("onLeft", callback);
        }
        function handleErrorMessage(msg) {
            if (domain !== msg.domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.error(msg);
        }
        function handleSuccessMessage(msg) {
            if (msg.domain !== domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.success(msg);
        }
        function getNextRequestId() {
            return shortid$2();
        }
        function send(msg, tag, options) {
            options = options || {};
            msg.request_id = msg.request_id || getNextRequestId();
            msg.domain = msg.domain || domain;
            if (!options.skipPeerId) {
                msg.peer_id = connection.peerId;
            }
            var requestId = msg.request_id;
            return new Promise(function (resolve, reject) {
                requestsMap[requestId] = {
                    success: function (successMsg) {
                        delete requestsMap[requestId];
                        successMsg._tag = tag;
                        resolve(successMsg);
                    },
                    error: function (errorMsg) {
                        logger.warn("GW error - " + JSON.stringify(errorMsg) + " for request " + JSON.stringify(msg));
                        delete requestsMap[requestId];
                        errorMsg._tag = tag;
                        reject(errorMsg);
                    },
                };
                connection
                    .send(msg, options)
                    .catch(function (err) {
                    requestsMap[requestId].error({ err: err });
                });
            });
        }
        function sendFireAndForget(msg) {
            msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();
            msg.domain = msg.domain || domain;
            msg.peer_id = connection.peerId;
            return connection.send(msg);
        }
        return {
            join: join,
            leave: leave,
            onJoined: onJoined,
            onLeft: onLeft,
            send: send,
            sendFireAndForget: sendFireAndForget,
            on: function (type, callback) {
                connection.on(type, function (msg) {
                    if (msg.domain !== domain) {
                        return;
                    }
                    try {
                        callback(msg);
                    }
                    catch (e) {
                        logger.error("Callback  failed: " + e + " \n " + e.stack + " \n msg was: " + JSON.stringify(msg), e);
                    }
                });
            },
            loggedIn: function (callback) { return connection.loggedIn(callback); },
            connected: function (callback) { return connection.connected(callback); },
            disconnected: function (callback) { return connection.disconnected(callback); },
            get peerId() {
                return connection.peerId;
            },
            get domain() {
                return domain;
            },
        };
    }

    var GW3ProtocolImpl$1 = (function () {
        function GW3ProtocolImpl(connection, settings, logger) {
            var _this = this;
            this.connection = connection;
            this.settings = settings;
            this.logger = logger;
            this.protocolVersion = 3;
            this.datePrefix = "#T42_DATE#";
            this.datePrefixLen = this.datePrefix.length;
            this.dateMinLen = this.datePrefixLen + 1;
            this.datePrefixFirstChar = this.datePrefix[0];
            this.registry = lib$3();
            this._isLoggedIn = false;
            this.shouldTryLogin = true;
            this.initialLogin = true;
            this.initialLoginAttempts = 3;
            this.sessions = [];
            connection.disconnected(function () {
                _this.handleDisconnected();
            });
            this.ping();
        }
        Object.defineProperty(GW3ProtocolImpl.prototype, "isLoggedIn", {
            get: function () {
                return this._isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        GW3ProtocolImpl.prototype.processStringMessage = function (message) {
            var _this = this;
            var msg = JSON.parse(message, function (key, value) {
                if (typeof value !== "string") {
                    return value;
                }
                if (value.length < _this.dateMinLen) {
                    return value;
                }
                if (value[0] !== _this.datePrefixFirstChar) {
                    return value;
                }
                if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {
                    return value;
                }
                try {
                    var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);
                    if (isNaN(milliseconds)) {
                        return value;
                    }
                    return new Date(milliseconds);
                }
                catch (ex) {
                    return value;
                }
            });
            return {
                msg: msg,
                msgType: msg.type,
            };
        };
        GW3ProtocolImpl.prototype.createStringMessage = function (message) {
            var oldToJson = Date.prototype.toJSON;
            try {
                var datePrefix_1 = this.datePrefix;
                Date.prototype.toJSON = function () {
                    return datePrefix_1 + this.getTime();
                };
                var result = JSON.stringify(message);
                return result;
            }
            finally {
                Date.prototype.toJSON = oldToJson;
            }
        };
        GW3ProtocolImpl.prototype.processObjectMessage = function (message) {
            if (!message.type) {
                throw new Error("Object should have type property");
            }
            return {
                msg: message,
                msgType: message.type,
            };
        };
        GW3ProtocolImpl.prototype.createObjectMessage = function (message) {
            return message;
        };
        GW3ProtocolImpl.prototype.login = function (config, reconnect) {
            return __awaiter$2(this, void 0, void 0, function () {
                var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;
                return __generator$1(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.logger.debug("logging in...");
                            this.loginConfig = config;
                            if (!this.loginConfig) {
                                this.loginConfig = { username: "", password: "" };
                            }
                            this.shouldTryLogin = true;
                            authentication = {};
                            this.connection.gatewayToken = config.gatewayToken;
                            if (!config.gatewayToken) return [3, 5];
                            if (!reconnect) return [3, 4];
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 3, , 4]);
                            return [4, this.getNewGWToken()];
                        case 2:
                            token = _c.sent();
                            config.gatewayToken = token;
                            return [3, 4];
                        case 3:
                            e_1 = _c.sent();
                            this.logger.warn("failed to get GW token when reconnecting " + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));
                            return [3, 4];
                        case 4:
                            authentication.method = "gateway-token";
                            authentication.token = config.gatewayToken;
                            this.connection.gatewayToken = config.gatewayToken;
                            return [3, 10];
                        case 5:
                            if (!(config.flowName === "sspi")) return [3, 9];
                            authentication.provider = "win";
                            authentication.method = "access-token";
                            if (!(config.flowCallback && config.sessionId)) return [3, 7];
                            _a = authentication;
                            return [4, config.flowCallback(config.sessionId, null)];
                        case 6:
                            _a.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            return [3, 8];
                        case 7: throw new Error("Invalid SSPI config");
                        case 8: return [3, 10];
                        case 9:
                            if (config.token) {
                                authentication.method = "access-token";
                                authentication.token = config.token;
                            }
                            else if (config.username) {
                                authentication.method = "secret";
                                authentication.login = config.username;
                                authentication.secret = config.password;
                            }
                            else {
                                throw new Error("invalid auth message" + JSON.stringify(config));
                            }
                            _c.label = 10;
                        case 10:
                            helloMsg = {
                                type: "hello",
                                identity: this.settings.identity,
                                authentication: authentication
                            };
                            if (config.sessionId) {
                                helloMsg.request_id = config.sessionId;
                            }
                            this.globalDomain = domainSession$1("global", this.connection, this.logger.subLogger("global-domain"), [
                                "welcome",
                                "token",
                                "authentication-request"
                            ]);
                            sendOptions = { skipPeerId: true };
                            if (this.initialLogin) {
                                sendOptions.retryInterval = this.settings.reconnectInterval;
                                sendOptions.maxRetries = this.settings.reconnectAttempts;
                            }
                            _c.label = 11;
                        case 11:
                            _c.trys.push([11, 19, 20, 21]);
                            welcomeMsg = void 0;
                            _c.label = 12;
                        case 12:
                            return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];
                        case 13:
                            msg = _c.sent();
                            if (!(msg.type === "authentication-request")) return [3, 16];
                            token = Buffer.from(msg.authentication.token, "base64");
                            if (!(config.flowCallback && config.sessionId)) return [3, 15];
                            _b = helloMsg.authentication;
                            return [4, config.flowCallback(config.sessionId, token)];
                        case 14:
                            _b.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            _c.label = 15;
                        case 15:
                            helloMsg.request_id = config.sessionId;
                            return [3, 12];
                        case 16:
                            if (msg.type === "welcome") {
                                welcomeMsg = msg;
                                return [3, 18];
                            }
                            else if (msg.type === "error") {
                                throw new Error("Authentication failed: " + msg.reason);
                            }
                            else {
                                throw new Error("Unexpected message type during authentication: " + msg.type);
                            }
                        case 17: return [3, 12];
                        case 18:
                            this.initialLogin = false;
                            this.logger.debug("login successful with peerId " + welcomeMsg.peer_id);
                            this.connection.peerId = welcomeMsg.peer_id;
                            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;
                            this.connection.availableDomains = welcomeMsg.available_domains;
                            if (welcomeMsg.options) {
                                this.connection.token = welcomeMsg.options.access_token;
                                this.connection.info = welcomeMsg.options.info;
                            }
                            this.setLoggedIn(true);
                            return [2, welcomeMsg.resolved_identity];
                        case 19:
                            err_1 = _c.sent();
                            this.logger.error("error sending hello message - " + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);
                            throw err_1;
                        case 20:
                            if (config && config.flowCallback && config.sessionId) {
                                config.flowCallback(config.sessionId, null);
                            }
                            return [7];
                        case 21: return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.logout = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                var promises;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("logging out...");
                            this.shouldTryLogin = false;
                            if (this.pingTimer) {
                                clearTimeout(this.pingTimer);
                            }
                            promises = this.sessions.map(function (session) {
                                session.leave();
                            });
                            return [4, Promise.all(promises)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.loggedIn = function (callback) {
            if (this._isLoggedIn) {
                callback();
            }
            return this.registry.add("onLoggedIn", callback);
        };
        GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {
            var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];
            if (!session) {
                session = domainSession$1(domainName, this.connection, domainLogger, successMessages, errorMessages);
                this.sessions.push(session);
            }
            return session;
        };
        GW3ProtocolImpl.prototype.handleDisconnected = function () {
            var _this = this;
            this.setLoggedIn(false);
            var tryToLogin = this.shouldTryLogin;
            if (tryToLogin && this.initialLogin) {
                if (this.initialLoginAttempts <= 0) {
                    return;
                }
                this.initialLoginAttempts--;
            }
            this.logger.debug("disconnected - will try new login?" + this.shouldTryLogin);
            if (this.shouldTryLogin) {
                if (!this.loginConfig) {
                    throw new Error("no login info");
                }
                this.connection.login(this.loginConfig, true)
                    .catch(function () {
                    setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);
                });
            }
        };
        GW3ProtocolImpl.prototype.setLoggedIn = function (value) {
            this._isLoggedIn = value;
            if (this._isLoggedIn) {
                this.registry.execute("onLoggedIn");
            }
        };
        GW3ProtocolImpl.prototype.ping = function () {
            var _this = this;
            if (!this.shouldTryLogin) {
                return;
            }
            if (this._isLoggedIn) {
                this.connection.send({ type: "ping" });
            }
            this.pingTimer = setTimeout(function () {
                _this.ping();
            }, 30 * 1000);
        };
        GW3ProtocolImpl.prototype.authToken = function () {
            var createTokenReq = {
                type: "create-token"
            };
            if (!this.globalDomain) {
                return Promise.reject(new Error("no global domain session"));
            }
            return this.globalDomain.send(createTokenReq)
                .then(function (res) {
                return res.token;
            });
        };
        GW3ProtocolImpl.prototype.getNewGWToken = function () {
            if (typeof window !== undefined) {
                var glue42gd = window.glue42gd;
                if (glue42gd) {
                    return glue42gd.getGWToken();
                }
            }
            return Promise.reject(new Error("not running in GD"));
        };
        return GW3ProtocolImpl;
    }());

    var MessageReplayerImpl$1 = (function () {
        function MessageReplayerImpl(specs) {
            this.specsNames = [];
            this.messages = {};
            this.subs = {};
            this.subsRefCount = {};
            this.specs = {};
            for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
                var spec = specs_1[_i];
                this.specs[spec.name] = spec;
                this.specsNames.push(spec.name);
            }
        }
        MessageReplayerImpl.prototype.init = function (connection) {
            var _this = this;
            this.connection = connection;
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var _loop_1 = function (type) {
                    var refCount = this_1.subsRefCount[type];
                    if (!refCount) {
                        refCount = 0;
                    }
                    refCount += 1;
                    this_1.subsRefCount[type] = refCount;
                    if (refCount > 1) {
                        return "continue";
                    }
                    var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });
                    this_1.subs[type] = sub;
                };
                var this_1 = this;
                for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {
                    var type = _c[_b];
                    _loop_1(type);
                }
            }
        };
        MessageReplayerImpl.prototype.processMessage = function (type, msg) {
            if (this.isDone || !msg) {
                return;
            }
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_2 = _a[_i];
                if (this.specs[name_2].types.indexOf(type) !== -1) {
                    var messages = this.messages[name_2] || [];
                    this.messages[name_2] = messages;
                    messages.push(msg);
                }
            }
        };
        MessageReplayerImpl.prototype.drain = function (name, callback) {
            var _a;
            if (callback) {
                (this.messages[name] || []).forEach(callback);
            }
            delete this.messages[name];
            for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {
                var type = _b[_i];
                this.subsRefCount[type] -= 1;
                if (this.subsRefCount[type] <= 0) {
                    (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);
                    delete this.subs[type];
                    delete this.subsRefCount[type];
                }
            }
            delete this.specs[name];
            if (!this.specs.length) {
                this.isDone = true;
            }
        };
        return MessageReplayerImpl;
    }());

    var PromisePlus$2 = function (executor, timeoutMilliseconds, timeoutMessage) {
        return new Promise(function (resolve, reject) {
            var timeout = setTimeout(function () {
                var message = timeoutMessage || "Promise timeout hit: " + timeoutMilliseconds;
                reject(message);
            }, timeoutMilliseconds);
            var providedPromise = new Promise(executor);
            providedPromise
                .then(function (result) {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch(function (error) {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var WebPlatformTransport$1 = (function () {
        function WebPlatformTransport(settings, logger, identity) {
            this.settings = settings;
            this.logger = logger;
            this.identity = identity;
            this.parentReady = false;
            this.iAmConnected = false;
            this.rejected = false;
            this.children = [];
            this.parentPingTimeout = 3000;
            this.connectionRequestTimeout = 5000;
            this.defaultTargetString = "*";
            this.registry = lib$3();
            this.messages = {
                connectionAccepted: { name: "connectionAccepted", handle: this.handleConnectionAccepted.bind(this) },
                connectionRejected: { name: "connectionRejected", handle: this.handleConnectionRejected.bind(this) },
                connectionRequest: { name: "connectionRequest", handle: this.handleConnectionRequest.bind(this) },
                parentReady: { name: "parentReady", handle: this.handleParentReady.bind(this) },
                parentPing: { name: "parentPing", handle: this.handleParentPing.bind(this) },
                platformPing: { name: "platformPing", handle: this.handlePlatformPing.bind(this) },
                platformUnload: { name: "platformUnload", handle: this.handlePlatformUnload.bind(this) },
                platformReady: { name: "platformReady", handle: this.handlePlatformReady.bind(this) },
                clientUnload: { name: "clientUnload", handle: this.handleClientUnload.bind(this) }
            };
            this.setUpMessageListener();
            this.setUpUnload();
            if (!this.settings.port) {
                this.parent = window.opener || window.parent;
                this.parentType = window.opener ? "opener" :
                    window.name.indexOf("#wsp") !== -1 ? "workspace" : "top";
            }
        }
        Object.defineProperty(WebPlatformTransport.prototype, "transportWindowId", {
            get: function () {
                return this.publicWindowId;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.sendObject = function (msg) {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    if (!this.port) {
                        throw new Error("Cannot send message, because the port was not opened yet");
                    }
                    this.port.postMessage(msg);
                    return [2];
                });
            });
        };
        Object.defineProperty(WebPlatformTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        WebPlatformTransport.prototype.send = function () {
            return Promise.reject("not supported");
        };
        WebPlatformTransport.prototype.onConnectedChanged = function (callback) {
            return this.registry.add("onConnectedChanged", callback);
        };
        WebPlatformTransport.prototype.open = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("opening a connection to the web platform gateway.");
                            return [4, this.connect()];
                        case 1:
                            _a.sent();
                            this.notifyStatusChanged(true);
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.close = function () {
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.name = function () {
            return "web-platform";
        };
        WebPlatformTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.connect = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                var _this = this;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (this.parentReady) {
                                this.logger.debug("cancelling connection attempt, because this client's parent has already given a ready signal");
                                return [2];
                            }
                            if (this.settings.port) {
                                this.logger.debug("opening an internal web platform connection");
                                this.port = this.settings.port;
                                this.publicWindowId = this.settings.windowId;
                                if (this.identity) {
                                    this.identity.windowId = this.publicWindowId;
                                }
                                this.port.onmessage = function (event) { return _this.registry.execute("onMessage", event.data); };
                                this.logger.debug("internal web platform connection completed");
                                return [2];
                            }
                            if (!this.parentType || !this.parent) {
                                throw new Error("Cannot initiate a connection, because there is no opener, no top and no port.");
                            }
                            this.logger.debug("opening a " + (this.parentType === "opener" ? "child" : "grandchild") + " client web platform connection");
                            return [4, this.waitParent(this.parent, this.parentType)];
                        case 1:
                            _a.sent();
                            return [4, this.initiateRemoteConnection(this.parent, this.parentType)];
                        case 2:
                            _a.sent();
                            this.logger.debug("the " + (this.parentType === "opener" ? "child" : "grandchild") + " client is connected");
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {
            var _this = this;
            return PromisePlus$2(function (resolve, reject) {
                _this.connectionResolve = resolve;
                _this.connectionReject = reject;
                _this.myClientId = shortid$2();
                var bridgeInstanceId = _this.parentType === "workspace" ? window.name.substring(0, window.name.indexOf("#wsp")) : window.name;
                var request = {
                    glue42core: {
                        type: _this.messages.connectionRequest.name,
                        clientId: _this.myClientId,
                        clientType: parentType === "top" || parentType === "workspace" ? "grandChild" : "child",
                        bridgeInstanceId: bridgeInstanceId
                    }
                };
                _this.logger.debug("sending connection request to " + parentType);
                target.postMessage(request, _this.defaultTargetString);
            }, this.connectionRequestTimeout, "The connection to the opener/top window timed out");
        };
        WebPlatformTransport.prototype.waitParent = function (target, parentType) {
            var _this = this;
            return PromisePlus$2(function (resolve) {
                _this.parentPingResolve = resolve;
                var message = {
                    glue42core: {
                        type: parentType === "opener" ? _this.messages.platformPing.name : _this.messages.parentPing.name
                    }
                };
                _this.logger.debug("checking for " + parentType + " window availability");
                target.postMessage(message, _this.defaultTargetString);
            }, this.parentPingTimeout, "Cannot initiate glue, because this window was not opened or created by a glue client");
        };
        WebPlatformTransport.prototype.setUpMessageListener = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping generic message listener, because this is an internal client");
                return;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || _this.rejected) {
                    return;
                }
                if (!_this.checkMessageTypeValid(data.type)) {
                    _this.logger.error("cannot handle the incoming glue42 core message, because the type is invalid: " + data.type);
                    return;
                }
                var messageType = data.type;
                _this.logger.debug("received valid glue42core message of type: " + messageType);
                _this.messages[messageType].handle(event);
            });
        };
        WebPlatformTransport.prototype.setUpUnload = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping unload event listener, because this is an internal client");
                return;
            }
            window.addEventListener("beforeunload", function () {
                var _a, _b;
                var message = {
                    glue42core: {
                        type: _this.messages.clientUnload.name,
                        data: {
                            clientId: _this.myClientId,
                            ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                        }
                    }
                };
                if (_this.parent) {
                    _this.parent.postMessage(message, _this.defaultTargetString);
                }
                (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            });
        };
        WebPlatformTransport.prototype.handleParentReady = function () {
            this.logger.debug("handling the ready signal from the parent, by resoling the pending promise.");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
                return;
            }
            this.logger.debug("silently handling the ready signal from the top parent, because there is no defined promise");
        };
        WebPlatformTransport.prototype.handlePlatformReady = function () {
            this.logger.debug("the web platform gave the ready signal");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
                return;
            }
            this.logger.debug("silently handling the ready signal from the top parent, because there is no defined promise");
        };
        WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (this.myClientId === data.clientId) {
                return this.handleAcceptanceOfMyRequest(data);
            }
            return this.handleAcceptanceOfGrandChildRequest(data, event);
        };
        WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {
            var _this = this;
            this.logger.debug("handling a connection accepted signal targeted at me.");
            if (!data.port) {
                this.logger.error("cannot set up my connection, because I was not provided with a port");
                return;
            }
            this.publicWindowId = this.parentType === "opener" ? window.name :
                this.parentType === "top" ? data.parentWindowId :
                    window.name.substring(0, window.name.indexOf("#wsp"));
            if (this.identity && this.parentType !== "top") {
                this.identity.windowId = this.publicWindowId;
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            this.port = data.port;
            this.port.onmessage = function (e) { return _this.registry.execute("onMessage", e.data); };
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
            this.logger.error("unable to call the connection resolve, because no connection promise was found");
        };
        WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {
            this.logger.debug("handling a connection accepted signal targeted at a grandchild: " + data.clientId);
            var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });
            if (!child) {
                this.logger.error("cannot handle connection accepted for grandchild: " + data.clientId + ", because there is no grandchild with this id");
                return;
            }
            child.connected = true;
            this.logger.debug("the grandchild connection for " + data.clientId + " is set up, forwarding the success message and the gateway port");
            data.parentWindowId = this.publicWindowId;
            child.source.postMessage(event.data, child.origin, [data.port]);
            return;
        };
        WebPlatformTransport.prototype.handleConnectionRejected = function () {
            this.logger.debug("handling a connection rejection. Most likely the reason is that this window was not created by a glue API call");
            if (this.connectionReject) {
                this.connectionReject("The platform connection was rejected. Most likely because this window was not created by a glue API call");
                delete this.connectionReject;
            }
        };
        WebPlatformTransport.prototype.handleConnectionRequest = function (event) {
            var source = event.source;
            var data = event.data.glue42core;
            if (!data.clientType || data.clientType !== "grandChild") {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source was not opened by a glue API call");
            }
            if (!data.clientId) {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source did not provide a valid id");
            }
            if (this.parentType !== "opener" || !this.parent) {
                return this.rejectConnectionRequest(source, event.origin, "Cannot forward the connection request, because no direct connection to the platform was found");
            }
            this.logger.debug("handling a connection request for a grandchild: " + data.clientId);
            this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });
            this.logger.debug("grandchild: " + data.clientId + " is prepared, forwarding connection request to the platform");
            this.parent.postMessage(event.data, this.defaultTargetString);
        };
        WebPlatformTransport.prototype.handleParentPing = function (event) {
            if (!this.parentReady) {
                this.logger.debug("my parent is not ready, I am ignoring the parent ping");
                return;
            }
            if (!this.iAmConnected) {
                this.logger.debug("i am not fully connected yet, I am ignoring the parent ping");
                return;
            }
            var message = {
                glue42core: {
                    type: this.messages.parentReady.name
                }
            };
            var source = event.source;
            this.logger.debug("responding to a parent ping with a ready message");
            source.postMessage(message, event.origin);
        };
        WebPlatformTransport.prototype.handlePlatformUnload = function (event) {
            this.logger.debug("detected a web platform unload");
            this.parentReady = false;
            if (this.children.length) {
                this.logger.debug("forwarding the platform unload to all known children and starting platform discovery polling");
                this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });
            }
            this.notifyStatusChanged(false, "Gateway unloaded");
        };
        WebPlatformTransport.prototype.handleClientUnload = function (event) {
            var data = event.data.glue42core;
            if (!data.clientId) {
                this.logger.warn("cannot process grand child unload, because the provided id was not valid");
                return;
            }
            var foundChild = this.children.find(function (child) { return child.grandChildId === data.clientId; });
            if (!foundChild) {
                this.logger.warn("cannot process grand child unload, because this client is unaware of this grandchild");
                return;
            }
            this.logger.debug("handling grandchild unload for id: " + data.clientId);
            this.children = this.children.filter(function (child) { return child.grandChildId !== data.clientId; });
        };
        WebPlatformTransport.prototype.handlePlatformPing = function () {
            this.logger.error("cannot handle platform ping, because this is not a platform calls handling component");
        };
        WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {
            this.iAmConnected = status;
            this.registry.execute("onConnectedChanged", status, reason);
        };
        WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {
            return typeof typeToValidate === "string" && !!this.messages[typeToValidate];
        };
        WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {
            this.rejected = true;
            this.logger.error(reason);
            var rejection = {
                glue42core: {
                    type: this.messages.connectionRejected.name
                }
            };
            source.postMessage(rejection, origin);
        };
        return WebPlatformTransport;
    }());

    var Connection$1 = (function () {
        function Connection(settings, logger) {
            this.settings = settings;
            this.logger = logger;
            this.messageHandlers = {};
            this.ids = 1;
            this.registry = lib$3();
            this._connected = false;
            this.isTrace = false;
            settings = settings || {};
            settings.reconnectAttempts = settings.reconnectAttempts || 10;
            settings.reconnectInterval = settings.reconnectInterval || 1000;
            if (settings.inproc) {
                this.transport = new InProcTransport$1(settings.inproc, logger.subLogger("inMemory"));
            }
            else if (settings.sharedWorker) {
                this.transport = new SharedWorkerTransport$1(settings.sharedWorker, logger.subLogger("shared-worker"));
            }
            else if (settings.webPlatform) {
                this.transport = new WebPlatformTransport$1(settings.webPlatform, logger.subLogger("web-platform"), settings.identity);
            }
            else if (settings.ws !== undefined) {
                this.transport = new WS$1(settings, logger.subLogger("ws"));
            }
            else {
                throw new Error("No connection information specified");
            }
            this.isTrace = logger.canPublish("trace");
            logger.debug("starting with " + this.transport.name() + " transport");
            this.protocol = new GW3ProtocolImpl$1(this, settings, logger.subLogger("protocol"));
            this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            this.transport.onMessage(this.handleTransportMessage.bind(this));
            if (settings.replaySpecs && settings.replaySpecs.length) {
                this.replayer = new MessageReplayerImpl$1(settings.replaySpecs);
                this.replayer.init(this);
            }
        }
        Object.defineProperty(Connection.prototype, "protocolVersion", {
            get: function () {
                var _a;
                return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.send = function (message, options) {
            if (this.transport.sendObject &&
                this.transport.isObjectBasedTransport) {
                var msg = this.protocol.createObjectMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + JSON.stringify(msg));
                }
                return this.transport.sendObject(msg, options);
            }
            else {
                var strMessage = this.protocol.createStringMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + strMessage);
                }
                return this.transport.send(strMessage, options);
            }
        };
        Connection.prototype.on = function (type, messageHandler) {
            type = type.toLowerCase();
            if (this.messageHandlers[type] === undefined) {
                this.messageHandlers[type] = {};
            }
            var id = this.ids++;
            this.messageHandlers[type][id] = messageHandler;
            return {
                type: type,
                id: id,
            };
        };
        Connection.prototype.off = function (info) {
            delete this.messageHandlers[info.type.toLowerCase()][info.id];
        };
        Object.defineProperty(Connection.prototype, "isConnected", {
            get: function () {
                return this.protocol.isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.connected = function (callback) {
            var _this = this;
            return this.protocol.loggedIn(function () {
                callback(_this.settings.ws || _this.settings.sharedWorker || "");
            });
        };
        Connection.prototype.disconnected = function (callback) {
            return this.registry.add("disconnected", callback);
        };
        Connection.prototype.login = function (authRequest, reconnect) {
            return __awaiter$2(this, void 0, void 0, function () {
                var identity;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.transport.open()];
                        case 1:
                            _a.sent();
                            timer$1("connection").mark("transport-opened");
                            identity = this.protocol.login(authRequest, reconnect);
                            timer$1("connection").mark("protocol-logged-in");
                            return [2, identity];
                    }
                });
            });
        };
        Connection.prototype.logout = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.protocol.logout()];
                        case 1:
                            _a.sent();
                            return [4, this.transport.close()];
                        case 2:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Connection.prototype.loggedIn = function (callback) {
            return this.protocol.loggedIn(callback);
        };
        Connection.prototype.domain = function (domain, successMessages, errorMessages) {
            return this.protocol.domain(domain, this.logger.subLogger("domain=" + domain), successMessages, errorMessages);
        };
        Connection.prototype.authToken = function () {
            return this.protocol.authToken();
        };
        Connection.prototype.reconnect = function () {
            return this.transport.reconnect();
        };
        Connection.prototype.distributeMessage = function (message, type) {
            var _this = this;
            var handlers = this.messageHandlers[type.toLowerCase()];
            if (handlers !== undefined) {
                Object.keys(handlers).forEach(function (handlerId) {
                    var handler = handlers[handlerId];
                    if (handler !== undefined) {
                        try {
                            handler(message);
                        }
                        catch (error) {
                            try {
                                _this.logger.error("Message handler failed with " + error.stack, error);
                            }
                            catch (loggerError) {
                                console.log("Message handler failed", error);
                            }
                        }
                    }
                });
            }
        };
        Connection.prototype.handleConnectionChanged = function (connected) {
            if (this._connected === connected) {
                return;
            }
            this._connected = connected;
            if (connected) {
                this.registry.execute("connected");
            }
            else {
                this.registry.execute("disconnected");
            }
        };
        Connection.prototype.handleTransportMessage = function (msg) {
            var msgObj;
            if (typeof msg === "string") {
                msgObj = this.protocol.processStringMessage(msg);
            }
            else {
                msgObj = this.protocol.processObjectMessage(msg);
            }
            if (this.isTrace) {
                this.logger.trace("<< " + JSON.stringify(msgObj));
            }
            this.distributeMessage(msgObj.msg, msgObj.msgType);
        };
        return Connection;
    }());

    var order$1 = ["trace", "debug", "info", "warn", "error", "off"];
    var Logger$1 = (function () {
        function Logger(name, parent, logFn) {
            this.name = name;
            this.parent = parent;
            this.subLoggers = [];
            this.logFn = console;
            this.customLogFn = false;
            this.name = name;
            if (parent) {
                this.path = parent.path + "." + name;
            }
            else {
                this.path = name;
            }
            this.loggerFullName = "[" + this.path + "]";
            this.includeTimeAndLevel = !logFn;
            if (logFn) {
                this.logFn = logFn;
                this.customLogFn = true;
            }
        }
        Logger.prototype.subLogger = function (name) {
            var existingSub = this.subLoggers.filter(function (subLogger) {
                return subLogger.name === name;
            })[0];
            if (existingSub !== undefined) {
                return existingSub;
            }
            Object.keys(this).forEach(function (key) {
                if (key === name) {
                    throw new Error("This sub logger name is not allowed.");
                }
            });
            var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);
            this.subLoggers.push(sub);
            return sub;
        };
        Logger.prototype.publishLevel = function (level) {
            var _a;
            if (level) {
                this._publishLevel = level;
            }
            return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());
        };
        Logger.prototype.consoleLevel = function (level) {
            var _a;
            if (level) {
                this._consoleLevel = level;
            }
            return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());
        };
        Logger.prototype.log = function (message, level, error) {
            this.publishMessage(level || "info", message, error);
        };
        Logger.prototype.trace = function (message) {
            this.log(message, "trace");
        };
        Logger.prototype.debug = function (message) {
            this.log(message, "debug");
        };
        Logger.prototype.info = function (message) {
            this.log(message, "info");
        };
        Logger.prototype.warn = function (message) {
            this.log(message, "warn");
        };
        Logger.prototype.error = function (message, err) {
            this.log(message, "error");
        };
        Logger.prototype.canPublish = function (level, compareWith) {
            var levelIdx = order$1.indexOf(level);
            var restrictionIdx = order$1.indexOf(compareWith || this.consoleLevel() || "trace");
            return levelIdx >= restrictionIdx;
        };
        Logger.prototype.publishMessage = function (level, message, error) {
            var loggerName = this.loggerFullName;
            if (level === "error" && !error) {
                var e = new Error();
                if (e.stack) {
                    message =
                        message +
                            "\n" +
                            e.stack
                                .split("\n")
                                .slice(3)
                                .join("\n");
                }
            }
            if (this.canPublish(level, this.publishLevel())) {
                var interop = Logger.Interop;
                if (interop) {
                    try {
                        if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {
                            interop.invoke(Logger.InteropMethodName, {
                                msg: "" + message,
                                logger: loggerName,
                                level: level
                            });
                        }
                    }
                    catch (_a) {
                    }
                }
            }
            if (this.canPublish(level)) {
                var prefix = "";
                if (this.includeTimeAndLevel) {
                    var date = new Date();
                    var time = date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
                    prefix = "[" + time + "] [" + level + "] ";
                }
                var toPrint = "" + prefix + loggerName + ": " + message;
                switch (level) {
                    case "trace":
                        this.logFn.debug(toPrint);
                        break;
                    case "debug":
                        if (this.logFn.debug) {
                            this.logFn.debug(toPrint);
                        }
                        else {
                            this.logFn.log(toPrint);
                        }
                        break;
                    case "info":
                        this.logFn.info(toPrint);
                        break;
                    case "warn":
                        this.logFn.warn(toPrint);
                        break;
                    case "error":
                        this.logFn.error(toPrint, error);
                        break;
                }
            }
        };
        Logger.InteropMethodName = "T42.AppLogger.Log";
        return Logger;
    }());

    var GW_MESSAGE_CREATE_CONTEXT$1 = "create-context";
    var GW_MESSAGE_ACTIVITY_CREATED$1 = "created";
    var GW_MESSAGE_ACTIVITY_DESTROYED$1 = "destroyed";
    var GW_MESSAGE_CONTEXT_CREATED$1 = "context-created";
    var GW_MESSAGE_CONTEXT_ADDED$1 = "context-added";
    var GW_MESSAGE_SUBSCRIBE_CONTEXT$1 = "subscribe-context";
    var GW_MESSAGE_SUBSCRIBED_CONTEXT$1 = "subscribed-context";
    var GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1 = "unsubscribe-context";
    var GW_MESSAGE_DESTROY_CONTEXT$1 = "destroy-context";
    var GW_MESSAGE_CONTEXT_DESTROYED$1 = "context-destroyed";
    var GW_MESSAGE_UPDATE_CONTEXT$1 = "update-context";
    var GW_MESSAGE_CONTEXT_UPDATED$1 = "context-updated";
    var GW_MESSAGE_JOINED_ACTIVITY$1 = "joined";

    var ContextMessageReplaySpec$1 = {
        get name() {
            return "context";
        },
        get types() {
            return [
                GW_MESSAGE_CREATE_CONTEXT$1,
                GW_MESSAGE_ACTIVITY_CREATED$1,
                GW_MESSAGE_ACTIVITY_DESTROYED$1,
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_CONTEXT_ADDED$1,
                GW_MESSAGE_SUBSCRIBE_CONTEXT$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1,
                GW_MESSAGE_DESTROY_CONTEXT$1,
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_UPDATE_CONTEXT$1,
                GW_MESSAGE_CONTEXT_UPDATED$1,
                GW_MESSAGE_JOINED_ACTIVITY$1
            ];
        }
    };

    var version$4 = "5.4.0";

    function prepareConfig$1 (configuration, ext, glue42gd) {
        var _a, _b, _c, _d, _e;
        var nodeStartingContext;
        if (Utils$1.isNode()) {
            var startingContextString = process.env._GD_STARTING_CONTEXT_;
            if (startingContextString) {
                try {
                    nodeStartingContext = JSON.parse(startingContextString);
                }
                catch (_f) {
                }
            }
        }
        function getConnection() {
            var _a, _b, _c, _d, _e;
            var gwConfig = configuration.gateway;
            var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;
            var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;
            var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;
            var defaultWs = "ws://localhost:8385";
            var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;
            var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;
            var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;
            var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;
            if (glue42gd) {
                ws = glue42gd.gwURL;
            }
            if (Utils$1.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {
                ws = nodeStartingContext.gwURL;
            }
            if (!ws && !sharedWorker && !inproc) {
                ws = defaultWs;
            }
            var instanceId;
            var windowId;
            var pid;
            var environment;
            var region;
            var appName = getApplication();
            var uniqueAppName = appName;
            if (typeof glue42gd !== "undefined") {
                windowId = glue42gd.windowId;
                pid = glue42gd.pid;
                if (glue42gd.env) {
                    environment = glue42gd.env.env;
                    region = glue42gd.env.region;
                }
                uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : "glue-app";
                instanceId = glue42gd.appInstanceId;
            }
            else if (Utils$1.isNode()) {
                pid = process.pid;
                if (nodeStartingContext) {
                    environment = nodeStartingContext.env;
                    region = nodeStartingContext.region;
                    instanceId = nodeStartingContext.instanceId;
                }
            }
            else ;
            var replaySpecs = (_e = (_d = configuration.gateway) === null || _d === void 0 ? void 0 : _d.replaySpecs) !== null && _e !== void 0 ? _e : [];
            replaySpecs.push(ContextMessageReplaySpec$1);
            return {
                identity: {
                    application: uniqueAppName,
                    applicationName: appName,
                    windowId: windowId,
                    instance: instanceId,
                    process: pid,
                    region: region,
                    environment: environment,
                    api: ext.version || version$4
                },
                reconnectInterval: reconnectInterval,
                ws: ws,
                sharedWorker: sharedWorker,
                webPlatform: webPlatform,
                inproc: inproc,
                protocolVersion: protocolVersion,
                reconnectAttempts: reconnectAttempts,
                replaySpecs: replaySpecs,
            };
        }
        function getApplication() {
            if (configuration.application) {
                return configuration.application;
            }
            if (glue42gd) {
                return glue42gd.applicationName;
            }
            var uid = shortid$2();
            if (Utils$1.isNode()) {
                if (nodeStartingContext) {
                    return nodeStartingContext.applicationConfig.name;
                }
                return "NodeJS" + uid;
            }
            if (typeof window !== "undefined" && typeof document !== "undefined") {
                return document.title + (" (" + uid + ")");
            }
            return uid;
        }
        function getAuth() {
            var _a, _b, _c;
            if (typeof configuration.auth === "string") {
                return {
                    token: configuration.auth
                };
            }
            if (configuration.auth) {
                return configuration.auth;
            }
            if (Utils$1.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {
                return {
                    gatewayToken: nodeStartingContext.gwToken
                };
            }
            if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {
                return {
                    username: "glue42", password: "glue42"
                };
            }
        }
        function getLogger() {
            var _a, _b;
            var config = configuration.logger;
            var defaultLevel = "warn";
            if (!config) {
                config = defaultLevel;
            }
            var gdConsoleLevel;
            if (glue42gd) {
                gdConsoleLevel = glue42gd.consoleLogLevel;
            }
            if (typeof config === "string") {
                return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };
            }
            return {
                console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,
                publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel
            };
        }
        var connection = getConnection();
        var application = getApplication();
        if (typeof window !== "undefined") {
            var windowAsAny = window;
            var containerApplication = windowAsAny.htmlContainer ?
                windowAsAny.htmlContainer.containerName + "." + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;
            if (containerApplication) {
                application = containerApplication;
            }
        }
        return {
            bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,
            application: application,
            auth: getAuth(),
            logger: getLogger(),
            connection: connection,
            metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,
            contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,
            version: ext.version || version$4,
            libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],
            customLogger: configuration.customLogger
        };
    }

    var GW3ContextData$1 = (function () {
        function GW3ContextData(contextId, name, isAnnounced, activityId) {
            this.updateCallbacks = {};
            this.contextId = contextId;
            this.name = name;
            this.isAnnounced = isAnnounced;
            this.activityId = activityId;
            this.context = {};
        }
        GW3ContextData.prototype.hasCallbacks = function () {
            return Object.keys(this.updateCallbacks).length > 0;
        };
        GW3ContextData.prototype.getState = function () {
            if (this.isAnnounced && this.hasCallbacks()) {
                return 3;
            }
            if (this.isAnnounced) {
                return 2;
            }
            if (this.hasCallbacks()) {
                return 1;
            }
            return 0;
        };
        return GW3ContextData;
    }());

    function applyContextDelta$1(context, delta, logger) {
        try {
            if (logger === null || logger === void 0 ? void 0 : logger.canPublish("trace")) {
                logger === null || logger === void 0 ? void 0 : logger.trace("applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context));
            }
            if (!delta) {
                return context;
            }
            if (delta.reset) {
                context = __assign$3({}, delta.reset);
                return context;
            }
            context = deepClone$1(context, undefined);
            if (delta.commands) {
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        deletePath$1(context, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath$1(context, command.value, command.path);
                    }
                }
                return context;
            }
            var added_1 = delta.added;
            var updated_1 = delta.updated;
            var removed = delta.removed;
            if (added_1) {
                Object.keys(added_1).forEach(function (key) {
                    context[key] = added_1[key];
                });
            }
            if (updated_1) {
                Object.keys(updated_1).forEach(function (key) {
                    mergeObjectsProperties$1(key, context, updated_1);
                });
            }
            if (removed) {
                removed.forEach(function (key) {
                    delete context[key];
                });
            }
            return context;
        }
        catch (e) {
            logger === null || logger === void 0 ? void 0 : logger.error("error applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context), e);
            return context;
        }
    }
    function deepClone$1(obj, hash) {
        hash = hash || new WeakMap();
        if (Object(obj) !== obj) {
            return obj;
        }
        if (obj instanceof Set) {
            return new Set(obj);
        }
        if (hash.has(obj)) {
            return hash.get(obj);
        }
        var result = obj instanceof Date ? new Date(obj)
            : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)
                : obj.constructor ? new obj.constructor()
                    : Object.create(null);
        hash.set(obj, result);
        if (obj instanceof Map) {
            Array.from(obj, function (_a) {
                var key = _a[0], val = _a[1];
                return result.set(key, deepClone$1(val, hash));
            });
        }
        return Object.assign.apply(Object, __spreadArrays$1([result], Object.keys(obj).map(function (key) {
            var _a;
            return (_a = {}, _a[key] = deepClone$1(obj[key], hash), _a);
        })));
    }
    var mergeObjectsProperties$1 = function (key, what, withWhat) {
        var right = withWhat[key];
        if (right === undefined) {
            return what;
        }
        var left = what[key];
        if (!left || !right) {
            what[key] = right;
            return what;
        }
        if (typeof left === "string" ||
            typeof left === "number" ||
            typeof left === "boolean" ||
            typeof right === "string" ||
            typeof right === "number" ||
            typeof right === "boolean" ||
            Array.isArray(left) ||
            Array.isArray(right)) {
            what[key] = right;
            return what;
        }
        what[key] = Object.assign({}, left, right);
        return what;
    };
    function deepEqual$1(x, y) {
        if (x === y) {
            return true;
        }
        if (!(x instanceof Object) || !(y instanceof Object)) {
            return false;
        }
        if (x.constructor !== y.constructor) {
            return false;
        }
        for (var p in x) {
            if (!x.hasOwnProperty(p)) {
                continue;
            }
            if (!y.hasOwnProperty(p)) {
                return false;
            }
            if (x[p] === y[p]) {
                continue;
            }
            if (typeof (x[p]) !== "object") {
                return false;
            }
            if (!deepEqual$1(x[p], y[p])) {
                return false;
            }
        }
        for (var p in y) {
            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
                return false;
            }
        }
        return true;
    }
    function setValueToPath$1(obj, value, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                obj[pathArr[i]] = {};
            }
            if (typeof obj[pathArr[i]] !== "object") {
                obj[pathArr[i]] = {};
            }
            obj = obj[pathArr[i]];
        }
        obj[pathArr[i]] = value;
    }
    function isSubset$1(superObj, subObj) {
        return Object.keys(subObj).every(function (ele) {
            if (typeof subObj[ele] === "object") {
                return isSubset$1((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});
            }
            return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);
        });
    }
    function deletePath$1(obj, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                return;
            }
            obj = obj[pathArr[i]];
        }
        delete obj[pathArr[i]];
    }

    var GW3Bridge$1 = (function () {
        function GW3Bridge(config) {
            var _this = this;
            var _a;
            this._contextNameToData = {};
            this._gw3Subscriptions = [];
            this._nextCallbackSubscriptionNumber = 0;
            this._contextNameToId = {};
            this._contextIdToName = {};
            this._protocolVersion = undefined;
            this._connection = config.connection;
            this._logger = config.logger;
            this._gw3Session = this._connection.domain("global", [
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_CONTEXT_UPDATED$1,
            ]);
            this.subscribeToContextCreatedMessages();
            this.subscribeToContextUpdatedMessages();
            this.subscribeToContextDestroyedMessages();
            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec$1.name, function (message) {
                var type = message.type;
                if (!type) {
                    return;
                }
                if (type === GW_MESSAGE_CONTEXT_CREATED$1 ||
                    type === GW_MESSAGE_CONTEXT_ADDED$1 ||
                    type === GW_MESSAGE_ACTIVITY_CREATED$1) {
                    _this.handleContextCreatedMessage(message);
                }
                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT$1 ||
                    type === GW_MESSAGE_CONTEXT_UPDATED$1 ||
                    type === GW_MESSAGE_JOINED_ACTIVITY$1) {
                    _this.handleContextUpdatedMessage(message);
                }
                else if (type === GW_MESSAGE_CONTEXT_DESTROYED$1 ||
                    type === GW_MESSAGE_ACTIVITY_DESTROYED$1) {
                    _this.handleContextDestroyedMessage(message);
                }
            });
        }
        Object.defineProperty(GW3Bridge.prototype, "protocolVersion", {
            get: function () {
                var _a;
                if (!this._protocolVersion) {
                    var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === "context"; });
                    this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;
                }
                return this._protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GW3Bridge.prototype, "setPathSupported", {
            get: function () {
                return this.protocolVersion >= 2;
            },
            enumerable: true,
            configurable: true
        });
        GW3Bridge.prototype.dispose = function () {
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            this._gw3Subscriptions.length = 0;
            for (var contextName in this._contextNameToData) {
                if (this._contextNameToId.hasOwnProperty(contextName)) {
                    delete this._contextNameToData[contextName];
                }
            }
        };
        GW3Bridge.prototype.createContext = function (name, data) {
            var _this = this;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_CREATE_CONTEXT$1,
                domain: "global",
                name: name,
                data: data,
                lifetime: "retained",
            })
                .then(function (createContextMsg) {
                _this._contextNameToId[name] = createContextMsg.context_id;
                _this._contextIdToName[createContextMsg.context_id] = name;
                var contextData = _this._contextNameToData[name] || new GW3ContextData$1(createContextMsg.context_id, name, true, undefined);
                contextData.isAnnounced = true;
                contextData.name = name;
                contextData.contextId = createContextMsg.context_id;
                contextData.context = data;
                _this._contextNameToData[name] = contextData;
                return createContextMsg.context_id;
            });
        };
        GW3Bridge.prototype.all = function () {
            var _this = this;
            return Object.keys(this._contextNameToData)
                .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });
        };
        GW3Bridge.prototype.update = function (name, delta) {
            var _a;
            return __awaiter$2(this, void 0, void 0, function () {
                var contextData, currentContext, calculatedDelta;
                var _this = this;
                return __generator$1(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            contextData = this._contextNameToData[name];
                            if (!contextData || !contextData.isAnnounced) {
                                return [2, this.createContext(name, delta)];
                            }
                            currentContext = contextData.context;
                            if (!!contextData.hasCallbacks()) return [3, 2];
                            return [4, this.get(contextData.name)];
                        case 1:
                            currentContext = _b.sent();
                            _b.label = 2;
                        case 2:
                            calculatedDelta = this.protocolVersion === 2 ?
                                this.calculateContextDeltaV2(currentContext, delta) :
                                this.calculateContextDeltaV1(currentContext, delta);
                            if (!Object.keys(calculatedDelta.added).length
                                && !Object.keys(calculatedDelta.updated).length
                                && !calculatedDelta.removed.length
                                && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {
                                return [2, Promise.resolve()];
                            }
                            return [2, this._gw3Session
                                    .send({
                                    type: GW_MESSAGE_UPDATE_CONTEXT$1,
                                    domain: "global",
                                    context_id: contextData.contextId,
                                    delta: calculatedDelta,
                                }, {}, { skipPeerId: false })
                                    .then(function (gwResponse) {
                                    _this.handleUpdated(contextData, calculatedDelta, {
                                        updaterId: gwResponse.peer_id
                                    });
                                })];
                    }
                });
            });
        };
        GW3Bridge.prototype.set = function (name, data) {
            var _this = this;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return this.createContext(name, data);
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
                delta: { reset: data },
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.setPath = function (name, path, value) {
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPath operation is not supported, use Glue42 3.10 or later");
            }
            return this.setPaths(name, [{ path: path, value: value }]);
        };
        GW3Bridge.prototype.setPaths = function (name, pathValues) {
            var _this = this;
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later");
            }
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                var obj = {};
                for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {
                    var pathValue = pathValues_1[_i];
                    setValueToPath$1(obj, pathValue.value, pathValue.path);
                }
                return this.createContext(name, obj);
            }
            var commands = [];
            for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {
                var pathValue = pathValues_2[_a];
                if (pathValue.value === null) {
                    commands.push({ type: "remove", path: pathValue.path });
                }
                else {
                    commands.push({ type: "set", path: pathValue.path, value: pathValue.value });
                }
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
                delta: { commands: commands }
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.get = function (name) {
            var _this = this;
            var _a;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return Promise.resolve({});
            }
            if (contextData && !contextData.hasCallbacks()) {
                return new Promise(function (resolve, _) { return __awaiter$2(_this, void 0, void 0, function () {
                    var _this = this;
                    return __generator$1(this, function (_a) {
                        this.subscribe(name, function (data, _d, _r, un) {
                            _this.unsubscribe(un);
                            resolve(data);
                        });
                        return [2];
                    });
                }); });
            }
            var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};
            return Promise.resolve(context);
        };
        GW3Bridge.prototype.subscribe = function (name, callback) {
            var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;
            this._nextCallbackSubscriptionNumber += 1;
            var contextData = this._contextNameToData[name];
            if (!contextData ||
                !contextData.isAnnounced) {
                contextData = contextData || new GW3ContextData$1(undefined, name, false, undefined);
                this._contextNameToData[name] = contextData;
                contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
            var hadCallbacks = contextData.hasCallbacks();
            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
            if (!hadCallbacks) {
                if (!contextData.joinedActivity) {
                    if (contextData.context && contextData.sentExplicitSubscription) {
                        var clone = deepClone$1(contextData.context);
                        callback(clone, clone, [], thisCallbackSubscriptionNumber);
                        return Promise.resolve(thisCallbackSubscriptionNumber);
                    }
                    return this.sendSubscribe(contextData)
                        .then(function () { return thisCallbackSubscriptionNumber; });
                }
                else {
                    var clone = deepClone$1(contextData.context);
                    callback(clone, clone, [], thisCallbackSubscriptionNumber);
                    return Promise.resolve(thisCallbackSubscriptionNumber);
                }
            }
            else {
                var clone = deepClone$1(contextData.context);
                callback(clone, clone, [], thisCallbackSubscriptionNumber);
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
        };
        GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {
            for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var contextId = this._contextNameToId[name_1];
                var contextData = this._contextNameToData[name_1];
                if (!contextData) {
                    return;
                }
                var hadCallbacks = contextData.hasCallbacks();
                delete contextData.updateCallbacks[subscriptionKey];
                if (contextData.isAnnounced &&
                    hadCallbacks &&
                    !contextData.hasCallbacks() &&
                    contextData.sentExplicitSubscription) {
                    this.sendUnsubscribe(contextData);
                }
                if (!contextData.isAnnounced &&
                    !contextData.hasCallbacks()) {
                    delete this._contextNameToData[name_1];
                }
            }
        };
        GW3Bridge.prototype.destroy = function (name) {
            var contextData = this._contextNameToData[name];
            if (!contextData) {
                return Promise.reject("context with " + name + " does not exist");
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_DESTROY_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {
            var oldContext = contextData.context;
            contextData.context = applyContextDelta$1(contextData.context, delta, this._logger);
            if (this._contextNameToData[contextData.name] === contextData &&
                !deepEqual$1(oldContext, contextData.context)) {
                this.invokeUpdateCallbacks(contextData, delta, extraData);
            }
        };
        GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {
            var createdMessageTypes = [
                GW_MESSAGE_CONTEXT_ADDED$1,
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_ACTIVITY_CREATED$1,
            ];
            for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {
                var createdMessageType = createdMessageTypes_1[_i];
                var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {
            var createdMessageType = contextCreatedMsg.type;
            if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED$1) {
                this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;
            }
            else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED$1) {
                this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;
            }
            else ;
            var name = this._contextIdToName[contextCreatedMsg.context_id];
            if (!name) {
                throw new Error("Received created event for context with unknown name: " + contextCreatedMsg.context_id);
            }
            if (!this._contextNameToId[name]) {
                throw new Error("Received created event for context with unknown id: " + contextCreatedMsg.context_id);
            }
            var contextData = this._contextNameToData[name];
            if (contextData) {
                if (contextData.isAnnounced) {
                    return;
                }
                else {
                    if (!contextData.hasCallbacks()) {
                        throw new Error("Assertion failure: contextData.hasCallbacks()");
                    }
                    contextData.isAnnounced = true;
                    contextData.contextId = contextCreatedMsg.context_id;
                    contextData.activityId = contextCreatedMsg.activity_id;
                    if (!contextData.sentExplicitSubscription) {
                        this.sendSubscribe(contextData);
                    }
                }
            }
            else {
                this._contextNameToData[name] = contextData =
                    new GW3ContextData$1(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);
            }
        };
        GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {
            var updatedMessageTypes = [
                GW_MESSAGE_CONTEXT_UPDATED$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_JOINED_ACTIVITY$1,
            ];
            for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {
                var updatedMessageType = updatedMessageTypes_1[_i];
                var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {
            var updatedMessageType = contextUpdatedMsg.type;
            var contextId = contextUpdatedMsg.context_id;
            var contextData = this._contextNameToData[this._contextIdToName[contextId]];
            var justSeen = !contextData || !contextData.isAnnounced;
            if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY$1) {
                if (!contextData) {
                    contextData = new GW3ContextData$1(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);
                    this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;
                    this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;
                    this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;
                }
                else {
                    contextData.contextId = contextId;
                    contextData.isAnnounced = true;
                    contextData.activityId = contextUpdatedMsg.activity_id;
                }
                contextData.joinedActivity = true;
            }
            else {
                if (!contextData || !contextData.isAnnounced) {
                    if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                        contextData = contextData || new GW3ContextData$1(contextId, contextUpdatedMsg.name, true, undefined);
                        contextData.sentExplicitSubscription = true;
                        this._contextNameToData[contextUpdatedMsg.name] = contextData;
                        this._contextIdToName[contextId] = contextUpdatedMsg.name;
                        this._contextNameToId[contextUpdatedMsg.name] = contextId;
                    }
                    else {
                        this._logger.error("Received 'update' for unknown context: " + contextId);
                    }
                    return;
                }
            }
            var oldContext = contextData.context;
            if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                contextData.context = contextUpdatedMsg.data || {};
            }
            else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY$1) {
                contextData.context = contextUpdatedMsg.context_snapshot || {};
            }
            else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED$1) {
                contextData.context = applyContextDelta$1(contextData.context, contextUpdatedMsg.delta, this._logger);
            }
            else {
                throw new Error("Unrecognized context update message " + updatedMessageType);
            }
            if (justSeen ||
                !deepEqual$1(contextData.context, oldContext) ||
                updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });
            }
        };
        GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {
            delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };
            if (delta.commands) {
                delta.added = delta.updated = delta.reset = {};
                delta.removed = [];
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        if (command.path.indexOf(".") === -1) {
                            delta.removed.push(command.path);
                        }
                        setValueToPath$1(delta.updated, null, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath$1(delta.updated, command.value, command.path);
                    }
                }
            }
            for (var updateCallbackIndex in contextData.updateCallbacks) {
                if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {
                    try {
                        var updateCallback = contextData.updateCallbacks[updateCallbackIndex];
                        updateCallback(deepClone$1(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);
                    }
                    catch (err) {
                        this._logger.debug("callback error: " + JSON.stringify(err));
                    }
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {
            var destroyedMessageTypes = [
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_ACTIVITY_DESTROYED$1,
            ];
            for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {
                var destroyedMessageType = destroyedMessageTypes_1[_i];
                var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {
            var destroyedMessageType = destroyedMsg.type;
            var contextId;
            var name;
            if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED$1) {
                name = destroyedMsg.activity_id;
                contextId = this._contextNameToId[name];
                if (!contextId) {
                    this._logger.error("Received 'destroyed' for unknown activity: " + destroyedMsg.activity_id);
                    return;
                }
            }
            else {
                contextId = destroyedMsg.context_id;
                name = this._contextIdToName[contextId];
                if (!name) {
                    this._logger.error("Received 'destroyed' for unknown context: " + destroyedMsg.context_id);
                    return;
                }
            }
            delete this._contextIdToName[contextId];
            delete this._contextNameToId[name];
            var contextData = this._contextNameToData[name];
            delete this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                this._logger.error("Received 'destroyed' for unknown context: " + contextId);
                return;
            }
        };
        GW3Bridge.prototype.sendSubscribe = function (contextData) {
            contextData.sentExplicitSubscription = true;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_SUBSCRIBE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.sendUnsubscribe = function (contextData) {
            contextData.sentExplicitSubscription = false;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {
            var delta = { added: {}, updated: {}, removed: [], reset: undefined };
            if (from) {
                for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {
                    var x = _a[_i];
                    if (Object.keys(to).indexOf(x) !== -1
                        && to[x] !== null
                        && !deepEqual$1(from[x], to[x])) {
                        delta.updated[x] = to[x];
                    }
                }
            }
            for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {
                var x = _c[_b];
                if (!from || (Object.keys(from).indexOf(x) === -1)) {
                    if (to[x] !== null) {
                        delta.added[x] = to[x];
                    }
                }
                else if (to[x] === null) {
                    delta.removed.push(x);
                }
            }
            return delta;
        };
        GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {
            var _a, _b;
            var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };
            for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {
                var x = _c[_i];
                if (to[x] !== null) {
                    var fromX = from ? from[x] : null;
                    if (!deepEqual$1(fromX, to[x])) {
                        (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: "set", path: x, value: to[x] });
                    }
                }
                else {
                    (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: "remove", path: x });
                }
            }
            return delta;
        };
        return GW3Bridge;
    }());

    var ContextsModule$1 = (function () {
        function ContextsModule(config) {
            this._bridge = new GW3Bridge$1(config);
        }
        ContextsModule.prototype.all = function () {
            return this._bridge.all();
        };
        ContextsModule.prototype.update = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.update(name, data);
        };
        ContextsModule.prototype.set = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.set(name, data);
        };
        ContextsModule.prototype.setPath = function (name, path, data) {
            this.checkName(name);
            this.checkPath(path);
            var isTopLevelPath = path === "";
            if (isTopLevelPath) {
                this.checkData(data);
                return this.set(name, data);
            }
            return this._bridge.setPath(name, path, data);
        };
        ContextsModule.prototype.setPaths = function (name, paths) {
            this.checkName(name);
            if (!Array.isArray(paths)) {
                throw new Error("Please provide the paths as an array of PathValues!");
            }
            for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {
                var _a = paths_1[_i], path = _a.path, value = _a.value;
                this.checkPath(path);
                var isTopLevelPath = path === "";
                if (isTopLevelPath) {
                    this.checkData(value);
                }
            }
            return this._bridge.setPaths(name, paths);
        };
        ContextsModule.prototype.subscribe = function (name, callback) {
            var _this = this;
            this.checkName(name);
            if (typeof callback !== "function") {
                throw new Error("Please provide the callback as a function!");
            }
            return this._bridge
                .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })
                .then(function (key) {
                return function () {
                    _this._bridge.unsubscribe(key);
                };
            });
        };
        ContextsModule.prototype.get = function (name) {
            this.checkName(name);
            return this._bridge.get(name);
        };
        ContextsModule.prototype.ready = function () {
            return Promise.resolve(this);
        };
        ContextsModule.prototype.destroy = function (name) {
            this.checkName(name);
            return this._bridge.destroy(name);
        };
        Object.defineProperty(ContextsModule.prototype, "setPathSupported", {
            get: function () {
                return this._bridge.setPathSupported;
            },
            enumerable: true,
            configurable: true
        });
        ContextsModule.prototype.checkName = function (name) {
            if (typeof name !== "string" || name === "") {
                throw new Error("Please provide the name as a non-empty string!");
            }
        };
        ContextsModule.prototype.checkPath = function (path) {
            if (typeof path !== "string") {
                throw new Error("Please provide the path as a dot delimited string!");
            }
        };
        ContextsModule.prototype.checkData = function (data) {
            if (typeof data !== "object") {
                throw new Error("Please provide the data as an object!");
            }
        };
        return ContextsModule;
    }());

    function promisify$1 (promise, successCallback, errorCallback) {
        if (typeof successCallback !== "function" && typeof errorCallback !== "function") {
            return promise;
        }
        if (typeof successCallback !== "function") {
            successCallback = function () { };
        }
        else if (typeof errorCallback !== "function") {
            errorCallback = function () { };
        }
        return promise.then(successCallback, errorCallback);
    }

    function rejectAfter$1(ms, promise, error) {
        if (ms === void 0) { ms = 0; }
        var timeout;
        promise.finally(function () {
            if (timeout) {
                clearTimeout(timeout);
            }
        });
        return new Promise(function (resolve, reject) {
            timeout = setTimeout(function () { return reject(error); }, ms);
        });
    }

    var InvokeStatus$1;
    (function (InvokeStatus) {
        InvokeStatus[InvokeStatus["Success"] = 0] = "Success";
        InvokeStatus[InvokeStatus["Error"] = 1] = "Error";
    })(InvokeStatus$1 || (InvokeStatus$1 = {}));
    var Client$1 = (function () {
        function Client(protocol, repo, instance, configuration) {
            this.protocol = protocol;
            this.repo = repo;
            this.instance = instance;
            this.configuration = configuration;
        }
        Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {
            var _this = this;
            var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {
                var _a;
                options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;
                _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);
            };
            var promise = new Promise(function (resolve, reject) {
                var successProxy = function (sub) {
                    resolve(sub);
                };
                var errorProxy = function (err) {
                    reject(err);
                };
                if (!method) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                var methodDef;
                if (typeof method === "string") {
                    methodDef = { name: method };
                }
                else {
                    methodDef = method;
                }
                if (!methodDef.name) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                if (options === undefined) {
                    options = {};
                }
                var target = options.target;
                if (target === undefined) {
                    target = "best";
                }
                if (typeof target === "string" && target !== "all" && target !== "best") {
                    reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\", \"best\", or an instance."));
                    return;
                }
                if (options.methodResponseTimeout === undefined) {
                    options.methodResponseTimeout = options.method_response_timeout;
                    if (options.methodResponseTimeout === undefined) {
                        options.methodResponseTimeout = _this.configuration.methodResponseTimeout;
                    }
                }
                if (options.waitTimeoutMs === undefined) {
                    options.waitTimeoutMs = options.wait_for_method_timeout;
                    if (options.waitTimeoutMs === undefined) {
                        options.waitTimeoutMs = _this.configuration.waitTimeoutMs;
                    }
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                if (currentServers.length > 0) {
                    callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);
                }
                else {
                    var retry_1 = function () {
                        if (!target || !(options.waitTimeoutMs)) {
                            return;
                        }
                        delayTillNow += delayStep;
                        currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                        if (currentServers.length > 0) {
                            var streamInfo = currentServers[0].methods[0];
                            callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);
                        }
                        else if (delayTillNow >= options.waitTimeoutMs) {
                            var def = typeof method === "string" ? { name: method } : method;
                            callProtocolSubscribe(currentServers, def, successProxy, errorProxy);
                        }
                        else {
                            setTimeout(retry_1, delayStep);
                        }
                    };
                    setTimeout(retry_1, delayStep);
                }
            });
            return promisify$1(promise, successCallback, errorCallback);
        };
        Client.prototype.servers = function (methodFilter) {
            var filterCopy = methodFilter === undefined
                ? undefined
                : __assign$3({}, methodFilter);
            return this.getServers(filterCopy).map(function (serverMethodMap) {
                return serverMethodMap.server.instance;
            });
        };
        Client.prototype.methods = function (methodFilter) {
            if (typeof methodFilter === "string") {
                methodFilter = { name: methodFilter };
            }
            else {
                methodFilter = __assign$3({}, methodFilter);
            }
            return this.getMethods(methodFilter);
        };
        Client.prototype.methodsForInstance = function (instance) {
            return this.getMethodsForInstance(instance);
        };
        Client.prototype.methodAdded = function (callback) {
            return this.repo.onMethodAdded(callback);
        };
        Client.prototype.methodRemoved = function (callback) {
            return this.repo.onMethodRemoved(callback);
        };
        Client.prototype.serverAdded = function (callback) {
            return this.repo.onServerAdded(callback);
        };
        Client.prototype.serverRemoved = function (callback) {
            return this.repo.onServerRemoved(function (server, reason) {
                callback(server, reason);
            });
        };
        Client.prototype.serverMethodAdded = function (callback) {
            return this.repo.onServerMethodAdded(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.serverMethodRemoved = function (callback) {
            return this.repo.onServerMethodRemoved(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return __awaiter$2(this, void 0, void 0, function () {
                var getInvokePromise;
                var _this = this;
                return __generator$1(this, function (_a) {
                    getInvokePromise = function () { return __awaiter$2(_this, void 0, void 0, function () {
                        var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;
                        var _this = this;
                        var _a, _b, _c;
                        return __generator$1(this, function (_d) {
                            switch (_d.label) {
                                case 0:
                                    if (typeof methodFilter === "string") {
                                        methodDefinition = { name: methodFilter };
                                    }
                                    else {
                                        methodDefinition = __assign$3({}, methodFilter);
                                    }
                                    if (!methodDefinition.name) {
                                        return [2, Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.")];
                                    }
                                    if (!argumentObj) {
                                        argumentObj = {};
                                    }
                                    if (!target) {
                                        target = "best";
                                    }
                                    if (typeof target === "string" && target !== "all" && target !== "best" && target !== "skipMine") {
                                        return [2, Promise.reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\" and \"best\"."))];
                                    }
                                    if (!additionalOptions) {
                                        additionalOptions = {};
                                    }
                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                        additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;
                                        if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                            additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs === undefined) {
                                        additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;
                                        if (additionalOptions.waitTimeoutMs === undefined) {
                                            additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== "number") {
                                        return [2, Promise.reject(new Error("\"" + additionalOptions.waitTimeoutMs + "\" is not a valid number for \"waitTimeoutMs\" "))];
                                    }
                                    if (typeof argumentObj !== "object") {
                                        return [2, Promise.reject(new Error("The method arguments must be an object. method: " + methodDefinition.name))];
                                    }
                                    serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                                    if (!(serversMethodMap.length === 0)) return [3, 4];
                                    _d.label = 1;
                                case 1:
                                    _d.trys.push([1, 3, , 4]);
                                    return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];
                                case 2:
                                    serversMethodMap = _d.sent();
                                    return [3, 4];
                                case 3:
                                    err_1 = _d.sent();
                                    method = __assign$3(__assign$3({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });
                                    errorObj = {
                                        method: method,
                                        called_with: argumentObj,
                                        message: "Can not find a method matching " + JSON.stringify(methodFilter) + " with server filter " + JSON.stringify(target),
                                        executed_by: undefined,
                                        returned: undefined,
                                        status: undefined,
                                    };
                                    return [2, Promise.reject(errorObj)];
                                case 4:
                                    timeout = additionalOptions.methodResponseTimeoutMs;
                                    additionalOptionsCopy = additionalOptions;
                                    invokePromises = serversMethodMap.map(function (serversMethodPair) {
                                        var invId = shortid$2();
                                        var method = serversMethodPair.methods[0];
                                        var server = serversMethodPair.server;
                                        var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);
                                        return Promise.race([
                                            invokePromise,
                                            rejectAfter$1(timeout, invokePromise, {
                                                invocationId: invId,
                                                message: "Invocation timeout (" + timeout + " ms) reached for method name: " + (method === null || method === void 0 ? void 0 : method.name) + ", target instance: " + JSON.stringify(server.instance) + ", options: " + JSON.stringify(additionalOptionsCopy),
                                                status: InvokeStatus$1.Error,
                                            })
                                        ]);
                                    });
                                    return [4, Promise.all(invokePromises)];
                                case 5:
                                    invocationMessages = _d.sent();
                                    results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);
                                    allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus$1.Error; });
                                    if (allRejected) {
                                        return [2, Promise.reject(results)];
                                    }
                                    return [2, results];
                            }
                        });
                    }); };
                    return [2, promisify$1(getInvokePromise(), success, error)];
                });
            });
        };
        Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {
            var all_return_values = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus$1.Success; })
                .reduce(function (allValues, currentValue) {
                allValues = __spreadArrays$1(allValues, [
                    {
                        executed_by: currentValue.instance,
                        returned: currentValue.result,
                        called_with: calledWith,
                        method: method,
                        message: currentValue.message,
                        status: currentValue.status,
                    }
                ]);
                return allValues;
            }, []);
            var all_errors = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus$1.Error; })
                .reduce(function (allErrors, currError) {
                allErrors = __spreadArrays$1(allErrors, [
                    {
                        executed_by: currError.instance,
                        called_with: calledWith,
                        name: method.name,
                        message: currError.message,
                    }
                ]);
                return allErrors;
            }, []);
            var invResult = invocationResults[0];
            var result = {
                method: method,
                called_with: calledWith,
                returned: invResult.result,
                executed_by: invResult.instance,
                all_return_values: all_return_values,
                all_errors: all_errors,
                message: invResult.message,
                status: invResult.status
            };
            return result;
        };
        Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (additionalOptions.waitTimeoutMs === 0) {
                    reject();
                    return;
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var retry = function () {
                    delayTillNow += delayStep;
                    var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                    if (serversMethodMap.length > 0) {
                        clearInterval(interval);
                        resolve(serversMethodMap);
                    }
                    else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {
                        clearInterval(interval);
                        reject();
                        return;
                    }
                };
                var interval = setInterval(retry, delayStep);
            });
        };
        Client.prototype.filterByTarget = function (target, serverMethodMap) {
            var _this = this;
            if (typeof target === "string") {
                if (target === "all") {
                    return __spreadArrays$1(serverMethodMap);
                }
                else if (target === "best") {
                    var localMachine = serverMethodMap
                        .find(function (s) { return s.server.instance.isLocal; });
                    if (localMachine) {
                        return [localMachine];
                    }
                    if (serverMethodMap[0] !== undefined) {
                        return [serverMethodMap[0]];
                    }
                }
                else if (target === "skipMine") {
                    return serverMethodMap.filter(function (_a) {
                        var server = _a.server;
                        return server.instance.peerId !== _this.instance.peerId;
                    });
                }
            }
            else {
                var targetArray = void 0;
                if (!Array.isArray(target)) {
                    targetArray = [target];
                }
                else {
                    targetArray = target;
                }
                var allServersMatching = targetArray.reduce(function (matches, filter) {
                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {
                        return _this.instanceMatch(filter, serverMethodPair.server.instance);
                    });
                    return matches.concat(myMatches);
                }, []);
                return allServersMatching;
            }
            return [];
        };
        Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {
            return this.containsProps(instanceFilter, instanceDefinition);
        };
        Client.prototype.methodMatch = function (methodFilter, methodDefinition) {
            return this.containsProps(methodFilter, methodDefinition);
        };
        Client.prototype.containsProps = function (filter, repoMethod) {
            var filterProps = Object.keys(filter)
                .filter(function (prop) {
                return filter[prop] !== undefined
                    && typeof filter[prop] !== "function"
                    && prop !== "object_types"
                    && prop !== "display_name"
                    && prop !== "id"
                    && prop !== "gatewayId"
                    && prop !== "identifier"
                    && prop[0] !== "_";
            });
            return filterProps.every(function (prop) {
                var isMatch;
                var filterValue = filter[prop];
                var repoMethodValue = repoMethod[prop];
                switch (prop) {
                    case "objectTypes":
                        isMatch = (filterValue || []).every(function (filterValueEl) {
                            return (repoMethodValue || []).includes(filterValueEl);
                        });
                        break;
                    case "flags":
                        isMatch = isSubset$1(repoMethodValue || {}, filterValue || {});
                        break;
                    default:
                        isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();
                }
                return isMatch;
            });
        };
        Client.prototype.getMethods = function (methodFilter) {
            var _this = this;
            if (methodFilter === undefined) {
                return this.repo.getMethods();
            }
            var methods = this.repo.getMethods().filter(function (method) {
                return _this.methodMatch(methodFilter, method);
            });
            return methods;
        };
        Client.prototype.getMethodsForInstance = function (instanceFilter) {
            var _this = this;
            var allServers = this.repo.getServers();
            var matchingServers = allServers.filter(function (server) {
                return _this.instanceMatch(instanceFilter, server.instance);
            });
            if (matchingServers.length === 0) {
                return [];
            }
            var resultMethodsObject = {};
            if (matchingServers.length === 1) {
                resultMethodsObject = matchingServers[0].methods;
            }
            else {
                matchingServers.forEach(function (server) {
                    Object.keys(server.methods).forEach(function (methodKey) {
                        var method = server.methods[methodKey];
                        resultMethodsObject[method.identifier] = method;
                    });
                });
            }
            return Object.keys(resultMethodsObject)
                .map(function (key) {
                return resultMethodsObject[key];
            });
        };
        Client.prototype.getServers = function (methodFilter) {
            var _this = this;
            var servers = this.repo.getServers();
            if (methodFilter === undefined) {
                return servers.map(function (server) {
                    return { server: server, methods: [] };
                });
            }
            return servers.reduce(function (prev, current) {
                var methodsForServer = Object.values(current.methods);
                var matchingMethods = methodsForServer.filter(function (method) {
                    return _this.methodMatch(methodFilter, method);
                });
                if (matchingMethods.length > 0) {
                    prev.push({ server: current, methods: matchingMethods });
                }
                return prev;
            }, []);
        };
        Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {
            var serversMethodMap = this.getServers(methodFilter);
            return this.filterByTarget(target, serversMethodMap);
        };
        return Client;
    }());

    var ServerSubscription$1 = (function () {
        function ServerSubscription(protocol, repoMethod, subscription) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.subscription = subscription;
        }
        Object.defineProperty(ServerSubscription.prototype, "stream", {
            get: function () {
                if (!this.repoMethod.stream) {
                    throw new Error("no stream");
                }
                return this.repoMethod.stream;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "arguments", {
            get: function () { return this.subscription.arguments || {}; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "branchKey", {
            get: function () { return this.subscription.branchKey; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "instance", {
            get: function () {
                if (!this.subscription.instance) {
                    throw new Error("no instance");
                }
                return this.subscription.instance;
            },
            enumerable: true,
            configurable: true
        });
        ServerSubscription.prototype.close = function () {
            this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);
        };
        ServerSubscription.prototype.push = function (data) {
            this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);
        };
        return ServerSubscription;
    }());

    var Request$1 = (function () {
        function Request(protocol, repoMethod, requestContext) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.requestContext = requestContext;
            this.arguments = requestContext.arguments;
            this.instance = requestContext.instance;
        }
        Request.prototype.accept = function () {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, "");
        };
        Request.prototype.acceptOnBranch = function (branch) {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);
        };
        Request.prototype.reject = function (reason) {
            this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);
        };
        return Request;
    }());

    var ServerStreaming$2 = (function () {
        function ServerStreaming(protocol, server) {
            var _this = this;
            this.protocol = protocol;
            this.server = server;
            protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });
            protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });
            protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });
        }
        ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRequestHandler === "function")) {
                return;
            }
            var request = new Request$1(this.protocol, repoMethod, requestContext);
            repoMethod.streamCallbacks.subscriptionRequestHandler(request);
        };
        ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionAddedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription$1(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionAddedHandler(sub);
        };
        ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription$1(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);
        };
        return ServerStreaming;
    }());

    var ServerBranch$1 = (function () {
        function ServerBranch(key, protocol, repoMethod) {
            this.key = key;
            this.protocol = protocol;
            this.repoMethod = repoMethod;
        }
        ServerBranch.prototype.subscriptions = function () {
            var _this = this;
            var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);
            return subList.map(function (sub) {
                return new ServerSubscription$1(_this.protocol, _this.repoMethod, sub);
            });
        };
        ServerBranch.prototype.close = function () {
            this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);
        };
        ServerBranch.prototype.push = function (data) {
            this.protocol.server.pushData(this.repoMethod, data, [this.key]);
        };
        return ServerBranch;
    }());

    var ServerStream$1 = (function () {
        function ServerStream(_protocol, _repoMethod, _server) {
            this._protocol = _protocol;
            this._repoMethod = _repoMethod;
            this._server = _server;
            this.name = this._repoMethod.definition.name;
        }
        ServerStream.prototype.branches = function (key) {
            var _this = this;
            var bList = this._protocol.server.getBranchList(this._repoMethod);
            if (key) {
                if (bList.indexOf(key) > -1) {
                    return new ServerBranch$1(key, this._protocol, this._repoMethod);
                }
                return undefined;
            }
            else {
                return bList.map(function (branchKey) {
                    return new ServerBranch$1(branchKey, _this._protocol, _this._repoMethod);
                });
            }
        };
        ServerStream.prototype.branch = function (key) {
            return this.branches(key);
        };
        ServerStream.prototype.subscriptions = function () {
            var _this = this;
            var subList = this._protocol.server.getSubscriptionList(this._repoMethod);
            return subList.map(function (sub) {
                return new ServerSubscription$1(_this._protocol, _this._repoMethod, sub);
            });
        };
        Object.defineProperty(ServerStream.prototype, "definition", {
            get: function () {
                var _a;
                var def2 = this._repoMethod.definition;
                return {
                    accepts: def2.accepts,
                    description: def2.description,
                    displayName: def2.displayName,
                    name: def2.name,
                    objectTypes: def2.objectTypes,
                    returns: def2.returns,
                    supportsStreaming: def2.supportsStreaming,
                    flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,
                };
            },
            enumerable: true,
            configurable: true
        });
        ServerStream.prototype.close = function () {
            this._protocol.server.closeAllSubscriptions(this._repoMethod);
            this._server.unregister(this._repoMethod.definition, true);
        };
        ServerStream.prototype.push = function (data, branches) {
            if (typeof branches !== "string" && !Array.isArray(branches) && branches !== undefined) {
                throw new Error("invalid branches should be string or string array");
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            this._protocol.server.pushData(this._repoMethod, data, branches);
        };
        ServerStream.prototype.updateRepoMethod = function (repoMethod) {
            this._repoMethod = repoMethod;
        };
        return ServerStream;
    }());

    var Server$1 = (function () {
        function Server(protocol, serverRepository) {
            this.protocol = protocol;
            this.serverRepository = serverRepository;
            this.invocations = 0;
            this.currentlyUnregistering = {};
            this.streaming = new ServerStreaming$2(protocol, this);
            this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));
        }
        Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {
            var _this = this;
            var promise = new Promise(function (resolve, reject) {
                if (!streamDef) {
                    reject("The stream name must be unique! Please, provide either a unique string for a stream name to \u201Cglue.interop.createStream()\u201D or a \u201CmethodDefinition\u201D object with a unique \u201Cname\u201D property for the stream.");
                    return;
                }
                var streamMethodDefinition;
                if (typeof streamDef === "string") {
                    streamMethodDefinition = { name: "" + streamDef };
                }
                else {
                    streamMethodDefinition = __assign$3({}, streamDef);
                }
                if (!streamMethodDefinition.name) {
                    return reject("The \u201Cname\u201D property is required for the \u201CstreamDefinition\u201D object and must be unique. Stream definition: " + JSON.stringify(streamMethodDefinition));
                }
                var nameAlreadyExists = _this.serverRepository.getList()
                    .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });
                if (nameAlreadyExists) {
                    return reject("A stream with the name \"" + streamMethodDefinition.name + "\" already exists! Please, provide a unique name for the stream.");
                }
                streamMethodDefinition.supportsStreaming = true;
                if (!callbacks) {
                    callbacks = {};
                }
                if (typeof callbacks.subscriptionRequestHandler !== "function") {
                    callbacks.subscriptionRequestHandler = function (request) {
                        request.accept();
                    };
                }
                var repoMethod = _this.serverRepository.add({
                    definition: streamMethodDefinition,
                    streamCallbacks: callbacks,
                    protocolState: {},
                });
                _this.protocol.server.createStream(repoMethod)
                    .then(function () {
                    var streamUserObject;
                    if (existingStream) {
                        streamUserObject = existingStream;
                        existingStream.updateRepoMethod(repoMethod);
                    }
                    else {
                        streamUserObject = new ServerStream$1(_this.protocol, repoMethod, _this);
                    }
                    repoMethod.stream = streamUserObject;
                    resolve(streamUserObject);
                })
                    .catch(function (err) {
                    if (repoMethod.repoId) {
                        _this.serverRepository.remove(repoMethod.repoId);
                    }
                    reject(err);
                });
            });
            return promisify$1(promise, successCallback, errorCallback);
        };
        Server.prototype.register = function (methodDefinition, callback) {
            var _this = this;
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter$2(_this, void 0, void 0, function () {
                var result, resultValue, e_1;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 4, , 5]);
                            result = callback(context.args, context.instance);
                            if (!(result && typeof result.then === "function")) return [3, 2];
                            return [4, result];
                        case 1:
                            resultValue = _a.sent();
                            resultCallback(undefined, resultValue);
                            return [3, 3];
                        case 2:
                            resultCallback(undefined, result);
                            _a.label = 3;
                        case 3: return [3, 5];
                        case 4:
                            e_1 = _a.sent();
                            if (!e_1) {
                                e_1 = "";
                            }
                            resultCallback(e_1, e_1);
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            }); };
            wrappedCallbackFunction.userCallback = callback;
            return this.registerCore(methodDefinition, wrappedCallbackFunction);
        };
        Server.prototype.registerAsync = function (methodDefinition, callback) {
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallback = function (context, resultCallback) {
                try {
                    var resultCalled_1 = false;
                    var success = function (result) {
                        if (!resultCalled_1) {
                            resultCallback(undefined, result);
                        }
                        resultCalled_1 = true;
                    };
                    var error = function (e) {
                        if (!resultCalled_1) {
                            if (!e) {
                                e = "";
                            }
                            resultCallback(e, e);
                        }
                        resultCalled_1 = true;
                    };
                    var methodResult = callback(context.args, context.instance, success, error);
                    if (methodResult && typeof methodResult.then === "function") {
                        methodResult
                            .then(success)
                            .catch(error);
                    }
                }
                catch (e) {
                    resultCallback(e, undefined);
                }
            };
            wrappedCallback.userCallbackAsync = callback;
            return this.registerCore(methodDefinition, wrappedCallback);
        };
        Server.prototype.unregister = function (methodFilter, forStream) {
            if (forStream === void 0) { forStream = false; }
            return __awaiter$2(this, void 0, void 0, function () {
                var methodDefinition, methodToBeRemoved;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (methodFilter === undefined) {
                                return [2, Promise.reject("Please, provide either a unique string for a name or an object containing a \u201Cname\u201D property.")];
                            }
                            if (!(typeof methodFilter === "function")) return [3, 2];
                            return [4, this.unregisterWithPredicate(methodFilter, forStream)];
                        case 1:
                            _a.sent();
                            return [2];
                        case 2:
                            if (typeof methodFilter === "string") {
                                methodDefinition = { name: methodFilter };
                            }
                            else {
                                methodDefinition = methodFilter;
                            }
                            if (methodDefinition.name === undefined) {
                                return [2, Promise.reject("Method name is required. Cannot find a method if the method name is undefined!")];
                            }
                            methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {
                                return serverMethod.definition.name === methodDefinition.name
                                    && (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodToBeRemoved) {
                                return [2, Promise.reject("Method with a name \"" + methodDefinition.name + "\" does not exist or is not registered by your application!")];
                            }
                            return [4, this.removeMethodsOrStreams([methodToBeRemoved])];
                        case 3:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {
            return __awaiter$2(this, void 0, void 0, function () {
                var methodsOrStreamsToRemove;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            methodsOrStreamsToRemove = this.serverRepository.getList()
                                .filter(function (sm) { return filterPredicate(sm.definition); })
                                .filter(function (serverMethod) {
                                return (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {
                                return [2, Promise.reject("Could not find a " + (forStream ? "stream" : "method") + " matching the specified condition!")];
                            }
                            return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {
            var _this = this;
            var methodUnregPromises = [];
            methodsToRemove.forEach(function (method) {
                var promise = _this.protocol.server.unregister(method)
                    .then(function () {
                    if (method.repoId) {
                        _this.serverRepository.remove(method.repoId);
                    }
                });
                methodUnregPromises.push(promise);
                _this.addAsCurrentlyUnregistering(method.definition.name, promise);
            });
            return Promise.all(methodUnregPromises);
        };
        Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {
            return __awaiter$2(this, void 0, void 0, function () {
                var timeout;
                var _this = this;
                return __generator$1(this, function (_a) {
                    timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });
                    this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {
                        delete _this.currentlyUnregistering[methodName];
                    });
                    return [2];
                });
            });
        };
        Server.prototype.registerCore = function (method, theFunction) {
            return __awaiter$2(this, void 0, void 0, function () {
                var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;
                var _this = this;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (typeof method === "string") {
                                methodDefinition = { name: "" + method };
                            }
                            else {
                                methodDefinition = __assign$3({}, method);
                            }
                            if (!methodDefinition.name) {
                                return [2, Promise.reject("Please, provide a (unique) string value for the \u201Cname\u201D property in the \u201CmethodDefinition\u201D object: " + JSON.stringify(method))];
                            }
                            unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];
                            if (!unregisterInProgress) return [3, 2];
                            return [4, unregisterInProgress];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            nameAlreadyExists = this.serverRepository.getList()
                                .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });
                            if (nameAlreadyExists) {
                                return [2, Promise.reject("A method with the name \"" + methodDefinition.name + "\" already exists! Please, provide a unique name for the method.")];
                            }
                            if (methodDefinition.supportsStreaming) {
                                return [2, Promise.reject("When you create methods with \u201Cglue.interop.register()\u201D or \u201Cglue.interop.registerAsync()\u201D the property \u201CsupportsStreaming\u201D cannot be \u201Ctrue\u201D. If you want \u201C" + methodDefinition.name + "\u201D to be a stream, please use the \u201Cglue.interop.createStream()\u201D method.")];
                            }
                            repoMethod = this.serverRepository.add({
                                definition: methodDefinition,
                                theFunction: theFunction,
                                protocolState: {},
                            });
                            return [2, this.protocol.server.register(repoMethod)
                                    .catch(function (err) {
                                    if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {
                                        _this.serverRepository.remove(repoMethod.repoId);
                                    }
                                    throw err;
                                })];
                    }
                });
            });
        };
        Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {
            var _this = this;
            if (!methodToExecute || !methodToExecute.theFunction) {
                return;
            }
            methodToExecute.theFunction(invocationArgs, function (err, result) {
                if (err !== undefined && err !== null) {
                    if (err.message && typeof err.message === "string") {
                        err = err.message;
                    }
                    else if (typeof err !== "string") {
                        try {
                            err = JSON.stringify(err);
                        }
                        catch (unStrException) {
                            err = "un-stringifyable error in onMethodInvoked! Top level prop names: " + Object.keys(err);
                        }
                    }
                }
                if (!result) {
                    result = {};
                }
                else if (typeof result !== "object" || Array.isArray(result)) {
                    result = { _value: result };
                }
                _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);
            });
        };
        return Server;
    }());

    var InstanceWrapper$1 = (function () {
        function InstanceWrapper(API, instance, connection) {
            var _this = this;
            this.wrapped = {};
            this.wrapped.getMethods = function () {
                return API.methodsForInstance(this);
            };
            this.wrapped.getStreams = function () {
                return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });
            };
            if (instance) {
                this.refreshWrappedObject(instance);
            }
            if (connection) {
                connection.loggedIn(function () {
                    _this.refresh(connection);
                });
                this.refresh(connection);
            }
        }
        InstanceWrapper.prototype.unwrap = function () {
            return this.wrapped;
        };
        InstanceWrapper.prototype.refresh = function (connection) {
            if (!connection) {
                return;
            }
            var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;
            var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });
            this.refreshWrappedObject(instance);
        };
        InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {
            var _a, _b, _c;
            this.wrapped.user = resolvedIdentity.user;
            this.wrapped.instance = resolvedIdentity.instance;
            this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid$2();
            this.wrapped.applicationName = resolvedIdentity.applicationName;
            this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);
            this.wrapped.machine = resolvedIdentity.machine;
            this.wrapped.environment = resolvedIdentity.environment;
            this.wrapped.region = resolvedIdentity.region;
            this.wrapped.windowId = resolvedIdentity.windowId;
            this.wrapped.isLocal = true;
            this.wrapped.api = resolvedIdentity.api;
            this.wrapped.service = resolvedIdentity.service;
            this.wrapped.peerId = resolvedIdentity.peerId;
        };
        return InstanceWrapper;
    }());

    var hideMethodSystemFlags$1 = function (method) {
        return __assign$3(__assign$3({}, method), { flags: method.flags.metadata || {} });
    };
    var ClientRepository$1 = (function () {
        function ClientRepository(logger, API) {
            this.logger = logger;
            this.API = API;
            this.servers = {};
            this.methodsCount = {};
            this.callbacks = lib$3();
            var peerId = this.API.instance.peerId;
            this.myServer = {
                id: peerId,
                methods: {},
                instance: this.API.instance,
                wrapper: this.API.unwrappedInstance,
            };
            this.servers[peerId] = this.myServer;
        }
        ClientRepository.prototype.addServer = function (info, serverId) {
            this.logger.debug("adding server " + serverId);
            var current = this.servers[serverId];
            if (current) {
                return current.id;
            }
            var wrapper = new InstanceWrapper$1(this.API, info);
            var serverEntry = {
                id: serverId,
                methods: {},
                instance: wrapper.unwrap(),
                wrapper: wrapper,
            };
            this.servers[serverId] = serverEntry;
            this.callbacks.execute("onServerAdded", serverEntry.instance);
            return serverId;
        };
        ClientRepository.prototype.removeServerById = function (id, reason) {
            var _this = this;
            var server = this.servers[id];
            if (!server) {
                this.logger.warn("not aware of server " + id + ", my state " + JSON.stringify(Object.keys(this.servers)));
                return;
            }
            else {
                this.logger.debug("removing server " + id);
            }
            Object.keys(server.methods).forEach(function (methodId) {
                _this.removeServerMethod(id, methodId);
            });
            delete this.servers[id];
            this.callbacks.execute("onServerRemoved", server.instance, reason);
        };
        ClientRepository.prototype.addServerMethod = function (serverId, method) {
            var _a;
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            if (server.methods[method.id]) {
                return;
            }
            var identifier = this.createMethodIdentifier(method);
            var that = this;
            var methodDefinition = {
                identifier: identifier,
                gatewayId: method.id,
                name: method.name,
                displayName: method.display_name,
                description: method.description,
                version: method.version,
                objectTypes: method.object_types || [],
                accepts: method.input_signature,
                returns: method.result_signature,
                supportsStreaming: typeof method.flags !== "undefined" ? method.flags.streaming : false,
                flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},
                getServers: function () {
                    return that.getServersByMethod(identifier);
                }
            };
            methodDefinition.object_types = methodDefinition.objectTypes;
            methodDefinition.display_name = methodDefinition.displayName;
            methodDefinition.version = methodDefinition.version;
            server.methods[method.id] = methodDefinition;
            var clientMethodDefinition = hideMethodSystemFlags$1(methodDefinition);
            if (!this.methodsCount[identifier]) {
                this.methodsCount[identifier] = 0;
                this.callbacks.execute("onMethodAdded", clientMethodDefinition);
            }
            this.methodsCount[identifier] = this.methodsCount[identifier] + 1;
            this.callbacks.execute("onServerMethodAdded", server.instance, clientMethodDefinition);
            return methodDefinition;
        };
        ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            var method = server.methods[methodId];
            delete server.methods[methodId];
            var clientMethodDefinition = hideMethodSystemFlags$1(method);
            this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;
            if (this.methodsCount[method.identifier] === 0) {
                this.callbacks.execute("onMethodRemoved", clientMethodDefinition);
            }
            this.callbacks.execute("onServerMethodRemoved", server.instance, clientMethodDefinition);
        };
        ClientRepository.prototype.getMethods = function () {
            return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags$1);
        };
        ClientRepository.prototype.getServers = function () {
            return Object.values(this.servers).map(this.hideServerMethodSystemFlags);
        };
        ClientRepository.prototype.onServerAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerAdded", callback);
            var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);
        };
        ClientRepository.prototype.onMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodAdded", callback);
            var methodsToReplay = this.getMethods();
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);
        };
        ClientRepository.prototype.onServerMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodAdded", callback);
            var unsubCalled = false;
            var servers = this.getServers();
            setTimeout(function () {
                servers.forEach(function (server) {
                    var methods = server.methods;
                    Object.keys(methods).forEach(function (methodId) {
                        if (!unsubCalled) {
                            callback(server.instance, methods[methodId]);
                        }
                    });
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.onMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.getServerById = function (id) {
            return this.hideServerMethodSystemFlags(this.servers[id]);
        };
        ClientRepository.prototype.reset = function () {
            var _a;
            var _this = this;
            Object.keys(this.servers).forEach(function (key) {
                _this.removeServerById(key, "reset");
            });
            this.servers = (_a = {},
                _a[this.myServer.id] = this.myServer,
                _a);
            this.methodsCount = {};
        };
        ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {
            var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : "";
            var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : "";
            return (methodInfo.name + accepts + returns).toLowerCase();
        };
        ClientRepository.prototype.getServersByMethod = function (identifier) {
            var allServers = [];
            Object.values(this.servers).forEach(function (server) {
                Object.values(server.methods).forEach(function (method) {
                    if (method.identifier === identifier) {
                        allServers.push(server.instance);
                    }
                });
            });
            return allServers;
        };
        ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {
            var unsubCalled = false;
            setTimeout(function () {
                collectionToReplay.forEach(function (item) {
                    if (!unsubCalled) {
                        callback(item);
                    }
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {
            var clientMethods = {};
            Object.entries(server.methods).forEach(function (_a) {
                var name = _a[0], method = _a[1];
                clientMethods[name] = hideMethodSystemFlags$1(method);
            });
            return __assign$3(__assign$3({}, server), { methods: clientMethods });
        };
        ClientRepository.prototype.extractMethodsFromServers = function (servers) {
            var methods = Object.values(servers).reduce(function (clientMethods, server) {
                return __spreadArrays$1(clientMethods, Object.values(server.methods));
            }, []);
            return methods;
        };
        return ClientRepository;
    }());

    var ServerRepository$1 = (function () {
        function ServerRepository() {
            this.nextId = 0;
            this.methods = [];
        }
        ServerRepository.prototype.add = function (method) {
            method.repoId = String(this.nextId);
            this.nextId += 1;
            this.methods.push(method);
            return method;
        };
        ServerRepository.prototype.remove = function (repoId) {
            if (typeof repoId !== "string") {
                return new TypeError("Expecting a string");
            }
            this.methods = this.methods.filter(function (m) {
                return m.repoId !== repoId;
            });
        };
        ServerRepository.prototype.getById = function (id) {
            if (typeof id !== "string") {
                return undefined;
            }
            return this.methods.find(function (m) {
                return m.repoId === id;
            });
        };
        ServerRepository.prototype.getList = function () {
            return this.methods.map(function (m) { return m; });
        };
        ServerRepository.prototype.length = function () {
            return this.methods.length;
        };
        ServerRepository.prototype.reset = function () {
            this.methods = [];
        };
        return ServerRepository;
    }());

    var SUBSCRIPTION_REQUEST$1 = "onSubscriptionRequest";
    var SUBSCRIPTION_ADDED$1 = "onSubscriptionAdded";
    var SUBSCRIPTION_REMOVED$1 = "onSubscriptionRemoved";
    var ServerStreaming$1$1 = (function () {
        function ServerStreaming(session, repository, serverRepository) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.serverRepository = serverRepository;
            this.ERR_URI_SUBSCRIPTION_FAILED = "com.tick42.agm.errors.subscription.failure";
            this.callbacks = lib$3();
            this.nextStreamId = 0;
            session.on("add-interest", function (msg) {
                _this.handleAddInterest(msg);
            });
            session.on("remove-interest", function (msg) {
                _this.handleRemoveInterest(msg);
            });
        }
        ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {
            if (typeof branch !== "string") {
                branch = "";
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                throw new TypeError("The streaming method is missing its subscriptions.");
            }
            if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                throw new TypeError("The streaming method is missing its branches.");
            }
            var streamId = this.getStreamId(streamingMethod, branch);
            var key = requestContext.msg.subscription_id;
            var subscription = {
                id: key,
                arguments: requestContext.arguments,
                instance: requestContext.instance,
                branchKey: branch,
                streamId: streamId,
                subscribeMsg: requestContext.msg,
            };
            streamingMethod.protocolState.subscriptionsMap[key] = subscription;
            this.session.sendFireAndForget({
                type: "accepted",
                subscription_id: key,
                stream_id: streamId,
            });
            this.callbacks.execute(SUBSCRIPTION_ADDED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {
            if (typeof reason !== "string") {
                reason = "";
            }
            this.sendSubscriptionFailed("Subscription rejected by user. " + reason, requestContext.msg.subscription_id);
        };
        ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {
            var _this = this;
            if (typeof streamingMethod !== "object" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                return;
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            if (typeof branches === "string") {
                branches = [branches];
            }
            else if (!Array.isArray(branches) || branches.length <= 0) {
                branches = [];
            }
            var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap
                .filter(function (br) {
                if (!branches || branches.length === 0) {
                    return true;
                }
                return branches.indexOf(br.key) >= 0;
            }).map(function (br) {
                return br.streamId;
            });
            streamIdList.forEach(function (streamId) {
                var publishMessage = {
                    type: "publish",
                    stream_id: streamId,
                    data: data,
                };
                _this.session.sendFireAndForget(publishMessage);
            });
        };
        ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            var postMessage = {
                type: "post",
                subscription_id: subscription.id,
                data: data,
            };
            this.session.sendFireAndForget(postMessage);
        };
        ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {
            if (streamingMethod.protocolState.subscriptionsMap) {
                delete streamingMethod.protocolState.subscriptionsMap[subscription.id];
            }
            var dropSubscriptionMessage = {
                type: "drop-subscription",
                subscription_id: subscription.id,
                reason: "Server dropping a single subscription",
            };
            this.session.sendFireAndForget(dropSubscriptionMessage);
            var subscriber = subscription.instance;
            this.callbacks.execute(SUBSCRIPTION_REMOVED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {
            var _this = this;
            if (typeof streamingMethod !== "object" || typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var subscriptionsToClose = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey === "string") {
                subscriptionsToClose = subscriptionsToClose.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            subscriptionsToClose.forEach(function (subscription) {
                delete subscriptionsMap[subscription.id];
                var drop = {
                    type: "drop-subscription",
                    subscription_id: subscription.id,
                    reason: "Server dropping all subscriptions on stream_id: " + subscription.streamId,
                };
                _this.session.sendFireAndForget(drop);
            });
        };
        ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            var subscriptions = [];
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey !== "string") {
                subscriptions = allSubscriptions;
            }
            else {
                subscriptions = allSubscriptions.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            return subscriptions;
        };
        ServerStreaming.prototype.getBranchList = function (streamingMethod) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            var result = [];
            allSubscriptions.forEach(function (sub) {
                var branch = "";
                if (typeof sub === "object" && typeof sub.branchKey === "string") {
                    branch = sub.branchKey;
                }
                if (result.indexOf(branch) === -1) {
                    result.push(branch);
                }
            });
            return result;
        };
        ServerStreaming.prototype.onSubAdded = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED$1, callback);
        };
        ServerStreaming.prototype.onSubRequest = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST$1, callback);
        };
        ServerStreaming.prototype.onSubRemoved = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED$1, callback);
        };
        ServerStreaming.prototype.handleRemoveInterest = function (msg) {
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (typeof msg.subscription_id !== "string" ||
                typeof streamingMethod !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== "object") {
                return;
            }
            var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            this.callbacks.execute(SUBSCRIPTION_REMOVED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {
            this.callbacks.add(eventName, handlerFunc);
        };
        ServerStreaming.prototype.getNextStreamId = function () {
            return this.nextStreamId++ + "";
        };
        ServerStreaming.prototype.handleAddInterest = function (msg) {
            var caller = this.repository.getServerById(msg.caller_id);
            var instance = caller.instance;
            var requestContext = {
                msg: msg,
                arguments: msg.arguments_kv || {},
                instance: instance,
            };
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (streamingMethod === undefined) {
                var errorMsg = "No method with id " + msg.method_id + " on this server.";
                this.sendSubscriptionFailed(errorMsg, msg.subscription_id);
                return;
            }
            if (streamingMethod.protocolState.subscriptionsMap &&
                streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {
                this.sendSubscriptionFailed("A subscription with id " + msg.subscription_id + " already exists.", msg.subscription_id);
                return;
            }
            this.callbacks.execute(SUBSCRIPTION_REQUEST$1, requestContext, streamingMethod);
        };
        ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {
            var errorMessage = {
                type: "error",
                reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,
                reason: reason,
                request_id: subscriptionId,
            };
            this.session.sendFireAndForget(errorMessage);
        };
        ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {
            if (typeof branchKey !== "string") {
                branchKey = "";
            }
            if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {
                throw new Error("streaming " + streamingMethod.definition.name + " method without protocol state");
            }
            var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {
                return branch.key === branchKey;
            })[0];
            var streamId = (needleBranch ? needleBranch.streamId : undefined);
            if (typeof streamId !== "string" || streamId === "") {
                streamId = this.getNextStreamId();
                streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });
            }
            return streamId;
        };
        return ServerStreaming;
    }());

    var ServerProtocol$1 = (function () {
        function ServerProtocol(session, clientRepository, serverRepository, logger) {
            var _this = this;
            this.session = session;
            this.clientRepository = clientRepository;
            this.serverRepository = serverRepository;
            this.logger = logger;
            this.callbacks = lib$3();
            this.streaming = new ServerStreaming$1$1(session, clientRepository, serverRepository);
            this.session.on("invoke", function (msg) { return _this.handleInvokeMessage(msg); });
        }
        ServerProtocol.prototype.createStream = function (repoMethod) {
            repoMethod.protocolState.subscriptionsMap = {};
            repoMethod.protocolState.branchKeyToStreamIdMap = [];
            return this.register(repoMethod, true);
        };
        ServerProtocol.prototype.register = function (repoMethod, isStreaming) {
            var _this = this;
            var _a;
            var methodDef = repoMethod.definition;
            var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });
            var registerMsg = {
                type: "register",
                methods: [{
                        id: repoMethod.repoId,
                        name: methodDef.name,
                        display_name: methodDef.displayName,
                        description: methodDef.description,
                        version: methodDef.version,
                        flags: flags,
                        object_types: methodDef.objectTypes || methodDef.object_types,
                        input_signature: methodDef.accepts,
                        result_signature: methodDef.returns,
                        restrictions: undefined,
                    }],
            };
            return this.session.send(registerMsg, { methodId: repoMethod.repoId })
                .then(function () {
                _this.logger.debug("registered method " + repoMethod.definition.name + " with id " + repoMethod.repoId);
            })
                .catch(function (msg) {
                _this.logger.warn("failed to register method " + repoMethod.definition.name + " with id " + repoMethod.repoId + " - " + JSON.stringify(msg));
                throw msg;
            });
        };
        ServerProtocol.prototype.onInvoked = function (callback) {
            this.callbacks.add("onInvoked", callback);
        };
        ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {
            var msg;
            if (err || err === "") {
                msg = {
                    type: "error",
                    request_id: invocationId,
                    reason_uri: "agm.errors.client_error",
                    reason: err,
                    context: result,
                    peer_id: undefined,
                };
            }
            else {
                msg = {
                    type: "yield",
                    invocation_id: invocationId,
                    peer_id: this.session.peerId,
                    result: result,
                    request_id: undefined,
                };
            }
            this.session.sendFireAndForget(msg);
        };
        ServerProtocol.prototype.unregister = function (method) {
            return __awaiter$2(this, void 0, void 0, function () {
                var msg;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            msg = {
                                type: "unregister",
                                methods: [method.repoId],
                            };
                            return [4, this.session.send(msg)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        ServerProtocol.prototype.getBranchList = function (method) {
            return this.streaming.getBranchList(method);
        };
        ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {
            return this.streaming.getSubscriptionList(method, branchKey);
        };
        ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {
            this.streaming.closeMultipleSubscriptions(method, branchKey);
        };
        ServerProtocol.prototype.pushData = function (method, data, branches) {
            this.streaming.pushData(method, data, branches);
        };
        ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {
            this.streaming.pushDataToSingle(method, subscription, data);
        };
        ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {
            this.streaming.closeSingleSubscription(method, subscription);
        };
        ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {
            this.streaming.acceptRequestOnBranch(requestContext, method, branch);
        };
        ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {
            this.streaming.rejectRequest(requestContext, method, reason);
        };
        ServerProtocol.prototype.onSubRequest = function (callback) {
            this.streaming.onSubRequest(callback);
        };
        ServerProtocol.prototype.onSubAdded = function (callback) {
            this.streaming.onSubAdded(callback);
        };
        ServerProtocol.prototype.onSubRemoved = function (callback) {
            this.streaming.onSubRemoved(callback);
        };
        ServerProtocol.prototype.handleInvokeMessage = function (msg) {
            var invocationId = msg.invocation_id;
            var callerId = msg.caller_id;
            var methodId = msg.method_id;
            var args = msg.arguments_kv;
            var methodList = this.serverRepository.getList();
            var method = methodList.filter(function (m) {
                return m.repoId === methodId;
            })[0];
            if (method === undefined) {
                return;
            }
            var client = this.clientRepository.getServerById(callerId).instance;
            var invocationArgs = { args: args, instance: client };
            this.callbacks.execute("onInvoked", method, invocationId, invocationArgs);
        };
        return ServerProtocol;
    }());

    var UserSubscription$1 = (function () {
        function UserSubscription(repository, subscriptionData) {
            this.repository = repository;
            this.subscriptionData = subscriptionData;
        }
        Object.defineProperty(UserSubscription.prototype, "requestArguments", {
            get: function () {
                return this.subscriptionData.params.arguments || {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "servers", {
            get: function () {
                var _this = this;
                return this.subscriptionData.trackedServers
                    .filter(function (pair) { return pair.subscriptionId; })
                    .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "serverInstance", {
            get: function () {
                return this.servers[0];
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "stream", {
            get: function () {
                return this.subscriptionData.method;
            },
            enumerable: true,
            configurable: true
        });
        UserSubscription.prototype.onData = function (dataCallback) {
            if (typeof dataCallback !== "function") {
                throw new TypeError("The data callback must be a function.");
            }
            this.subscriptionData.handlers.onData.push(dataCallback);
            if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {
                this.subscriptionData.queued.data.forEach(function (dataItem) {
                    dataCallback(dataItem);
                });
            }
        };
        UserSubscription.prototype.onClosed = function (closedCallback) {
            if (typeof closedCallback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onClosed.push(closedCallback);
        };
        UserSubscription.prototype.onFailed = function (callback) {
        };
        UserSubscription.prototype.onConnected = function (callback) {
            if (typeof callback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onConnected.push(callback);
        };
        UserSubscription.prototype.close = function () {
            this.subscriptionData.close();
        };
        UserSubscription.prototype.setNewSubscription = function (newSub) {
            this.subscriptionData = newSub;
        };
        return UserSubscription;
    }());

    var STATUS_AWAITING_ACCEPT$1 = "awaitingAccept";
    var STATUS_SUBSCRIBED$1 = "subscribed";
    var ERR_MSG_SUB_FAILED$1 = "Subscription failed.";
    var ERR_MSG_SUB_REJECTED$1 = "Subscription rejected.";
    var ON_CLOSE_MSG_SERVER_INIT$1 = "ServerInitiated";
    var ON_CLOSE_MSG_CLIENT_INIT$1 = "ClientInitiated";
    var ClientStreaming$1 = (function () {
        function ClientStreaming(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            this.nextSubLocalKey = 0;
            this.handleErrorSubscribing = function (errorResponse) {
                var tag = errorResponse._tag;
                var subLocalKey = tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                    return server.serverId !== tag.serverId;
                });
                if (pendingSub.trackedServers.length <= 0) {
                    clearTimeout(pendingSub.timeoutId);
                    if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {
                        var reason = (typeof errorResponse.reason === "string" && errorResponse.reason !== "") ?
                            ' Publisher said "' + errorResponse.reason + '".' :
                            " No reason given.";
                        var callArgs = typeof pendingSub.params.arguments === "object" ?
                            JSON.stringify(pendingSub.params.arguments) :
                            "{}";
                        pendingSub.error({
                            message: ERR_MSG_SUB_REJECTED$1 + reason + " Called with:" + callArgs,
                            called_with: pendingSub.params.arguments,
                            method: pendingSub.method,
                        });
                    }
                    else if (pendingSub.status === STATUS_SUBSCRIBED$1) {
                        _this.callOnClosedHandlers(pendingSub);
                    }
                    delete _this.subscriptionsList[subLocalKey];
                }
            };
            this.handleSubscribed = function (msg) {
                var subLocalKey = msg._tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                var serverId = msg._tag.serverId;
                var acceptingServer = pendingSub.trackedServers
                    .filter(function (server) {
                    return server.serverId === serverId;
                })[0];
                if (typeof acceptingServer !== "object") {
                    return;
                }
                acceptingServer.subscriptionId = msg.subscription_id;
                _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;
                var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT$1);
                pendingSub.status = STATUS_SUBSCRIBED$1;
                if (isFirstResponse) {
                    var reconnect = false;
                    var sub = pendingSub.subscription;
                    if (sub) {
                        sub.setNewSubscription(pendingSub);
                        pendingSub.success(sub);
                        reconnect = true;
                    }
                    else {
                        sub = new UserSubscription$1(_this.repository, pendingSub);
                        pendingSub.subscription = sub;
                        pendingSub.success(sub);
                    }
                    for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {
                        var handler = _a[_i];
                        try {
                            handler(sub.serverInstance, reconnect);
                        }
                        catch (e) {
                        }
                    }
                }
            };
            this.handleEventData = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var trackedServersFound = subscription.trackedServers.filter(function (server) {
                    return server.subscriptionId === msg.subscription_id;
                });
                if (trackedServersFound.length !== 1) {
                    return;
                }
                var isPrivateData = msg.oob;
                var sendingServerId = trackedServersFound[0].serverId;
                var receivedStreamData = function () {
                    return {
                        data: msg.data,
                        server: _this.repository.getServerById(sendingServerId).instance,
                        requestArguments: subscription.params.arguments,
                        message: undefined,
                        private: isPrivateData,
                    };
                };
                var onDataHandlers = subscription.handlers.onData;
                var queuedData = subscription.queued.data;
                if (onDataHandlers.length > 0) {
                    onDataHandlers.forEach(function (callback) {
                        if (typeof callback === "function") {
                            callback(receivedStreamData());
                        }
                    });
                }
                else {
                    queuedData.push(receivedStreamData());
                }
            };
            this.handleSubscriptionCancelled = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var expectedNewLength = subscription.trackedServers.length - 1;
                subscription.trackedServers = subscription.trackedServers.filter(function (server) {
                    if (server.subscriptionId === msg.subscription_id) {
                        subscription.queued.closers.push(server.serverId);
                        return false;
                    }
                    else {
                        return true;
                    }
                });
                if (subscription.trackedServers.length !== expectedNewLength) {
                    return;
                }
                if (subscription.trackedServers.length <= 0) {
                    clearTimeout(subscription.timeoutId);
                    _this.callOnClosedHandlers(subscription);
                    delete _this.subscriptionsList[subLocalKey];
                }
                delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
            };
            session.on("subscribed", this.handleSubscribed);
            session.on("event", this.handleEventData);
            session.on("subscription-cancelled", this.handleSubscriptionCancelled);
        }
        ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {
            var _this = this;
            if (targetServers.length === 0) {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED$1 + " No available servers matched the target params.",
                });
                return;
            }
            var subLocalKey = this.getNextSubscriptionLocalKey();
            var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);
            if (typeof pendingSub !== "object") {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED$1 + " Unable to register the user callbacks.",
                });
                return;
            }
            targetServers.forEach(function (target) {
                var serverId = target.server.id;
                var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });
                if (!method) {
                    _this.logger.error("can not find method " + streamingMethod.name + " for target " + target.server.id);
                    return;
                }
                pendingSub.trackedServers.push({
                    serverId: serverId,
                    subscriptionId: undefined,
                });
                var msg = {
                    type: "subscribe",
                    server_id: serverId,
                    method_id: method.gatewayId,
                    arguments_kv: params.arguments,
                };
                _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })
                    .then(function (m) { return _this.handleSubscribed(m); })
                    .catch(function (err) { return _this.handleErrorSubscribing(err); });
            });
        };
        ClientStreaming.prototype.drainSubscriptions = function () {
            var existing = Object.values(this.subscriptionsList);
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            return existing;
        };
        ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {
            var current = this.nextSubLocalKey;
            this.nextSubLocalKey += 1;
            return current;
        };
        ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {
            var _this = this;
            var subsInfo = {
                localKey: subLocalKey,
                status: STATUS_AWAITING_ACCEPT$1,
                method: method,
                params: params,
                success: success,
                error: error,
                trackedServers: [],
                handlers: {
                    onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],
                    onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],
                    onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],
                },
                queued: {
                    data: [],
                    closers: [],
                },
                timeoutId: undefined,
                close: function () { return _this.closeSubscription(subLocalKey); },
                subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription
            };
            if (!existingSub) {
                if (params.onData) {
                    subsInfo.handlers.onData.push(params.onData);
                }
                if (params.onClosed) {
                    subsInfo.handlers.onClosed.push(params.onClosed);
                }
                if (params.onConnected) {
                    subsInfo.handlers.onConnected.push(params.onConnected);
                }
            }
            this.subscriptionsList[subLocalKey] = subsInfo;
            subsInfo.timeoutId = setTimeout(function () {
                if (_this.subscriptionsList[subLocalKey] === undefined) {
                    return;
                }
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {
                    error({
                        method: method,
                        called_with: params.arguments,
                        message: ERR_MSG_SUB_FAILED$1 + " Subscription attempt timed out after " + timeout + " ms.",
                    });
                    delete _this.subscriptionsList[subLocalKey];
                }
                else if (pendingSub.status === STATUS_SUBSCRIBED$1 && pendingSub.trackedServers.length > 0) {
                    pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                        return (typeof server.subscriptionId !== "undefined");
                    });
                    delete pendingSub.timeoutId;
                    if (pendingSub.trackedServers.length <= 0) {
                        _this.callOnClosedHandlers(pendingSub);
                        delete _this.subscriptionsList[subLocalKey];
                    }
                }
            }, timeout);
            return subsInfo;
        };
        ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {
            var closersCount = subscription.queued.closers.length;
            var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;
            var closingServer;
            if (closingServerId !== undefined && typeof closingServerId === "string") {
                closingServer = this.repository.getServerById(closingServerId).instance;
            }
            subscription.handlers.onClosed.forEach(function (callback) {
                if (typeof callback !== "function") {
                    return;
                }
                callback({
                    message: reason || ON_CLOSE_MSG_SERVER_INIT$1,
                    requestArguments: subscription.params.arguments || {},
                    server: closingServer,
                    stream: subscription.method,
                });
            });
        };
        ClientStreaming.prototype.closeSubscription = function (subLocalKey) {
            var _this = this;
            var subscription = this.subscriptionsList[subLocalKey];
            if (typeof subscription !== "object") {
                return;
            }
            subscription.trackedServers.forEach(function (server) {
                if (typeof server.subscriptionId === "undefined") {
                    return;
                }
                subscription.queued.closers.push(server.serverId);
                _this.session.sendFireAndForget({
                    type: "unsubscribe",
                    subscription_id: server.subscriptionId,
                    reason_uri: "",
                    reason: ON_CLOSE_MSG_CLIENT_INIT$1,
                });
                delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];
            });
            subscription.trackedServers = [];
            this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT$1);
            delete this.subscriptionsList[subLocalKey];
        };
        return ClientStreaming;
    }());

    var ClientProtocol$1 = (function () {
        function ClientProtocol(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            session.on("peer-added", function (msg) { return _this.handlePeerAdded(msg); });
            session.on("peer-removed", function (msg) { return _this.handlePeerRemoved(msg); });
            session.on("methods-added", function (msg) { return _this.handleMethodsAddedMessage(msg); });
            session.on("methods-removed", function (msg) { return _this.handleMethodsRemovedMessage(msg); });
            this.streaming = new ClientStreaming$1(session, repository, logger);
        }
        ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {
            this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);
        };
        ClientProtocol.prototype.invoke = function (id, method, args, target) {
            var _this = this;
            var serverId = target.id;
            var methodId = method.gatewayId;
            var msg = {
                type: "call",
                server_id: serverId,
                method_id: methodId,
                arguments_kv: args,
            };
            return this.session.send(msg, { invocationId: id, serverId: serverId })
                .then(function (m) { return _this.handleResultMessage(m); })
                .catch(function (err) { return _this.handleInvocationError(err); });
        };
        ClientProtocol.prototype.drainSubscriptions = function () {
            return this.streaming.drainSubscriptions();
        };
        ClientProtocol.prototype.handlePeerAdded = function (msg) {
            var newPeerId = msg.new_peer_id;
            var remoteId = msg.identity;
            var isLocal = msg.meta ? msg.meta.local : true;
            var pid = Number(remoteId.process);
            var serverInfo = {
                machine: remoteId.machine,
                pid: isNaN(pid) ? remoteId.process : pid,
                instance: remoteId.instance,
                application: remoteId.application,
                applicationName: remoteId.applicationName,
                environment: remoteId.environment,
                region: remoteId.region,
                user: remoteId.user,
                windowId: remoteId.windowId,
                peerId: newPeerId,
                api: remoteId.api,
                isLocal: isLocal
            };
            this.repository.addServer(serverInfo, newPeerId);
        };
        ClientProtocol.prototype.handlePeerRemoved = function (msg) {
            var removedPeerId = msg.removed_id;
            var reason = msg.reason;
            this.repository.removeServerById(removedPeerId, reason);
        };
        ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methods = msg.methods;
            methods.forEach(function (method) {
                _this.repository.addServerMethod(serverId, method);
            });
        };
        ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methodIdList = msg.methods;
            var server = this.repository.getServerById(serverId);
            var serverMethodKeys = Object.keys(server.methods);
            serverMethodKeys.forEach(function (methodKey) {
                var method = server.methods[methodKey];
                if (methodIdList.indexOf(method.gatewayId) > -1) {
                    _this.repository.removeServerMethod(serverId, methodKey);
                }
            });
        };
        ClientProtocol.prototype.handleResultMessage = function (msg) {
            var invocationId = msg._tag.invocationId;
            var result = msg.result;
            var serverId = msg._tag.serverId;
            var server = this.repository.getServerById(serverId);
            return {
                invocationId: invocationId,
                result: result,
                instance: server.instance,
                status: InvokeStatus$1.Success,
                message: ""
            };
        };
        ClientProtocol.prototype.handleInvocationError = function (msg) {
            this.logger.debug("handle invocation error " + JSON.stringify(msg));
            if ("_tag" in msg) {
                var invocationId = msg._tag.invocationId;
                var serverId = msg._tag.serverId;
                var server = this.repository.getServerById(serverId);
                var message = msg.reason;
                var context_1 = msg.context;
                return {
                    invocationId: invocationId,
                    result: context_1,
                    instance: server.instance,
                    status: InvokeStatus$1.Error,
                    message: message
                };
            }
            else {
                return {
                    invocationId: "",
                    message: msg.message,
                    status: InvokeStatus$1.Error,
                    error: msg
                };
            }
        };
        return ClientProtocol;
    }());

    function gW3ProtocolFactory$1 (instance, connection, clientRepository, serverRepository, libConfig, interop) {
        var logger = libConfig.logger.subLogger("gw3-protocol");
        var resolveReadyPromise;
        var readyPromise = new Promise(function (resolve) {
            resolveReadyPromise = resolve;
        });
        var session = connection.domain("agm", ["subscribed"]);
        var server = new ServerProtocol$1(session, clientRepository, serverRepository, logger.subLogger("server"));
        var client = new ClientProtocol$1(session, clientRepository, logger.subLogger("client"));
        function handleReconnect() {
            logger.info("reconnected - will replay registered methods and subscriptions");
            var existingSubscriptions = client.drainSubscriptions();
            for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {
                var sub = existingSubscriptions_1[_i];
                var methodInfo = sub.method;
                var params = Object.assign({}, sub.params);
                logger.info("trying to re-subscribe to method " + methodInfo.name);
                interop.client.subscribe(methodInfo, params, undefined, undefined, sub);
            }
            var registeredMethods = serverRepository.getList();
            serverRepository.reset();
            for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {
                var method = registeredMethods_1[_a];
                var def = method.definition;
                logger.info("re-publishing method " + def.name);
                if (method.stream) {
                    interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);
                }
                else if (method.theFunction && method.theFunction.userCallback) {
                    interop.register(def, method.theFunction.userCallback);
                }
                else if (method.theFunction && method.theFunction.userCallbackAsync) {
                    interop.registerAsync(def, method.theFunction.userCallbackAsync);
                }
            }
        }
        function handleInitialJoin() {
            if (resolveReadyPromise) {
                resolveReadyPromise({
                    client: client,
                    server: server,
                });
                resolveReadyPromise = undefined;
            }
        }
        session.onJoined(function (reconnect) {
            clientRepository.addServer(instance, connection.peerId);
            if (reconnect) {
                handleReconnect();
            }
            else {
                handleInitialJoin();
            }
        });
        session.onLeft(function () {
            clientRepository.reset();
        });
        session.join();
        return readyPromise;
    }

    var Interop$1 = (function () {
        function Interop(configuration) {
            var _this = this;
            if (typeof configuration === "undefined") {
                throw new Error("configuration is required");
            }
            if (typeof configuration.connection === "undefined") {
                throw new Error("configuration.connections is required");
            }
            var connection = configuration.connection;
            if (typeof configuration.methodResponseTimeout !== "number") {
                configuration.methodResponseTimeout = 30 * 1000;
            }
            if (typeof configuration.waitTimeoutMs !== "number") {
                configuration.waitTimeoutMs = 30 * 1000;
            }
            this.unwrappedInstance = new InstanceWrapper$1(this, undefined, connection);
            this.instance = this.unwrappedInstance.unwrap();
            this.clientRepository = new ClientRepository$1(configuration.logger.subLogger("cRep"), this);
            this.serverRepository = new ServerRepository$1();
            var protocolPromise;
            if (connection.protocolVersion === 3) {
                protocolPromise = gW3ProtocolFactory$1(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);
            }
            else {
                throw new Error("protocol " + connection.protocolVersion + " not supported");
            }
            this.readyPromise = protocolPromise.then(function (protocol) {
                _this.protocol = protocol;
                _this.client = new Client$1(_this.protocol, _this.clientRepository, _this.instance, configuration);
                _this.server = new Server$1(_this.protocol, _this.serverRepository);
                return _this;
            });
        }
        Interop.prototype.ready = function () {
            return this.readyPromise;
        };
        Interop.prototype.serverRemoved = function (callback) {
            return this.client.serverRemoved(callback);
        };
        Interop.prototype.serverAdded = function (callback) {
            return this.client.serverAdded(callback);
        };
        Interop.prototype.serverMethodRemoved = function (callback) {
            return this.client.serverMethodRemoved(callback);
        };
        Interop.prototype.serverMethodAdded = function (callback) {
            return this.client.serverMethodAdded(callback);
        };
        Interop.prototype.methodRemoved = function (callback) {
            return this.client.methodRemoved(callback);
        };
        Interop.prototype.methodAdded = function (callback) {
            return this.client.methodAdded(callback);
        };
        Interop.prototype.methodsForInstance = function (instance) {
            return this.client.methodsForInstance(instance);
        };
        Interop.prototype.methods = function (methodFilter) {
            return this.client.methods(methodFilter);
        };
        Interop.prototype.servers = function (methodFilter) {
            return this.client.servers(methodFilter);
        };
        Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {
            return this.client.subscribe(method, options, successCallback, errorCallback);
        };
        Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {
            return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);
        };
        Interop.prototype.unregister = function (methodFilter) {
            return this.server.unregister(methodFilter);
        };
        Interop.prototype.registerAsync = function (methodDefinition, callback) {
            return this.server.registerAsync(methodDefinition, callback);
        };
        Interop.prototype.register = function (methodDefinition, callback) {
            return this.server.register(methodDefinition, callback);
        };
        Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);
        };
        Interop.prototype.waitForMethod = function (name) {
            var pw = new PromiseWrapper$1();
            var unsubscribe = this.client.methodAdded(function (m) {
                if (m.name === name) {
                    unsubscribe();
                    pw.resolve(m);
                }
            });
            return pw.promise;
        };
        return Interop;
    }());

    var successMessages$1 = ["subscribed", "success"];
    var MessageBus$1 = (function () {
        function MessageBus(connection, logger) {
            var _this = this;
            this.publish = function (topic, data, options) {
                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                var args = _this.removeEmptyValues({
                    type: "publish",
                    topic: topic,
                    data: data,
                    peer_id: _this.peerId,
                    routing_key: routingKey,
                    target_identity: target
                });
                _this.session.send(args);
            };
            this.subscribe = function (topic, callback, options) {
                return new Promise(function (resolve, reject) {
                    var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                    var args = _this.removeEmptyValues({
                        type: "subscribe",
                        topic: topic,
                        peer_id: _this.peerId,
                        routing_key: routingKey,
                        source: target
                    });
                    _this.session.send(args)
                        .then(function (response) {
                        var subscription_id = response.subscription_id;
                        _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });
                        resolve({
                            unsubscribe: function () {
                                _this.session.send({ type: "unsubscribe", subscription_id: subscription_id, peer_id: _this.peerId });
                                _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });
                                return Promise.resolve();
                            }
                        });
                    })
                        .catch(function (error) { return reject(error); });
                });
            };
            this.watchOnEvent = function () {
                _this.session.on("event", function (args) {
                    var data = args.data, subscription_id = args.subscription_id;
                    var source = args["publisher-identity"];
                    var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });
                    if (subscription) {
                        if (!subscription.source) {
                            subscription.callback(data, subscription.topic, source);
                        }
                        else {
                            if (_this.keysMatch(subscription.source, source)) {
                                subscription.callback(data, subscription.topic, source);
                            }
                        }
                    }
                });
            };
            this.connection = connection;
            this.logger = logger;
            this.peerId = connection.peerId;
            this.subscriptions = [];
            this.session = connection.domain("bus", successMessages$1);
            this.readyPromise = this.session.join();
            this.readyPromise.then(function () {
                _this.watchOnEvent();
            });
        }
        MessageBus.prototype.ready = function () {
            return this.readyPromise;
        };
        MessageBus.prototype.removeEmptyValues = function (obj) {
            var cleaned = {};
            Object.keys(obj).forEach(function (key) {
                if (obj[key] !== undefined && obj[key] !== null) {
                    cleaned[key] = obj[key];
                }
            });
            return cleaned;
        };
        MessageBus.prototype.keysMatch = function (obj1, obj2) {
            var keysObj1 = Object.keys(obj1);
            var allMatch = true;
            keysObj1.forEach(function (key) {
                if (obj1[key] !== obj2[key]) {
                    allMatch = false;
                }
            });
            return allMatch;
        };
        return MessageBus;
    }());

    var GlueCore$1 = function (userConfig, ext) {
        var gdVersion = Utils$1.getGDMajorVersion();
        var glue42gd;
        var preloadPromise = Promise.resolve();
        if (gdVersion) {
            if (gdVersion < 3) {
                throw new Error("GD v2 is not supported. Use v4 of the API to run in that context.");
            }
            else if (gdVersion >= 3) {
                glue42gd = window.glue42gd;
                preloadPromise = window.gdPreloadPromise || preloadPromise;
            }
        }
        var glueInitTimer = timer$1("glue");
        userConfig = userConfig || {};
        ext = ext || {};
        var internalConfig = prepareConfig$1(userConfig, ext, glue42gd);
        var _connection;
        var _interop;
        var _logger;
        var _metrics;
        var _contexts;
        var _bus;
        var _allowTrace;
        var libs = {};
        function registerLib(name, inner, t) {
            _allowTrace = _logger.canPublish("trace");
            if (_allowTrace) {
                _logger.trace("registering " + name + " module");
            }
            var done = function () {
                inner.initTime = t.stop();
                inner.initEndTime = t.endTime;
                inner.marks = t.marks;
                if (_allowTrace) {
                    _logger.trace(name + " is ready - " + (t.endTime - t.startTime));
                }
            };
            inner.initStartTime = t.startTime;
            if (inner.ready) {
                inner.ready().then(function () {
                    done();
                });
            }
            else {
                done();
            }
            if (!Array.isArray(name)) {
                name = [name];
            }
            name.forEach(function (n) {
                libs[n] = inner;
                GlueCore$1[n] = inner;
            });
        }
        function setupConnection() {
            var initTimer = timer$1("connection");
            _connection = new Connection$1(internalConfig.connection, _logger.subLogger("connection"));
            var authPromise = Promise.resolve(internalConfig.auth);
            if (internalConfig.connection && !internalConfig.auth) {
                if (glue42gd) {
                    authPromise = glue42gd.getGWToken()
                        .then(function (token) {
                        return {
                            gatewayToken: token
                        };
                    });
                }
                else {
                    authPromise = Promise.reject("You need to provide auth information");
                }
            }
            return authPromise
                .then(function (authConfig) {
                initTimer.mark("auth-promise-resolved");
                var authRequest;
                if (Object.prototype.toString.call(authConfig) === "[object Object]") {
                    authRequest = authConfig;
                }
                else {
                    throw new Error("Invalid auth object - " + JSON.stringify(authConfig));
                }
                return _connection.login(authRequest);
            })
                .then(function () {
                registerLib("connection", _connection, initTimer);
                return internalConfig;
            })
                .catch(function (e) {
                if (_connection) {
                    _connection.logout();
                }
                throw e;
            });
        }
        function setupLogger() {
            var _a;
            var initTimer = timer$1("logger");
            _logger = new Logger$1("" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);
            _logger.consoleLevel(internalConfig.logger.console);
            _logger.publishLevel(internalConfig.logger.publish);
            if (_logger.canPublish("debug")) {
                _logger.debug("initializing glue...");
            }
            registerLib("logger", _logger, initTimer);
            return Promise.resolve(undefined);
        }
        function setupMetrics() {
            var _a, _b, _c, _d;
            var initTimer = timer$1("metrics");
            var config = internalConfig.metrics;
            var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;
            var identity = internalConfig.connection.identity;
            var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };
            var disableAutoAppSystem = (_a = (typeof config !== "boolean" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;
            _metrics = metrics$1({
                connection: config ? _connection : undefined,
                logger: _logger.subLogger("metrics"),
                canUpdateMetric: canUpdateMetric,
                system: "Glue42",
                service: (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : "metrics-service",
                instance: (_d = (_c = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _c !== void 0 ? _c : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _d !== void 0 ? _d : shortid$2(),
                disableAutoAppSystem: disableAutoAppSystem,
                pagePerformanceMetrics: typeof config !== "boolean" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined
            });
            registerLib("metrics", _metrics, initTimer);
            return Promise.resolve();
        }
        function setupInterop() {
            var initTimer = timer$1("interop");
            var agmConfig = {
                connection: _connection,
                logger: _logger.subLogger("interop"),
            };
            _interop = new Interop$1(agmConfig);
            Logger$1.Interop = _interop;
            registerLib(["interop", "agm"], _interop, initTimer);
            return Promise.resolve();
        }
        function setupContexts() {
            var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);
            var needsContexts = internalConfig.contexts || hasActivities;
            if (needsContexts) {
                var initTimer = timer$1("contexts");
                _contexts = new ContextsModule$1({
                    connection: _connection,
                    logger: _logger.subLogger("contexts")
                });
                registerLib("contexts", _contexts, initTimer);
                return _contexts;
            }
            else {
                var replayer = _connection.replayer;
                if (replayer) {
                    replayer.drain(ContextMessageReplaySpec$1.name);
                }
            }
        }
        function setupBus() {
            return __awaiter$2(this, void 0, void 0, function () {
                var initTimer;
                return __generator$1(this, function (_a) {
                    if (!internalConfig.bus) {
                        return [2, Promise.resolve()];
                    }
                    initTimer = timer$1("bus");
                    _bus = new MessageBus$1(_connection, _logger.subLogger("bus"));
                    registerLib("bus", _bus, initTimer);
                    return [2, Promise.resolve()];
                });
            });
        }
        function setupExternalLibs(externalLibs) {
            try {
                externalLibs.forEach(function (lib) {
                    setupExternalLib(lib.name, lib.create);
                });
                return Promise.resolve();
            }
            catch (e) {
                return Promise.reject(e);
            }
        }
        function setupExternalLib(name, createCallback) {
            var initTimer = timer$1(name);
            var lib = createCallback(libs);
            if (lib) {
                registerLib(name, lib, initTimer);
            }
        }
        function waitForLibs() {
            var libsReadyPromises = Object.keys(libs).map(function (key) {
                var lib = libs[key];
                return lib.ready ?
                    lib.ready() : Promise.resolve();
            });
            return Promise.all(libsReadyPromises);
        }
        function constructGlueObject() {
            var feedbackFunc = function (feedbackInfo) {
                if (!_interop) {
                    return;
                }
                _interop.invoke("T42.ACS.Feedback", feedbackInfo, "best");
            };
            var info = {
                coreVersion: version$4,
                version: internalConfig.version
            };
            glueInitTimer.stop();
            var glue = {
                feedback: feedbackFunc,
                info: info,
                logger: _logger,
                interop: _interop,
                agm: _interop,
                connection: _connection,
                metrics: _metrics,
                contexts: _contexts,
                bus: _bus,
                version: internalConfig.version,
                userConfig: userConfig,
                done: function () {
                    _logger === null || _logger === void 0 ? void 0 : _logger.info("done called by user...");
                    return _connection.logout();
                }
            };
            glue.performance = {
                get glueVer() {
                    return internalConfig.version;
                },
                get glueConfig() {
                    return JSON.stringify(userConfig);
                },
                get browser() {
                    return window.performance.timing.toJSON();
                },
                get memory() {
                    return window.performance.memory;
                },
                get initTimes() {
                    var all = getAllTimers$1();
                    return Object.keys(all).map(function (key) {
                        var t = all[key];
                        return {
                            name: key,
                            duration: t.endTime - t.startTime,
                            marks: t.marks
                        };
                    });
                }
            };
            Object.keys(libs).forEach(function (key) {
                var lib = libs[key];
                glue[key] = lib;
            });
            glue.config = {};
            Object.keys(internalConfig).forEach(function (k) {
                glue.config[k] = internalConfig[k];
            });
            if (ext && ext.extOptions) {
                Object.keys(ext.extOptions).forEach(function (k) {
                    glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];
                });
            }
            if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {
                ext.enrichGlue(glue);
            }
            if (glue42gd && glue42gd.updatePerfData) {
                glue42gd.updatePerfData(glue.performance);
            }
            if (glue.agm) {
                var deprecatedDecorator = function (fn, wrong, proper) {
                    return function () {
                        glue.logger.warn("glue.js - 'glue.agm." + wrong + "' method is deprecated, use 'glue.interop." + proper + "' instead.");
                        return fn.apply(glue.agm, arguments);
                    };
                };
                var agmAny = glue.agm;
                agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, "method_added", "methodAdded");
                agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, "method_removed", "methodRemoved");
                agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, "server_added", "serverAdded");
                agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, "server_method_aded", "serverMethodAdded");
                agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, "server_method_removed", "serverMethodRemoved");
            }
            return glue;
        }
        return preloadPromise
            .then(setupLogger)
            .then(setupConnection)
            .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })
            .then(function () { return _interop.readyPromise; })
            .then(function () {
            return setupExternalLibs(internalConfig.libs || []);
        })
            .then(waitForLibs)
            .then(constructGlueObject)
            .catch(function (err) {
            return Promise.reject({
                err: err,
                libs: libs
            });
        });
    };
    if (typeof window !== "undefined") {
        window.GlueCore = GlueCore$1;
    }
    GlueCore$1.version = version$4;
    GlueCore$1.default = GlueCore$1;

    const PromiseWrap$1 = (promise, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            let promiseActive = true;
            const timeout = setTimeout(() => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            promise()
                .then((result) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                reject(error);
            });
        });
    };
    const PromisePlus$3 = (executor, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            const timeout = setTimeout(() => {
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            const providedPromise = new Promise(executor);
            providedPromise
                .then((result) => {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var toStr = Object.prototype.toString;

    var isArguments = function isArguments(value) {
    	var str = toStr.call(value);
    	var isArgs = str === '[object Arguments]';
    	if (!isArgs) {
    		isArgs = str !== '[object Array]' &&
    			value !== null &&
    			typeof value === 'object' &&
    			typeof value.length === 'number' &&
    			value.length >= 0 &&
    			toStr.call(value.callee) === '[object Function]';
    	}
    	return isArgs;
    };

    var keysShim;
    if (!Object.keys) {
    	// modified from https://github.com/es-shims/es5-shim
    	var has = Object.prototype.hasOwnProperty;
    	var toStr$1 = Object.prototype.toString;
    	var isArgs = isArguments; // eslint-disable-line global-require
    	var isEnumerable = Object.prototype.propertyIsEnumerable;
    	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
    	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
    	var dontEnums = [
    		'toString',
    		'toLocaleString',
    		'valueOf',
    		'hasOwnProperty',
    		'isPrototypeOf',
    		'propertyIsEnumerable',
    		'constructor'
    	];
    	var equalsConstructorPrototype = function (o) {
    		var ctor = o.constructor;
    		return ctor && ctor.prototype === o;
    	};
    	var excludedKeys = {
    		$applicationCache: true,
    		$console: true,
    		$external: true,
    		$frame: true,
    		$frameElement: true,
    		$frames: true,
    		$innerHeight: true,
    		$innerWidth: true,
    		$onmozfullscreenchange: true,
    		$onmozfullscreenerror: true,
    		$outerHeight: true,
    		$outerWidth: true,
    		$pageXOffset: true,
    		$pageYOffset: true,
    		$parent: true,
    		$scrollLeft: true,
    		$scrollTop: true,
    		$scrollX: true,
    		$scrollY: true,
    		$self: true,
    		$webkitIndexedDB: true,
    		$webkitStorageInfo: true,
    		$window: true
    	};
    	var hasAutomationEqualityBug = (function () {
    		/* global window */
    		if (typeof window === 'undefined') { return false; }
    		for (var k in window) {
    			try {
    				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
    					try {
    						equalsConstructorPrototype(window[k]);
    					} catch (e) {
    						return true;
    					}
    				}
    			} catch (e) {
    				return true;
    			}
    		}
    		return false;
    	}());
    	var equalsConstructorPrototypeIfNotBuggy = function (o) {
    		/* global window */
    		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
    			return equalsConstructorPrototype(o);
    		}
    		try {
    			return equalsConstructorPrototype(o);
    		} catch (e) {
    			return false;
    		}
    	};

    	keysShim = function keys(object) {
    		var isObject = object !== null && typeof object === 'object';
    		var isFunction = toStr$1.call(object) === '[object Function]';
    		var isArguments = isArgs(object);
    		var isString = isObject && toStr$1.call(object) === '[object String]';
    		var theKeys = [];

    		if (!isObject && !isFunction && !isArguments) {
    			throw new TypeError('Object.keys called on a non-object');
    		}

    		var skipProto = hasProtoEnumBug && isFunction;
    		if (isString && object.length > 0 && !has.call(object, 0)) {
    			for (var i = 0; i < object.length; ++i) {
    				theKeys.push(String(i));
    			}
    		}

    		if (isArguments && object.length > 0) {
    			for (var j = 0; j < object.length; ++j) {
    				theKeys.push(String(j));
    			}
    		} else {
    			for (var name in object) {
    				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
    					theKeys.push(String(name));
    				}
    			}
    		}

    		if (hasDontEnumBug) {
    			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

    			for (var k = 0; k < dontEnums.length; ++k) {
    				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
    					theKeys.push(dontEnums[k]);
    				}
    			}
    		}
    		return theKeys;
    	};
    }
    var implementation = keysShim;

    var slice = Array.prototype.slice;


    var origKeys = Object.keys;
    var keysShim$1 = origKeys ? function keys(o) { return origKeys(o); } : implementation;

    var originalKeys = Object.keys;

    keysShim$1.shim = function shimObjectKeys() {
    	if (Object.keys) {
    		var keysWorksWithArguments = (function () {
    			// Safari 5.0 bug
    			var args = Object.keys(arguments);
    			return args && args.length === arguments.length;
    		}(1, 2));
    		if (!keysWorksWithArguments) {
    			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
    				if (isArguments(object)) {
    					return originalKeys(slice.call(object));
    				}
    				return originalKeys(object);
    			};
    		}
    	} else {
    		Object.keys = keysShim$1;
    	}
    	return Object.keys || keysShim$1;
    };

    var objectKeys = keysShim$1;

    /* eslint complexity: [2, 18], max-statements: [2, 33] */
    var shams = function hasSymbols() {
    	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
    	if (typeof Symbol.iterator === 'symbol') { return true; }

    	var obj = {};
    	var sym = Symbol('test');
    	var symObj = Object(sym);
    	if (typeof sym === 'string') { return false; }

    	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
    	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

    	// temp disabled per https://github.com/ljharb/object.assign/issues/17
    	// if (sym instanceof Symbol) { return false; }
    	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
    	// if (!(symObj instanceof Symbol)) { return false; }

    	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
    	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

    	var symVal = 42;
    	obj[sym] = symVal;
    	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax
    	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

    	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

    	var syms = Object.getOwnPropertySymbols(obj);
    	if (syms.length !== 1 || syms[0] !== sym) { return false; }

    	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

    	if (typeof Object.getOwnPropertyDescriptor === 'function') {
    		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
    		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
    	}

    	return true;
    };

    var origSymbol = commonjsGlobal.Symbol;


    var hasSymbols = function hasNativeSymbols() {
    	if (typeof origSymbol !== 'function') { return false; }
    	if (typeof Symbol !== 'function') { return false; }
    	if (typeof origSymbol('foo') !== 'symbol') { return false; }
    	if (typeof Symbol('bar') !== 'symbol') { return false; }

    	return shams();
    };

    /* eslint no-invalid-this: 1 */

    var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
    var slice$1 = Array.prototype.slice;
    var toStr$2 = Object.prototype.toString;
    var funcType = '[object Function]';

    var implementation$1 = function bind(that) {
        var target = this;
        if (typeof target !== 'function' || toStr$2.call(target) !== funcType) {
            throw new TypeError(ERROR_MESSAGE + target);
        }
        var args = slice$1.call(arguments, 1);

        var bound;
        var binder = function () {
            if (this instanceof bound) {
                var result = target.apply(
                    this,
                    args.concat(slice$1.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;
            } else {
                return target.apply(
                    that,
                    args.concat(slice$1.call(arguments))
                );
            }
        };

        var boundLength = Math.max(0, target.length - args.length);
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push('$' + i);
        }

        bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

        if (target.prototype) {
            var Empty = function Empty() {};
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            Empty.prototype = null;
        }

        return bound;
    };

    var functionBind = Function.prototype.bind || implementation$1;

    var src = functionBind.call(Function.call, Object.prototype.hasOwnProperty);

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$1;

    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
    	try {
    		$gOPD({}, '');
    	} catch (e) {
    		$gOPD = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError = function () {
    	throw new $TypeError();
    };
    var ThrowTypeError = $gOPD
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError;
    			}
    		}
    	}())
    	: throwTypeError;

    var hasSymbols$1 = hasSymbols();

    var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction = getEvalledConstructor('async function* () {}');
    var asyncGenFunctionPrototype = asyncGenFunction ? asyncGenFunction.prototype : undefined$1;
    var asyncGenPrototype = asyncGenFunctionPrototype ? asyncGenFunctionPrototype.prototype : undefined$1;

    var TypedArray = typeof Uint8Array === 'undefined' ? undefined$1 : getProto(Uint8Array);

    var INTRINSICS = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$1 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$1 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$1 ? getProto([][Symbol.iterator]()) : undefined$1,
    	'%AsyncFromSyncIteratorPrototype%': undefined$1,
    	'%AsyncFunction%': getEvalledConstructor('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype,
    	'%AsyncGeneratorFunction%': asyncGenFunction,
    	'%AsyncIteratorPrototype%': asyncGenPrototype ? getProto(asyncGenPrototype) : undefined$1,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$1 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$1 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$1 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$1 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$1 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$1 : FinalizationRegistry,
    	'%Function%': $Function,
    	'%GeneratorFunction%': getEvalledConstructor('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$1 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$1 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$1 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$1 ? getProto(getProto([][Symbol.iterator]())) : undefined$1,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$1,
    	'%Map%': typeof Map === 'undefined' ? undefined$1 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$1 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$1 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$1 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$1 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$1 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$1 ? getProto(''[Symbol.iterator]()) : undefined$1,
    	'%Symbol%': hasSymbols$1 ? Symbol : undefined$1,
    	'%SyntaxError%': $SyntaxError,
    	'%ThrowTypeError%': ThrowTypeError,
    	'%TypedArray%': TypedArray,
    	'%TypeError%': $TypeError,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$1 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$1 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$1 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$1 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$1 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$1 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$1 : WeakSet
    };

    var LEGACY_ALIASES = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace = functionBind.call(Function.call, String.prototype.replace);
    var $strSlice = functionBind.call(Function.call, String.prototype.slice);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath = function stringToPath(string) {
    	var first = $strSlice(string, 0, 1);
    	var last = $strSlice(string, -1);
    	if (first === '%' && last !== '%') {
    		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    	} else if (last === '%' && first !== '%') {
    		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    	}
    	var result = [];
    	$replace(string, rePropName, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES, intrinsicName)) {
    		alias = LEGACY_ALIASES[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS, intrinsicName)) {
    		var value = INTRINSICS[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
    };

    var getIntrinsic = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply(parts, $concat([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		var first = $strSlice(part, 0, 1);
    		var last = $strSlice(part, -1);
    		if (
    			(
    				(first === '"' || first === "'" || first === '`')
    				|| (last === '"' || last === "'" || last === '`')
    			)
    			&& first !== last
    		) {
    			throw new $SyntaxError('property names with quotes must have matching quotes');
    		}
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS, intrinsicRealName)) {
    			value = INTRINSICS[intrinsicRealName];
    		} else if (value != null) {
    			if (!(part in value)) {
    				if (!allowMissing) {
    					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				return void undefined$1;
    			}
    			if ($gOPD && (i + 1) >= parts.length) {
    				var desc = $gOPD(value, part);
    				isOwn = !!desc;

    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var callBind = createCommonjsModule$1(function (module) {




    var $apply = getIntrinsic('%Function.prototype.apply%');
    var $call = getIntrinsic('%Function.prototype.call%');
    var $reflectApply = getIntrinsic('%Reflect.apply%', true) || functionBind.call($call, $apply);

    var $gOPD = getIntrinsic('%Object.getOwnPropertyDescriptor%', true);
    var $defineProperty = getIntrinsic('%Object.defineProperty%', true);
    var $max = getIntrinsic('%Math.max%');

    if ($defineProperty) {
    	try {
    		$defineProperty({}, 'a', { value: 1 });
    	} catch (e) {
    		// IE 8 has a broken defineProperty
    		$defineProperty = null;
    	}
    }

    module.exports = function callBind(originalFunction) {
    	var func = $reflectApply(functionBind, $call, arguments);
    	if ($gOPD && $defineProperty) {
    		var desc = $gOPD(func, 'length');
    		if (desc.configurable) {
    			// original length, plus the receiver, minus any additional arguments (after the receiver)
    			$defineProperty(
    				func,
    				'length',
    				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
    			);
    		}
    	}
    	return func;
    };

    var applyBind = function applyBind() {
    	return $reflectApply(functionBind, $apply, arguments);
    };

    if ($defineProperty) {
    	$defineProperty(module.exports, 'apply', { value: applyBind });
    } else {
    	module.exports.apply = applyBind;
    }
    });

    var $indexOf = callBind(getIntrinsic('String.prototype.indexOf'));

    var callBound = function callBoundIntrinsic(name, allowMissing) {
    	var intrinsic = getIntrinsic(name, !!allowMissing);
    	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
    		return callBind(intrinsic);
    	}
    	return intrinsic;
    };

    var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';


    var $toString = callBound('Object.prototype.toString');

    var isStandardArguments = function isArguments(value) {
    	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
    		return false;
    	}
    	return $toString(value) === '[object Arguments]';
    };

    var isLegacyArguments = function isArguments(value) {
    	if (isStandardArguments(value)) {
    		return true;
    	}
    	return value !== null &&
    		typeof value === 'object' &&
    		typeof value.length === 'number' &&
    		value.length >= 0 &&
    		$toString(value) !== '[object Array]' &&
    		$toString(value.callee) === '[object Function]';
    };

    var supportsStandardArguments = (function () {
    	return isStandardArguments(arguments);
    }());

    isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

    var isArguments$1 = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

    var hasSymbols$2 = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

    var toStr$3 = Object.prototype.toString;
    var concat = Array.prototype.concat;
    var origDefineProperty = Object.defineProperty;

    var isFunction = function (fn) {
    	return typeof fn === 'function' && toStr$3.call(fn) === '[object Function]';
    };

    var arePropertyDescriptorsSupported = function () {
    	var obj = {};
    	try {
    		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
    		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
    		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
    			return false;
    		}
    		return obj.x === obj;
    	} catch (e) { /* this is IE 8. */
    		return false;
    	}
    };
    var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

    var defineProperty = function (object, name, value, predicate) {
    	if (name in object && (!isFunction(predicate) || !predicate())) {
    		return;
    	}
    	if (supportsDescriptors) {
    		origDefineProperty(object, name, {
    			configurable: true,
    			enumerable: false,
    			value: value,
    			writable: true
    		});
    	} else {
    		object[name] = value;
    	}
    };

    var defineProperties = function (object, map) {
    	var predicates = arguments.length > 2 ? arguments[2] : {};
    	var props = objectKeys(map);
    	if (hasSymbols$2) {
    		props = concat.call(props, Object.getOwnPropertySymbols(map));
    	}
    	for (var i = 0; i < props.length; i += 1) {
    		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
    	}
    };

    defineProperties.supportsDescriptors = !!supportsDescriptors;

    var defineProperties_1 = defineProperties;

    var numberIsNaN = function (value) {
    	return value !== value;
    };

    var implementation$2 = function is(a, b) {
    	if (a === 0 && b === 0) {
    		return 1 / a === 1 / b;
    	}
    	if (a === b) {
    		return true;
    	}
    	if (numberIsNaN(a) && numberIsNaN(b)) {
    		return true;
    	}
    	return false;
    };

    var polyfill = function getPolyfill() {
    	return typeof Object.is === 'function' ? Object.is : implementation$2;
    };

    var shim = function shimObjectIs() {
    	var polyfill$1 = polyfill();
    	defineProperties_1(Object, { is: polyfill$1 }, {
    		is: function testObjectIs() {
    			return Object.is !== polyfill$1;
    		}
    	});
    	return polyfill$1;
    };

    var polyfill$1 = callBind(polyfill(), Object);

    defineProperties_1(polyfill$1, {
    	getPolyfill: polyfill,
    	implementation: implementation$2,
    	shim: shim
    });

    var objectIs = polyfill$1;

    var hasSymbols$3 = hasSymbols();
    var hasToStringTag$1 = hasSymbols$3 && typeof Symbol.toStringTag === 'symbol';
    var hasOwnProperty;
    var regexExec;
    var isRegexMarker;
    var badStringifier;

    if (hasToStringTag$1) {
    	hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);
    	regexExec = Function.call.bind(RegExp.prototype.exec);
    	isRegexMarker = {};

    	var throwRegexMarker = function () {
    		throw isRegexMarker;
    	};
    	badStringifier = {
    		toString: throwRegexMarker,
    		valueOf: throwRegexMarker
    	};

    	if (typeof Symbol.toPrimitive === 'symbol') {
    		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
    	}
    }

    var toStr$4 = Object.prototype.toString;
    var gOPD = Object.getOwnPropertyDescriptor;
    var regexClass = '[object RegExp]';

    var isRegex = hasToStringTag$1
    	// eslint-disable-next-line consistent-return
    	? function isRegex(value) {
    		if (!value || typeof value !== 'object') {
    			return false;
    		}

    		var descriptor = gOPD(value, 'lastIndex');
    		var hasLastIndexDataProperty = descriptor && hasOwnProperty(descriptor, 'value');
    		if (!hasLastIndexDataProperty) {
    			return false;
    		}

    		try {
    			regexExec(value, badStringifier);
    		} catch (e) {
    			return e === isRegexMarker;
    		}
    	}
    	: function isRegex(value) {
    		// In older browsers, typeof regex incorrectly returns 'function'
    		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
    			return false;
    		}

    		return toStr$4.call(value) === regexClass;
    	};

    /* globals
    	Atomics,
    	SharedArrayBuffer,
    */

    var undefined$2;

    var $TypeError$1 = TypeError;

    var $gOPD$1 = Object.getOwnPropertyDescriptor;
    if ($gOPD$1) {
    	try {
    		$gOPD$1({}, '');
    	} catch (e) {
    		$gOPD$1 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$1 = function () { throw new $TypeError$1(); };
    var ThrowTypeError$1 = $gOPD$1
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$1;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$1(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$1;
    			}
    		}
    	}())
    	: throwTypeError$1;

    var hasSymbols$4 = hasSymbols();

    var getProto$1 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto
    var generatorFunction =  undefined$2;
    var asyncFunction =  undefined$2;
    var asyncGenFunction$1 =  undefined$2;

    var TypedArray$1 = typeof Uint8Array === 'undefined' ? undefined$2 : getProto$1(Uint8Array);

    var INTRINSICS$1 = {
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$2 : ArrayBuffer,
    	'%ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined$2 : ArrayBuffer.prototype,
    	'%ArrayIteratorPrototype%': hasSymbols$4 ? getProto$1([][Symbol.iterator]()) : undefined$2,
    	'%ArrayPrototype%': Array.prototype,
    	'%ArrayProto_entries%': Array.prototype.entries,
    	'%ArrayProto_forEach%': Array.prototype.forEach,
    	'%ArrayProto_keys%': Array.prototype.keys,
    	'%ArrayProto_values%': Array.prototype.values,
    	'%AsyncFromSyncIteratorPrototype%': undefined$2,
    	'%AsyncFunction%': asyncFunction,
    	'%AsyncFunctionPrototype%':  undefined$2,
    	'%AsyncGenerator%':  undefined$2,
    	'%AsyncGeneratorFunction%': asyncGenFunction$1,
    	'%AsyncGeneratorPrototype%':  undefined$2,
    	'%AsyncIteratorPrototype%':  undefined$2,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$2 : Atomics,
    	'%Boolean%': Boolean,
    	'%BooleanPrototype%': Boolean.prototype,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$2 : DataView,
    	'%DataViewPrototype%': typeof DataView === 'undefined' ? undefined$2 : DataView.prototype,
    	'%Date%': Date,
    	'%DatePrototype%': Date.prototype,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%ErrorPrototype%': Error.prototype,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%EvalErrorPrototype%': EvalError.prototype,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$2 : Float32Array,
    	'%Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined$2 : Float32Array.prototype,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$2 : Float64Array,
    	'%Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined$2 : Float64Array.prototype,
    	'%Function%': Function,
    	'%FunctionPrototype%': Function.prototype,
    	'%Generator%':  undefined$2,
    	'%GeneratorFunction%': generatorFunction,
    	'%GeneratorPrototype%':  undefined$2,
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$2 : Int8Array,
    	'%Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined$2 : Int8Array.prototype,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$2 : Int16Array,
    	'%Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined$2 : Int8Array.prototype,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$2 : Int32Array,
    	'%Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined$2 : Int32Array.prototype,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$4 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$2,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$2,
    	'%JSONParse%': typeof JSON === 'object' ? JSON.parse : undefined$2,
    	'%Map%': typeof Map === 'undefined' ? undefined$2 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$4 ? undefined$2 : getProto$1(new Map()[Symbol.iterator]()),
    	'%MapPrototype%': typeof Map === 'undefined' ? undefined$2 : Map.prototype,
    	'%Math%': Math,
    	'%Number%': Number,
    	'%NumberPrototype%': Number.prototype,
    	'%Object%': Object,
    	'%ObjectPrototype%': Object.prototype,
    	'%ObjProto_toString%': Object.prototype.toString,
    	'%ObjProto_valueOf%': Object.prototype.valueOf,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$2 : Promise,
    	'%PromisePrototype%': typeof Promise === 'undefined' ? undefined$2 : Promise.prototype,
    	'%PromiseProto_then%': typeof Promise === 'undefined' ? undefined$2 : Promise.prototype.then,
    	'%Promise_all%': typeof Promise === 'undefined' ? undefined$2 : Promise.all,
    	'%Promise_reject%': typeof Promise === 'undefined' ? undefined$2 : Promise.reject,
    	'%Promise_resolve%': typeof Promise === 'undefined' ? undefined$2 : Promise.resolve,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$2 : Proxy,
    	'%RangeError%': RangeError,
    	'%RangeErrorPrototype%': RangeError.prototype,
    	'%ReferenceError%': ReferenceError,
    	'%ReferenceErrorPrototype%': ReferenceError.prototype,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$2 : Reflect,
    	'%RegExp%': RegExp,
    	'%RegExpPrototype%': RegExp.prototype,
    	'%Set%': typeof Set === 'undefined' ? undefined$2 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$4 ? undefined$2 : getProto$1(new Set()[Symbol.iterator]()),
    	'%SetPrototype%': typeof Set === 'undefined' ? undefined$2 : Set.prototype,
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$2 : SharedArrayBuffer,
    	'%SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined$2 : SharedArrayBuffer.prototype,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$4 ? getProto$1(''[Symbol.iterator]()) : undefined$2,
    	'%StringPrototype%': String.prototype,
    	'%Symbol%': hasSymbols$4 ? Symbol : undefined$2,
    	'%SymbolPrototype%': hasSymbols$4 ? Symbol.prototype : undefined$2,
    	'%SyntaxError%': SyntaxError,
    	'%SyntaxErrorPrototype%': SyntaxError.prototype,
    	'%ThrowTypeError%': ThrowTypeError$1,
    	'%TypedArray%': TypedArray$1,
    	'%TypedArrayPrototype%': TypedArray$1 ? TypedArray$1.prototype : undefined$2,
    	'%TypeError%': $TypeError$1,
    	'%TypeErrorPrototype%': $TypeError$1.prototype,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$2 : Uint8Array,
    	'%Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined$2 : Uint8Array.prototype,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$2 : Uint8ClampedArray,
    	'%Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined$2 : Uint8ClampedArray.prototype,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$2 : Uint16Array,
    	'%Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined$2 : Uint16Array.prototype,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$2 : Uint32Array,
    	'%Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined$2 : Uint32Array.prototype,
    	'%URIError%': URIError,
    	'%URIErrorPrototype%': URIError.prototype,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$2 : WeakMap,
    	'%WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined$2 : WeakMap.prototype,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$2 : WeakSet,
    	'%WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined$2 : WeakSet.prototype
    };


    var $replace$1 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$1 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$1 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$1 = function stringToPath(string) {
    	var result = [];
    	$replace$1(string, rePropName$1, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$1(subString, reEscapeChar$1, '$1') : (number || match);
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$1 = function getBaseIntrinsic(name, allowMissing) {
    	if (!(name in INTRINSICS$1)) {
    		throw new SyntaxError('intrinsic ' + name + ' does not exist!');
    	}

    	// istanbul ignore if // hopefully this is impossible to test :-)
    	if (typeof INTRINSICS$1[name] === 'undefined' && !allowMissing) {
    		throw new $TypeError$1('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    	}

    	return INTRINSICS$1[name];
    };

    var GetIntrinsic = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new TypeError('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new TypeError('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$1(name);

    	var value = getBaseIntrinsic$1('%' + (parts.length > 0 ? parts[0] : '') + '%', allowMissing);
    	for (var i = 1; i < parts.length; i += 1) {
    		if (value != null) {
    			if ($gOPD$1 && (i + 1) >= parts.length) {
    				var desc = $gOPD$1(value, parts[i]);
    				if (!allowMissing && !(parts[i] in value)) {
    					throw new $TypeError$1('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				value = desc && 'get' in desc && !('originalValue' in desc.get) ? desc.get : value[parts[i]];
    			} else {
    				value = value[parts[i]];
    			}
    		}
    	}
    	return value;
    };

    var callBind$1 = createCommonjsModule$1(function (module) {





    var $apply = GetIntrinsic('%Function.prototype.apply%');
    var $call = GetIntrinsic('%Function.prototype.call%');
    var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || functionBind.call($call, $apply);

    var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

    if ($defineProperty) {
    	try {
    		$defineProperty({}, 'a', { value: 1 });
    	} catch (e) {
    		// IE 8 has a broken defineProperty
    		$defineProperty = null;
    	}
    }

    module.exports = function callBind() {
    	return $reflectApply(functionBind, $call, arguments);
    };

    var applyBind = function applyBind() {
    	return $reflectApply(functionBind, $apply, arguments);
    };

    if ($defineProperty) {
    	$defineProperty(module.exports, 'apply', { value: applyBind });
    } else {
    	module.exports.apply = applyBind;
    }
    });

    var $Object = Object;
    var $TypeError$2 = TypeError;

    var implementation$3 = function flags() {
    	if (this != null && this !== $Object(this)) {
    		throw new $TypeError$2('RegExp.prototype.flags getter called on non-object');
    	}
    	var result = '';
    	if (this.global) {
    		result += 'g';
    	}
    	if (this.ignoreCase) {
    		result += 'i';
    	}
    	if (this.multiline) {
    		result += 'm';
    	}
    	if (this.dotAll) {
    		result += 's';
    	}
    	if (this.unicode) {
    		result += 'u';
    	}
    	if (this.sticky) {
    		result += 'y';
    	}
    	return result;
    };

    var supportsDescriptors$1 = defineProperties_1.supportsDescriptors;
    var $gOPD$2 = Object.getOwnPropertyDescriptor;
    var $TypeError$3 = TypeError;

    var polyfill$2 = function getPolyfill() {
    	if (!supportsDescriptors$1) {
    		throw new $TypeError$3('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    	}
    	if ((/a/mig).flags === 'gim') {
    		var descriptor = $gOPD$2(RegExp.prototype, 'flags');
    		if (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {
    			return descriptor.get;
    		}
    	}
    	return implementation$3;
    };

    var supportsDescriptors$2 = defineProperties_1.supportsDescriptors;

    var gOPD$1 = Object.getOwnPropertyDescriptor;
    var defineProperty$1 = Object.defineProperty;
    var TypeErr = TypeError;
    var getProto$2 = Object.getPrototypeOf;
    var regex = /a/;

    var shim$1 = function shimFlags() {
    	if (!supportsDescriptors$2 || !getProto$2) {
    		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    	}
    	var polyfill = polyfill$2();
    	var proto = getProto$2(regex);
    	var descriptor = gOPD$1(proto, 'flags');
    	if (!descriptor || descriptor.get !== polyfill) {
    		defineProperty$1(proto, 'flags', {
    			configurable: true,
    			enumerable: false,
    			get: polyfill
    		});
    	}
    	return polyfill;
    };

    var flagsBound = callBind$1(implementation$3);

    defineProperties_1(flagsBound, {
    	getPolyfill: polyfill$2,
    	implementation: implementation$3,
    	shim: shim$1
    });

    var regexp_prototype_flags = flagsBound;

    var toString = {}.toString;

    var isarray = Array.isArray || function (arr) {
      return toString.call(arr) == '[object Array]';
    };

    var getDay = Date.prototype.getDay;
    var tryDateObject = function tryDateGetDayCall(value) {
    	try {
    		getDay.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };

    var toStr$5 = Object.prototype.toString;
    var dateClass = '[object Date]';
    var hasToStringTag$2 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isDateObject = function isDateObject(value) {
    	if (typeof value !== 'object' || value === null) {
    		return false;
    	}
    	return hasToStringTag$2 ? tryDateObject(value) : toStr$5.call(value) === dateClass;
    };

    var strValue = String.prototype.valueOf;
    var tryStringObject = function tryStringObject(value) {
    	try {
    		strValue.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var toStr$6 = Object.prototype.toString;
    var strClass = '[object String]';
    var hasToStringTag$3 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isString = function isString(value) {
    	if (typeof value === 'string') {
    		return true;
    	}
    	if (typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$3 ? tryStringObject(value) : toStr$6.call(value) === strClass;
    };

    var numToStr = Number.prototype.toString;
    var tryNumberObject = function tryNumberObject(value) {
    	try {
    		numToStr.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var toStr$7 = Object.prototype.toString;
    var numClass = '[object Number]';
    var hasToStringTag$4 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isNumberObject = function isNumberObject(value) {
    	if (typeof value === 'number') {
    		return true;
    	}
    	if (typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$4 ? tryNumberObject(value) : toStr$7.call(value) === numClass;
    };

    var $boolToStr = callBound('Boolean.prototype.toString');
    var $toString$1 = callBound('Object.prototype.toString');

    var tryBooleanObject = function booleanBrandCheck(value) {
    	try {
    		$boolToStr(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var boolClass = '[object Boolean]';
    var hasToStringTag$5 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isBooleanObject = function isBoolean(value) {
    	if (typeof value === 'boolean') {
    		return true;
    	}
    	if (value === null || typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$5 && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString$1(value) === boolClass;
    };

    var isSymbol = createCommonjsModule$1(function (module) {

    var toStr = Object.prototype.toString;
    var hasSymbols$1 = hasSymbols();

    if (hasSymbols$1) {
    	var symToStr = Symbol.prototype.toString;
    	var symStringRegex = /^Symbol\(.*\)$/;
    	var isSymbolObject = function isRealSymbolObject(value) {
    		if (typeof value.valueOf() !== 'symbol') {
    			return false;
    		}
    		return symStringRegex.test(symToStr.call(value));
    	};

    	module.exports = function isSymbol(value) {
    		if (typeof value === 'symbol') {
    			return true;
    		}
    		if (toStr.call(value) !== '[object Symbol]') {
    			return false;
    		}
    		try {
    			return isSymbolObject(value);
    		} catch (e) {
    			return false;
    		}
    	};
    } else {

    	module.exports = function isSymbol(value) {
    		// this environment does not support Symbols.
    		return false ;
    	};
    }
    });

    var isBigint = createCommonjsModule$1(function (module) {

    if (typeof BigInt === 'function') {
    	var bigIntValueOf = BigInt.prototype.valueOf;
    	var tryBigInt = function tryBigIntObject(value) {
    		try {
    			bigIntValueOf.call(value);
    			return true;
    		} catch (e) {
    		}
    		return false;
    	};

    	module.exports = function isBigInt(value) {
    		if (
    			value === null
    			|| typeof value === 'undefined'
    			|| typeof value === 'boolean'
    			|| typeof value === 'string'
    			|| typeof value === 'number'
    			|| typeof value === 'symbol'
    			|| typeof value === 'function'
    		) {
    			return false;
    		}
    		if (typeof value === 'bigint') {
    			return true;
    		}

    		return tryBigInt(value);
    	};
    } else {
    	module.exports = function isBigInt(value) {
    		return false ;
    	};
    }
    });

    // eslint-disable-next-line consistent-return
    var whichBoxedPrimitive = function whichBoxedPrimitive(value) {
    	// eslint-disable-next-line eqeqeq
    	if (value == null || (typeof value !== 'object' && typeof value !== 'function')) {
    		return null;
    	}
    	if (isString(value)) {
    		return 'String';
    	}
    	if (isNumberObject(value)) {
    		return 'Number';
    	}
    	if (isBooleanObject(value)) {
    		return 'Boolean';
    	}
    	if (isSymbol(value)) {
    		return 'Symbol';
    	}
    	if (isBigint(value)) {
    		return 'BigInt';
    	}
    };

    var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
    var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

    var exported;

    if (!$Map) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isMap(x) {
    		// `Map` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas = $Map ? Map.prototype.has : null;
    var $setHas = $Set ? Set.prototype.has : null;
    if (!exported && !$mapHas) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isMap(x) {
    		// `Map` does not have a `has` method
    		return false;
    	};
    }

    var isMap = exported || function isMap(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$mapHas.call(x);
    		if ($setHas) {
    			try {
    				$setHas.call(x);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $Map; // core-js workaround, pre-v2.5.0
    	} catch (e) {}
    	return false;
    };

    var $Map$1 = typeof Map === 'function' && Map.prototype ? Map : null;
    var $Set$1 = typeof Set === 'function' && Set.prototype ? Set : null;

    var exported$1;

    if (!$Set$1) {
    	// eslint-disable-next-line no-unused-vars
    	exported$1 = function isSet(x) {
    		// `Set` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas$1 = $Map$1 ? Map.prototype.has : null;
    var $setHas$1 = $Set$1 ? Set.prototype.has : null;
    if (!exported$1 && !$setHas$1) {
    	// eslint-disable-next-line no-unused-vars
    	exported$1 = function isSet(x) {
    		// `Set` does not have a `has` method
    		return false;
    	};
    }

    var isSet = exported$1 || function isSet(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$setHas$1.call(x);
    		if ($mapHas$1) {
    			try {
    				$mapHas$1.call(x);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $Set$1; // core-js workaround, pre-v2.5.0
    	} catch (e) {}
    	return false;
    };

    var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
    var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

    var exported$2;

    if (!$WeakMap) {
    	// eslint-disable-next-line no-unused-vars
    	exported$2 = function isWeakMap(x) {
    		// `WeakMap` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas$2 = $WeakMap ? $WeakMap.prototype.has : null;
    var $setHas$2 = $WeakSet ? $WeakSet.prototype.has : null;
    if (!exported$2 && !$mapHas$2) {
    	// eslint-disable-next-line no-unused-vars
    	exported$2 = function isWeakMap(x) {
    		// `WeakMap` does not have a `has` method
    		return false;
    	};
    }

    var isWeakmap = exported$2 || function isWeakMap(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$mapHas$2.call(x, $mapHas$2);
    		if ($setHas$2) {
    			try {
    				$setHas$2.call(x, $setHas$2);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $WeakMap; // core-js workaround, pre-v3
    	} catch (e) {}
    	return false;
    };

    var isWeakset = createCommonjsModule$1(function (module) {

    var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
    var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

    var exported;

    if (!$WeakMap) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isWeakSet(x) {
    		// `WeakSet` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas = $WeakMap ? $WeakMap.prototype.has : null;
    var $setHas = $WeakSet ? $WeakSet.prototype.has : null;
    if (!exported && !$setHas) {
    	// eslint-disable-next-line no-unused-vars
    	module.exports = function isWeakSet(x) {
    		// `WeakSet` does not have a `has` method
    		return false;
    	};
    }

    module.exports = exported || function isWeakSet(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$setHas.call(x, $setHas);
    		if ($mapHas) {
    			try {
    				$mapHas.call(x, $mapHas);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $WeakSet; // core-js workaround, pre-v3
    	} catch (e) {}
    	return false;
    };
    });

    var whichCollection = function whichCollection(value) {
    	if (value && typeof value === 'object') {
    		if (isMap(value)) {
    			return 'Map';
    		}
    		if (isSet(value)) {
    			return 'Set';
    		}
    		if (isWeakmap(value)) {
    			return 'WeakMap';
    		}
    		if (isWeakset(value)) {
    			return 'WeakSet';
    		}
    	}
    	return false;
    };

    var esGetIterator = createCommonjsModule$1(function (module) {

    /* eslint global-require: 0 */
    // the code is structured this way so that bundlers can
    // alias out `has-symbols` to `() => true` or `() => false` if your target
    // environments' Symbol capabilities are known, and then use
    // dead code elimination on the rest of this module.
    //
    // Similarly, `isarray` can be aliased to `Array.isArray` if
    // available in all target environments.



    if (hasSymbols() || shams()) {
    	var $iterator = Symbol.iterator;
    	// Symbol is available natively or shammed
    	// natively:
    	//  - Chrome >= 38
    	//  - Edge 12-14?, Edge >= 15 for sure
    	//  - FF >= 36
    	//  - Safari >= 9
    	//  - node >= 0.12
    	module.exports = function getIterator(iterable) {
    		// alternatively, `iterable[$iterator]?.()`
    		if (iterable != null && typeof iterable[$iterator] !== 'undefined') {
    			return iterable[$iterator]();
    		}
    		if (isArguments$1(iterable)) {
    			// arguments objects lack Symbol.iterator
    			// - node 0.12
    			return Array.prototype[$iterator].call(iterable);
    		}
    	};
    } else {
    	// Symbol is not available, native or shammed
    	var isArray = isarray;
    	var isString$1 = isString;
    	var GetIntrinsic = getIntrinsic;
    	var $Map = GetIntrinsic('%Map%', true);
    	var $Set = GetIntrinsic('%Set%', true);
    	var callBound$1 = callBound;
    	var $arrayPush = callBound$1('Array.prototype.push');
    	var $charCodeAt = callBound$1('String.prototype.charCodeAt');
    	var $stringSlice = callBound$1('String.prototype.slice');

    	var advanceStringIndex = function advanceStringIndex(S, index) {
    		var length = S.length;
    		if ((index + 1) >= length) {
    			return index + 1;
    		}

    		var first = $charCodeAt(S, index);
    		if (first < 0xD800 || first > 0xDBFF) {
    			return index + 1;
    		}

    		var second = $charCodeAt(S, index + 1);
    		if (second < 0xDC00 || second > 0xDFFF) {
    			return index + 1;
    		}

    		return index + 2;
    	};

    	var getArrayIterator = function getArrayIterator(arraylike) {
    		var i = 0;
    		return {
    			next: function next() {
    				var done = i >= arraylike.length;
    				var value;
    				if (!done) {
    					value = arraylike[i];
    					i += 1;
    				}
    				return {
    					done: done,
    					value: value
    				};
    			}
    		};
    	};

    	var getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {
    		if (isArray(iterable) || isArguments$1(iterable)) {
    			return getArrayIterator(iterable);
    		}
    		if (isString$1(iterable)) {
    			var i = 0;
    			return {
    				next: function next() {
    					var nextIndex = advanceStringIndex(iterable, i);
    					var value = $stringSlice(iterable, i, nextIndex);
    					i = nextIndex;
    					return {
    						done: nextIndex > iterable.length,
    						value: value
    					};
    				}
    			};
    		}

    		// es6-shim and es-shims' es-map use a string "_es6-shim iterator_" property on different iterables, such as MapIterator.
    		if (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {
    			return iterable['_es6-shim iterator_']();
    		}
    	};

    	if (!$Map && !$Set) {
    		// the only language iterables are Array, String, arguments
    		// - Safari <= 6.0
    		// - Chrome < 38
    		// - node < 0.12
    		// - FF < 13
    		// - IE < 11
    		// - Edge < 11

    		module.exports = function getIterator(iterable) {
    			if (iterable != null) {
    				return getNonCollectionIterator(iterable, true);
    			}
    		};
    	} else {
    		// either Map or Set are available, but Symbol is not
    		// - es6-shim on an ES5 browser
    		// - Safari 6.2 (maybe 6.1?)
    		// - FF v[13, 36)
    		// - IE 11
    		// - Edge 11
    		// - Safari v[6, 9)

    		var isMap$1 = isMap;
    		var isSet$1 = isSet;

    		// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach
    		var $mapForEach = callBound$1('Map.prototype.forEach', true);
    		var $setForEach = callBound$1('Set.prototype.forEach', true);
    		if (typeof process === 'undefined' || !process.versions || !process.versions.node) { // "if is not node"

    			// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either
    			// returns a value, or throws a StopIteration object. These browsers
    			// do not have any other mechanism for iteration.
    			var $mapIterator = callBound$1('Map.prototype.iterator', true);
    			var $setIterator = callBound$1('Set.prototype.iterator', true);
    			var getStopIterationIterator = function (iterator) {
    				var done = false;
    				return {
    					next: function next() {
    						try {
    							return {
    								done: done,
    								value: done ? undefined : iterator.next()
    							};
    						} catch (e) {
    							done = true;
    							return {
    								done: true,
    								value: undefined
    							};
    						}
    					}
    				};
    			};
    		}
    		// Firefox 27-35, and some older es6-shim versions, use a string "@@iterator" property
    		// this returns a proper iterator object, so we should use it instead of forEach.
    		// newer es6-shim versions use a string "_es6-shim iterator_" property.
    		var $mapAtAtIterator = callBound$1('Map.prototype.@@iterator', true) || callBound$1('Map.prototype._es6-shim iterator_', true);
    		var $setAtAtIterator = callBound$1('Set.prototype.@@iterator', true) || callBound$1('Set.prototype._es6-shim iterator_', true);

    		var getCollectionIterator = function getCollectionIterator(iterable) {
    			if (isMap$1(iterable)) {
    				if ($mapIterator) {
    					return getStopIterationIterator($mapIterator(iterable));
    				}
    				if ($mapAtAtIterator) {
    					return $mapAtAtIterator(iterable);
    				}
    				if ($mapForEach) {
    					var entries = [];
    					$mapForEach(iterable, function (v, k) {
    						$arrayPush(entries, [k, v]);
    					});
    					return getArrayIterator(entries);
    				}
    			}
    			if (isSet$1(iterable)) {
    				if ($setIterator) {
    					return getStopIterationIterator($setIterator(iterable));
    				}
    				if ($setAtAtIterator) {
    					return $setAtAtIterator(iterable);
    				}
    				if ($setForEach) {
    					var values = [];
    					$setForEach(iterable, function (v) {
    						$arrayPush(values, v);
    					});
    					return getArrayIterator(values);
    				}
    			}
    		};

    		module.exports = function getIterator(iterable) {
    			return getCollectionIterator(iterable) || getNonCollectionIterator(iterable);
    		};
    	}
    }
    });

    var _nodeResolve_empty = {};

    var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        'default': _nodeResolve_empty
    });

    var require$$0 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);

    var hasMap = typeof Map === 'function' && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === 'function' && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var match = String.prototype.match;
    var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === 'function' ? Symbol.prototype.toString : null;
    var isEnumerable$1 = Object.prototype.propertyIsEnumerable;

    var inspectCustom = require$$0.custom;
    var inspectSymbol = inspectCustom && isSymbol$1(inspectCustom) ? inspectCustom : null;

    var objectInspect = function inspect_(obj, options, depth, seen) {
        var opts = options || {};

        if (has$1(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
            throw new TypeError('option "quoteStyle" must be "single" or "double"');
        }
        if (
            has$1(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
                ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
                : opts.maxStringLength !== null
            )
        ) {
            throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
        }
        var customInspect = has$1(opts, 'customInspect') ? opts.customInspect : true;
        if (typeof customInspect !== 'boolean') {
            throw new TypeError('option "customInspect", if provided, must be `true` or `false`');
        }

        if (
            has$1(opts, 'indent')
            && opts.indent !== null
            && opts.indent !== '\t'
            && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
        ) {
            throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');
        }

        if (typeof obj === 'undefined') {
            return 'undefined';
        }
        if (obj === null) {
            return 'null';
        }
        if (typeof obj === 'boolean') {
            return obj ? 'true' : 'false';
        }

        if (typeof obj === 'string') {
            return inspectString(obj, opts);
        }
        if (typeof obj === 'number') {
            if (obj === 0) {
                return Infinity / obj > 0 ? '0' : '-0';
            }
            return String(obj);
        }
        if (typeof obj === 'bigint') {
            return String(obj) + 'n';
        }

        var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
        if (typeof depth === 'undefined') { depth = 0; }
        if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
            return isArray(obj) ? '[Array]' : '[Object]';
        }

        var indent = getIndent(opts, depth);

        if (typeof seen === 'undefined') {
            seen = [];
        } else if (indexOf(seen, obj) >= 0) {
            return '[Circular]';
        }

        function inspect(value, from, noIndent) {
            if (from) {
                seen = seen.slice();
                seen.push(from);
            }
            if (noIndent) {
                var newOpts = {
                    depth: opts.depth
                };
                if (has$1(opts, 'quoteStyle')) {
                    newOpts.quoteStyle = opts.quoteStyle;
                }
                return inspect_(value, newOpts, depth + 1, seen);
            }
            return inspect_(value, opts, depth + 1, seen);
        }

        if (typeof obj === 'function') {
            var name = nameOf(obj);
            var keys = arrObjKeys(obj, inspect);
            return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');
        }
        if (isSymbol$1(obj)) {
            var symString = symToString.call(obj);
            return typeof obj === 'object' ? markBoxed(symString) : symString;
        }
        if (isElement(obj)) {
            var s = '<' + String(obj.nodeName).toLowerCase();
            var attrs = obj.attributes || [];
            for (var i = 0; i < attrs.length; i++) {
                s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
            }
            s += '>';
            if (obj.childNodes && obj.childNodes.length) { s += '...'; }
            s += '</' + String(obj.nodeName).toLowerCase() + '>';
            return s;
        }
        if (isArray(obj)) {
            if (obj.length === 0) { return '[]'; }
            var xs = arrObjKeys(obj, inspect);
            if (indent && !singleLineValues(xs)) {
                return '[' + indentedJoin(xs, indent) + ']';
            }
            return '[ ' + xs.join(', ') + ' ]';
        }
        if (isError(obj)) {
            var parts = arrObjKeys(obj, inspect);
            if (parts.length === 0) { return '[' + String(obj) + ']'; }
            return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
        }
        if (typeof obj === 'object' && customInspect) {
            if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {
                return obj[inspectSymbol]();
            } else if (typeof obj.inspect === 'function') {
                return obj.inspect();
            }
        }
        if (isMap$1(obj)) {
            var mapParts = [];
            mapForEach.call(obj, function (value, key) {
                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
            });
            return collectionOf('Map', mapSize.call(obj), mapParts, indent);
        }
        if (isSet$1(obj)) {
            var setParts = [];
            setForEach.call(obj, function (value) {
                setParts.push(inspect(value, obj));
            });
            return collectionOf('Set', setSize.call(obj), setParts, indent);
        }
        if (isWeakMap(obj)) {
            return weakCollectionOf('WeakMap');
        }
        if (isWeakSet(obj)) {
            return weakCollectionOf('WeakSet');
        }
        if (isNumber(obj)) {
            return markBoxed(inspect(Number(obj)));
        }
        if (isBigInt(obj)) {
            return markBoxed(inspect(bigIntValueOf.call(obj)));
        }
        if (isBoolean(obj)) {
            return markBoxed(booleanValueOf.call(obj));
        }
        if (isString$1(obj)) {
            return markBoxed(inspect(String(obj)));
        }
        if (!isDate(obj) && !isRegExp(obj)) {
            var ys = arrObjKeys(obj, inspect);
            if (ys.length === 0) { return '{}'; }
            if (indent) {
                return '{' + indentedJoin(ys, indent) + '}';
            }
            return '{ ' + ys.join(', ') + ' }';
        }
        return String(obj);
    };

    function wrapQuotes(s, defaultStyle, opts) {
        var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
        return quoteChar + s + quoteChar;
    }

    function quote(s) {
        return String(s).replace(/"/g, '&quot;');
    }

    function isArray(obj) { return toStr$8(obj) === '[object Array]'; }
    function isDate(obj) { return toStr$8(obj) === '[object Date]'; }
    function isRegExp(obj) { return toStr$8(obj) === '[object RegExp]'; }
    function isError(obj) { return toStr$8(obj) === '[object Error]'; }
    function isSymbol$1(obj) { return toStr$8(obj) === '[object Symbol]'; }
    function isString$1(obj) { return toStr$8(obj) === '[object String]'; }
    function isNumber(obj) { return toStr$8(obj) === '[object Number]'; }
    function isBigInt(obj) { return toStr$8(obj) === '[object BigInt]'; }
    function isBoolean(obj) { return toStr$8(obj) === '[object Boolean]'; }

    var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
    function has$1(obj, key) {
        return hasOwn.call(obj, key);
    }

    function toStr$8(obj) {
        return objectToString.call(obj);
    }

    function nameOf(f) {
        if (f.name) { return f.name; }
        var m = match.call(functionToString.call(f), /^function\s*([\w$]+)/);
        if (m) { return m[1]; }
        return null;
    }

    function indexOf(xs, x) {
        if (xs.indexOf) { return xs.indexOf(x); }
        for (var i = 0, l = xs.length; i < l; i++) {
            if (xs[i] === x) { return i; }
        }
        return -1;
    }

    function isMap$1(x) {
        if (!mapSize || !x || typeof x !== 'object') {
            return false;
        }
        try {
            mapSize.call(x);
            try {
                setSize.call(x);
            } catch (s) {
                return true;
            }
            return x instanceof Map; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isWeakMap(x) {
        if (!weakMapHas || !x || typeof x !== 'object') {
            return false;
        }
        try {
            weakMapHas.call(x, weakMapHas);
            try {
                weakSetHas.call(x, weakSetHas);
            } catch (s) {
                return true;
            }
            return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isSet$1(x) {
        if (!setSize || !x || typeof x !== 'object') {
            return false;
        }
        try {
            setSize.call(x);
            try {
                mapSize.call(x);
            } catch (m) {
                return true;
            }
            return x instanceof Set; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isWeakSet(x) {
        if (!weakSetHas || !x || typeof x !== 'object') {
            return false;
        }
        try {
            weakSetHas.call(x, weakSetHas);
            try {
                weakMapHas.call(x, weakMapHas);
            } catch (s) {
                return true;
            }
            return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isElement(x) {
        if (!x || typeof x !== 'object') { return false; }
        if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
            return true;
        }
        return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
    }

    function inspectString(str, opts) {
        if (str.length > opts.maxStringLength) {
            var remaining = str.length - opts.maxStringLength;
            var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
            return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;
        }
        // eslint-disable-next-line no-control-regex
        var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
        return wrapQuotes(s, 'single', opts);
    }

    function lowbyte(c) {
        var n = c.charCodeAt(0);
        var x = {
            8: 'b',
            9: 't',
            10: 'n',
            12: 'f',
            13: 'r'
        }[n];
        if (x) { return '\\' + x; }
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();
    }

    function markBoxed(str) {
        return 'Object(' + str + ')';
    }

    function weakCollectionOf(type) {
        return type + ' { ? }';
    }

    function collectionOf(type, size, entries, indent) {
        var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');
        return type + ' (' + size + ') {' + joinedEntries + '}';
    }

    function singleLineValues(xs) {
        for (var i = 0; i < xs.length; i++) {
            if (indexOf(xs[i], '\n') >= 0) {
                return false;
            }
        }
        return true;
    }

    function getIndent(opts, depth) {
        var baseIndent;
        if (opts.indent === '\t') {
            baseIndent = '\t';
        } else if (typeof opts.indent === 'number' && opts.indent > 0) {
            baseIndent = Array(opts.indent + 1).join(' ');
        } else {
            return null;
        }
        return {
            base: baseIndent,
            prev: Array(depth + 1).join(baseIndent)
        };
    }

    function indentedJoin(xs, indent) {
        if (xs.length === 0) { return ''; }
        var lineJoiner = '\n' + indent.prev + indent.base;
        return lineJoiner + xs.join(',' + lineJoiner) + '\n' + indent.prev;
    }

    function arrObjKeys(obj, inspect) {
        var isArr = isArray(obj);
        var xs = [];
        if (isArr) {
            xs.length = obj.length;
            for (var i = 0; i < obj.length; i++) {
                xs[i] = has$1(obj, i) ? inspect(obj[i], obj) : '';
            }
        }
        for (var key in obj) { // eslint-disable-line no-restricted-syntax
            if (!has$1(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
            if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
            if ((/[^\w$]/).test(key)) {
                xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
            } else {
                xs.push(key + ': ' + inspect(obj[key], obj));
            }
        }
        if (typeof gOPS === 'function') {
            var syms = gOPS(obj);
            for (var j = 0; j < syms.length; j++) {
                if (isEnumerable$1.call(obj, syms[j])) {
                    xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
                }
            }
        }
        return xs;
    }

    var $TypeError$4 = getIntrinsic('%TypeError%');
    var $WeakMap$1 = getIntrinsic('%WeakMap%', true);
    var $Map$2 = getIntrinsic('%Map%', true);

    var $weakMapGet = callBound('WeakMap.prototype.get', true);
    var $weakMapSet = callBound('WeakMap.prototype.set', true);
    var $weakMapHas = callBound('WeakMap.prototype.has', true);
    var $mapGet = callBound('Map.prototype.get', true);
    var $mapSet = callBound('Map.prototype.set', true);
    var $mapHas$3 = callBound('Map.prototype.has', true);

    /*
     * This function traverses the list returning the node corresponding to the
     * given key.
     *
     * That node is also moved to the head of the list, so that if it's accessed
     * again we don't need to traverse the whole list. By doing so, all the recently
     * used nodes can be accessed relatively quickly.
     */
    var listGetNode = function (list, key) { // eslint-disable-line consistent-return
    	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
    		if (curr.key === key) {
    			prev.next = curr.next;
    			curr.next = list.next;
    			list.next = curr; // eslint-disable-line no-param-reassign
    			return curr;
    		}
    	}
    };

    var listGet = function (objects, key) {
    	var node = listGetNode(objects, key);
    	return node && node.value;
    };
    var listSet = function (objects, key, value) {
    	var node = listGetNode(objects, key);
    	if (node) {
    		node.value = value;
    	} else {
    		// Prepend the new node to the beginning of the list
    		objects.next = { // eslint-disable-line no-param-reassign
    			key: key,
    			next: objects.next,
    			value: value
    		};
    	}
    };
    var listHas = function (objects, key) {
    	return !!listGetNode(objects, key);
    };

    var sideChannel = function getSideChannel() {
    	var $wm;
    	var $m;
    	var $o;
    	var channel = {
    		assert: function (key) {
    			if (!channel.has(key)) {
    				throw new $TypeError$4('Side channel does not contain ' + objectInspect(key));
    			}
    		},
    		get: function (key) { // eslint-disable-line consistent-return
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if ($wm) {
    					return $weakMapGet($wm, key);
    				}
    			} else if ($Map$2) {
    				if ($m) {
    					return $mapGet($m, key);
    				}
    			} else {
    				if ($o) { // eslint-disable-line no-lonely-if
    					return listGet($o, key);
    				}
    			}
    		},
    		has: function (key) {
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if ($wm) {
    					return $weakMapHas($wm, key);
    				}
    			} else if ($Map$2) {
    				if ($m) {
    					return $mapHas$3($m, key);
    				}
    			} else {
    				if ($o) { // eslint-disable-line no-lonely-if
    					return listHas($o, key);
    				}
    			}
    			return false;
    		},
    		set: function (key, value) {
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if (!$wm) {
    					$wm = new $WeakMap$1();
    				}
    				$weakMapSet($wm, key, value);
    			} else if ($Map$2) {
    				if (!$m) {
    					$m = new $Map$2();
    				}
    				$mapSet($m, key, value);
    			} else {
    				if (!$o) {
    					/*
    					 * Initialize the linked list as an empty node, so that we don't have
    					 * to special-case handling of the first node: we can always refer to
    					 * it as (previous node).next, instead of something like (list).head
    					 */
    					$o = { key: {}, next: null };
    				}
    				listSet($o, key, value);
    			}
    		}
    	};
    	return channel;
    };

    var hasOwn$1 = Object.prototype.hasOwnProperty;
    var toString$1 = Object.prototype.toString;

    var foreach = function forEach (obj, fn, ctx) {
        if (toString$1.call(fn) !== '[object Function]') {
            throw new TypeError('iterator must be a function');
        }
        var l = obj.length;
        if (l === +l) {
            for (var i = 0; i < l; i++) {
                fn.call(ctx, obj[i], i, obj);
            }
        } else {
            for (var k in obj) {
                if (hasOwn$1.call(obj, k)) {
                    fn.call(ctx, obj[k], k, obj);
                }
            }
        }
    };

    /**
     * Array#filter.
     *
     * @param {Array} arr
     * @param {Function} fn
     * @param {Object=} self
     * @return {Array}
     * @throw TypeError
     */

    var arrayFilter = function (arr, fn, self) {
      if (arr.filter) return arr.filter(fn, self);
      if (void 0 === arr || null === arr) throw new TypeError;
      if ('function' != typeof fn) throw new TypeError;
      var ret = [];
      for (var i = 0; i < arr.length; i++) {
        if (!hasOwn$2.call(arr, i)) continue;
        var val = arr[i];
        if (fn.call(self, val, i, arr)) ret.push(val);
      }
      return ret;
    };

    var hasOwn$2 = Object.prototype.hasOwnProperty;

    var availableTypedArrays = function availableTypedArrays() {
    	return arrayFilter([
    		'BigInt64Array',
    		'BigUint64Array',
    		'Float32Array',
    		'Float64Array',
    		'Int16Array',
    		'Int32Array',
    		'Int8Array',
    		'Uint16Array',
    		'Uint32Array',
    		'Uint8Array',
    		'Uint8ClampedArray'
    	], function (typedArray) {
    		return typeof commonjsGlobal[typedArray] === 'function';
    	});
    };

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$3;

    var $SyntaxError$1 = SyntaxError;
    var $Function$1 = Function;
    var $TypeError$5 = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor$1 = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD$3 = Object.getOwnPropertyDescriptor;
    if ($gOPD$3) {
    	try {
    		$gOPD$3({}, '');
    	} catch (e) {
    		$gOPD$3 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$2 = function () { throw new $TypeError$5(); };
    var ThrowTypeError$2 = $gOPD$3
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$2;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$3(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$2;
    			}
    		}
    	}())
    	: throwTypeError$2;

    var hasSymbols$5 = hasSymbols();

    var getProto$3 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction$2 = getEvalledConstructor$1('async function* () {}');
    var asyncGenFunctionPrototype$1 = asyncGenFunction$2 ? asyncGenFunction$2.prototype : undefined$3;
    var asyncGenPrototype$1 = asyncGenFunctionPrototype$1 ? asyncGenFunctionPrototype$1.prototype : undefined$3;

    var TypedArray$2 = typeof Uint8Array === 'undefined' ? undefined$3 : getProto$3(Uint8Array);

    var INTRINSICS$2 = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$3 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$3 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$5 ? getProto$3([][Symbol.iterator]()) : undefined$3,
    	'%AsyncFromSyncIteratorPrototype%': undefined$3,
    	'%AsyncFunction%': getEvalledConstructor$1('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype$1,
    	'%AsyncGeneratorFunction%': asyncGenFunction$2,
    	'%AsyncIteratorPrototype%': asyncGenPrototype$1 ? getProto$3(asyncGenPrototype$1) : undefined$3,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$3 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$3 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$3 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$3 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$3 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$3 : FinalizationRegistry,
    	'%Function%': $Function$1,
    	'%GeneratorFunction%': getEvalledConstructor$1('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$3 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$3 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$3 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$5 ? getProto$3(getProto$3([][Symbol.iterator]())) : undefined$3,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$3,
    	'%Map%': typeof Map === 'undefined' ? undefined$3 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$5 ? undefined$3 : getProto$3(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$3 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$3 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$3 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$3 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$5 ? undefined$3 : getProto$3(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$3 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$5 ? getProto$3(''[Symbol.iterator]()) : undefined$3,
    	'%Symbol%': hasSymbols$5 ? Symbol : undefined$3,
    	'%SyntaxError%': $SyntaxError$1,
    	'%ThrowTypeError%': ThrowTypeError$2,
    	'%TypedArray%': TypedArray$2,
    	'%TypeError%': $TypeError$5,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$3 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$3 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$3 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$3 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$3 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$3 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$3 : WeakSet
    };

    var LEGACY_ALIASES$1 = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat$1 = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply$1 = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace$2 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$2 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$2 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$2 = function stringToPath(string) {
    	var result = [];
    	$replace$2(string, rePropName$2, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$2(subString, reEscapeChar$2, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$2 = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES$1, intrinsicName)) {
    		alias = LEGACY_ALIASES$1[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS$2, intrinsicName)) {
    		var value = INTRINSICS$2[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError$5('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError$1('intrinsic ' + name + ' does not exist!');
    };

    var GetIntrinsic$1 = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError$5('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError$5('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$2(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic$2('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply$1(parts, $concat$1([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS$2, intrinsicRealName)) {
    			value = INTRINSICS$2[intrinsicRealName];
    		} else if (value != null) {
    			if ($gOPD$3 && (i + 1) >= parts.length) {
    				var desc = $gOPD$3(value, part);
    				isOwn = !!desc;

    				if (!allowMissing && !(part in value)) {
    					throw new $TypeError$5('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS$2[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var $gOPD$4 = GetIntrinsic$1('%Object.getOwnPropertyDescriptor%');
    if ($gOPD$4) {
    	try {
    		$gOPD$4([], 'length');
    	} catch (e) {
    		// IE 8 has a broken gOPD
    		$gOPD$4 = null;
    	}
    }

    var getOwnPropertyDescriptor = $gOPD$4;

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$4;

    var $SyntaxError$2 = SyntaxError;
    var $Function$2 = Function;
    var $TypeError$6 = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor$2 = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD$5 = Object.getOwnPropertyDescriptor;
    if ($gOPD$5) {
    	try {
    		$gOPD$5({}, '');
    	} catch (e) {
    		$gOPD$5 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$3 = function () { throw new $TypeError$6(); };
    var ThrowTypeError$3 = $gOPD$5
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$3;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$5(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$3;
    			}
    		}
    	}())
    	: throwTypeError$3;

    var hasSymbols$6 = hasSymbols();

    var getProto$4 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction$3 = getEvalledConstructor$2('async function* () {}');
    var asyncGenFunctionPrototype$2 = asyncGenFunction$3 ? asyncGenFunction$3.prototype : undefined$4;
    var asyncGenPrototype$2 = asyncGenFunctionPrototype$2 ? asyncGenFunctionPrototype$2.prototype : undefined$4;

    var TypedArray$3 = typeof Uint8Array === 'undefined' ? undefined$4 : getProto$4(Uint8Array);

    var INTRINSICS$3 = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$4 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$4 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$6 ? getProto$4([][Symbol.iterator]()) : undefined$4,
    	'%AsyncFromSyncIteratorPrototype%': undefined$4,
    	'%AsyncFunction%': getEvalledConstructor$2('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype$2,
    	'%AsyncGeneratorFunction%': asyncGenFunction$3,
    	'%AsyncIteratorPrototype%': asyncGenPrototype$2 ? getProto$4(asyncGenPrototype$2) : undefined$4,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$4 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$4 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$4 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$4 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$4 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$4 : FinalizationRegistry,
    	'%Function%': $Function$2,
    	'%GeneratorFunction%': getEvalledConstructor$2('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$4 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$4 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$4 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$6 ? getProto$4(getProto$4([][Symbol.iterator]())) : undefined$4,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$4,
    	'%Map%': typeof Map === 'undefined' ? undefined$4 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$6 ? undefined$4 : getProto$4(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$4 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$4 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$4 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$4 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$6 ? undefined$4 : getProto$4(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$4 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$6 ? getProto$4(''[Symbol.iterator]()) : undefined$4,
    	'%Symbol%': hasSymbols$6 ? Symbol : undefined$4,
    	'%SyntaxError%': $SyntaxError$2,
    	'%ThrowTypeError%': ThrowTypeError$3,
    	'%TypedArray%': TypedArray$3,
    	'%TypeError%': $TypeError$6,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$4 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$4 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$4 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$4 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$4 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$4 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$4 : WeakSet
    };

    var LEGACY_ALIASES$2 = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat$2 = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply$2 = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace$3 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$3 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$3 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$3 = function stringToPath(string) {
    	var result = [];
    	$replace$3(string, rePropName$3, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$3(subString, reEscapeChar$3, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$3 = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES$2, intrinsicName)) {
    		alias = LEGACY_ALIASES$2[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS$3, intrinsicName)) {
    		var value = INTRINSICS$3[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError$6('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError$2('intrinsic ' + name + ' does not exist!');
    };

    var GetIntrinsic$2 = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError$6('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError$6('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$3(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic$3('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply$2(parts, $concat$2([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS$3, intrinsicRealName)) {
    			value = INTRINSICS$3[intrinsicRealName];
    		} else if (value != null) {
    			if ($gOPD$5 && (i + 1) >= parts.length) {
    				var desc = $gOPD$5(value, part);
    				isOwn = !!desc;

    				if (!allowMissing && !(part in value)) {
    					throw new $TypeError$6('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS$3[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var $gOPD$6 = GetIntrinsic$2('%Object.getOwnPropertyDescriptor%');
    if ($gOPD$6) {
    	try {
    		$gOPD$6([], 'length');
    	} catch (e) {
    		// IE 8 has a broken gOPD
    		$gOPD$6 = null;
    	}
    }

    var getOwnPropertyDescriptor$1 = $gOPD$6;

    var $toString$2 = callBound('Object.prototype.toString');
    var hasSymbols$7 = hasSymbols();
    var hasToStringTag$6 = hasSymbols$7 && typeof Symbol.toStringTag === 'symbol';

    var typedArrays = availableTypedArrays();

    var $indexOf$1 = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
    	for (var i = 0; i < array.length; i += 1) {
    		if (array[i] === value) {
    			return i;
    		}
    	}
    	return -1;
    };
    var $slice = callBound('String.prototype.slice');
    var toStrTags = {};

    var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
    if (hasToStringTag$6 && getOwnPropertyDescriptor$1 && getPrototypeOf) {
    	foreach(typedArrays, function (typedArray) {
    		var arr = new commonjsGlobal[typedArray]();
    		if (!(Symbol.toStringTag in arr)) {
    			throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
    		}
    		var proto = getPrototypeOf(arr);
    		var descriptor = getOwnPropertyDescriptor$1(proto, Symbol.toStringTag);
    		if (!descriptor) {
    			var superProto = getPrototypeOf(proto);
    			descriptor = getOwnPropertyDescriptor$1(superProto, Symbol.toStringTag);
    		}
    		toStrTags[typedArray] = descriptor.get;
    	});
    }

    var tryTypedArrays = function tryAllTypedArrays(value) {
    	var anyTrue = false;
    	foreach(toStrTags, function (getter, typedArray) {
    		if (!anyTrue) {
    			try {
    				anyTrue = getter.call(value) === typedArray;
    			} catch (e) { /**/ }
    		}
    	});
    	return anyTrue;
    };

    var isTypedArray = function isTypedArray(value) {
    	if (!value || typeof value !== 'object') { return false; }
    	if (!hasToStringTag$6) {
    		var tag = $slice($toString$2(value), 8, -1);
    		return $indexOf$1(typedArrays, tag) > -1;
    	}
    	if (!getOwnPropertyDescriptor$1) { return false; }
    	return tryTypedArrays(value);
    };

    var $toString$3 = callBound('Object.prototype.toString');
    var hasSymbols$8 = hasSymbols();
    var hasToStringTag$7 = hasSymbols$8 && typeof Symbol.toStringTag === 'symbol';

    var typedArrays$1 = availableTypedArrays();

    var $slice$1 = callBound('String.prototype.slice');
    var toStrTags$1 = {};

    var getPrototypeOf$1 = Object.getPrototypeOf; // require('getprototypeof');
    if (hasToStringTag$7 && getOwnPropertyDescriptor && getPrototypeOf$1) {
    	foreach(typedArrays$1, function (typedArray) {
    		if (typeof commonjsGlobal[typedArray] === 'function') {
    			var arr = new commonjsGlobal[typedArray]();
    			if (!(Symbol.toStringTag in arr)) {
    				throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
    			}
    			var proto = getPrototypeOf$1(arr);
    			var descriptor = getOwnPropertyDescriptor(proto, Symbol.toStringTag);
    			if (!descriptor) {
    				var superProto = getPrototypeOf$1(proto);
    				descriptor = getOwnPropertyDescriptor(superProto, Symbol.toStringTag);
    			}
    			toStrTags$1[typedArray] = descriptor.get;
    		}
    	});
    }

    var tryTypedArrays$1 = function tryAllTypedArrays(value) {
    	var foundName = false;
    	foreach(toStrTags$1, function (getter, typedArray) {
    		if (!foundName) {
    			try {
    				var name = getter.call(value);
    				if (name === typedArray) {
    					foundName = name;
    				}
    			} catch (e) {}
    		}
    	});
    	return foundName;
    };



    var whichTypedArray = function whichTypedArray(value) {
    	if (!isTypedArray(value)) { return false; }
    	if (!hasToStringTag$7) { return $slice$1($toString$3(value), 8, -1); }
    	return tryTypedArrays$1(value);
    };

    // modified from https://github.com/es-shims/es6-shim

    var canBeObject = function (obj) {
    	return typeof obj !== 'undefined' && obj !== null;
    };
    var hasSymbols$9 = shams();

    var toObject = Object;
    var $push = callBound('Array.prototype.push');
    var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
    var originalGetSymbols = hasSymbols$9 ? Object.getOwnPropertySymbols : null;

    // eslint-disable-next-line no-unused-vars
    var implementation$4 = function assign(target, source1) {
    	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
    	var objTarget = toObject(target);
    	var s, source, i, props, syms, value, key;
    	for (s = 1; s < arguments.length; ++s) {
    		source = toObject(arguments[s]);
    		props = objectKeys(source);
    		var getSymbols = hasSymbols$9 && (Object.getOwnPropertySymbols || originalGetSymbols);
    		if (getSymbols) {
    			syms = getSymbols(source);
    			for (i = 0; i < syms.length; ++i) {
    				key = syms[i];
    				if ($propIsEnumerable(source, key)) {
    					$push(props, key);
    				}
    			}
    		}
    		for (i = 0; i < props.length; ++i) {
    			key = props[i];
    			value = source[key];
    			if ($propIsEnumerable(source, key)) {
    				objTarget[key] = value;
    			}
    		}
    	}
    	return objTarget;
    };

    var lacksProperEnumerationOrder = function () {
    	if (!Object.assign) {
    		return false;
    	}
    	/*
    	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
    	 * note: this does not detect the bug unless there's 20 characters
    	 */
    	var str = 'abcdefghijklmnopqrst';
    	var letters = str.split('');
    	var map = {};
    	for (var i = 0; i < letters.length; ++i) {
    		map[letters[i]] = letters[i];
    	}
    	var obj = Object.assign({}, map);
    	var actual = '';
    	for (var k in obj) {
    		actual += k;
    	}
    	return str !== actual;
    };

    var assignHasPendingExceptions = function () {
    	if (!Object.assign || !Object.preventExtensions) {
    		return false;
    	}
    	/*
    	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
    	 * which is 72% slower than our shim, and Firefox 40's native implementation.
    	 */
    	var thrower = Object.preventExtensions({ 1: 2 });
    	try {
    		Object.assign(thrower, 'xy');
    	} catch (e) {
    		return thrower[1] === 'y';
    	}
    	return false;
    };

    var polyfill$3 = function getPolyfill() {
    	if (!Object.assign) {
    		return implementation$4;
    	}
    	if (lacksProperEnumerationOrder()) {
    		return implementation$4;
    	}
    	if (assignHasPendingExceptions()) {
    		return implementation$4;
    	}
    	return Object.assign;
    };

    var shim$2 = function shimAssign() {
    	var polyfill = polyfill$3();
    	defineProperties_1(
    		Object,
    		{ assign: polyfill },
    		{ assign: function () { return Object.assign !== polyfill; } }
    	);
    	return polyfill;
    };

    var polyfill$4 = callBind.apply(polyfill$3());
    // eslint-disable-next-line no-unused-vars
    var bound = function assign(target, source1) {
    	return polyfill$4(Object, arguments);
    };

    defineProperties_1(bound, {
    	getPolyfill: polyfill$3,
    	implementation: implementation$4,
    	shim: shim$2
    });

    var object_assign = bound;

    var $getTime = callBound('Date.prototype.getTime');
    var gPO = Object.getPrototypeOf;
    var $objToString = callBound('Object.prototype.toString');

    var $Set$2 = getIntrinsic('%Set%', true);
    var $mapHas$4 = callBound('Map.prototype.has', true);
    var $mapGet$1 = callBound('Map.prototype.get', true);
    var $mapSize = callBound('Map.prototype.size', true);
    var $setAdd = callBound('Set.prototype.add', true);
    var $setDelete = callBound('Set.prototype.delete', true);
    var $setHas$3 = callBound('Set.prototype.has', true);
    var $setSize = callBound('Set.prototype.size', true);

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414
    function setHasEqualElement(set, val1, opts, channel) {
      var i = esGetIterator(set);
      var result;
      while ((result = i.next()) && !result.done) {
        if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define
          // Remove the matching element to make sure we do not check that again.
          $setDelete(set, result.value);
          return true;
        }
      }

      return false;
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439
    function findLooseMatchingPrimitives(prim) {
      if (typeof prim === 'undefined') {
        return null;
      }
      if (typeof prim === 'object') { // Only pass in null as object!
        return void 0;
      }
      if (typeof prim === 'symbol') {
        return false;
      }
      if (typeof prim === 'string' || typeof prim === 'number') {
        // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.
        return +prim === +prim; // eslint-disable-line no-implicit-coercion
      }
      return true;
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460
    function mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {
      var altValue = findLooseMatchingPrimitives(prim);
      if (altValue != null) {
        return altValue;
      }
      var curB = $mapGet$1(b, altValue);
      var looseOpts = object_assign({}, opts, { strict: false });
      if (
        (typeof curB === 'undefined' && !$mapHas$4(b, altValue))
        // eslint-disable-next-line no-use-before-define
        || !internalDeepEqual(item, curB, looseOpts, channel)
      ) {
        return false;
      }
      // eslint-disable-next-line no-use-before-define
      return !$mapHas$4(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447
    function setMightHaveLoosePrim(a, b, prim) {
      var altValue = findLooseMatchingPrimitives(prim);
      if (altValue != null) {
        return altValue;
      }

      return $setHas$3(b, altValue) && !$setHas$3(a, altValue);
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533
    function mapHasEqualEntry(set, map, key1, item1, opts, channel) {
      var i = esGetIterator(set);
      var result;
      var key2;
      while ((result = i.next()) && !result.done) {
        key2 = result.value;
        if (
          // eslint-disable-next-line no-use-before-define
          internalDeepEqual(key1, key2, opts, channel)
          // eslint-disable-next-line no-use-before-define
          && internalDeepEqual(item1, $mapGet$1(map, key2), opts, channel)
        ) {
          $setDelete(set, key2);
          return true;
        }
      }

      return false;
    }

    function internalDeepEqual(actual, expected, options, channel) {
      var opts = options || {};

      // 7.1. All identical values are equivalent, as determined by ===.
      if (opts.strict ? objectIs(actual, expected) : actual === expected) {
        return true;
      }

      var actualBoxed = whichBoxedPrimitive(actual);
      var expectedBoxed = whichBoxedPrimitive(expected);
      if (actualBoxed !== expectedBoxed) {
        return false;
      }

      // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
      if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
        return opts.strict ? objectIs(actual, expected) : actual == expected; // eslint-disable-line eqeqeq
      }

      /*
       * 7.4. For all other Object pairs, including Array objects, equivalence is
       * determined by having the same number of owned properties (as verified
       * with Object.prototype.hasOwnProperty.call), the same set of keys
       * (although not necessarily the same order), equivalent values for every
       * corresponding key, and an identical 'prototype' property. Note: this
       * accounts for both named and indexed properties on Arrays.
       */
      // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration

      var hasActual = channel.has(actual);
      var hasExpected = channel.has(expected);
      var sentinel;
      if (hasActual && hasExpected) {
        if (channel.get(actual) === channel.get(expected)) {
          return true;
        }
      } else {
        sentinel = {};
      }
      if (!hasActual) { channel.set(actual, sentinel); }
      if (!hasExpected) { channel.set(expected, sentinel); }

      // eslint-disable-next-line no-use-before-define
      return objEquiv(actual, expected, opts, channel);
    }

    function isBuffer(x) {
      if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
        return false;
      }
      if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
        return false;
      }
      if (x.length > 0 && typeof x[0] !== 'number') {
        return false;
      }

      return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));
    }

    function setEquiv(a, b, opts, channel) {
      if ($setSize(a) !== $setSize(b)) {
        return false;
      }
      var iA = esGetIterator(a);
      var iB = esGetIterator(b);
      var resultA;
      var resultB;
      var set;
      while ((resultA = iA.next()) && !resultA.done) {
        if (resultA.value && typeof resultA.value === 'object') {
          if (!set) { set = new $Set$2(); }
          $setAdd(set, resultA.value);
        } else if (!$setHas$3(b, resultA.value)) {
          if (opts.strict) { return false; }
          if (!setMightHaveLoosePrim(a, b, resultA.value)) {
            return false;
          }
          if (!set) { set = new $Set$2(); }
          $setAdd(set, resultA.value);
        }
      }
      if (set) {
        while ((resultB = iB.next()) && !resultB.done) {
          // We have to check if a primitive value is already matching and only if it's not, go hunting for it.
          if (resultB.value && typeof resultB.value === 'object') {
            if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {
              return false;
            }
          } else if (
            !opts.strict
            && !$setHas$3(a, resultB.value)
            && !setHasEqualElement(set, resultB.value, opts.strict, channel)
          ) {
            return false;
          }
        }
        return $setSize(set) === 0;
      }
      return true;
    }

    function mapEquiv(a, b, opts, channel) {
      if ($mapSize(a) !== $mapSize(b)) {
        return false;
      }
      var iA = esGetIterator(a);
      var iB = esGetIterator(b);
      var resultA;
      var resultB;
      var set;
      var key;
      var item1;
      var item2;
      while ((resultA = iA.next()) && !resultA.done) {
        key = resultA.value[0];
        item1 = resultA.value[1];
        if (key && typeof key === 'object') {
          if (!set) { set = new $Set$2(); }
          $setAdd(set, key);
        } else {
          item2 = $mapGet$1(b, key);
          if ((typeof item2 === 'undefined' && !$mapHas$4(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {
            if (opts.strict) {
              return false;
            }
            if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {
              return false;
            }
            if (!set) { set = new $Set$2(); }
            $setAdd(set, key);
          }
        }
      }

      if (set) {
        while ((resultB = iB.next()) && !resultB.done) {
          key = resultB.value[0];
          item2 = resultB.value[1];
          if (key && typeof key === 'object') {
            if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {
              return false;
            }
          } else if (
            !opts.strict
            && (!a.has(key) || !internalDeepEqual($mapGet$1(a, key), item2, opts, channel))
            && !mapHasEqualEntry(set, a, key, item2, object_assign({}, opts, { strict: false }), channel)
          ) {
            return false;
          }
        }
        return $setSize(set) === 0;
      }
      return true;
    }

    function objEquiv(a, b, opts, channel) {
      /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5] */
      var i, key;

      if (typeof a !== typeof b) { return false; }
      if (a == null || b == null) { return false; }

      if ($objToString(a) !== $objToString(b)) { return false; }

      if (isArguments$1(a) !== isArguments$1(b)) { return false; }

      var aIsArray = isarray(a);
      var bIsArray = isarray(b);
      if (aIsArray !== bIsArray) { return false; }

      // TODO: replace when a cross-realm brand check is available
      var aIsError = a instanceof Error;
      var bIsError = b instanceof Error;
      if (aIsError !== bIsError) { return false; }
      if (aIsError || bIsError) {
        if (a.name !== b.name || a.message !== b.message) { return false; }
      }

      var aIsRegex = isRegex(a);
      var bIsRegex = isRegex(b);
      if (aIsRegex !== bIsRegex) { return false; }
      if ((aIsRegex || bIsRegex) && (a.source !== b.source || regexp_prototype_flags(a) !== regexp_prototype_flags(b))) {
        return false;
      }

      var aIsDate = isDateObject(a);
      var bIsDate = isDateObject(b);
      if (aIsDate !== bIsDate) { return false; }
      if (aIsDate || bIsDate) { // && would work too, because both are true or both false here
        if ($getTime(a) !== $getTime(b)) { return false; }
      }
      if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }

      if (whichTypedArray(a) !== whichTypedArray(b)) {
        return false;
      }

      var aIsBuffer = isBuffer(a);
      var bIsBuffer = isBuffer(b);
      if (aIsBuffer !== bIsBuffer) { return false; }
      if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
        if (a.length !== b.length) { return false; }
        for (i = 0; i < a.length; i++) {
          if (a[i] !== b[i]) { return false; }
        }
        return true;
      }

      if (typeof a !== typeof b) { return false; }

      var ka = objectKeys(a);
      var kb = objectKeys(b);
      // having the same number of owned properties (keys incorporates hasOwnProperty)
      if (ka.length !== kb.length) { return false; }

      // the same set of keys (although not necessarily the same order),
      ka.sort();
      kb.sort();
      // ~~~cheap key test
      for (i = ka.length - 1; i >= 0; i--) {
        if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq
      }

      // equivalent values for every corresponding key, and ~~~possibly expensive deep test
      for (i = ka.length - 1; i >= 0; i--) {
        key = ka[i];
        if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }
      }

      var aCollection = whichCollection(a);
      var bCollection = whichCollection(b);
      if (aCollection !== bCollection) {
        return false;
      }
      if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection
        return setEquiv(a, b, opts, channel);
      }
      if (aCollection === 'Map') { // aCollection === bCollection
        return mapEquiv(a, b, opts, channel);
      }

      return true;
    }

    var deepEqual$2 = function deepEqual(a, b, opts) {
      return internalDeepEqual(a, b, opts, sideChannel());
    };

    const getRelativeBounds = (rect, relativeTo, relativeDirection) => {
        const edgeDistance = 0;
        if (relativeDirection === "bottom") {
            return {
                left: relativeTo.left,
                top: relativeTo.top + relativeTo.height + edgeDistance,
                width: relativeTo.width,
                height: rect.height
            };
        }
        if (relativeDirection === "top") {
            return {
                left: relativeTo.left,
                top: relativeTo.top - rect.height - edgeDistance,
                width: relativeTo.width,
                height: rect.height
            };
        }
        if (relativeDirection === "right") {
            return {
                left: relativeTo.left + relativeTo.width + edgeDistance,
                top: relativeTo.top,
                width: rect.width,
                height: relativeTo.height
            };
        }
        if (relativeDirection === "left") {
            return {
                left: relativeTo.left - rect.width - edgeDistance,
                top: relativeTo.top,
                width: rect.width,
                height: relativeTo.height
            };
        }
        throw new Error("invalid relativeDirection");
    };
    const objEqual = (objOne, objTwo) => deepEqual$2(objOne, objTwo, { strict: true });
    const waitFor = (invocations, callback) => {
        let left = invocations;
        return () => {
            left--;
            if (left === 0) {
                callback();
            }
        };
    };

    class GlueController {
        constructor(portsBridge, sessionStorage) {
            this.portsBridge = portsBridge;
            this.sessionStorage = sessionStorage;
        }
        get clientGlue() {
            return this._clientGlue;
        }
        get platformWindowId() {
            return this._platformClientWindowId.slice();
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this._systemGlue = yield this.initSystemGlue(config.glue);
                logger.setLogger(this._systemGlue.logger);
            });
        }
        initClientGlue(config, factory) {
            return __awaiter(this, void 0, void 0, function* () {
                const port = yield this.portsBridge.createInternalClient();
                const platformWindowData = this.sessionStorage.getWindowDataByName("Platform");
                this._platformClientWindowId = platformWindowData ? platformWindowData.windowId : shortid$1.generate();
                if (!platformWindowData) {
                    this.sessionStorage.saveWindowData({ name: "Platform", windowId: this.platformWindowId });
                }
                const webConfig = {
                    application: "Platform",
                    gateway: { webPlatform: { port, windowId: this.platformWindowId } }
                };
                const c = Object.assign({}, config, webConfig);
                this._clientGlue = factory ? yield factory(c) : yield glueWebFactory(c);
                return this._clientGlue;
            });
        }
        createPlatformSystemMethod(handler) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.createMethodAsync(GlueWebPlatformControlName$1, handler);
            });
        }
        createPlatformSystemStream() {
            return __awaiter(this, void 0, void 0, function* () {
                this._systemStream = yield this.createStream(GlueWebPlatformStreamName$1);
            });
        }
        createWorkspacesStream() {
            return __awaiter(this, void 0, void 0, function* () {
                this._workspacesStream = yield this.createStream(GlueWebPlatformWorkspacesStreamName);
            });
        }
        createWorkspacesEventsReceiver(callback) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this._systemGlue.interop.register("T42.Workspaces.Events", (args) => callback(args));
            });
        }
        pushSystemMessage(domain, operation, data) {
            if (!this._systemStream) {
                throw new Error(`Cannot push data to domain: ${domain}, because the system stream is not created`);
            }
            this._systemStream.push({ domain, operation, data });
        }
        pushWorkspacesMessage(data) {
            if (!this._workspacesStream) {
                throw new Error("Cannot push data to domain: workspaces, because the workspaces stream is not created");
            }
            this._workspacesStream.push({ data });
        }
        callFrame(operationDefinition, operationArguments, windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                const messageData = { operation: operationDefinition.name, operationArguments };
                const baseErrorMessage = `Internal Platform->Frame Communication Error. Attempted calling workspace frame: ${windowId} for operation ${operationDefinition.name} `;
                if (operationDefinition.dataDecoder) {
                    const decodeResult = operationDefinition.dataDecoder.run(messageData.operationArguments);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} OutBound validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                const result = yield this.transmitMessage(GlueWorkspaceFrameClientControlName, messageData, baseErrorMessage, { windowId }, { methodResponseTimeoutMs: 30000, waitTimeoutMs: 30000 });
                if (operationDefinition.resultDecoder) {
                    const decodeResult = operationDefinition.resultDecoder.run(result);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} Result validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                return result;
            });
        }
        callWindow(operationDefinition, data, windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                const operation = operationDefinition.name;
                const messageData = { domain: "windows", operation, data };
                const baseErrorMessage = `Internal Platform->Window Communication Error. Attempted calling client window: ${windowId} for operation ${operation}. `;
                if (operationDefinition.dataDecoder) {
                    const decodeResult = operationDefinition.dataDecoder.run(messageData.data);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} OutBound validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                const result = yield this.transmitMessage(GlueClientControlName$1, messageData, baseErrorMessage, { windowId }, { methodResponseTimeoutMs: 30000, waitTimeoutMs: 30000 });
                if (operationDefinition.resultDecoder) {
                    const decodeResult = operationDefinition.resultDecoder.run(result);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} Result validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                return result;
            });
        }
        setInstanceStartContext(windowId, context) {
            return __awaiter(this, void 0, void 0, function* () {
                const key = `___instance___${windowId}`;
                yield this._systemGlue.contexts.set(key, context);
            });
        }
        setWindowStartContext(windowId, context) {
            return PromisePlus$3((resolve, reject) => {
                let unsub;
                const ready = waitFor(3, () => {
                    resolve();
                    unsub();
                });
                const key = `___window___${windowId}`;
                this._clientGlue.contexts.subscribe(key, ready)
                    .then((un) => {
                    unsub = un;
                    ready();
                });
                this._systemGlue.contexts.set(key, context).then(ready).catch(reject);
            }, 10000, `Timed out waiting to set the window context for: ${windowId}`);
        }
        getServers() {
            return this._clientGlue.interop.servers();
        }
        subscribeForServerAdded(callback) {
            return this._clientGlue.interop.serverAdded(callback);
        }
        subscribeForMethodAdded(callback) {
            return this._clientGlue.interop.methodAdded(callback);
        }
        invokeMethod(method, argumentObj, target, options, success, error) {
            return this._clientGlue.interop.invoke(method, argumentObj, target, options, success, error);
        }
        initSystemGlue(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const port = yield this.portsBridge.createInternalClient();
                const logLevel = (_b = (_a = config === null || config === void 0 ? void 0 : config.systemLogger) === null || _a === void 0 ? void 0 : _a.level) !== null && _b !== void 0 ? _b : "info";
                return yield GlueCore$1({
                    application: "Platform",
                    gateway: { webPlatform: { port } },
                    logger: logLevel
                });
            });
        }
        setContext(name, data) {
            return this._systemGlue.contexts.set(name, data);
        }
        createMethodAsync(name, handler) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this._systemGlue.interop.registerAsync(name, handler);
            });
        }
        createStream(name) {
            return __awaiter(this, void 0, void 0, function* () {
                return this._systemGlue.interop.createStream(name);
            });
        }
        transmitMessage(methodName, messageData, baseErrorMessage, target, options) {
            return __awaiter(this, void 0, void 0, function* () {
                let invocationResult;
                try {
                    invocationResult = yield this._systemGlue.interop.invoke(methodName, messageData, target, options);
                    if (!invocationResult) {
                        throw new Error(`${baseErrorMessage} Received unsupported result from the client - empty result`);
                    }
                    if (!Array.isArray(invocationResult.all_return_values) || invocationResult.all_return_values.length === 0) {
                        throw new Error(`${baseErrorMessage} Received unsupported result from the client - empty values collection`);
                    }
                }
                catch (error) {
                    if (error && error.all_errors && error.all_errors.length) {
                        const invocationErrorMessage = error.all_errors[0].message;
                        throw new Error(`${baseErrorMessage} -> Inner message: ${invocationErrorMessage}`);
                    }
                    throw new Error(`${baseErrorMessage} -> Inner message: ${error.message}`);
                }
                return invocationResult.all_return_values[0].returned;
            });
        }
    }

    function createRegistry$3(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$3.default = createRegistry$3;
    var lib$4 = createRegistry$3;

    class PortsBridge {
        constructor(gateway, sessionStorage, ioc) {
            this.gateway = gateway;
            this.sessionStorage = sessionStorage;
            this.ioc = ioc;
            this.registry = lib$4();
            this.clients = {};
            this.unLoadStarted = false;
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.gateway.start(config);
                this.setUpGenericMessageHandler();
                this.setUpBeforeUnload();
            });
        }
        createInternalClient() {
            return __awaiter(this, void 0, void 0, function* () {
                const channel = this.ioc.createMessageChannel();
                yield this.gateway.connectClient(channel.port1);
                return channel.port2;
            });
        }
        onClientUnloaded(callback) {
            return this.registry.add("client-unloaded", callback);
        }
        setUpBeforeUnload() {
            window.addEventListener("beforeunload", () => {
                this.unLoadStarted = true;
                const message = {
                    glue42core: {
                        type: Glue42CoreMessageTypes.platformUnload.name
                    }
                };
                for (const id in this.clients) {
                    this.clients[id].postMessage(message, defaultTargetString);
                }
            });
        }
        setUpGenericMessageHandler() {
            window.addEventListener("message", (event) => {
                var _a;
                const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || this.unLoadStarted) {
                    return;
                }
                if (data.type === Glue42CoreMessageTypes.clientUnload.name) {
                    const client = {
                        windowId: data.data.ownWindowId,
                        win: event.source
                    };
                    return this.registry.execute("client-unloaded", client);
                }
                if (data.type === Glue42CoreMessageTypes.connectionRequest.name) {
                    return this.handleRemoteConnectionRequest(event.source, event.origin, data.clientId, data.clientType, data.bridgeInstanceId);
                }
                if (data.type === Glue42CoreMessageTypes.platformPing.name) {
                    return this.handlePlatformPing(event.source, event.origin);
                }
                if (data.type === Glue42CoreMessageTypes.parentPing.name) {
                    return this.handleParentPing(event.source, event.origin);
                }
            });
        }
        handleRemoteConnectionRequest(source, origin, clientId, clientType, bridgeInstanceId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const channel = this.ioc.createMessageChannel();
                yield this.gateway.connectClient(channel.port1, this.removeClient.bind(this));
                const foundData = this.sessionStorage.getBridgeInstanceData(bridgeInstanceId);
                const appName = foundData === null || foundData === void 0 ? void 0 : foundData.appName;
                const myWindowId = (_a = this.sessionStorage.getWindowDataByName("Platform")) === null || _a === void 0 ? void 0 : _a.windowId;
                const message = {
                    glue42core: {
                        type: Glue42CoreMessageTypes.connectionAccepted.name,
                        port: channel.port2,
                        parentWindowId: myWindowId,
                        appName, clientId, clientType
                    }
                };
                if (clientType === "child") {
                    this.clients[clientId] = source;
                }
                source.postMessage(message, origin, [channel.port2]);
            });
        }
        handleParentPing(source, origin) {
            const message = {
                glue42core: {
                    type: Glue42CoreMessageTypes.parentReady.name
                }
            };
            source.postMessage(message, origin);
        }
        handlePlatformPing(source, origin) {
            const message = {
                glue42core: {
                    type: Glue42CoreMessageTypes.platformReady.name
                }
            };
            source.postMessage(message, origin);
        }
        removeClient(clientId) {
            if (!clientId) {
                return;
            }
            if (this.clients[clientId]) {
                delete this.clients[clientId];
            }
        }
    }

    const windowOperationDecoder = oneOf$1(constant$1("openWindow"), constant$1("windowHello"), constant$1("getUrl"), constant$1("getTitle"), constant$1("setTitle"), constant$1("moveResize"), constant$1("focus"), constant$1("close"), constant$1("getBounds"), constant$1("registerWorkspaceWindow"), constant$1("unregisterWorkspaceWindow"));
    const openWindowConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        url: nonEmptyStringDecoder$1,
        options: optional$1(windowOpenSettingsDecoder$1)
    });
    const openWindowSuccessDecoder = object$1({
        windowId: nonEmptyStringDecoder$1,
        name: nonEmptyStringDecoder$1
    });
    const simpleWindowDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1
    });
    const windowBoundsResultDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        bounds: object$1({
            top: number$1(),
            left: number$1(),
            width: nonNegativeNumberDecoder$1,
            height: nonNegativeNumberDecoder$1
        })
    });
    const windowUrlResultDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        url: nonEmptyStringDecoder$1
    });
    const windowMoveResizeConfigDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relative: optional$1(boolean$1())
    });
    const windowTitleConfigDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        title: string$1()
    });

    const workspacesOperationDecoder = oneOf$1(constant$1("isWindowInWorkspace"), constant$1("createWorkspace"), constant$1("getAllFramesSummaries"), constant$1("getFrameSummary"), constant$1("getAllWorkspacesSummaries"), constant$1("getWorkspaceSnapshot"), constant$1("getAllLayoutsSummaries"), constant$1("openWorkspace"), constant$1("deleteLayout"), constant$1("saveLayout"), constant$1("importLayout"), constant$1("exportAllLayouts"), constant$1("restoreItem"), constant$1("maximizeItem"), constant$1("focusItem"), constant$1("closeItem"), constant$1("resizeItem"), constant$1("moveFrame"), constant$1("getFrameSnapshot"), constant$1("forceLoadWindow"), constant$1("ejectWindow"), constant$1("setItemTitle"), constant$1("moveWindowTo"), constant$1("addWindow"), constant$1("addContainer"), constant$1("bundleWorkspace"), constant$1("changeFrameState"), constant$1("getFrameState"), constant$1("frameHello"));
    const frameHelloDecoder = object$1({
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const workspaceWindowDataDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        windowId: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        appName: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1)
    });
    const isWindowInSwimlaneResultDecoder = object$1({
        inWorkspace: boolean$1()
    });
    const allParentDecoder = oneOf$1(constant$1("workspace"), constant$1("row"), constant$1("column"), constant$1("group"));
    const subParentDecoder = oneOf$1(constant$1("row"), constant$1("column"), constant$1("group"));
    const frameStateDecoder = oneOf$1(constant$1("maximized"), constant$1("minimized"), constant$1("normal"));
    const workspaceBuilderCreateConfigDecoder = object$1({
        saveLayout: optional$1(boolean$1())
    });
    const deleteLayoutConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1
    });
    const swimlaneWindowDefinitionDecoder = object$1({
        type: optional$1(constant$1("window")),
        appName: optional$1(nonEmptyStringDecoder$1),
        windowId: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1())
    });
    const strictSwimlaneWindowDefinitionDecoder = object$1({
        type: constant$1("window"),
        appName: optional$1(nonEmptyStringDecoder$1),
        windowId: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1())
    });
    const parentDefinitionDecoder = object$1({
        type: optional$1(subParentDecoder),
        children: optional$1(lazy$1(() => array$1(oneOf$1(swimlaneWindowDefinitionDecoder, parentDefinitionDecoder))))
    });
    const strictParentDefinitionDecoder = object$1({
        type: subParentDecoder,
        children: optional$1(lazy$1(() => array$1(oneOf$1(strictSwimlaneWindowDefinitionDecoder, strictParentDefinitionDecoder))))
    });
    const stateDecoder = oneOf$1(string$1().where((s) => s.toLowerCase() === "maximized", "Expected a case insensitive variation of 'maximized'"), string$1().where((s) => s.toLowerCase() === "normal", "Expected a case insensitive variation of 'normal'"));
    const newFrameConfigDecoder = object$1({
        bounds: optional$1(object$1({
            left: optional$1(number$1()),
            top: optional$1(number$1()),
            width: optional$1(nonNegativeNumberDecoder$1),
            height: optional$1(nonNegativeNumberDecoder$1)
        }))
    });
    const restoreTypeDecoder = oneOf$1(constant$1("direct"), constant$1("delayed"), constant$1("lazy"));
    const restoreWorkspaceConfigDecoder = object$1({
        app: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        restoreType: optional$1(restoreTypeDecoder),
        title: optional$1(nonEmptyStringDecoder$1),
        reuseWorkspaceId: optional$1(nonEmptyStringDecoder$1),
        frameId: optional$1(nonEmptyStringDecoder$1),
        lockdown: optional$1(boolean$1()),
        activateFrame: optional$1(boolean$1()),
        newFrame: optional$1(oneOf$1(newFrameConfigDecoder, boolean$1())),
        noTabHeader: optional$1(boolean$1()),
        inMemoryLayout: optional$1(boolean$1())
    });
    const openWorkspaceConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        restoreOptions: optional$1(restoreWorkspaceConfigDecoder)
    });
    const workspaceDefinitionDecoder = object$1({
        children: optional$1(array$1(oneOf$1(swimlaneWindowDefinitionDecoder, parentDefinitionDecoder))),
        context: optional$1(anyJson$1()),
        config: optional$1(object$1({
            title: optional$1(nonEmptyStringDecoder$1),
            position: optional$1(nonNegativeNumberDecoder$1),
            isFocused: optional$1(boolean$1()),
            noTabHeader: optional$1(boolean$1())
        })),
        frame: optional$1(object$1({
            reuseFrameId: optional$1(nonEmptyStringDecoder$1),
            newFrame: optional$1(oneOf$1(boolean$1(), newFrameConfigDecoder))
        }))
    });
    const builderConfigDecoder = object$1({
        type: allParentDecoder,
        definition: optional$1(oneOf$1(workspaceDefinitionDecoder, parentDefinitionDecoder))
    });
    const workspaceCreateConfigDecoder = intersection(workspaceDefinitionDecoder, object$1({
        saveConfig: optional$1(object$1({
            saveLayout: optional$1(boolean$1())
        }))
    }));
    const getFrameSummaryConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1
    });
    const frameSummaryDecoder = object$1({
        id: nonEmptyStringDecoder$1
    });
    const workspaceSummaryDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        positionIndex: number$1(),
        title: nonEmptyStringDecoder$1,
        focused: boolean$1(),
        layoutName: optional$1(nonEmptyStringDecoder$1)
    });
    const containerSummaryDecoder = object$1({
        type: subParentDecoder,
        id: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        positionIndex: number$1()
    });
    const eventTypeDecoder = oneOf$1(constant$1("frame"), constant$1("workspace"), constant$1("container"), constant$1("window"));
    const streamRequestArgumentsDecoder = object$1({
        type: eventTypeDecoder,
        branch: nonEmptyStringDecoder$1
    });
    const workspaceEventActionDecoder = oneOf$1(constant$1("opened"), constant$1("closing"), constant$1("closed"), constant$1("focus"), constant$1("added"), constant$1("loaded"), constant$1("removed"), constant$1("childrenUpdate"), constant$1("containerChange"), constant$1("maximized"), constant$1("minimized"), constant$1("normal"), constant$1("selected"));
    const workspaceConfigResultDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        title: nonEmptyStringDecoder$1,
        positionIndex: nonNegativeNumberDecoder$1,
        name: nonEmptyStringDecoder$1,
        layoutName: optional$1(nonEmptyStringDecoder$1)
    });
    const baseChildSnapshotConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        positionIndex: number$1()
    });
    const parentSnapshotConfigDecoder = anyJson$1();
    const swimlaneWindowSnapshotConfigDecoder = intersection(baseChildSnapshotConfigDecoder, object$1({
        windowId: optional$1(nonEmptyStringDecoder$1),
        isMaximized: optional$1(boolean$1()),
        isFocused: boolean$1(),
        title: optional$1(string$1()),
        appName: optional$1(nonEmptyStringDecoder$1)
    }));
    const childSnapshotResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: oneOf$1(parentSnapshotConfigDecoder, swimlaneWindowSnapshotConfigDecoder),
        children: optional$1(lazy$1(() => array$1(childSnapshotResultDecoder))),
        type: oneOf$1(constant$1("window"), constant$1("row"), constant$1("column"), constant$1("group"))
    });
    const workspaceSnapshotResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: workspaceConfigResultDecoder,
        children: array$1(childSnapshotResultDecoder),
        frameSummary: frameSummaryDecoder
    });
    const customWorkspaceChildSnapshotDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: oneOf$1(parentSnapshotConfigDecoder, swimlaneWindowSnapshotConfigDecoder),
        children: optional$1(lazy$1(() => array$1(customWorkspaceChildSnapshotDecoder))),
        type: oneOf$1(constant$1("window"), constant$1("row"), constant$1("column"), constant$1("group"))
    });
    const windowLayoutItemDecoder$2 = object$1({
        type: constant$1("window"),
        config: object$1({
            appName: nonEmptyStringDecoder$1,
            url: optional$1(nonEmptyStringDecoder$1)
        })
    });
    const groupLayoutItemDecoder$2 = object$1({
        type: constant$1("group"),
        config: anyJson$1(),
        children: array$1(oneOf$1(windowLayoutItemDecoder$2))
    });
    const columnLayoutItemDecoder$2 = object$1({
        type: constant$1("column"),
        config: anyJson$1(),
        children: array$1(oneOf$1(groupLayoutItemDecoder$2, windowLayoutItemDecoder$2, lazy$1(() => columnLayoutItemDecoder$2), lazy$1(() => rowLayoutItemDecoder$2)))
    });
    const rowLayoutItemDecoder$2 = object$1({
        type: constant$1("row"),
        config: anyJson$1(),
        children: array$1(oneOf$1(columnLayoutItemDecoder$2, groupLayoutItemDecoder$2, windowLayoutItemDecoder$2, lazy$1(() => rowLayoutItemDecoder$2)))
    });
    const workspaceLayoutDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        type: constant$1("Workspace"),
        metadata: optional$1(anyJson$1()),
        components: array$1(object$1({
            type: constant$1("Workspace"),
            state: object$1({
                config: anyJson$1(),
                context: anyJson$1(),
                children: array$1(oneOf$1(rowLayoutItemDecoder$2, columnLayoutItemDecoder$2, groupLayoutItemDecoder$2, windowLayoutItemDecoder$2))
            })
        }))
    });
    const workspacesLayoutImportConfigDecoder = object$1({
        layout: workspaceLayoutDecoder,
        mode: oneOf$1(constant$1("replace"), constant$1("merge"))
    });
    const exportedLayoutsResultDecoder = object$1({
        layouts: array$1(workspaceLayoutDecoder)
    });
    const frameSummaryResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
    });
    const frameSummariesResultDecoder = object$1({
        summaries: array$1(frameSummaryResultDecoder)
    });
    const workspaceSummaryResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: workspaceConfigResultDecoder
    });
    const workspaceSummariesResultDecoder = object$1({
        summaries: array$1(workspaceSummaryResultDecoder)
    });
    const frameSnapshotResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: anyJson$1(),
        workspaces: array$1(workspaceSnapshotResultDecoder)
    });
    const layoutSummaryDecoder$2 = object$1({
        name: nonEmptyStringDecoder$1
    });
    const layoutSummariesDecoder = object$1({
        summaries: array$1(layoutSummaryDecoder$2)
    });
    const simpleWindowOperationSuccessResultDecoder = object$1({
        windowId: nonEmptyStringDecoder$1
    });
    const voidResultDecoder = anyJson$1();
    const frameStateResultDecoder = object$1({
        state: frameStateDecoder
    });
    const resizeConfigDecoder = object$1({
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relative: optional$1(boolean$1())
    });
    const moveConfigDecoder = object$1({
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        relative: optional$1(boolean$1())
    });
    const simpleItemConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1
    });
    const frameStateConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        requestedState: frameStateDecoder
    });
    const setItemTitleConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        title: nonEmptyStringDecoder$1
    });
    const moveWindowConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        containerId: nonEmptyStringDecoder$1
    });
    const resizeItemConfigDecoder = intersection(simpleItemConfigDecoder, resizeConfigDecoder);
    const moveFrameConfigDecoder = intersection(simpleItemConfigDecoder, moveConfigDecoder);
    const simpleParentDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        type: subParentDecoder
    });
    const addWindowConfigDecoder = object$1({
        definition: swimlaneWindowDefinitionDecoder,
        parentId: nonEmptyStringDecoder$1,
        parentType: allParentDecoder
    });
    const addContainerConfigDecoder = object$1({
        definition: strictParentDefinitionDecoder,
        parentId: nonEmptyStringDecoder$1,
        parentType: allParentDecoder
    });
    const addItemResultDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const pingResultDecoder = object$1({
        live: boolean$1()
    });
    const bundleConfigDecoder = object$1({
        type: oneOf$1(constant$1("row"), constant$1("column")),
        workspaceId: nonEmptyStringDecoder$1
    });
    const containerSummaryResultDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        config: parentSnapshotConfigDecoder
    });
    const frameStreamDataDecoder = object$1({
        frameSummary: frameSummaryDecoder
    });
    const workspaceStreamDataDecoder = object$1({
        workspaceSummary: workspaceSummaryResultDecoder,
        frameSummary: frameSummaryDecoder
    });
    const containerStreamDataDecoder = object$1({
        containerSummary: containerSummaryResultDecoder
    });
    const windowStreamDataDecoder = object$1({
        windowSummary: object$1({
            itemId: nonEmptyStringDecoder$1,
            parentId: nonEmptyStringDecoder$1,
            config: swimlaneWindowSnapshotConfigDecoder
        })
    });
    const workspaceLayoutSaveConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        saveContext: optional$1(boolean$1())
    });

    class WindowsController$1 {
        constructor(glueController, sessionController, stateController, ioc) {
            this.glueController = glueController;
            this.sessionController = sessionController;
            this.stateController = stateController;
            this.ioc = ioc;
            this.started = false;
            this.operations = {
                openWindow: { name: "openWindow", execute: this.openWindow.bind(this), dataDecoder: openWindowConfigDecoder$1 },
                windowHello: { name: "windowHello", execute: this.handleWindowHello.bind(this) },
                getBounds: { name: "getBounds", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowBoundsResultDecoder$1, execute: this.handleGetBounds.bind(this) },
                getUrl: { name: "getUrl", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowUrlResultDecoder$1, execute: this.handleGetUrl.bind(this) },
                moveResize: { name: "moveResize", dataDecoder: windowMoveResizeConfigDecoder$1, execute: this.handleMoveResize.bind(this) },
                focus: { name: "focus", dataDecoder: simpleWindowDecoder$1, execute: this.handleFocus.bind(this) },
                close: { name: "close", dataDecoder: simpleWindowDecoder$1, execute: this.handleClose.bind(this) },
                getTitle: { name: "getTitle", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowTitleConfigDecoder$1, execute: this.handleGetTitle.bind(this) },
                setTitle: { name: "setTitle", dataDecoder: windowTitleConfigDecoder$1, execute: this.handleSetTitle.bind(this) },
                registerWorkspaceWindow: { name: "registerWorkspaceWindow", dataDecoder: workspaceWindowDataDecoder, execute: this.registerWorkspaceWindow.bind(this) },
                unregisterWorkspaceWindow: { name: "unregisterWorkspaceWindow", dataDecoder: simpleWindowDecoder$1, execute: this.handleWorkspaceClientRemoval.bind(this) }
            };
        }
        get logger() {
            return logger.get("windows.controller");
        }
        get moveResizeOperation() {
            return this.operations.moveResize;
        }
        get setTitleOperation() {
            return this.operations.setTitle;
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this.clientResponseTimeoutMs = config.windows.windowResponseTimeoutMs;
                this.defaultBounds = config.windows.defaultWindowOpenBounds;
                this.started = true;
                this.stateController.onWindowDisappeared(this.cleanUpWindow.bind(this));
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const windowsData = args.data;
                const commandId = args.commandId;
                const operationValidation = windowOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This window request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(windowsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Windows request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(windowsData)}`);
                const result = yield this.operations[operationName].execute(windowsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Windows request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        getWindowTitle(windowId, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const boundsResult = yield this.handleGetTitle({ windowId }, commandId);
                return boundsResult.title;
            });
        }
        getWindowBounds(windowId, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const boundsResult = yield this.handleGetBounds({ windowId }, commandId);
                return boundsResult.bounds;
            });
        }
        processNewWindow(windowData, context, childWindow) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`processing a new window with id: ${windowData.windowId} and name: ${windowData.name}`);
                this.sessionController.saveWindowData(windowData);
                if (childWindow) {
                    this.stateController.add(childWindow, windowData.windowId);
                }
                if (context) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`setting the context for window ${windowData.windowId}`);
                    yield this.glueController.setWindowStartContext(windowData.windowId, context);
                }
                this.emitStreamData("windowAdded", windowData);
            });
        }
        handleWorkspaceClientRemoval(client) {
            return __awaiter(this, void 0, void 0, function* () {
                return this.cleanUpWindow(client.windowId);
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b, _c;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (!windowId) {
                return;
            }
            if (win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, processing window cleanup`);
                return this.cleanUpWindow(windowId);
            }
            (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`${windowId} detected as not closed, adding to state controller`);
            this.stateController.add(win, windowId);
        }
        cleanUpWindow(windowId) {
            this.stateController.remove(windowId);
            const somethingRemoved = this.sessionController.fullWindowClean(windowId);
            if (somethingRemoved) {
                this.emitStreamData("windowRemoved", { windowId });
            }
        }
        registerWorkspaceWindow(data, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling workspace window registration with id: ${data.windowId} and name: ${data.name}`);
                this.sessionController.saveWindowData({ windowId: data.windowId, name: data.name });
                this.sessionController.saveWorkspaceClient({ windowId: data.windowId, frameId: data.frameId, initialTitle: data.title });
                if (data.context) {
                    yield this.glueController.setWindowStartContext(data.windowId, data.context);
                }
                this.emitStreamData("windowAdded", { windowId: data.windowId, name: data.name });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] workspace window registered successfully with id ${data.windowId} and name ${data.name}`);
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("windows", operation, data);
        }
        openWindow(config, commandId) {
            var _a, _b, _c, _d, _e, _f;
            return __awaiter(this, void 0, void 0, function* () {
                const nameExists = this.sessionController.getWindowDataByName(config.name);
                if (nameExists) {
                    throw new Error(`Cannot open a window with name: ${config.name}, because a window with that name already exists.`);
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling open command with a valid name: ${config.name}, url: ${config.url} and options: ${JSON.stringify(config.options)}`);
                const windowData = {
                    name: config.name,
                    windowId: (_c = (_b = config.options) === null || _b === void 0 ? void 0 : _b.windowId) !== null && _c !== void 0 ? _c : shortid$1.generate()
                };
                const openBounds = yield this.getStartingBounds(config, commandId);
                const options = `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] calling native window open with bounds: ${options}`);
                const childWindow = window.open(config.url, windowData.windowId, options);
                if (!childWindow) {
                    throw new Error(`Cannot open window with url: ${config.url} and name: ${config.name}. The most likely reason is that the user has not approved popups or has a blocker.`);
                }
                yield this.processNewWindow(windowData, (_e = config.options) === null || _e === void 0 ? void 0 : _e.context, childWindow);
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] the new window is opened, saved in session, state and announced, responding to the caller`);
                return windowData;
            });
        }
        handleWindowHello(client, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a hello message from a real windowId: ${client.windowId}`);
                if (client.windowId) {
                    this.stateController.remove(client.windowId);
                    const workspaceClient = this.sessionController.getWorkspaceClientById(client.windowId);
                    if (workspaceClient && workspaceClient.initialTitle) {
                        const windowId = client.windowId;
                        const title = workspaceClient.initialTitle;
                        PromiseWrap$1(() => this.glueController.callWindow(this.operations.setTitle, { windowId, title }, windowId), this.clientResponseTimeoutMs)
                            .catch((err) => { var _a; return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] error while setting the workspace window title: ${err.message}`); });
                    }
                }
                const isWorkspaceFrame = !!(client.windowId && this.sessionController.getFrameData(client.windowId));
                const allWindows = this.sessionController.getAllWindowsData().map((w) => ({ windowId: w.windowId, name: w.name }));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] a full list of all current windows has been compiled, sending it to the caller`);
                return { windows: allWindows, isWorkspaceFrame };
            });
        }
        handleGetUrl(data, commandId) {
            var _a;
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the url of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get url request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the url of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow(this.operations.getUrl, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleGetTitle(data, commandId) {
            var _a;
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the title of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get title request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the title of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow(this.operations.getTitle, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleSetTitle(data, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot set the title of window: ${data.windowId}, because it is does not exist for the platform`);
                }
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    yield this.ioc.workspacesController.setItemTitle({ itemId: data.windowId, title: data.title }, commandId);
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a set title request for window ${data.windowId} and title: ${data.title}`);
                const timeoutMessage = `Cannot set the title of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
                yield PromiseWrap$1(() => this.glueController.callWindow(this.operations.setTitle, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
            });
        }
        handleMoveResize(data, commandId) {
            var _a;
            const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
            if (workspaceClient) {
                throw new Error(`Cannot move resize window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more control`);
            }
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot move resize window: ${data.windowId}, because it is does not exist for the platform`);
            }
            if (windowData.name === "Platform") {
                throw new Error("Move-resizing the main application is not allowed");
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a move resize request for window ${data.windowId} and data: ${JSON.stringify(data)}`);
            const timeoutMessage = `Cannot move resize window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow(this.operations.moveResize, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleGetBounds(data, commandId) {
            var _a;
            const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
            if (workspaceClient) {
                throw new Error(`Cannot get bounds of window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more info`);
            }
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the bounds of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get bounds request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the bounds of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow(this.operations.getBounds, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleFocus(data, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    throw new Error(`Cannot focus window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more control`);
                }
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot focus window: ${data.windowId}, because it is not known by the platform`);
                }
                if (windowData.name === "Platform") {
                    throw new Error("Focusing the main application is not allowed");
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a focus request for window ${data.windowId}`);
                window.open(undefined, windowData.windowId);
            });
        }
        handleClose(data, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] this window is detected as a workspace window, closing via the workspaces controller`);
                    yield this.ioc.workspacesController.closeItem({ itemId: data.windowId }, commandId);
                    return;
                }
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot close window: ${data.windowId}, because it is not known by the platform`);
                }
                if (windowData.name === "Platform") {
                    throw new Error("Closing the main application is not allowed");
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] handling a close request for window ${data.windowId}`);
                (_c = window.open(undefined, windowData.windowId)) === null || _c === void 0 ? void 0 : _c.close();
                this.cleanUpWindow(windowData.windowId);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] window ${data.windowId} has been closed, removed from session, state and announced`);
            });
        }
        getStartingBounds(config, commandId) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
            return __awaiter(this, void 0, void 0, function* () {
                const openBounds = {
                    top: (_b = (_a = config.options) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : this.defaultBounds.top,
                    left: (_d = (_c = config.options) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : this.defaultBounds.left,
                    height: (_f = (_e = config.options) === null || _e === void 0 ? void 0 : _e.height) !== null && _f !== void 0 ? _f : this.defaultBounds.height,
                    width: (_h = (_g = config.options) === null || _g === void 0 ? void 0 : _g.width) !== null && _h !== void 0 ? _h : this.defaultBounds.width
                };
                if (!((_j = config.options) === null || _j === void 0 ? void 0 : _j.relativeTo)) {
                    return openBounds;
                }
                const relativeWindowId = config.options.relativeTo;
                const windowData = this.sessionController.getWindowDataById(relativeWindowId);
                if (!windowData) {
                    return openBounds;
                }
                try {
                    const boundsResult = yield this.handleGetBounds({ windowId: windowData.windowId }, commandId);
                    const relativeWindowBounds = boundsResult.bounds;
                    const relativeDir = (_k = config.options.relativeDirection) !== null && _k !== void 0 ? _k : "right";
                    const newBounds = getRelativeBounds(openBounds, relativeWindowBounds, relativeDir);
                    return newBounds;
                }
                catch (error) {
                    return openBounds;
                }
            });
        }
    }

    class SessionStorageController {
        constructor() {
            this.windowsNamespace = "g42_core_windows";
            this.instancesNamespace = "g42_core_instances";
            this.bridgeInstancesNamespace = "g42_core_bridge";
            this.nonGlueNamespace = "g42_core_nonglue";
            this.workspaceWindowsNamespace = "g42_core_workspace_clients";
            this.workspaceFramesNamespace = "g42_core_workspace_frames";
            this.layoutNamespace = "g42_core_layouts";
            this.appDefsNamespace = "g42_core_app_definitions";
            this.sessionStorage = window.sessionStorage;
            [
                this.bridgeInstancesNamespace,
                this.windowsNamespace,
                this.instancesNamespace,
                this.nonGlueNamespace,
                this.workspaceWindowsNamespace,
                this.workspaceFramesNamespace,
                this.layoutNamespace,
                this.appDefsNamespace
            ].forEach((namespace) => {
                const data = this.sessionStorage.getItem(namespace);
                if (!data) {
                    this.sessionStorage.setItem(namespace, JSON.stringify([]));
                }
            });
        }
        get logger() {
            return logger.get("session.storage");
        }
        getAllApps() {
            const appsString = JSON.parse(this.sessionStorage.getItem(this.appDefsNamespace));
            return appsString;
        }
        overwriteApps(apps) {
            this.sessionStorage.setItem(this.appDefsNamespace, JSON.stringify(apps));
        }
        removeApp(name) {
            const all = this.getAllApps();
            const app = all.find((app) => app.name === name);
            if (app) {
                this.sessionStorage.setItem(this.appDefsNamespace, JSON.stringify(all.filter((a) => a.name !== name)));
            }
            return app;
        }
        getLayoutSnapshot() {
            const snapsString = JSON.parse(this.sessionStorage.getItem(this.layoutNamespace));
            return { layouts: snapsString };
        }
        saveLayoutSnapshot(snapshot) {
            this.sessionStorage.setItem(this.layoutNamespace, JSON.stringify(snapshot.layouts));
        }
        saveFrameData(frameData) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            if (allData.some((data) => data.windowId === frameData.windowId)) {
                return;
            }
            allData.push(frameData);
            this.sessionStorage.setItem(this.workspaceFramesNamespace, JSON.stringify(allData));
        }
        getAllFrames() {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            return allData;
        }
        getFrameData(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            return allData.find((data) => data.windowId === windowId);
        }
        setFrameActive(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            const frameData = allData.find((data) => data.windowId === windowId);
            if (!frameData || frameData.active) {
                return;
            }
            frameData.active = true;
            this.sessionStorage.setItem(this.workspaceFramesNamespace, JSON.stringify(allData));
        }
        removeFrameData(windowId) {
            if (!windowId) {
                return false;
            }
            return this.doRemove(windowId, this.workspaceFramesNamespace);
        }
        saveWorkspaceClient(windowData) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            if (allData.some((data) => data.windowId === windowData.windowId)) {
                return;
            }
            allData.push(windowData);
            this.sessionStorage.setItem(this.workspaceWindowsNamespace, JSON.stringify(allData));
        }
        getWorkspaceClientById(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            return allData.find((data) => data.windowId === windowId);
        }
        pickWorkspaceClients(predicate) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            return allData.filter(predicate);
        }
        removeWorkspaceClient(windowId) {
            if (!windowId) {
                return false;
            }
            return this.doRemove(windowId, this.workspaceWindowsNamespace);
        }
        getAllNonGlue() {
            return JSON.parse(this.sessionStorage.getItem(this.nonGlueNamespace));
        }
        saveNonGlue(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.nonGlueNamespace));
            if (allData.some((entry) => entry.windowId === data.windowId)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return false;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving non glue window with id: ${data.windowId}`);
            allData.push(data);
            this.sessionStorage.setItem(this.nonGlueNamespace, JSON.stringify(allData));
            return true;
        }
        removeNonGlue(data) {
            var _a;
            if (!data || !data.windowId) {
                return false;
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing non glue window with id: ${data.windowId}`);
            return this.doRemove(data.windowId, this.nonGlueNamespace);
        }
        saveBridgeInstanceData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            if (allData.some((entry) => entry.windowId === data.windowId)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving new instance with id: ${data.windowId} and app name: ${data.appName}`);
            allData.push(data);
            this.sessionStorage.setItem(this.bridgeInstancesNamespace, JSON.stringify(allData));
        }
        getBridgeInstanceData(windowId) {
            const all = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            return all.find((e) => e.windowId === windowId);
        }
        removeBridgeInstanceData(windowId) {
            const all = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            this.sessionStorage.setItem(this.bridgeInstancesNamespace, JSON.stringify(all.filter((e) => e.windowId !== windowId)));
        }
        saveInstanceData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.instancesNamespace));
            if (allData.some((entry) => entry.id === data.id)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving new instance with id: ${data.id} and app name: ${data.applicationName}`);
            allData.push(data);
            this.sessionStorage.setItem(this.instancesNamespace, JSON.stringify(allData));
        }
        removeInstance(id) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing instance with id: ${id}`);
            const all = this.getAllInstancesData();
            this.sessionStorage.setItem(this.instancesNamespace, JSON.stringify(all.filter((e) => e.id !== id)));
            this.removeBridgeInstanceData(id);
        }
        getInstanceData(id) {
            const all = this.getAllInstancesData();
            return all.find((e) => e.id === id);
        }
        getAllInstancesData() {
            return JSON.parse(this.sessionStorage.getItem(this.instancesNamespace));
        }
        saveWindowData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.windowsNamespace));
            if (allData.some((entry) => entry.name === data.name)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this name already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving window with id: ${data.windowId} and name: ${window.name}`);
            allData.push(data);
            this.sessionStorage.setItem(this.windowsNamespace, JSON.stringify(allData));
        }
        getAllWindowsData() {
            return JSON.parse(this.sessionStorage.getItem(this.windowsNamespace));
        }
        getWindowDataById(windowId) {
            const all = this.getAllWindowsData();
            return all.find((entry) => entry.windowId === windowId);
        }
        getWindowDataByName(name) {
            const all = this.getAllWindowsData();
            return all.find((entry) => entry.name === name);
        }
        removeWindowData(windowId) {
            var _a;
            if (!windowId) {
                return false;
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing window with id: ${windowId}`);
            return this.doRemove(windowId, this.windowsNamespace);
        }
        fullWindowClean(windowId) {
            const windowRemoved = this.removeWindowData(windowId);
            const nonGlueRemoved = this.removeNonGlue({ windowId });
            const workspaceClientRemoved = this.removeWorkspaceClient(windowId);
            return windowRemoved || nonGlueRemoved || workspaceClientRemoved;
        }
        doRemove(id, namespace) {
            const data = JSON.parse(this.sessionStorage.getItem(namespace));
            const result = data.reduce((soFar, entry) => {
                if (entry.windowId === id) {
                    soFar.removed = true;
                }
                else {
                    soFar.newData.push(entry);
                }
                return soFar;
            }, { removed: false, newData: [] });
            this.sessionStorage.setItem(namespace, JSON.stringify(result.newData));
            return result.removed;
        }
    }

    class StateController {
        constructor(sessionStorage) {
            this.sessionStorage = sessionStorage;
            this.registry = lib$4();
            this.checkIntervalMs = 500;
            this.childrenToCheck = [];
            this.checkerCancelled = false;
        }
        get logger() {
            return logger.get("state.controller");
        }
        start() {
            const nonGlueWindows = this.sessionStorage.getAllNonGlue();
            nonGlueWindows.forEach((w) => {
                var _a;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`detected non glue window with id ${w.windowId} from previous session, attempting reference refresh`);
                const nativeWindow = window.open(undefined, w.windowId);
                if (nativeWindow) {
                    this.childrenToCheck.push({ window: nativeWindow, windowId: w.windowId });
                }
            });
            this.checkWindows();
        }
        add(child, windowId) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`adding window id: ${windowId} to non glue state checking`);
            const saved = this.sessionStorage.saveNonGlue({ windowId });
            if (saved) {
                this.childrenToCheck.push({ window: child, windowId });
            }
        }
        remove(windowId) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing window id: ${windowId} from non glue state checking`);
            this.sessionStorage.removeNonGlue({ windowId });
            this.childrenToCheck = this.childrenToCheck.filter((w) => w.windowId !== windowId);
        }
        cancel() {
            if (this.currentTimeout) {
                clearTimeout(this.currentTimeout);
            }
            this.checkerCancelled = true;
        }
        onWindowDisappeared(cb) {
            return this.registry.add("window-disappear", cb);
        }
        checkWindows() {
            if (this.checkerCancelled) {
                return;
            }
            this.childrenToCheck.forEach((child) => {
                var _a;
                if (!child.window || child.window.closed) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`non glue window ${child.windowId} has disappeared, removing from collections and announcing.`);
                    this.remove(child.windowId);
                    this.registry.execute("window-disappear", child.windowId);
                    return;
                }
            });
            this.currentTimeout = setTimeout(this.checkWindows.bind(this), this.checkIntervalMs);
        }
    }

    const appManagerOperationTypesDecoder$1 = oneOf$1(constant$1("appHello"), constant$1("applicationStart"), constant$1("instanceStop"), constant$1("registerWorkspaceApp"), constant$1("unregisterWorkspaceApp"), constant$1("export"), constant$1("import"), constant$1("remove"), constant$1("clear"));
    const basicInstanceDataDecoder$1 = object$1({
        id: nonEmptyStringDecoder$1
    });
    const instanceDataDecoder$1 = object$1({
        id: nonEmptyStringDecoder$1,
        applicationName: nonEmptyStringDecoder$1
    });
    const applicationDataDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        createOptions: applicationDetailsDecoder$1,
        instances: array$1(instanceDataDecoder$1),
        userProperties: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        icon: optional$1(nonEmptyStringDecoder$1),
        caption: optional$1(nonEmptyStringDecoder$1)
    });
    const baseApplicationDataDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        createOptions: applicationDetailsDecoder$1,
        userProperties: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        icon: optional$1(nonEmptyStringDecoder$1),
        caption: optional$1(nonEmptyStringDecoder$1)
    });
    const appHelloSuccessDecoder$1 = object$1({
        apps: array$1(applicationDataDecoder$1)
    });
    const appHelloDecoder = object$1({
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const applicationStartConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        id: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relativeTo: optional$1(nonEmptyStringDecoder$1),
        relativeDirection: optional$1(oneOf$1(constant$1("top"), constant$1("left"), constant$1("right"), constant$1("bottom"))),
        waitForAGMReady: optional$1(boolean$1())
    });
    const appsImportOperationDecoder$1 = object$1({
        definitions: array$1(allApplicationDefinitionsDecoder$1),
        mode: oneOf$1(constant$1("replace"), constant$1("merge"))
    });
    const appRemoveConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1
    });
    const appsExportOperationDecoder$1 = object$1({
        definitions: array$1(glueCoreAppDefinitionDecoder)
    });

    class ApplicationsController {
        constructor(glueController, sessionStorage, stateController, ioc) {
            this.glueController = glueController;
            this.sessionStorage = sessionStorage;
            this.stateController = stateController;
            this.ioc = ioc;
            this.applicationStartTimeoutMs = 15000;
            this.started = false;
            this.locks = {};
            this.operations = {
                appHello: { name: "appHello", dataDecoder: appHelloDecoder, resultDecoder: appHelloSuccessDecoder$1, execute: this.handleAppHello.bind(this) },
                applicationStart: { name: "applicationStart", dataDecoder: applicationStartConfigDecoder$1, resultDecoder: instanceDataDecoder$1, execute: this.handleApplicationStart.bind(this) },
                instanceStop: { name: "instanceStop", dataDecoder: basicInstanceDataDecoder$1, execute: this.handleInstanceStop.bind(this) },
                registerWorkspaceApp: { name: "registerWorkspaceApp", dataDecoder: workspaceWindowDataDecoder, execute: this.registerWorkspaceApp.bind(this) },
                unregisterWorkspaceApp: { name: "unregisterWorkspaceApp", dataDecoder: simpleWindowDecoder$1, execute: this.unregisterWorkspaceApp.bind(this) },
                import: { name: "import", dataDecoder: appsImportOperationDecoder$1, execute: this.handleImport.bind(this) },
                remove: { name: "remove", dataDecoder: appRemoveConfigDecoder$1, execute: this.handleRemove.bind(this) },
                export: { name: "export", resultDecoder: appsExportOperationDecoder$1, execute: this.handleExport.bind(this) },
                clear: { name: "clear", execute: this.handleClear.bind(this) }
            };
        }
        get logger() {
            return logger.get("applications.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                this.config = config.applications;
                this.defaultBounds = config.windows.defaultWindowOpenBounds;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("initializing applications");
                yield this.setupApps(this.config);
                this.started = true;
                this.stateController.onWindowDisappeared(this.processInstanceClosed.bind(this));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        setupApps(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (config.local && config.local.length) {
                    const parsedDefinitions = config.local.map((def) => this.parseDefinition(def));
                    const currentApps = this.sessionStorage.getAllApps();
                    this.mergeImport(currentApps, parsedDefinitions);
                }
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const applicationData = args.data;
                const commandId = args.commandId;
                const operationValidation = appManagerOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This appManager request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(applicationData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`AppManager request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(applicationData)}`);
                const result = yield this.operations[operationName].execute(applicationData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`AppManager request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b, _c;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (!windowId) {
                return;
            }
            if (win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, processing instance closed`);
                return this.processInstanceClosed(windowId);
            }
            (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`${windowId} detected as closed, skipping instance closed procedure`);
        }
        unregisterWorkspaceApp(config) {
            this.processInstanceClosed(config.windowId);
            this.ioc.windowsController.cleanUpWindow(config.windowId);
        }
        handleApplicationStart(config, commandId) {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling application start command for application: ${config.name}`);
                const appDefinition = this.sessionStorage.getAllApps().find((app) => app.name === config.name);
                if (!appDefinition) {
                    throw new Error(`Cannot start an instance of application: ${config.name}, because it is not found.`);
                }
                const instance = {
                    id: (_b = config.id) !== null && _b !== void 0 ? _b : shortid$1.generate(),
                    applicationName: config.name
                };
                const openBounds = yield this.getStartingBounds(appDefinition.createOptions, config, commandId);
                const options = `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] open arguments are valid, opening to bounds: ${options}`);
                const childWindow = window.open(appDefinition.createOptions.url, instance.id, options);
                if (!childWindow) {
                    throw new Error(`Cannot an instance with url: ${appDefinition.createOptions.url} for application: ${config.name}. The most likely reason is that the user has not approved popups or has a blocker.`);
                }
                this.sessionStorage.saveBridgeInstanceData({ windowId: instance.id, appName: instance.applicationName });
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] the new window has been opened successfully with id: ${instance.id}, checking for AGM ready and notifying windows`);
                if (config.waitForAGMReady) {
                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] wait for AGM is set, configuring the lock`);
                    this.setLock(instance.id);
                }
                yield this.notifyWindows(instance, config.context, childWindow);
                if (this.locks[instance.id]) {
                    try {
                        yield PromiseWrap$1(() => { var _a; return (_a = this.locks[instance.id]) === null || _a === void 0 ? void 0 : _a.keyOne; }, this.applicationStartTimeoutMs);
                    }
                    catch (error) {
                        throw new Error(`Application start for ${config.name} timed out waiting for client to initialize Glue`);
                    }
                }
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] the windows controller has been successfully notified`);
                const processConfig = {
                    data: instance,
                    monitorState: config.waitForAGMReady ? undefined : { child: childWindow },
                    context: config.context
                };
                yield this.processNewInstance(processConfig);
                (_g = this.logger) === null || _g === void 0 ? void 0 : _g.trace(`[${commandId}] the new instance with id ${instance.id} has been saved, announced and context set, lifting key two and responding to caller`);
                (_h = this.locks[instance.id]) === null || _h === void 0 ? void 0 : _h.openKeyTwo();
                return instance;
            });
        }
        processInstanceClosed(selfWindowId) {
            if (!selfWindowId) {
                return;
            }
            const instanceData = this.sessionStorage.getInstanceData(selfWindowId);
            if (instanceData) {
                this.sessionStorage.removeInstance(instanceData.id);
                this.emitStreamData("instanceStopped", instanceData);
            }
        }
        notifyWindows(instance, context, child) {
            return __awaiter(this, void 0, void 0, function* () {
                const windowData = {
                    windowId: instance.id,
                    name: `${instance.applicationName}_${instance.id}`
                };
                yield this.ioc.windowsController.processNewWindow(windowData, context, child);
            });
        }
        handleAppHello(helloMsg, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling hello message for id: ${helloMsg.windowId}`);
                if (helloMsg.windowId && this.locks[helloMsg.windowId]) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] found an app lock, unlocking key one and waiting for the second one`);
                    this.locks[helloMsg.windowId].openKeyOne();
                    yield this.locks[helloMsg.windowId].keyTwo;
                    delete this.locks[helloMsg.windowId];
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] the lock is lifted, proceeding`);
                }
                const allInstances = this.sessionStorage.getAllInstancesData();
                const allAppsFull = this.sessionStorage.getAllApps().map((app) => {
                    const appInstances = allInstances.filter((inst) => inst.applicationName === app.name);
                    return Object.assign({}, app, { instances: appInstances });
                });
                if (helloMsg.windowId) {
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] there is a valid windowId, removing ${helloMsg.windowId} from the state controller`);
                    this.stateController.remove(helloMsg.windowId);
                    const foundApp = allAppsFull.find((app) => app.instances.some((inst) => inst.id === helloMsg.windowId));
                    if (foundApp && foundApp.title) {
                        const windowId = helloMsg.windowId;
                        const title = foundApp.title;
                        PromiseWrap$1(() => this.glueController.callWindow(this.ioc.windowsController.setTitleOperation, { windowId, title }, windowId), 20000)
                            .catch((err) => { var _a; return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] error while setting the application instance title: ${err.message}`); });
                    }
                }
                const helloSuccessMessage = { apps: allAppsFull };
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] compiled a list of all active applications and instances and returning it to the caller`);
                return helloSuccessMessage;
            });
        }
        handleInstanceStop(inst, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling stop command for instance: ${inst.id}`);
                const workspaceClient = this.sessionStorage.getWorkspaceClientById(inst.id);
                if (workspaceClient) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this instance is detected as a workspace window, closing via the workspaces controller`);
                    yield this.ioc.workspacesController.closeItem({ itemId: inst.id }, commandId);
                    return;
                }
                const instanceData = this.sessionStorage.getInstanceData(inst.id);
                if (!instanceData) {
                    throw new Error(`Cannot close instance: ${inst.id}, because it is not known by the platform`);
                }
                const windowData = this.sessionStorage.getWindowDataById(inst.id);
                if (!windowData) {
                    throw new Error(`Cannot close instance: ${inst.id}, because it's window is not known by the platform`);
                }
                if (windowData.name === "Platform") {
                    throw new Error("Closing the main application is not allowed");
                }
                (_c = window.open(undefined, windowData.windowId)) === null || _c === void 0 ? void 0 : _c.close();
                this.processInstanceClosed(inst.id);
                this.ioc.windowsController.cleanUpWindow(inst.id);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] instance ${inst.id} has been closed, removed from store, announced stopped and notified windows, responding to caller`);
            });
        }
        handleImport(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling import command`);
                const parsedDefinitions = config.definitions.map((def) => this.parseDefinition(def));
                const currentApps = this.sessionStorage.getAllApps();
                if (config.mode === "replace") {
                    this.replaceImport(currentApps, parsedDefinitions);
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] replace import command completed`);
                    return;
                }
                this.mergeImport(currentApps, parsedDefinitions);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] merge import command completed`);
                return;
            });
        }
        handleRemove(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling remove command for ${config.name}`);
                const removed = this.sessionStorage.removeApp(config.name);
                if (removed) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`definition ${removed.name} removed successfully`);
                    this.emitStreamData("applicationRemoved", removed);
                }
            });
        }
        handleExport(_, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling export command`);
                const all = this.sessionStorage.getAllApps();
                const reversed = all.map((def) => this.reverseParseDefinition(def));
                return { definitions: reversed };
            });
        }
        handleClear(_, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling clear command`);
                const allDefinitions = this.sessionStorage.getAllApps();
                this.sessionStorage.overwriteApps([]);
                allDefinitions.forEach((definition) => this.emitStreamData("applicationRemoved", definition));
            });
        }
        mergeImport(currentApps, parsedDefinitions) {
            var _a, _b;
            for (const definition of parsedDefinitions) {
                const defCurrentIdx = currentApps.findIndex((app) => app.name === definition.name);
                if (defCurrentIdx > -1 && !objEqual(definition, currentApps[defCurrentIdx])) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`change detected at definition ${definition.name}`);
                    this.emitStreamData("applicationChanged", definition);
                    currentApps[defCurrentIdx] = definition;
                    continue;
                }
                if (defCurrentIdx < 0) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`new definition: ${definition.name} detected, adding and announcing`);
                    this.emitStreamData("applicationAdded", definition);
                    currentApps.push(definition);
                }
            }
            this.sessionStorage.overwriteApps(currentApps);
        }
        replaceImport(currentApps, parsedDefinitions) {
            var _a, _b;
            for (const definition of parsedDefinitions) {
                const defCurrentIdx = currentApps.findIndex((app) => app.name === definition.name);
                if (defCurrentIdx < 0) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`new definition: ${definition.name} detected, adding and announcing`);
                    this.emitStreamData("applicationAdded", definition);
                    continue;
                }
                if (!objEqual(definition, currentApps[defCurrentIdx])) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`change detected at definition ${definition.name}`);
                    this.emitStreamData("applicationChanged", definition);
                }
                currentApps.splice(defCurrentIdx, 1);
            }
            currentApps.forEach((app) => {
                var _a;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`definition ${app.name} missing, removing and announcing`);
                this.emitStreamData("applicationRemoved", app);
            });
            this.sessionStorage.overwriteApps(parsedDefinitions);
        }
        setLock(id) {
            const lock = {};
            const keyOne = new Promise((resolve) => {
                lock.openKeyOne = resolve;
            });
            const keyTwo = new Promise((resolve) => {
                lock.openKeyTwo = resolve;
            });
            lock.keyOne = keyOne;
            lock.keyTwo = keyTwo;
            this.locks[id] = lock;
        }
        registerWorkspaceApp(data, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (!data.appName) {
                    throw new Error(`Cannot register application with config: ${JSON.stringify(data)}, because no app name was found`);
                }
                if (!this.sessionStorage.getAllApps().some((app) => app.name === data.appName)) {
                    throw new Error(`Cannot register application with config: ${JSON.stringify(data)}, because no app with this name name was found`);
                }
                this.sessionStorage.saveBridgeInstanceData({ windowId: data.windowId, appName: data.appName });
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] processing valid workspace application registration with id ${data.windowId}, app name ${data.appName} and frame ${data.frameId}`);
                if (data.context) {
                    yield this.glueController.setInstanceStartContext(data.windowId, data.context);
                }
                const instanceData = { id: data.windowId, applicationName: data.appName };
                this.sessionStorage.saveInstanceData(instanceData);
                this.emitStreamData("instanceStarted", instanceData);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] instance registration is completed and announced, calling windows registration`);
                yield this.ioc.windowsController.registerWorkspaceWindow(data, commandId);
            });
        }
        processNewInstance(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (config.context) {
                    yield this.glueController.setInstanceStartContext(config.data.id, config.context);
                }
                this.sessionStorage.saveInstanceData(config.data);
                if (config.monitorState) {
                    this.stateController.add(config.monitorState.child, config.data.id);
                }
                this.emitStreamData("instanceStarted", config.data);
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("appManager", operation, data);
        }
        reverseParseDefinition(definition) {
            const definitionDetails = definition.userProperties.details;
            const _a = definition.userProperties, removedDetails = __rest(_a, ["details"]);
            return {
                name: definition.name,
                type: definition.type || "window",
                title: definition.title,
                version: definition.version,
                icon: definition.icon,
                caption: definition.caption,
                details: definitionDetails,
                customProperties: removedDetails
            };
        }
        parseDefinition(definition) {
            var _a;
            const glue42CoreAppProps = ["name", "title", "version", "customProperties", "icon", "caption", "type"];
            const userProperties = Object.fromEntries(Object.entries(definition).filter(([key]) => !glue42CoreAppProps.includes(key)));
            let createOptions = { url: "" };
            if (definition.manifest) {
                const parsedManifest = JSON.parse(definition.manifest);
                const url = ((_a = parsedManifest.details) === null || _a === void 0 ? void 0 : _a.url) || parsedManifest.url;
                if (!url || typeof url !== "string") {
                    throw new Error(`The FDC3 definition: ${definition.name} is not valid, because there is not url defined in the manifest`);
                }
                createOptions.url = url;
            }
            else {
                createOptions = definition.details;
            }
            const baseDefinition = {
                createOptions,
                type: definition.type || "window",
                name: definition.name,
                title: definition.title,
                version: definition.version,
                icon: definition.icon,
                caption: definition.caption,
                userProperties: Object.assign(Object.assign({}, userProperties), definition.customProperties)
            };
            if (!baseDefinition.userProperties.details) {
                baseDefinition.userProperties.details = createOptions;
            }
            return baseDefinition;
        }
        getStartingBounds(appDefOptions, openOptions, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const openBounds = Object.assign({}, this.defaultBounds, { top: appDefOptions.top, left: appDefOptions.left, width: appDefOptions.width, height: appDefOptions.height }, { top: openOptions.top, left: openOptions.left, width: openOptions.width, height: openOptions.height });
                if (!openOptions.relativeTo) {
                    return openBounds;
                }
                try {
                    const relativeWindowBounds = yield this.ioc.windowsController.getWindowBounds(openOptions.relativeTo, commandId);
                    const relativeDir = (_a = openOptions.relativeDirection) !== null && _a !== void 0 ? _a : "right";
                    const newBounds = getRelativeBounds(openBounds, relativeWindowBounds, relativeDir);
                    return newBounds;
                }
                catch (error) {
                    return openBounds;
                }
            });
        }
    }

    const layoutTypeDecoder$2 = oneOf$1(constant$1("Global"), constant$1("Workspace"));
    const layoutDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$2,
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1()),
        components: array$1(oneOf$1(workspaceLayoutComponentDecoder$1, windowLayoutComponentDecoder$1))
    });
    const layoutsOperationTypesDecoder$1 = oneOf$1(constant$1("get"), constant$1("getAll"), constant$1("export"), constant$1("import"), constant$1("remove"));
    const simpleLayoutConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$2
    });
    const getAllLayoutsConfigDecoder$1 = object$1({
        type: layoutTypeDecoder$2
    });
    const allLayoutsFullConfigDecoder$1 = object$1({
        layouts: array$1(layoutDecoder)
    });
    const importModeDecoder$1 = oneOf$1(constant$1("replace"), constant$1("merge"));
    const layoutsImportConfigDecoder$1 = object$1({
        layouts: array$1(layoutDecoder),
        mode: importModeDecoder$1
    });
    const allLayoutsSummariesResultDecoder$1 = object$1({
        summaries: array$1(layoutSummaryDecoder$1)
    });
    const simpleLayoutResult$1 = object$1({
        layout: layoutDecoder
    });
    const optionalSimpleLayoutResult$1 = object$1({
        layout: optional$1(layoutDecoder)
    });

    class LayoutsController$1 {
        constructor(glueController, idbStore, sessionStore) {
            this.glueController = glueController;
            this.idbStore = idbStore;
            this.sessionStore = sessionStore;
            this.started = false;
            this.operations = {
                get: { name: "get", dataDecoder: simpleLayoutConfigDecoder$1, resultDecoder: optionalSimpleLayoutResult$1, execute: this.handleGetLayout.bind(this) },
                getAll: { name: "getAll", dataDecoder: getAllLayoutsConfigDecoder$1, resultDecoder: allLayoutsSummariesResultDecoder$1, execute: this.handleGetAll.bind(this) },
                export: { name: "export", dataDecoder: getAllLayoutsConfigDecoder$1, resultDecoder: allLayoutsFullConfigDecoder$1, execute: this.handleExport.bind(this) },
                import: { name: "import", dataDecoder: layoutsImportConfigDecoder$1, execute: this.handleImport.bind(this) },
                remove: { name: "remove", dataDecoder: simpleLayoutConfigDecoder$1, execute: this.handleRemove.bind(this) }
            };
        }
        get logger() {
            return logger.get("layouts.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                this.config = config.layouts;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`initializing with mode: ${this.config.mode}`);
                if (this.config.local && this.config.local.length) {
                    yield this.mergeImport(this.config.local);
                }
                this.started = true;
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const layoutsData = args.data;
                const commandId = args.commandId;
                const operationValidation = layoutsOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This layouts request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(layoutsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Layouts request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(layoutsData)}`);
                const result = yield this.operations[operationName].execute(layoutsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Layouts request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleGetAll(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get all layout summaries request for type: ${config.type}`);
                const allLayouts = yield this.getAll(config.type);
                const summaries = allLayouts.map((layout) => {
                    return {
                        name: layout.name,
                        type: layout.type,
                        context: layout.context,
                        metadata: layout.metadata
                    };
                });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] all summaries have been compiled, responding to caller`);
                return { summaries };
            });
        }
        handleExport(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get all layout full request for type: ${config.type}`);
                const layouts = yield this.getAll(config.type);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] full layouts collection have been compiled, responding to caller`);
                return { layouts };
            });
        }
        handleImport(config, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling mass import request for layout names: ${config.layouts.map((l) => l.name).join(", ")}`);
                if (config.mode === "merge") {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] importing the layouts in merge mode`);
                    yield this.mergeImport(config.layouts);
                }
                else {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] importing the layouts in replace mode`);
                    yield this.replaceImport(config.layouts);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] mass import completed, responding to caller`);
            });
        }
        handleRemove(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling remove request for ${JSON.stringify(config)}`);
                const layout = yield (yield this.getAll(config.type)).find((l) => l.name === config.name && l.type === config.type);
                if (layout) {
                    yield this.delete(config.name, config.type);
                    this.emitStreamData("layoutRemoved", layout);
                }
                const operationMessage = layout ? "has been removed" : "has not been removed, because it does not exist";
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] ${config.name} of type ${config.type} ${operationMessage}`);
            });
        }
        handleGetLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get layout request for name: ${config.name} and type: ${config.type}`);
                const allLayouts = yield this.getAll(config.type);
                const layout = allLayouts.find((l) => l.name === config.name);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] request completed, responding to the caller`);
                return { layout };
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("layouts", operation, data);
        }
        mergeImport(layouts) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const currentLayouts = yield this.getAll("Workspace");
                const pendingEvents = [];
                for (const layout of layouts) {
                    const defCurrentIdx = currentLayouts.findIndex((app) => app.name === layout.name);
                    if (defCurrentIdx > -1 && !objEqual(layout, currentLayouts[defCurrentIdx])) {
                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`change detected at layout ${layout.name}`);
                        pendingEvents.push({ operation: "layoutChanged", layout });
                        currentLayouts[defCurrentIdx] = layout;
                        continue;
                    }
                    if (defCurrentIdx < 0) {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`new layout: ${layout.name} detected, adding and announcing`);
                        pendingEvents.push({ operation: "layoutAdded", layout });
                        currentLayouts.push(layout);
                    }
                }
                yield this.cleanSave(currentLayouts);
                pendingEvents.forEach((pending) => this.emitStreamData(pending.operation, pending.layout));
            });
        }
        replaceImport(layouts) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const currentLayouts = yield this.getAll("Workspace");
                const pendingEvents = [];
                for (const layout of layouts) {
                    const defCurrentIdx = currentLayouts.findIndex((app) => app.name === layout.name);
                    if (defCurrentIdx < 0) {
                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`new layout: ${layout.name} detected, adding and announcing`);
                        pendingEvents.push({ operation: "layoutAdded", layout });
                        continue;
                    }
                    if (!objEqual(layout, currentLayouts[defCurrentIdx])) {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`change detected at layout ${layout.name}`);
                        pendingEvents.push({ operation: "layoutChanged", layout });
                    }
                    currentLayouts.splice(defCurrentIdx, 1);
                }
                currentLayouts.forEach((layout) => {
                    var _a;
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`layout ${layout.name} missing, removing and announcing`);
                    pendingEvents.push({ operation: "layoutRemoved", layout });
                });
                yield this.cleanSave(layouts);
                pendingEvents.forEach((pending) => this.emitStreamData(pending.operation, pending.layout));
            });
        }
        getAll(type) {
            return __awaiter(this, void 0, void 0, function* () {
                let all;
                if (this.config.mode === "idb") {
                    all = yield this.idbStore.getAll(type);
                }
                else {
                    all = this.sessionStore.getLayoutSnapshot().layouts;
                }
                return all;
            });
        }
        cleanSave(layouts) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.config.mode === "idb") {
                    yield this.idbStore.clear("Workspace");
                    for (const layout of layouts) {
                        yield this.idbStore.store(layout, layout.type);
                    }
                    return;
                }
                this.sessionStore.saveLayoutSnapshot({ layouts });
            });
        }
        delete(name, type) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.config.mode === "idb") {
                    yield this.idbStore.delete(name, type);
                    return;
                }
                const all = this.sessionStore.getLayoutSnapshot().layouts;
                const idxToRemove = all.findIndex((l) => l.name === name && l.type);
                if (idxToRemove > -1) {
                    all.splice(idxToRemove, 1);
                }
                this.sessionStore.saveLayoutSnapshot({ layouts: all });
            });
        }
    }

    const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);

    let idbProxyableTypes;
    let cursorAdvanceMethods;
    // This is a function to prevent it throwing up in node environments.
    function getIdbProxyableTypes() {
        return (idbProxyableTypes ||
            (idbProxyableTypes = [
                IDBDatabase,
                IDBObjectStore,
                IDBIndex,
                IDBCursor,
                IDBTransaction,
            ]));
    }
    // This is a function to prevent it throwing up in node environments.
    function getCursorAdvanceMethods() {
        return (cursorAdvanceMethods ||
            (cursorAdvanceMethods = [
                IDBCursor.prototype.advance,
                IDBCursor.prototype.continue,
                IDBCursor.prototype.continuePrimaryKey,
            ]));
    }
    const cursorRequestMap = new WeakMap();
    const transactionDoneMap = new WeakMap();
    const transactionStoreNamesMap = new WeakMap();
    const transformCache = new WeakMap();
    const reverseTransformCache = new WeakMap();
    function promisifyRequest(request) {
        const promise = new Promise((resolve, reject) => {
            const unlisten = () => {
                request.removeEventListener('success', success);
                request.removeEventListener('error', error);
            };
            const success = () => {
                resolve(wrap(request.result));
                unlisten();
            };
            const error = () => {
                reject(request.error);
                unlisten();
            };
            request.addEventListener('success', success);
            request.addEventListener('error', error);
        });
        promise
            .then((value) => {
            // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval
            // (see wrapFunction).
            if (value instanceof IDBCursor) {
                cursorRequestMap.set(value, request);
            }
            // Catching to avoid "Uncaught Promise exceptions"
        })
            .catch(() => { });
        // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This
        // is because we create many promises from a single IDBRequest.
        reverseTransformCache.set(promise, request);
        return promise;
    }
    function cacheDonePromiseForTransaction(tx) {
        // Early bail if we've already created a done promise for this transaction.
        if (transactionDoneMap.has(tx))
            return;
        const done = new Promise((resolve, reject) => {
            const unlisten = () => {
                tx.removeEventListener('complete', complete);
                tx.removeEventListener('error', error);
                tx.removeEventListener('abort', error);
            };
            const complete = () => {
                resolve();
                unlisten();
            };
            const error = () => {
                reject(tx.error || new DOMException('AbortError', 'AbortError'));
                unlisten();
            };
            tx.addEventListener('complete', complete);
            tx.addEventListener('error', error);
            tx.addEventListener('abort', error);
        });
        // Cache it for later retrieval.
        transactionDoneMap.set(tx, done);
    }
    let idbProxyTraps = {
        get(target, prop, receiver) {
            if (target instanceof IDBTransaction) {
                // Special handling for transaction.done.
                if (prop === 'done')
                    return transactionDoneMap.get(target);
                // Polyfill for objectStoreNames because of Edge.
                if (prop === 'objectStoreNames') {
                    return target.objectStoreNames || transactionStoreNamesMap.get(target);
                }
                // Make tx.store return the only store in the transaction, or undefined if there are many.
                if (prop === 'store') {
                    return receiver.objectStoreNames[1]
                        ? undefined
                        : receiver.objectStore(receiver.objectStoreNames[0]);
                }
            }
            // Else transform whatever we get back.
            return wrap(target[prop]);
        },
        set(target, prop, value) {
            target[prop] = value;
            return true;
        },
        has(target, prop) {
            if (target instanceof IDBTransaction &&
                (prop === 'done' || prop === 'store')) {
                return true;
            }
            return prop in target;
        },
    };
    function replaceTraps(callback) {
        idbProxyTraps = callback(idbProxyTraps);
    }
    function wrapFunction(func) {
        // Due to expected object equality (which is enforced by the caching in `wrap`), we
        // only create one new func per func.
        // Edge doesn't support objectStoreNames (booo), so we polyfill it here.
        if (func === IDBDatabase.prototype.transaction &&
            !('objectStoreNames' in IDBTransaction.prototype)) {
            return function (storeNames, ...args) {
                const tx = func.call(unwrap(this), storeNames, ...args);
                transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);
                return wrap(tx);
            };
        }
        // Cursor methods are special, as the behaviour is a little more different to standard IDB. In
        // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the
        // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense
        // with real promises, so each advance methods returns a new promise for the cursor object, or
        // undefined if the end of the cursor has been reached.
        if (getCursorAdvanceMethods().includes(func)) {
            return function (...args) {
                // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
                // the original object.
                func.apply(unwrap(this), args);
                return wrap(cursorRequestMap.get(this));
            };
        }
        return function (...args) {
            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
            // the original object.
            return wrap(func.apply(unwrap(this), args));
        };
    }
    function transformCachableValue(value) {
        if (typeof value === 'function')
            return wrapFunction(value);
        // This doesn't return, it just creates a 'done' promise for the transaction,
        // which is later returned for transaction.done (see idbObjectHandler).
        if (value instanceof IDBTransaction)
            cacheDonePromiseForTransaction(value);
        if (instanceOfAny(value, getIdbProxyableTypes()))
            return new Proxy(value, idbProxyTraps);
        // Return the same value back if we're not going to transform it.
        return value;
    }
    function wrap(value) {
        // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because
        // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.
        if (value instanceof IDBRequest)
            return promisifyRequest(value);
        // If we've already transformed this value before, reuse the transformed value.
        // This is faster, but it also provides object equality.
        if (transformCache.has(value))
            return transformCache.get(value);
        const newValue = transformCachableValue(value);
        // Not all types are transformed.
        // These may be primitive types, so they can't be WeakMap keys.
        if (newValue !== value) {
            transformCache.set(value, newValue);
            reverseTransformCache.set(newValue, value);
        }
        return newValue;
    }
    const unwrap = (value) => reverseTransformCache.get(value);

    /**
     * Open a database.
     *
     * @param name Name of the database.
     * @param version Schema version.
     * @param callbacks Additional callbacks.
     */
    function openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {
        const request = indexedDB.open(name, version);
        const openPromise = wrap(request);
        if (upgrade) {
            request.addEventListener('upgradeneeded', (event) => {
                upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));
            });
        }
        if (blocked)
            request.addEventListener('blocked', () => blocked());
        openPromise
            .then((db) => {
            if (terminated)
                db.addEventListener('close', () => terminated());
            if (blocking)
                db.addEventListener('versionchange', () => blocking());
        })
            .catch(() => { });
        return openPromise;
    }

    const readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];
    const writeMethods = ['put', 'add', 'delete', 'clear'];
    const cachedMethods = new Map();
    function getMethod(target, prop) {
        if (!(target instanceof IDBDatabase &&
            !(prop in target) &&
            typeof prop === 'string')) {
            return;
        }
        if (cachedMethods.get(prop))
            return cachedMethods.get(prop);
        const targetFuncName = prop.replace(/FromIndex$/, '');
        const useIndex = prop !== targetFuncName;
        const isWrite = writeMethods.includes(targetFuncName);
        if (
        // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.
        !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||
            !(isWrite || readMethods.includes(targetFuncName))) {
            return;
        }
        const method = async function (storeName, ...args) {
            // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(
            const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');
            let target = tx.store;
            if (useIndex)
                target = target.index(args.shift());
            const returnVal = await target[targetFuncName](...args);
            if (isWrite)
                await tx.done;
            return returnVal;
        };
        cachedMethods.set(prop, method);
        return method;
    }
    replaceTraps((oldTraps) => ({
        ...oldTraps,
        get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),
        has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),
    }));

    class IdbStore {
        constructor() {
            if (!("indexedDB" in window)) {
                throw new Error("Cannot initialize the local storage, because IndexedDb is not supported");
            }
        }
        get database() {
            if (this._database) {
                return Promise.resolve(this._database);
            }
            return new Promise((resolve) => {
                openDB(dbName, dbVersion, { upgrade: this.setUpDb.bind(this) })
                    .then((database) => {
                    this._database = database;
                    resolve(this._database);
                });
            });
        }
        getAll(layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).getAll("workspaceLayouts");
                    case "Global": return (yield this.database).getAll("globalLayouts");
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        delete(name, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).delete("workspaceLayouts", name);
                    case "Global": return (yield this.database).delete("globalLayouts", name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        clear(layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).clear("workspaceLayouts");
                    case "Global": return (yield this.database).clear("globalLayouts");
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        get(name, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).get("workspaceLayouts", name);
                    case "Global": return (yield this.database).get("globalLayouts", name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        store(layout, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                layoutDecoder.runWithException(layout);
                layoutTypeDecoder$2.runWithException(layoutType);
                switch (layoutType) {
                    case "Workspace": return (yield this.database).put("workspaceLayouts", layout, layout.name);
                    case "Global": return (yield this.database).put("globalLayouts", layout, layout.name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        setUpDb(database) {
            if (!database.objectStoreNames.contains("workspaceLayouts")) {
                database.createObjectStore("workspaceLayouts");
            }
            if (!database.objectStoreNames.contains("globalLayouts")) {
                database.createObjectStore("globalLayouts");
            }
        }
    }

    class WorkspacesController {
        constructor(framesController, glueController, stateController, ioc) {
            this.framesController = framesController;
            this.glueController = glueController;
            this.stateController = stateController;
            this.ioc = ioc;
            this.started = false;
            this.operations = {
                frameHello: { name: "frameHello", dataDecoder: frameHelloDecoder, execute: this.handleFrameHello.bind(this) },
                isWindowInWorkspace: { name: "isWindowInWorkspace", dataDecoder: simpleItemConfigDecoder, resultDecoder: isWindowInSwimlaneResultDecoder, execute: this.isWindowInWorkspace.bind(this) },
                createWorkspace: { name: "createWorkspace", dataDecoder: workspaceCreateConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.createWorkspace.bind(this) },
                getAllFramesSummaries: { name: "getAllFramesSummaries", resultDecoder: frameSummariesResultDecoder, execute: this.getAllFramesSummaries.bind(this) },
                getFrameSummary: { name: "getFrameSummary", dataDecoder: getFrameSummaryConfigDecoder, resultDecoder: frameSummaryDecoder, execute: this.getFrameSummary.bind(this) },
                getAllWorkspacesSummaries: { name: "getAllWorkspacesSummaries", resultDecoder: workspaceSummariesResultDecoder, execute: this.getAllWorkspacesSummaries.bind(this) },
                getWorkspaceSnapshot: { name: "getWorkspaceSnapshot", dataDecoder: simpleItemConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.getWorkspaceSnapshot.bind(this) },
                getAllLayoutsSummaries: { name: "getAllLayoutsSummaries", resultDecoder: layoutSummariesDecoder, execute: this.getAllLayoutsSummaries.bind(this) },
                openWorkspace: { name: "openWorkspace", dataDecoder: openWorkspaceConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.openWorkspace.bind(this) },
                deleteLayout: { name: "deleteLayout", dataDecoder: deleteLayoutConfigDecoder, resultDecoder: voidResultDecoder, execute: this.deleteLayout.bind(this) },
                saveLayout: { name: "saveLayout", dataDecoder: workspaceLayoutSaveConfigDecoder, resultDecoder: workspaceLayoutDecoder, execute: this.saveLayout.bind(this) },
                importLayout: { name: "importLayout", dataDecoder: workspacesLayoutImportConfigDecoder, resultDecoder: voidResultDecoder, execute: this.importLayout.bind(this) },
                exportAllLayouts: { name: "exportAllLayouts", resultDecoder: exportedLayoutsResultDecoder, execute: this.exportAllLayouts.bind(this) },
                restoreItem: { name: "restoreItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.restoreItem.bind(this) },
                maximizeItem: { name: "maximizeItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.maximizeItem.bind(this) },
                focusItem: { name: "focusItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.focusItem.bind(this) },
                closeItem: { name: "closeItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.closeItem.bind(this) },
                resizeItem: { name: "resizeItem", dataDecoder: resizeItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.resizeItem.bind(this) },
                changeFrameState: { name: "changeFrameState", dataDecoder: frameStateConfigDecoder, resultDecoder: voidResultDecoder, execute: this.changeFrameState.bind(this) },
                getFrameState: { name: "getFrameState", dataDecoder: simpleItemConfigDecoder, resultDecoder: frameStateResultDecoder, execute: this.getFrameState.bind(this) },
                moveFrame: { name: "moveFrame", dataDecoder: moveFrameConfigDecoder, resultDecoder: voidResultDecoder, execute: this.moveFrame.bind(this) },
                getFrameSnapshot: { name: "getFrameSnapshot", dataDecoder: simpleItemConfigDecoder, resultDecoder: frameSnapshotResultDecoder, execute: this.getFrameSnapshot.bind(this) },
                forceLoadWindow: { name: "forceLoadWindow", dataDecoder: simpleItemConfigDecoder, resultDecoder: simpleWindowOperationSuccessResultDecoder, execute: this.forceLoadWindow.bind(this) },
                ejectWindow: { name: "ejectWindow", dataDecoder: simpleItemConfigDecoder, resultDecoder: simpleWindowOperationSuccessResultDecoder, execute: this.ejectWindow.bind(this) },
                setItemTitle: { name: "setItemTitle", dataDecoder: setItemTitleConfigDecoder, resultDecoder: voidResultDecoder, execute: this.setItemTitle.bind(this) },
                moveWindowTo: { name: "moveWindowTo", dataDecoder: moveWindowConfigDecoder, resultDecoder: voidResultDecoder, execute: this.moveWindowTo.bind(this) },
                addWindow: { name: "addWindow", dataDecoder: addWindowConfigDecoder, resultDecoder: addItemResultDecoder, execute: this.addWindow.bind(this) },
                addContainer: { name: "addContainer", dataDecoder: addContainerConfigDecoder, resultDecoder: addItemResultDecoder, execute: this.addContainer.bind(this) },
                bundleWorkspace: { name: "bundleWorkspace", dataDecoder: bundleConfigDecoder, resultDecoder: voidResultDecoder, execute: this.bundleWorkspace.bind(this) },
            };
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!config.workspaces) {
                    this.started = false;
                    return;
                }
                this.settings = config.workspaces;
                yield Promise.all([
                    this.glueController.createWorkspacesStream(),
                    this.glueController.createWorkspacesEventsReceiver(this.handleWorkspaceEvent.bind(this))
                ]);
                yield this.framesController.start(config.workspaces, config.windows.defaultWindowOpenBounds, this.operations.getFrameSummary);
                this.stateController.onWindowDisappeared((windowId) => this.framesController.handleFrameDisappeared(windowId));
                this.started = true;
            });
        }
        get logger() {
            return logger.get("workspaces.controller");
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) {
                    throw new Error("Cannot handle this workspaces control message, because the controller has not been started");
                }
                const workspacesData = args.data;
                const commandId = args.commandId;
                const operationValidation = workspacesOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This workspace request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(workspacesData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Workspace request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(workspacesData)}`);
                const result = yield this.operations[operationName].execute(workspacesData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Workspace request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, checking if frame and processing close`);
                this.framesController.handleFrameDisappeared(windowId);
            }
        }
        handleWorkspaceEvent(data) {
            this.glueController.pushWorkspacesMessage(data);
        }
        closeItem(config, commandId) {
            var _a, _b, _c, _d, _e, _f;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling closeItem request with config ${JSON.stringify(config)}`);
                const frameToFocus = this.framesController.getAll().find((frame) => frame.windowId === config.itemId);
                if (frameToFocus) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this is targeted at a frame, closing the frame`);
                    (_c = window.open(undefined, frameToFocus.windowId)) === null || _c === void 0 ? void 0 : _c.close();
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] the frame window is closed`);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.closeItem, config, frame.windowId);
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        setItemTitle(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling setItemTitle request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.setItemTitle, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        handleFrameHello(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling handleFrameHello command with config: ${JSON.stringify(config)}`);
                if (config.windowId) {
                    this.framesController.processNewHello(config.windowId);
                }
            });
        }
        isWindowInWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling isWindowInWorkspace command with config: ${JSON.stringify(config)}`);
                const allFrames = this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending isWindowInWorkspace to all known frames: ${allFrames.join(", ")}`);
                const result = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.isWindowInWorkspace, config, frame.windowId)));
                const inWorkspace = result.some((res) => res.inWorkspace);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, returning ${inWorkspace} to the caller`);
                return { inWorkspace };
            });
        }
        createWorkspace(config, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling createWorkspace command`);
                const frameInstanceConfig = {
                    frameId: (_b = config.frame) === null || _b === void 0 ? void 0 : _b.reuseFrameId,
                    newFrame: (_c = config.frame) === null || _c === void 0 ? void 0 : _c.newFrame
                };
                const frame = yield this.framesController.getFrameInstance(frameInstanceConfig);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] calling frame: ${frame.windowId}, based on selection config: ${JSON.stringify(frameInstanceConfig)}`);
                const result = yield this.glueController.callFrame(this.operations.createWorkspace, config, frame.windowId);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] frame ${frame.windowId} responded with a valid snapshot, returning to caller`);
                return result;
            });
        }
        getAllFramesSummaries(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllFramesSummaries request`);
                const allFrames = yield this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending getFrameSummary to all known frames: ${allFrames.join(", ")}`);
                const summaries = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.getFrameSummary, { itemId: frame.windowId }, frame.windowId)));
                const verifiedSummaries = summaries.filter((sum) => sum.id !== "none");
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, returning to caller`);
                return { summaries: verifiedSummaries };
            });
        }
        getFrameSummary(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getFrameSummary request for config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] forwarding getFrameSummary to frame ${frame.windowId}`);
                const summary = yield this.glueController.callFrame(this.operations.getFrameSummary, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid summary, returning to caller`);
                return summary;
            });
        }
        getAllWorkspacesSummaries(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllWorkspacesSummaries request`);
                const allFrames = this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending getAllWorkspacesSummaries to all known frames: ${allFrames.join(", ")}`);
                const results = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.getAllWorkspacesSummaries, {}, frame.windowId)));
                const summaries = results.reduce((soFar, result) => {
                    soFar.push(...result.summaries);
                    return soFar;
                }, []);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, results were aggregated, returning to caller`);
                return { summaries };
            });
        }
        getWorkspaceSnapshot(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getWorkspaceSnapshot for config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.getWorkspaceSnapshot, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid snapshot, retuning to caller`);
                return result;
            });
        }
        getAllLayoutsSummaries(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllLayoutsSummaries command`);
                const all = yield this.ioc.layoutsController.handleGetAll({ type: "Workspace" }, commandId);
                const summaries = all.summaries.map((summary) => ({ name: summary.name }));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] all layouts retrieved and mapped, returning to caller`);
                return { summaries };
            });
        }
        openWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling openWorkspace command for name: ${config.name}`);
                const frame = yield this.framesController.getFrameInstance({ frameId: (_b = config.restoreOptions) === null || _b === void 0 ? void 0 : _b.frameId, newFrame: (_c = config.restoreOptions) === null || _c === void 0 ? void 0 : _c.newFrame });
                const result = yield this.glueController.callFrame(this.operations.openWorkspace, config, frame.windowId);
                return result;
            });
        }
        deleteLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling deleteLayout request for name: ${config.name}`);
                yield this.ioc.layoutsController.handleRemove({ name: config.name, type: "Workspace" }, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] layouts reported this layout as deleted, responding to caller`);
            });
        }
        saveLayout(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling saveLayout request for workspace ${config.workspaceId} and name ${config.name}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] forwarding request to frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.saveLayout, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid layout, returning to caller`);
                return result;
            });
        }
        importLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling importLayout command for layout ${config.layout.name}`);
                yield this.ioc.layoutsController.handleImport({ layouts: [config.layout], mode: config.mode }, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] the layouts controller successfully imported the layout, responding to caller`);
            });
        }
        exportAllLayouts(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling exportAllLayouts request`);
                const result = yield this.ioc.layoutsController.handleExport({ type: "Workspace" }, commandId);
                return result;
            });
        }
        restoreItem(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling restoreItem request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.restoreItem, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        maximizeItem(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling maximizeItem request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.maximizeItem, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        focusItem(config, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling focusItem request with config ${JSON.stringify(config)}`);
                const frameToFocus = this.framesController.getAll().find((frame) => frame.windowId === config.itemId);
                if (frameToFocus) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this is targeted at a frame, focusing the frame`);
                    window.open(undefined, frameToFocus.windowId);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.focusItem, config, frame.windowId);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        resizeItem(config, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling resizeItem request with config ${JSON.stringify(config)}`);
                const targetedFrame = this.framesController.getAll().find((fr) => fr.windowId === config.itemId);
                if (targetedFrame) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] detected targeted item is frame, building window resize config`);
                    const resizeConfig = {
                        windowId: config.itemId,
                        width: config.width,
                        height: config.height,
                        relative: config.relative
                    };
                    yield this.glueController.callWindow(this.ioc.windowsController.moveResizeOperation, resizeConfig, targetedFrame.windowId);
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] window resize responded with success, returning to caller`);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] targeted item is not a frame, it is located in frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.resizeItem, config, frame.windowId);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        getFrameSnapshot(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getFrameSnapshot request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.getFrameSnapshot, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        forceLoadWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling forceLoadWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.forceLoadWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        ejectWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling ejectWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.ejectWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        moveWindowTo(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling moveWindowTo request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.moveWindowTo, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        addWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling addWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.parentId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.addWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal: ${JSON.stringify(result)}, responding to caller`);
                return result;
            });
        }
        addContainer(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling addContainer request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.parentId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.addContainer, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal: ${JSON.stringify(result)}, responding to caller`);
                return result;
            });
        }
        bundleWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling bundleWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.bundleWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        changeFrameState(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error("Frame states are not supported in Glue42 Core");
            });
        }
        getFrameState(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error("Frame states are not supported in Glue42 Core");
            });
        }
        moveFrame(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling moveFrame command with config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ frameId: config.itemId });
                const moveConfig = {
                    windowId: config.itemId,
                    top: config.top,
                    left: config.left,
                    relative: config.relative
                };
                yield this.glueController.callWindow(this.ioc.windowsController.moveResizeOperation, moveConfig, frame.windowId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] frame with id ${frame.windowId} was successfully moved, responding to caller`);
            });
        }
    }

    const intentsOperationTypesDecoder$1 = oneOf$1(constant$1("findIntent"), constant$1("getIntents"), constant$1("raiseIntent"));
    const intentHandlerDecoder$1 = object$1({
        applicationName: nonEmptyStringDecoder$1,
        applicationTitle: string$1(),
        applicationDescription: optional$1(string$1()),
        applicationIcon: optional$1(string$1()),
        type: oneOf$1(constant$1("app"), constant$1("instance")),
        displayName: optional$1(string$1()),
        contextTypes: optional$1(array$1(nonEmptyStringDecoder$1)),
        instanceId: optional$1(string$1()),
        instanceTitle: optional$1(string$1())
    });
    const intentDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        handlers: array$1(intentHandlerDecoder$1)
    });
    const intentTargetDecoder$1 = oneOf$1(constant$1("startNew"), constant$1("reuse"), object$1({
        app: optional$1(nonEmptyStringDecoder$1),
        instance: optional$1(nonEmptyStringDecoder$1)
    }));
    const intentContextDecoder$1 = object$1({
        type: optional$1(nonEmptyStringDecoder$1),
        data: optional$1(object$1())
    });
    const intentsDecoder$1 = array$1(intentDecoder$1);
    const wrappedIntentsDecoder$1 = object$1({
        intents: intentsDecoder$1
    });
    const wrappedIntentFilterDecoder$1 = object$1({
        filter: optional$1(object$1({
            name: optional$1(nonEmptyStringDecoder$1),
            contextType: optional$1(nonEmptyStringDecoder$1)
        }))
    });
    const intentRequestDecoder$1 = object$1({
        intent: nonEmptyStringDecoder$1,
        target: optional$1(intentTargetDecoder$1),
        context: optional$1(intentContextDecoder$1),
        options: optional$1(windowOpenSettingsDecoder$1)
    });
    const intentResultDecoder$1 = object$1({
        request: intentRequestDecoder$1,
        handler: intentHandlerDecoder$1,
        result: anyJson$1()
    });

    class IntentsController$1 {
        constructor(glueController, sessionStorage, ioc) {
            this.glueController = glueController;
            this.sessionStorage = sessionStorage;
            this.ioc = ioc;
            this.operations = {
                getIntents: { name: "getIntents", resultDecoder: wrappedIntentsDecoder$1, execute: this.getWrappedIntents.bind(this) },
                findIntent: { name: "findIntent", dataDecoder: wrappedIntentFilterDecoder$1, resultDecoder: wrappedIntentsDecoder$1, execute: this.findIntent.bind(this) },
                raiseIntent: { name: "raiseIntent", dataDecoder: intentRequestDecoder$1, resultDecoder: intentResultDecoder$1, execute: this.raiseIntent.bind(this) }
            };
            this.started = false;
        }
        get logger() {
            return logger.get("intents.controller");
        }
        start() {
            return __awaiter(this, void 0, void 0, function* () {
                this.started = true;
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const intentsData = args.data;
                const commandId = args.commandId;
                const operationValidation = intentsOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This intents request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(intentsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Intents request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(intentsData)}`);
                const result = yield this.operations[operationName].execute(intentsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Intents request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        extractAppIntents(apps) {
            const intents = {};
            const appsWithIntents = apps.filter((app) => app.intents.length > 0);
            for (const app of appsWithIntents) {
                for (const intentDef of app.intents) {
                    if (!intents[intentDef.name]) {
                        intents[intentDef.name] = [];
                    }
                    const handler = {
                        applicationName: app.name,
                        applicationTitle: app.title,
                        applicationDescription: app.caption,
                        displayName: intentDef.displayName,
                        contextTypes: intentDef.contexts,
                        applicationIcon: app.icon,
                        type: "app"
                    };
                    intents[intentDef.name].push(handler);
                }
            }
            return intents;
        }
        getInstanceIntents(apps, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const intents = {};
                for (const server of this.glueController.getServers()) {
                    const serverIntentsMethods = (((_a = server.getMethods) === null || _a === void 0 ? void 0 : _a.call(server)) || []).filter((method) => method.name.startsWith(GlueWebIntentsPrefix));
                    yield Promise.all(serverIntentsMethods.map((method) => __awaiter(this, void 0, void 0, function* () {
                        const intentName = method.name.replace(GlueWebIntentsPrefix, "");
                        if (!intents[intentName]) {
                            intents[intentName] = [];
                        }
                        const info = method.flags;
                        const app = apps.find((appDef) => appDef.name === server.application);
                        let appIntent;
                        if (app && app.intents) {
                            appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);
                        }
                        let title;
                        if (server.windowId) {
                            title = yield this.ioc.windowsController.getWindowTitle(server.windowId, commandId);
                        }
                        const handler = {
                            instanceId: server.windowId || server.instance,
                            applicationName: server.application || "",
                            applicationIcon: info.icon || (app === null || app === void 0 ? void 0 : app.icon),
                            applicationTitle: (app === null || app === void 0 ? void 0 : app.title) || "",
                            applicationDescription: info.description || (app === null || app === void 0 ? void 0 : app.caption),
                            displayName: info.displayName || (appIntent === null || appIntent === void 0 ? void 0 : appIntent.displayName),
                            contextTypes: info.contextTypes || (appIntent === null || appIntent === void 0 ? void 0 : appIntent.contexts),
                            instanceTitle: title,
                            type: "instance"
                        };
                        intents[intentName].push(handler);
                    })));
                }
                return intents;
            });
        }
        mergeIntentStores(storeOne, storeTwo) {
            const intents = {};
            for (const name of new Set([...Object.keys(storeOne), ...Object.keys(storeTwo)])) {
                intents[name] = [...(storeOne[name] || []), ...(storeTwo[name] || [])];
            }
            return intents;
        }
        wrapIntents(intents) {
            return {
                intents
            };
        }
        getIntents(commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const apps = this.sessionStorage.getAllApps().map((app) => {
                    return {
                        name: app.name,
                        title: app.title || "",
                        icon: app.icon,
                        caption: app.caption,
                        intents: app.userProperties.intents || []
                    };
                });
                const appIntentsStore = this.extractAppIntents(apps);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] got app intents`);
                const instanceIntentsStore = yield this.getInstanceIntents(apps, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] got instance intents`);
                const allIntentsStore = this.mergeIntentStores(appIntentsStore, instanceIntentsStore);
                const intents = Object.keys(allIntentsStore).map((name) => ({ name, handlers: allIntentsStore[name] }));
                return intents;
            });
        }
        getWrappedIntents(commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getIntents command`);
                const intents = yield this.getIntents(commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] getIntents command completed`);
                return this.wrapIntents(intents);
            });
        }
        findIntent(wrappedIntentFilter, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling findIntent command`);
                const intentFilter = wrappedIntentFilter.filter;
                let intents = yield this.getIntents(commandId);
                if (!intentFilter) {
                    return this.wrapIntents(intents);
                }
                if (typeof intentFilter === "string") {
                    return this.wrapIntents(intents.filter((intent) => intent.name === intentFilter));
                }
                if (intentFilter.contextType) {
                    const ctToLower = intentFilter.contextType.toLowerCase();
                    intents = intents.filter((intent) => intent.handlers.some((handler) => { var _a; return (_a = handler.contextTypes) === null || _a === void 0 ? void 0 : _a.some((ct) => ct.toLowerCase() === ctToLower); }));
                }
                if (intentFilter.name) {
                    intents = intents.filter((intent) => intent.name === intentFilter.name);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] findIntent command completed`);
                return this.wrapIntents(intents);
            });
        }
        getIntent(intent, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                return (yield this.getIntents(commandId)).find((registeredIntent) => registeredIntent.name === intent);
            });
        }
        startApp(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const instance = yield this.ioc.applicationsController.handleApplicationStart(config, commandId);
                return instance.id;
            });
        }
        waitForServer(instanceId) {
            return __awaiter(this, void 0, void 0, function* () {
                let unsub;
                const executor = (resolve) => {
                    unsub = this.glueController.subscribeForServerAdded((server) => {
                        if (server.windowId === instanceId || server.instance === instanceId) {
                            resolve(server);
                        }
                    });
                };
                return PromisePlus$3(executor, 30 * 1000, `Can not find interop server for instance ${instanceId}`).finally(() => unsub());
            });
        }
        waitForMethod(methodName, instanceId) {
            return __awaiter(this, void 0, void 0, function* () {
                let unsub;
                const executor = (resolve) => {
                    unsub = this.glueController.subscribeForMethodAdded((addedMethod) => {
                        if (addedMethod.name === methodName) {
                            resolve(addedMethod);
                        }
                    });
                };
                return PromisePlus$3(executor, 10 * 1000, `Can not find interop method ${methodName} for instance ${instanceId}`).finally(() => unsub());
            });
        }
        instanceIdToInteropInstance(instanceId) {
            var _a;
            const servers = this.glueController.getServers();
            return (_a = servers.find((server) => server.windowId === instanceId || server.instance === instanceId)) === null || _a === void 0 ? void 0 : _a.instance;
        }
        raiseIntentToInstance(instanceId, intent, context) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const methodName = `${GlueWebIntentsPrefix}${intent}`;
                let interopServer = this.glueController.getServers().find((server) => server.windowId === instanceId || server.instance === instanceId);
                if (!interopServer) {
                    interopServer = yield this.waitForServer(instanceId);
                }
                const method = (_a = interopServer.getMethods) === null || _a === void 0 ? void 0 : _a.call(interopServer).find((registeredMethod) => registeredMethod.name === methodName);
                if (!method) {
                    yield this.waitForMethod(methodName, instanceId);
                }
                const result = yield this.glueController.invokeMethod(methodName, context, { instance: this.instanceIdToInteropInstance(instanceId) });
                return result.returned;
            });
        }
        raiseIntent(intentRequest, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling raiseIntent command`);
                const intentName = intentRequest.intent;
                const intentDef = yield this.getIntent(intentName, commandId);
                if (!intentDef) {
                    throw new Error(`Intent ${intentName} not found!`);
                }
                const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === "app");
                const target = intentRequest.target || (isDynamicIntent ? "reuse" : "startNew");
                let handler;
                const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === "app");
                if (target === "startNew") {
                    handler = anAppHandler;
                }
                else if (target === "reuse") {
                    const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === "instance");
                    handler = anInstanceHandler || anAppHandler;
                }
                else if (target.instance) {
                    handler = intentDef.handlers.find((intentHandler) => intentHandler.type === "instance" && intentHandler.instanceId === target.instance);
                }
                else if (target.app) {
                    handler = intentDef.handlers.find((intentHandler) => intentHandler.type === "app" && intentHandler.applicationName === target.app);
                }
                else {
                    throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);
                }
                if (!handler) {
                    throw new Error(`Can not raise intent for request ${JSON.stringify(intentRequest)} - can not find intent handler!`);
                }
                handler.instanceId;
                if (handler.type === "app") {
                    handler.instanceId = yield this.startApp(Object.assign({ name: handler.applicationName }, intentRequest.options), commandId);
                }
                if (!handler.instanceId) {
                    throw new Error(`Can not raise intent for request ${JSON.stringify(intentRequest)} - handler is missing instanceId!`);
                }
                const result = yield this.raiseIntentToInstance(handler.instanceId, intentName, intentRequest.context);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] raiseIntent command completed`);
                return {
                    request: intentRequest,
                    handler,
                    result
                };
            });
        }
    }

    class ChannelsController$1 {
        constructor(glueController) {
            this.glueController = glueController;
        }
        get logger() {
            return logger.get("channels.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const channelDefinitions = config.channels.definitions;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("initializing channels");
                yield this.setupChannels(channelDefinitions);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        handleControl() {
            return __awaiter(this, void 0, void 0, function* () {
            });
        }
        setupChannels(channels) {
            return __awaiter(this, void 0, void 0, function* () {
                yield Promise.all(channels.map((channel) => this.addChannel(channel)));
            });
        }
        addChannel(info) {
            return __awaiter(this, void 0, void 0, function* () {
                const context = {
                    name: info.name,
                    meta: info.meta,
                    data: info.data || {}
                };
                const contextName = this.createContextName(context.name);
                yield this.glueController.setContext(contextName, context);
            });
        }
        createContextName(channelName) {
            return `${ChannelContextPrefix}${channelName}`;
        }
    }

    class FramesController {
        constructor(sessionController, glueController, ioc) {
            this.sessionController = sessionController;
            this.glueController = glueController;
            this.ioc = ioc;
            this.locks = {};
            this.defaultFrameHelloTimeoutMs = 15000;
        }
        start(config, defaultBounds, frameSummaryOperation) {
            return __awaiter(this, void 0, void 0, function* () {
                this.config = config;
                this.defaultBounds = defaultBounds;
                this.frameSummaryOperation = frameSummaryOperation;
            });
        }
        openFrame(newFrameConfig) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                const providedBounds = typeof newFrameConfig === "object" ? (_a = newFrameConfig.bounds) !== null && _a !== void 0 ? _a : {} : {};
                const openBounds = {
                    top: (_b = providedBounds.top) !== null && _b !== void 0 ? _b : this.defaultBounds.top,
                    left: (_c = providedBounds.left) !== null && _c !== void 0 ? _c : this.defaultBounds.left,
                    width: (_d = providedBounds.width) !== null && _d !== void 0 ? _d : this.defaultBounds.width,
                    height: (_e = providedBounds.height) !== null && _e !== void 0 ? _e : this.defaultBounds.height
                };
                const frameWindowId = shortid$1.generate();
                const frameData = {
                    windowId: frameWindowId,
                    active: false
                };
                const options = `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                const frameUrl = `${this.config.src}?emptyFrame=true`;
                const childWindow = window.open(frameUrl, frameData.windowId, options);
                if (!childWindow) {
                    throw new Error("Cannot open a new workspace frame, because the user has not allowed popups or uses a blocker");
                }
                this.sessionController.saveFrameData(frameData);
                try {
                    yield this.waitHello(frameData.windowId);
                    return { windowId: frameData.windowId };
                }
                catch (error) {
                    delete this.locks[frameData.windowId];
                    throw new Error("Cannot open a new frame, because the workspace frame app did not send a hello in time");
                }
            });
        }
        closeFrame(windowId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const frameData = this.sessionController.getFrameData(windowId);
                if (!frameData) {
                    throw new Error(`Cannot close a frame with id: ${windowId}, because it is not known by the platform`);
                }
                this.handleFrameDisappeared(windowId);
                (_a = window.open(undefined, windowId)) === null || _a === void 0 ? void 0 : _a.close();
            });
        }
        processNewHello(windowId) {
            var _a;
            const frameData = this.sessionController.getFrameData(windowId);
            if (!frameData) {
                return;
            }
            this.sessionController.setFrameActive(windowId);
            (_a = this.locks[windowId]) === null || _a === void 0 ? void 0 : _a.lift();
        }
        handleFrameDisappeared(frameId) {
            const foundFrame = this.sessionController.getFrameData(frameId);
            if (!foundFrame) {
                return;
            }
            this.sessionController.removeFrameData(frameId);
            const workspaceWindows = this.sessionController.pickWorkspaceClients((client) => client.frameId === frameId);
            workspaceWindows.forEach((workspaceWindow) => this.ioc.applicationsController.unregisterWorkspaceApp({ windowId: workspaceWindow.windowId }));
        }
        getAll() {
            const allFrames = this.sessionController.getAllFrames();
            return allFrames.filter((frame) => frame.active).map((frame) => ({ windowId: frame.windowId }));
        }
        getFrameInstance(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const props = ["frameId", "itemId", "newFrame"];
                if (config) {
                    const definedKeys = props.reduce((soFar, prop) => {
                        if (config[prop]) {
                            soFar.push(prop);
                        }
                        return soFar;
                    }, []);
                    if (definedKeys.length > 1) {
                        throw new Error(`Cannot retrieve the frame, because of over-specification: the provided selection object must have either 1 or none of the possible properties: ${JSON.stringify(config)}`);
                    }
                }
                const allFrames = this.getAll();
                if (config === null || config === void 0 ? void 0 : config.frameId) {
                    const foundFrame = allFrames.find((frame) => frame.windowId === config.frameId);
                    if (!foundFrame) {
                        throw new Error(`Cannot retrieve a frame with Id: ${config.frameId}, because it is not known by the platform`);
                    }
                    return foundFrame;
                }
                if (config === null || config === void 0 ? void 0 : config.itemId) {
                    return this.getFrameByItemId(config.itemId, allFrames);
                }
                if (config === null || config === void 0 ? void 0 : config.newFrame) {
                    return this.openFrame(config.newFrame);
                }
                return allFrames.length ? this.getLastOpenedFrame() : this.openFrame();
            });
        }
        waitHello(windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                return PromisePlus$3((resolve) => {
                    this.locks[windowId] = { lift: resolve };
                }, this.defaultFrameHelloTimeoutMs, "Frame hello timed out");
            });
        }
        getLastOpenedFrame() {
            const allData = this.sessionController.getAllFrames().filter((frame) => frame.active);
            return allData[allData.length - 1];
        }
        getFrameByItemId(itemId, frames) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!frames.length) {
                    throw new Error(`Cannot get frame by item id for: ${itemId}, because not frames were found`);
                }
                for (const frame of frames) {
                    const queryResult = yield this.glueController.callFrame(this.frameSummaryOperation, { itemId }, frame.windowId);
                    if (queryResult.id !== "none") {
                        return frame;
                    }
                }
                throw new Error(`Cannot find frame for item: ${itemId}`);
            });
        }
    }

    class IoC$1 {
        constructor(config) {
            this.config = config;
        }
        get gateway() {
            if (!this._gatewayInstance) {
                this._gatewayInstance = new Gateway();
            }
            return this._gatewayInstance;
        }
        get platform() {
            if (!this._platformInstance) {
                this._platformInstance = new Platform(this.controller, this.config);
            }
            return this._platformInstance;
        }
        get controller() {
            if (!this._mainController) {
                this._mainController = new PlatformController(this.glueController, this.windowsController, this.applicationsController, this.layoutsController, this.workspacesController, this.intentsController, this.channelsController, this.portsBridge, this.stateController);
            }
            return this._mainController;
        }
        get glueController() {
            if (!this._glueController) {
                this._glueController = new GlueController(this.portsBridge, this.sessionController);
            }
            return this._glueController;
        }
        get sessionController() {
            if (!this._sessionController) {
                this._sessionController = new SessionStorageController();
            }
            return this._sessionController;
        }
        get stateController() {
            if (!this._stateChecker) {
                this._stateChecker = new StateController(this.sessionController);
            }
            return this._stateChecker;
        }
        get windowsController() {
            if (!this._windowsController) {
                this._windowsController = new WindowsController$1(this.glueController, this.sessionController, this.stateController, this);
            }
            return this._windowsController;
        }
        get applicationsController() {
            if (!this._applicationsController) {
                this._applicationsController = new ApplicationsController(this.glueController, this.sessionController, this.stateController, this);
            }
            return this._applicationsController;
        }
        get layoutsController() {
            if (!this._layoutsController) {
                this._layoutsController = new LayoutsController$1(this.glueController, this.idbStore, this.sessionController);
            }
            return this._layoutsController;
        }
        get workspacesController() {
            if (!this._workspacesController) {
                this._workspacesController = new WorkspacesController(this.framesController, this.glueController, this.stateController, this);
            }
            return this._workspacesController;
        }
        get intentsController() {
            if (!this._intentsController) {
                this._intentsController = new IntentsController$1(this.glueController, this.sessionController, this);
            }
            return this._intentsController;
        }
        get channelsController() {
            if (!this._channelsController) {
                this._channelsController = new ChannelsController$1(this.glueController);
            }
            return this._channelsController;
        }
        get framesController() {
            if (!this._framesController) {
                this._framesController = new FramesController(this.sessionController, this.glueController, this);
            }
            return this._framesController;
        }
        get idbStore() {
            if (!this._idbStore) {
                this._idbStore = new IdbStore();
            }
            return this._idbStore;
        }
        get portsBridge() {
            if (!this._portsBridge) {
                this._portsBridge = new PortsBridge(this.gateway, this.sessionController, this);
            }
            return this._portsBridge;
        }
        createMessageChannel() {
            return new MessageChannel();
        }
    }

    const glueWebPlatformFactory = (config) => __awaiter(void 0, void 0, void 0, function* () {
        var _a, _b, _c, _d;
        if (window.glue42gd || (config === null || config === void 0 ? void 0 : config.clientOnly)) {
            const glue = (config === null || config === void 0 ? void 0 : config.glueFactory) ?
                yield (config === null || config === void 0 ? void 0 : config.glueFactory(config === null || config === void 0 ? void 0 : config.glue)) :
                yield glueWebFactory(config === null || config === void 0 ? void 0 : config.glue);
            if (window.glue42gd && ((_b = (_a = config === null || config === void 0 ? void 0 : config.applications) === null || _a === void 0 ? void 0 : _a.local) === null || _b === void 0 ? void 0 : _b.length)) {
                yield glue.appManager.inMemory.import(config.applications.local, "merge");
            }
            if (window.glue42gd && ((_d = (_c = config === null || config === void 0 ? void 0 : config.layouts) === null || _c === void 0 ? void 0 : _c.local) === null || _d === void 0 ? void 0 : _d.length)) {
                yield glue.layouts.import(config.layouts.local, "merge");
            }
            return { glue };
        }
        const ioc = new IoC$1(config);
        yield ioc.platform.ready();
        const glue = yield ioc.platform.getClientGlue();
        return { glue, platform: ioc === null || ioc === void 0 ? void 0 : ioc.platform.exposeAPI() };
    });

    if (typeof window !== "undefined") {
        window.GlueWebPlatform = glueWebPlatformFactory;
    }

    return glueWebPlatformFactory;

})));
//# sourceMappingURL=platform.web.umd.js.map
